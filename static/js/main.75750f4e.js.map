{"version":3,"file":"static/js/main.75750f4e.js","mappings":"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AAI,CAACg3E,EAAOroG,EAAOqzH,KAC5D,MAAMG,GAAWxzH,EACXyzH,EAAS9N,GAAiB0N,EAAQrzH,GAExC,OAAIwzH,EAEK5N,GADOH,GAAU4N,EAAO,IAAM,GAGnCI,EAEK7N,GADOF,GAAe4M,GAAgB7M,GAAU4N,GAAQ,GAAK,EACtC5N,GAAU4N,GAAQ,IAE3ChrB,CAAK,GAEhB,CAvBsB8wB,GA6BxB,CZ0M4BC,CACxB/D,EACAf,EACA9F,EACAyH,EACAxD,EACAH,GAEI+G,GAAahK,GACjBlrH,EACAioH,EACAkD,GACA1uC,GACAunC,EACAoH,GACAt1D,EACAu1D,GAII2H,GAAqB,CACzBlrH,gBACAs6G,cACAtsD,eACAy4D,gBACAC,aACA3yG,YACAm2E,OACA8gC,YAAajP,GACX7xB,EACAhyF,EACA8H,EACAs6G,EACAh4G,EACAo9G,GAAYx1B,EAAMowB,GAClBlwG,EACA2J,EACA4gE,GACAunC,EACAC,GACApoH,EACAi6D,EACAouD,EACAC,EACAC,EACAC,EAnFa,IAqFbE,GAEF6G,cACAlH,gBACAroH,QACAg3H,gBACA1J,QACAj3G,WACA+gH,iBACAC,mBACA/qH,UACAgtH,cAAenN,GACblsE,EACAga,EACAssD,EACA6F,EACAj2B,EACAk2B,EACAC,GAEFnE,aACA+N,aAAc7I,GACZC,EACA8J,EACA7oH,EACA45G,EACAE,GAEFiP,aAAcpJ,GAAaC,EAAab,EAAO8J,EAAgB,CAC7D/gH,EACA+gH,EACAC,EACA9oH,IAEFuqH,kBACAS,eAAgB/K,EAAYn9F,IAAIynG,GAAexuH,KAC/CkkH,cACApG,gBACAxnC,YACA22C,YAAanH,GACXj6B,EACAk6B,EACAlC,EACAzB,EACA4D,EACAC,EACA/B,EACA4I,EACAhL,GAEFiN,cACAG,cAAe9H,GAAczxE,EAAWga,EAAc03D,GACtDqH,gBACA1G,eACAhD,iBACAmD,iBACAlkH,SACAynF,UAAWg6B,GAAU75B,EAAMl2C,IAG7B,OAAOk3E,EACT,CajUO,MAAMsC,GAA8B,CACzCvF,MAAO,SACP/9B,KAAM,IACNl2C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","sources":["../node_modules/react-dom/cjs/react-dom-client.production.js","../node_modules/react/index.js","../node_modules/react/cjs/react.production.js","../node_modules/react-dom/client.js","../node_modules/react-collapse/lib/UnmountClosed.js","../node_modules/react-collapse/lib/Collapse.js","../node_modules/react/jsx-runtime.js","../node_modules/react-dom/cjs/react-dom.production.js","../node_modules/react/cjs/react-jsx-runtime.production.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.js","../node_modules/react-collapse/lib/index.js","../node_modules/react-dom/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","components/header/images/logo.svg","components/header/Header.jsx","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/order.mjs","../node_modules/framer-motion/dist/es/stats/buffer.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/value/use-combine-values.mjs","../node_modules/framer-motion/dist/es/value/use-transform.mjs","../node_modules/framer-motion/dist/es/value/use-computed.mjs","../node_modules/framer-motion/dist/es/utils/transform.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/capture-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/utils/wrap.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/utils/get-easing-for-segment.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animate/resolve-subjects.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/calc-repeat-duration.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/normalize-times.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/sort.mjs","../node_modules/framer-motion/dist/es/animation/sequence/create.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/stats/animation-count.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/object/ObjectVisualElement.mjs","../node_modules/framer-motion/dist/es/animation/utils/create-visual-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/animation/animate/subject.mjs","../node_modules/framer-motion/dist/es/animation/animate/sequence.mjs","../node_modules/framer-motion/dist/es/animation/animate/index.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","components/animatedPath/AnimatedPath.jsx","components/intro/Intro.jsx","components/banner/images/Illustration.svg","components/banner/Banner.jsx","components/services/Services.jsx","components/benefits/images/Vector.svg","components/benefits/Benefits.jsx","components/worksItem/WorksItem.jsx","components/helpers/workList.js","components/animatedPath2/AnamatedPath2.jsx","components/works/works.jsx","components/helpers/sferaList.js","components/sferaItem/SferaItem.jsx","components/sfera/Sfera.jsx","../node_modules/embla-carousel-reactive-utils/src/components/utils.ts","../node_modules/embla-carousel/src/components/utils.ts","../node_modules/embla-carousel/src/components/EventStore.ts","../node_modules/embla-carousel/src/components/Animations.ts","../node_modules/embla-carousel/src/components/Limit.ts","../node_modules/embla-carousel/src/components/Counter.ts","../node_modules/embla-carousel/src/components/DragHandler.ts","../node_modules/embla-carousel/src/components/DragTracker.ts","../node_modules/embla-carousel/src/components/ResizeHandler.ts","../node_modules/embla-carousel/src/components/ScrollBounds.ts","../node_modules/embla-carousel/src/components/ScrollLooper.ts","../node_modules/embla-carousel/src/components/ScrollTarget.ts","../node_modules/embla-carousel/src/components/SlideFocus.ts","../node_modules/embla-carousel/src/components/Vector1d.ts","../node_modules/embla-carousel/src/components/Translate.ts","../node_modules/embla-carousel/src/components/SlideLooper.ts","../node_modules/embla-carousel/src/components/SlidesHandler.ts","../node_modules/embla-carousel/src/components/SlidesInView.ts","../node_modules/embla-carousel/src/components/SlidesToScroll.ts","../node_modules/embla-carousel/src/components/Engine.ts","../node_modules/embla-carousel/src/components/NodeRects.ts","../node_modules/embla-carousel/src/components/Axis.ts","../node_modules/embla-carousel/src/components/PercentOfView.ts","../node_modules/embla-carousel/src/components/Alignment.ts","../node_modules/embla-carousel/src/components/SlideSizes.ts","../node_modules/embla-carousel/src/components/ScrollSnaps.ts","../node_modules/embla-carousel/src/components/ScrollContain.ts","../node_modules/embla-carousel/src/components/ScrollLimit.ts","../node_modules/embla-carousel/src/components/ScrollBody.ts","../node_modules/embla-carousel/src/components/ScrollTo.ts","../node_modules/embla-carousel/src/components/ScrollProgress.ts","../node_modules/embla-carousel/src/components/SlideRegistry.ts","../node_modules/embla-carousel/src/components/Options.ts","../node_modules/embla-carousel/src/components/OptionsHandler.ts","../node_modules/embla-carousel/src/components/EmblaCarousel.ts","../node_modules/embla-carousel/src/components/PluginsHandler.ts","../node_modules/embla-carousel/src/components/EventHandler.ts","../node_modules/embla-carousel-react/src/components/useEmblaCarousel.ts","components/casesSlides/CasesSlides.jsx","components/helpers/casesSlides.js","components/cases/Cases.jsx","components/helpers/questionsList.js","components/questions/Questions.jsx","components/form/Form.jsx","components/footer/images/Logo.svg","components/footer/images/Data-Quality.svg","components/footer/Footer.jsx","components/map/map.jsx","components/helpers/cities.js","components/checks/Checks.jsx","App.js","index.js"],"sourcesContent":["/**\n * @license React\n * react-dom-client.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n\"use strict\";\nvar Scheduler = require(\"scheduler\"),\n  React = require(\"react\"),\n  ReactDOM = require(\"react-dom\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction isValidContainer(node) {\n  return !(\n    !node ||\n    (1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType)\n  );\n}\nvar REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\nSymbol.for(\"react.scope\");\nSymbol.for(\"react.debug_trace_mode\");\nvar REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\nSymbol.for(\"react.legacy_hidden\");\nSymbol.for(\"react.tracing_marker\");\nvar REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\nfunction getComponentNameFromType(type) {\n  if (null == type) return null;\n  if (\"function\" === typeof type)\n    return type.$$typeof === REACT_CLIENT_REFERENCE\n      ? null\n      : type.displayName || type.name || null;\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return \"Fragment\";\n    case REACT_PORTAL_TYPE:\n      return \"Portal\";\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n    case REACT_STRICT_MODE_TYPE:\n      return \"StrictMode\";\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return (type.displayName || \"Context\") + \".Provider\";\n      case REACT_CONSUMER_TYPE:\n        return (type._context.displayName || \"Context\") + \".Consumer\";\n      case REACT_FORWARD_REF_TYPE:\n        var innerType = type.render;\n        type = type.displayName;\n        type ||\n          ((type = innerType.displayName || innerType.name || \"\"),\n          (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n        return type;\n      case REACT_MEMO_TYPE:\n        return (\n          (innerType = type.displayName || null),\n          null !== innerType\n            ? innerType\n            : getComponentNameFromType(type.type) || \"Memo\"\n        );\n      case REACT_LAZY_TYPE:\n        innerType = type._payload;\n        type = type._init;\n        try {\n          return getComponentNameFromType(type(innerType));\n        } catch (x) {}\n    }\n  return null;\n}\nvar ReactSharedInternals =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  assign = Object.assign,\n  prefix,\n  suffix;\nfunction describeBuiltInComponentFrame(name) {\n  if (void 0 === prefix)\n    try {\n      throw Error();\n    } catch (x) {\n      var match = x.stack.trim().match(/\\n( *(at )?)/);\n      prefix = (match && match[1]) || \"\";\n      suffix =\n        -1 < x.stack.indexOf(\"\\n    at\")\n          ? \" (<anonymous>)\"\n          : -1 < x.stack.indexOf(\"@\")\n            ? \"@unknown:0:0\"\n            : \"\";\n    }\n  return \"\\n\" + prefix + name + suffix;\n}\nvar reentry = !1;\nfunction describeNativeComponentFrame(fn, construct) {\n  if (!fn || reentry) return \"\";\n  reentry = !0;\n  var previousPrepareStackTrace = Error.prepareStackTrace;\n  Error.prepareStackTrace = void 0;\n  try {\n    var RunInRootFrame = {\n      DetermineComponentFrameRoot: function () {\n        try {\n          if (construct) {\n            var Fake = function () {\n              throw Error();\n            };\n            Object.defineProperty(Fake.prototype, \"props\", {\n              set: function () {\n                throw Error();\n              }\n            });\n            if (\"object\" === typeof Reflect && Reflect.construct) {\n              try {\n                Reflect.construct(Fake, []);\n              } catch (x) {\n                var control = x;\n              }\n              Reflect.construct(fn, [], Fake);\n            } else {\n              try {\n                Fake.call();\n              } catch (x$0) {\n                control = x$0;\n              }\n              fn.call(Fake.prototype);\n            }\n          } else {\n            try {\n              throw Error();\n            } catch (x$1) {\n              control = x$1;\n            }\n            (Fake = fn()) &&\n              \"function\" === typeof Fake.catch &&\n              Fake.catch(function () {});\n          }\n        } catch (sample) {\n          if (sample && control && \"string\" === typeof sample.stack)\n            return [sample.stack, control.stack];\n        }\n        return [null, null];\n      }\n    };\n    RunInRootFrame.DetermineComponentFrameRoot.displayName =\n      \"DetermineComponentFrameRoot\";\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(\n      RunInRootFrame.DetermineComponentFrameRoot,\n      \"name\"\n    );\n    namePropDescriptor &&\n      namePropDescriptor.configurable &&\n      Object.defineProperty(\n        RunInRootFrame.DetermineComponentFrameRoot,\n        \"name\",\n        { value: \"DetermineComponentFrameRoot\" }\n      );\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n      sampleStack = _RunInRootFrame$Deter[0],\n      controlStack = _RunInRootFrame$Deter[1];\n    if (sampleStack && controlStack) {\n      var sampleLines = sampleStack.split(\"\\n\"),\n        controlLines = controlStack.split(\"\\n\");\n      for (\n        namePropDescriptor = RunInRootFrame = 0;\n        RunInRootFrame < sampleLines.length &&\n        !sampleLines[RunInRootFrame].includes(\"DetermineComponentFrameRoot\");\n\n      )\n        RunInRootFrame++;\n      for (\n        ;\n        namePropDescriptor < controlLines.length &&\n        !controlLines[namePropDescriptor].includes(\n          \"DetermineComponentFrameRoot\"\n        );\n\n      )\n        namePropDescriptor++;\n      if (\n        RunInRootFrame === sampleLines.length ||\n        namePropDescriptor === controlLines.length\n      )\n        for (\n          RunInRootFrame = sampleLines.length - 1,\n            namePropDescriptor = controlLines.length - 1;\n          1 <= RunInRootFrame &&\n          0 <= namePropDescriptor &&\n          sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor];\n\n        )\n          namePropDescriptor--;\n      for (\n        ;\n        1 <= RunInRootFrame && 0 <= namePropDescriptor;\n        RunInRootFrame--, namePropDescriptor--\n      )\n        if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {\n          if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {\n            do\n              if (\n                (RunInRootFrame--,\n                namePropDescriptor--,\n                0 > namePropDescriptor ||\n                  sampleLines[RunInRootFrame] !==\n                    controlLines[namePropDescriptor])\n              ) {\n                var frame =\n                  \"\\n\" +\n                  sampleLines[RunInRootFrame].replace(\" at new \", \" at \");\n                fn.displayName &&\n                  frame.includes(\"<anonymous>\") &&\n                  (frame = frame.replace(\"<anonymous>\", fn.displayName));\n                return frame;\n              }\n            while (1 <= RunInRootFrame && 0 <= namePropDescriptor);\n          }\n          break;\n        }\n    }\n  } finally {\n    (reentry = !1), (Error.prepareStackTrace = previousPrepareStackTrace);\n  }\n  return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : \"\")\n    ? describeBuiltInComponentFrame(previousPrepareStackTrace)\n    : \"\";\n}\nfunction describeFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n    case 27:\n    case 5:\n      return describeBuiltInComponentFrame(fiber.type);\n    case 16:\n      return describeBuiltInComponentFrame(\"Lazy\");\n    case 13:\n      return describeBuiltInComponentFrame(\"Suspense\");\n    case 19:\n      return describeBuiltInComponentFrame(\"SuspenseList\");\n    case 0:\n    case 15:\n      return (fiber = describeNativeComponentFrame(fiber.type, !1)), fiber;\n    case 11:\n      return (\n        (fiber = describeNativeComponentFrame(fiber.type.render, !1)), fiber\n      );\n    case 1:\n      return (fiber = describeNativeComponentFrame(fiber.type, !0)), fiber;\n    default:\n      return \"\";\n  }\n}\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    var info = \"\";\n    do\n      (info += describeFiber(workInProgress)),\n        (workInProgress = workInProgress.return);\n    while (workInProgress);\n    return info;\n  } catch (x) {\n    return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n  }\n}\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber,\n    nearestMounted = fiber;\n  if (fiber.alternate) for (; node.return; ) node = node.return;\n  else {\n    fiber = node;\n    do\n      (node = fiber),\n        0 !== (node.flags & 4098) && (nearestMounted = node.return),\n        (fiber = node.return);\n    while (fiber);\n  }\n  return 3 === node.tag ? nearestMounted : null;\n}\nfunction getSuspenseInstanceFromFiber(fiber) {\n  if (13 === fiber.tag) {\n    var suspenseState = fiber.memoizedState;\n    null === suspenseState &&\n      ((fiber = fiber.alternate),\n      null !== fiber && (suspenseState = fiber.memoizedState));\n    if (null !== suspenseState) return suspenseState.dehydrated;\n  }\n  return null;\n}\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber)\n    throw Error(formatProdErrorMessage(188));\n}\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n  if (!alternate) {\n    alternate = getNearestMountedFiber(fiber);\n    if (null === alternate) throw Error(formatProdErrorMessage(188));\n    return alternate !== fiber ? null : fiber;\n  }\n  for (var a = fiber, b = alternate; ; ) {\n    var parentA = a.return;\n    if (null === parentA) break;\n    var parentB = parentA.alternate;\n    if (null === parentB) {\n      b = parentA.return;\n      if (null !== b) {\n        a = b;\n        continue;\n      }\n      break;\n    }\n    if (parentA.child === parentB.child) {\n      for (parentB = parentA.child; parentB; ) {\n        if (parentB === a) return assertIsMounted(parentA), fiber;\n        if (parentB === b) return assertIsMounted(parentA), alternate;\n        parentB = parentB.sibling;\n      }\n      throw Error(formatProdErrorMessage(188));\n    }\n    if (a.return !== b.return) (a = parentA), (b = parentB);\n    else {\n      for (var didFindChild = !1, child$2 = parentA.child; child$2; ) {\n        if (child$2 === a) {\n          didFindChild = !0;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child$2 === b) {\n          didFindChild = !0;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child$2 = child$2.sibling;\n      }\n      if (!didFindChild) {\n        for (child$2 = parentB.child; child$2; ) {\n          if (child$2 === a) {\n            didFindChild = !0;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child$2 === b) {\n            didFindChild = !0;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child$2 = child$2.sibling;\n        }\n        if (!didFindChild) throw Error(formatProdErrorMessage(189));\n      }\n    }\n    if (a.alternate !== b) throw Error(formatProdErrorMessage(190));\n  }\n  if (3 !== a.tag) throw Error(formatProdErrorMessage(188));\n  return a.stateNode.current === a ? fiber : alternate;\n}\nfunction findCurrentHostFiberImpl(node) {\n  var tag = node.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;\n  for (node = node.child; null !== node; ) {\n    tag = findCurrentHostFiberImpl(node);\n    if (null !== tag) return tag;\n    node = node.sibling;\n  }\n  return null;\n}\nvar isArrayImpl = Array.isArray,\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  sharedNotPendingObject = {\n    pending: !1,\n    data: null,\n    method: null,\n    action: null\n  },\n  valueStack = [],\n  index = -1;\nfunction createCursor(defaultValue) {\n  return { current: defaultValue };\n}\nfunction pop(cursor) {\n  0 > index ||\n    ((cursor.current = valueStack[index]), (valueStack[index] = null), index--);\n}\nfunction push(cursor, value) {\n  index++;\n  valueStack[index] = cursor.current;\n  cursor.current = value;\n}\nvar contextStackCursor = createCursor(null),\n  contextFiberStackCursor = createCursor(null),\n  rootInstanceStackCursor = createCursor(null),\n  hostTransitionProviderCursor = createCursor(null);\nfunction pushHostContainer(fiber, nextRootInstance) {\n  push(rootInstanceStackCursor, nextRootInstance);\n  push(contextFiberStackCursor, fiber);\n  push(contextStackCursor, null);\n  fiber = nextRootInstance.nodeType;\n  switch (fiber) {\n    case 9:\n    case 11:\n      nextRootInstance = (nextRootInstance = nextRootInstance.documentElement)\n        ? (nextRootInstance = nextRootInstance.namespaceURI)\n          ? getOwnHostContext(nextRootInstance)\n          : 0\n        : 0;\n      break;\n    default:\n      if (\n        ((fiber = 8 === fiber ? nextRootInstance.parentNode : nextRootInstance),\n        (nextRootInstance = fiber.tagName),\n        (fiber = fiber.namespaceURI))\n      )\n        (fiber = getOwnHostContext(fiber)),\n          (nextRootInstance = getChildHostContextProd(fiber, nextRootInstance));\n      else\n        switch (nextRootInstance) {\n          case \"svg\":\n            nextRootInstance = 1;\n            break;\n          case \"math\":\n            nextRootInstance = 2;\n            break;\n          default:\n            nextRootInstance = 0;\n        }\n  }\n  pop(contextStackCursor);\n  push(contextStackCursor, nextRootInstance);\n}\nfunction popHostContainer() {\n  pop(contextStackCursor);\n  pop(contextFiberStackCursor);\n  pop(rootInstanceStackCursor);\n}\nfunction pushHostContext(fiber) {\n  null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber);\n  var context = contextStackCursor.current;\n  var JSCompiler_inline_result = getChildHostContextProd(context, fiber.type);\n  context !== JSCompiler_inline_result &&\n    (push(contextFiberStackCursor, fiber),\n    push(contextStackCursor, JSCompiler_inline_result));\n}\nfunction popHostContext(fiber) {\n  contextFiberStackCursor.current === fiber &&\n    (pop(contextStackCursor), pop(contextFiberStackCursor));\n  hostTransitionProviderCursor.current === fiber &&\n    (pop(hostTransitionProviderCursor),\n    (HostTransitionContext._currentValue = sharedNotPendingObject));\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n  scheduleCallback$3 = Scheduler.unstable_scheduleCallback,\n  cancelCallback$1 = Scheduler.unstable_cancelCallback,\n  shouldYield = Scheduler.unstable_shouldYield,\n  requestPaint = Scheduler.unstable_requestPaint,\n  now = Scheduler.unstable_now,\n  getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,\n  ImmediatePriority = Scheduler.unstable_ImmediatePriority,\n  UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,\n  NormalPriority$1 = Scheduler.unstable_NormalPriority,\n  LowPriority = Scheduler.unstable_LowPriority,\n  IdlePriority = Scheduler.unstable_IdlePriority,\n  log$1 = Scheduler.log,\n  unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue,\n  rendererID = null,\n  injectedHook = null;\nfunction onCommitRoot(root) {\n  if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberRoot)\n    try {\n      injectedHook.onCommitFiberRoot(\n        rendererID,\n        root,\n        void 0,\n        128 === (root.current.flags & 128)\n      );\n    } catch (err) {}\n}\nfunction setIsStrictModeForDevtools(newIsStrictMode) {\n  \"function\" === typeof log$1 && unstable_setDisableYieldValue(newIsStrictMode);\n  if (injectedHook && \"function\" === typeof injectedHook.setStrictMode)\n    try {\n      injectedHook.setStrictMode(rendererID, newIsStrictMode);\n    } catch (err) {}\n}\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,\n  log = Math.log,\n  LN2 = Math.LN2;\nfunction clz32Fallback(x) {\n  x >>>= 0;\n  return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;\n}\nvar nextTransitionLane = 128,\n  nextRetryLane = 4194304;\nfunction getHighestPriorityLanes(lanes) {\n  var pendingSyncLanes = lanes & 42;\n  if (0 !== pendingSyncLanes) return pendingSyncLanes;\n  switch (lanes & -lanes) {\n    case 1:\n      return 1;\n    case 2:\n      return 2;\n    case 4:\n      return 4;\n    case 8:\n      return 8;\n    case 16:\n      return 16;\n    case 32:\n      return 32;\n    case 64:\n      return 64;\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return lanes & 4194176;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return lanes & 62914560;\n    case 67108864:\n      return 67108864;\n    case 134217728:\n      return 134217728;\n    case 268435456:\n      return 268435456;\n    case 536870912:\n      return 536870912;\n    case 1073741824:\n      return 0;\n    default:\n      return lanes;\n  }\n}\nfunction getNextLanes(root, wipLanes) {\n  var pendingLanes = root.pendingLanes;\n  if (0 === pendingLanes) return 0;\n  var nextLanes = 0,\n    suspendedLanes = root.suspendedLanes,\n    pingedLanes = root.pingedLanes,\n    warmLanes = root.warmLanes;\n  root = 0 !== root.finishedLanes;\n  var nonIdlePendingLanes = pendingLanes & 134217727;\n  0 !== nonIdlePendingLanes\n    ? ((pendingLanes = nonIdlePendingLanes & ~suspendedLanes),\n      0 !== pendingLanes\n        ? (nextLanes = getHighestPriorityLanes(pendingLanes))\n        : ((pingedLanes &= nonIdlePendingLanes),\n          0 !== pingedLanes\n            ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n            : root ||\n              ((warmLanes = nonIdlePendingLanes & ~warmLanes),\n              0 !== warmLanes &&\n                (nextLanes = getHighestPriorityLanes(warmLanes)))))\n    : ((nonIdlePendingLanes = pendingLanes & ~suspendedLanes),\n      0 !== nonIdlePendingLanes\n        ? (nextLanes = getHighestPriorityLanes(nonIdlePendingLanes))\n        : 0 !== pingedLanes\n          ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n          : root ||\n            ((warmLanes = pendingLanes & ~warmLanes),\n            0 !== warmLanes &&\n              (nextLanes = getHighestPriorityLanes(warmLanes))));\n  return 0 === nextLanes\n    ? 0\n    : 0 !== wipLanes &&\n        wipLanes !== nextLanes &&\n        0 === (wipLanes & suspendedLanes) &&\n        ((suspendedLanes = nextLanes & -nextLanes),\n        (warmLanes = wipLanes & -wipLanes),\n        suspendedLanes >= warmLanes ||\n          (32 === suspendedLanes && 0 !== (warmLanes & 4194176)))\n      ? wipLanes\n      : nextLanes;\n}\nfunction checkIfRootIsPrerendering(root, renderLanes) {\n  return (\n    0 ===\n    (root.pendingLanes &\n      ~(root.suspendedLanes & ~root.pingedLanes) &\n      renderLanes)\n  );\n}\nfunction computeExpirationTime(lane, currentTime) {\n  switch (lane) {\n    case 1:\n    case 2:\n    case 4:\n    case 8:\n      return currentTime + 250;\n    case 16:\n    case 32:\n    case 64:\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return currentTime + 5e3;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return -1;\n    case 67108864:\n    case 134217728:\n    case 268435456:\n    case 536870912:\n    case 1073741824:\n      return -1;\n    default:\n      return -1;\n  }\n}\nfunction claimNextTransitionLane() {\n  var lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n  0 === (nextTransitionLane & 4194176) && (nextTransitionLane = 128);\n  return lane;\n}\nfunction claimNextRetryLane() {\n  var lane = nextRetryLane;\n  nextRetryLane <<= 1;\n  0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);\n  return lane;\n}\nfunction createLaneMap(initial) {\n  for (var laneMap = [], i = 0; 31 > i; i++) laneMap.push(initial);\n  return laneMap;\n}\nfunction markRootUpdated$1(root, updateLane) {\n  root.pendingLanes |= updateLane;\n  268435456 !== updateLane &&\n    ((root.suspendedLanes = 0), (root.pingedLanes = 0), (root.warmLanes = 0));\n}\nfunction markRootFinished(\n  root,\n  finishedLanes,\n  remainingLanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  var previouslyPendingLanes = root.pendingLanes;\n  root.pendingLanes = remainingLanes;\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n  root.warmLanes = 0;\n  root.expiredLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  root.errorRecoveryDisabledLanes &= remainingLanes;\n  root.shellSuspendCounter = 0;\n  var entanglements = root.entanglements,\n    expirationTimes = root.expirationTimes,\n    hiddenUpdates = root.hiddenUpdates;\n  for (\n    remainingLanes = previouslyPendingLanes & ~remainingLanes;\n    0 < remainingLanes;\n\n  ) {\n    var index$7 = 31 - clz32(remainingLanes),\n      lane = 1 << index$7;\n    entanglements[index$7] = 0;\n    expirationTimes[index$7] = -1;\n    var hiddenUpdatesForLane = hiddenUpdates[index$7];\n    if (null !== hiddenUpdatesForLane)\n      for (\n        hiddenUpdates[index$7] = null, index$7 = 0;\n        index$7 < hiddenUpdatesForLane.length;\n        index$7++\n      ) {\n        var update = hiddenUpdatesForLane[index$7];\n        null !== update && (update.lane &= -536870913);\n      }\n    remainingLanes &= ~lane;\n  }\n  0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);\n  0 !== suspendedRetryLanes &&\n    0 === updatedLanes &&\n    0 !== root.tag &&\n    (root.suspendedLanes |=\n      suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));\n}\nfunction markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {\n  root.pendingLanes |= spawnedLane;\n  root.suspendedLanes &= ~spawnedLane;\n  var spawnedLaneIndex = 31 - clz32(spawnedLane);\n  root.entangledLanes |= spawnedLane;\n  root.entanglements[spawnedLaneIndex] =\n    root.entanglements[spawnedLaneIndex] |\n    1073741824 |\n    (entangledLanes & 4194218);\n}\nfunction markRootEntangled(root, entangledLanes) {\n  var rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  for (root = root.entanglements; rootEntangledLanes; ) {\n    var index$8 = 31 - clz32(rootEntangledLanes),\n      lane = 1 << index$8;\n    (lane & entangledLanes) | (root[index$8] & entangledLanes) &&\n      (root[index$8] |= entangledLanes);\n    rootEntangledLanes &= ~lane;\n  }\n}\nfunction lanesToEventPriority(lanes) {\n  lanes &= -lanes;\n  return 2 < lanes\n    ? 8 < lanes\n      ? 0 !== (lanes & 134217727)\n        ? 32\n        : 268435456\n      : 8\n    : 2;\n}\nfunction resolveUpdatePriority() {\n  var updatePriority = ReactDOMSharedInternals.p;\n  if (0 !== updatePriority) return updatePriority;\n  updatePriority = window.event;\n  return void 0 === updatePriority ? 32 : getEventPriority(updatePriority.type);\n}\nfunction runWithPriority(priority, fn) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    return (ReactDOMSharedInternals.p = priority), fn();\n  } finally {\n    ReactDOMSharedInternals.p = previousPriority;\n  }\n}\nvar randomKey = Math.random().toString(36).slice(2),\n  internalInstanceKey = \"__reactFiber$\" + randomKey,\n  internalPropsKey = \"__reactProps$\" + randomKey,\n  internalContainerInstanceKey = \"__reactContainer$\" + randomKey,\n  internalEventHandlersKey = \"__reactEvents$\" + randomKey,\n  internalEventHandlerListenersKey = \"__reactListeners$\" + randomKey,\n  internalEventHandlesSetKey = \"__reactHandles$\" + randomKey,\n  internalRootNodeResourcesKey = \"__reactResources$\" + randomKey,\n  internalHoistableMarker = \"__reactMarker$\" + randomKey;\nfunction detachDeletedInstance(node) {\n  delete node[internalInstanceKey];\n  delete node[internalPropsKey];\n  delete node[internalEventHandlersKey];\n  delete node[internalEventHandlerListenersKey];\n  delete node[internalEventHandlesSetKey];\n}\nfunction getClosestInstanceFromNode(targetNode) {\n  var targetInst = targetNode[internalInstanceKey];\n  if (targetInst) return targetInst;\n  for (var parentNode = targetNode.parentNode; parentNode; ) {\n    if (\n      (targetInst =\n        parentNode[internalContainerInstanceKey] ||\n        parentNode[internalInstanceKey])\n    ) {\n      parentNode = targetInst.alternate;\n      if (\n        null !== targetInst.child ||\n        (null !== parentNode && null !== parentNode.child)\n      )\n        for (\n          targetNode = getParentSuspenseInstance(targetNode);\n          null !== targetNode;\n\n        ) {\n          if ((parentNode = targetNode[internalInstanceKey])) return parentNode;\n          targetNode = getParentSuspenseInstance(targetNode);\n        }\n      return targetInst;\n    }\n    targetNode = parentNode;\n    parentNode = targetNode.parentNode;\n  }\n  return null;\n}\nfunction getInstanceFromNode(node) {\n  if (\n    (node = node[internalInstanceKey] || node[internalContainerInstanceKey])\n  ) {\n    var tag = node.tag;\n    if (\n      5 === tag ||\n      6 === tag ||\n      13 === tag ||\n      26 === tag ||\n      27 === tag ||\n      3 === tag\n    )\n      return node;\n  }\n  return null;\n}\nfunction getNodeFromInstance(inst) {\n  var tag = inst.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return inst.stateNode;\n  throw Error(formatProdErrorMessage(33));\n}\nfunction getResourcesFromRoot(root) {\n  var resources = root[internalRootNodeResourcesKey];\n  resources ||\n    (resources = root[internalRootNodeResourcesKey] =\n      { hoistableStyles: new Map(), hoistableScripts: new Map() });\n  return resources;\n}\nfunction markNodeAsHoistable(node) {\n  node[internalHoistableMarker] = !0;\n}\nvar allNativeEvents = new Set(),\n  registrationNameDependencies = {};\nfunction registerTwoPhaseEvent(registrationName, dependencies) {\n  registerDirectEvent(registrationName, dependencies);\n  registerDirectEvent(registrationName + \"Capture\", dependencies);\n}\nfunction registerDirectEvent(registrationName, dependencies) {\n  registrationNameDependencies[registrationName] = dependencies;\n  for (\n    registrationName = 0;\n    registrationName < dependencies.length;\n    registrationName++\n  )\n    allNativeEvents.add(dependencies[registrationName]);\n}\nvar canUseDOM = !(\n    \"undefined\" === typeof window ||\n    \"undefined\" === typeof window.document ||\n    \"undefined\" === typeof window.document.createElement\n  ),\n  VALID_ATTRIBUTE_NAME_REGEX = RegExp(\n    \"^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n  ),\n  illegalAttributeNameCache = {},\n  validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))\n    return !0;\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))\n    return (validatedAttributeNameCache[attributeName] = !0);\n  illegalAttributeNameCache[attributeName] = !0;\n  return !1;\n}\nfunction setValueForAttribute(node, name, value) {\n  if (isAttributeNameSafe(name))\n    if (null === value) node.removeAttribute(name);\n    else {\n      switch (typeof value) {\n        case \"undefined\":\n        case \"function\":\n        case \"symbol\":\n          node.removeAttribute(name);\n          return;\n        case \"boolean\":\n          var prefix$10 = name.toLowerCase().slice(0, 5);\n          if (\"data-\" !== prefix$10 && \"aria-\" !== prefix$10) {\n            node.removeAttribute(name);\n            return;\n          }\n      }\n      node.setAttribute(name, \"\" + value);\n    }\n}\nfunction setValueForKnownAttribute(node, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttribute(name, \"\" + value);\n  }\n}\nfunction setValueForNamespacedAttribute(node, namespace, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttributeNS(namespace, name, \"\" + value);\n  }\n}\nfunction getToStringValue(value) {\n  switch (typeof value) {\n    case \"bigint\":\n    case \"boolean\":\n    case \"number\":\n    case \"string\":\n    case \"undefined\":\n      return value;\n    case \"object\":\n      return value;\n    default:\n      return \"\";\n  }\n}\nfunction isCheckable(elem) {\n  var type = elem.type;\n  return (\n    (elem = elem.nodeName) &&\n    \"input\" === elem.toLowerCase() &&\n    (\"checkbox\" === type || \"radio\" === type)\n  );\n}\nfunction trackValueOnNode(node) {\n  var valueField = isCheckable(node) ? \"checked\" : \"value\",\n    descriptor = Object.getOwnPropertyDescriptor(\n      node.constructor.prototype,\n      valueField\n    ),\n    currentValue = \"\" + node[valueField];\n  if (\n    !node.hasOwnProperty(valueField) &&\n    \"undefined\" !== typeof descriptor &&\n    \"function\" === typeof descriptor.get &&\n    \"function\" === typeof descriptor.set\n  ) {\n    var get = descriptor.get,\n      set = descriptor.set;\n    Object.defineProperty(node, valueField, {\n      configurable: !0,\n      get: function () {\n        return get.call(this);\n      },\n      set: function (value) {\n        currentValue = \"\" + value;\n        set.call(this, value);\n      }\n    });\n    Object.defineProperty(node, valueField, {\n      enumerable: descriptor.enumerable\n    });\n    return {\n      getValue: function () {\n        return currentValue;\n      },\n      setValue: function (value) {\n        currentValue = \"\" + value;\n      },\n      stopTracking: function () {\n        node._valueTracker = null;\n        delete node[valueField];\n      }\n    };\n  }\n}\nfunction track(node) {\n  node._valueTracker || (node._valueTracker = trackValueOnNode(node));\n}\nfunction updateValueIfChanged(node) {\n  if (!node) return !1;\n  var tracker = node._valueTracker;\n  if (!tracker) return !0;\n  var lastValue = tracker.getValue();\n  var value = \"\";\n  node &&\n    (value = isCheckable(node)\n      ? node.checked\n        ? \"true\"\n        : \"false\"\n      : node.value);\n  node = value;\n  return node !== lastValue ? (tracker.setValue(node), !0) : !1;\n}\nfunction getActiveElement(doc) {\n  doc = doc || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof doc) return null;\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\nvar escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\\n\"\\\\]/g;\nfunction escapeSelectorAttributeValueInsideDoubleQuotes(value) {\n  return value.replace(\n    escapeSelectorAttributeValueInsideDoubleQuotesRegex,\n    function (ch) {\n      return \"\\\\\" + ch.charCodeAt(0).toString(16) + \" \";\n    }\n  );\n}\nfunction updateInput(\n  element,\n  value,\n  defaultValue,\n  lastDefaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name\n) {\n  element.name = \"\";\n  null != type &&\n  \"function\" !== typeof type &&\n  \"symbol\" !== typeof type &&\n  \"boolean\" !== typeof type\n    ? (element.type = type)\n    : element.removeAttribute(\"type\");\n  if (null != value)\n    if (\"number\" === type) {\n      if ((0 === value && \"\" === element.value) || element.value != value)\n        element.value = \"\" + getToStringValue(value);\n    } else\n      element.value !== \"\" + getToStringValue(value) &&\n        (element.value = \"\" + getToStringValue(value));\n  else\n    (\"submit\" !== type && \"reset\" !== type) || element.removeAttribute(\"value\");\n  null != value\n    ? setDefaultValue(element, type, getToStringValue(value))\n    : null != defaultValue\n      ? setDefaultValue(element, type, getToStringValue(defaultValue))\n      : null != lastDefaultValue && element.removeAttribute(\"value\");\n  null == checked &&\n    null != defaultChecked &&\n    (element.defaultChecked = !!defaultChecked);\n  null != checked &&\n    (element.checked =\n      checked && \"function\" !== typeof checked && \"symbol\" !== typeof checked);\n  null != name &&\n  \"function\" !== typeof name &&\n  \"symbol\" !== typeof name &&\n  \"boolean\" !== typeof name\n    ? (element.name = \"\" + getToStringValue(name))\n    : element.removeAttribute(\"name\");\n}\nfunction initInput(\n  element,\n  value,\n  defaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name,\n  isHydrating\n) {\n  null != type &&\n    \"function\" !== typeof type &&\n    \"symbol\" !== typeof type &&\n    \"boolean\" !== typeof type &&\n    (element.type = type);\n  if (null != value || null != defaultValue) {\n    if (\n      !(\n        (\"submit\" !== type && \"reset\" !== type) ||\n        (void 0 !== value && null !== value)\n      )\n    )\n      return;\n    defaultValue =\n      null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n    value = null != value ? \"\" + getToStringValue(value) : defaultValue;\n    isHydrating || value === element.value || (element.value = value);\n    element.defaultValue = value;\n  }\n  checked = null != checked ? checked : defaultChecked;\n  checked =\n    \"function\" !== typeof checked && \"symbol\" !== typeof checked && !!checked;\n  element.checked = isHydrating ? element.checked : !!checked;\n  element.defaultChecked = !!checked;\n  null != name &&\n    \"function\" !== typeof name &&\n    \"symbol\" !== typeof name &&\n    \"boolean\" !== typeof name &&\n    (element.name = name);\n}\nfunction setDefaultValue(node, type, value) {\n  (\"number\" === type && getActiveElement(node.ownerDocument) === node) ||\n    node.defaultValue === \"\" + value ||\n    (node.defaultValue = \"\" + value);\n}\nfunction updateOptions(node, multiple, propValue, setDefaultSelected) {\n  node = node.options;\n  if (multiple) {\n    multiple = {};\n    for (var i = 0; i < propValue.length; i++)\n      multiple[\"$\" + propValue[i]] = !0;\n    for (propValue = 0; propValue < node.length; propValue++)\n      (i = multiple.hasOwnProperty(\"$\" + node[propValue].value)),\n        node[propValue].selected !== i && (node[propValue].selected = i),\n        i && setDefaultSelected && (node[propValue].defaultSelected = !0);\n  } else {\n    propValue = \"\" + getToStringValue(propValue);\n    multiple = null;\n    for (i = 0; i < node.length; i++) {\n      if (node[i].value === propValue) {\n        node[i].selected = !0;\n        setDefaultSelected && (node[i].defaultSelected = !0);\n        return;\n      }\n      null !== multiple || node[i].disabled || (multiple = node[i]);\n    }\n    null !== multiple && (multiple.selected = !0);\n  }\n}\nfunction updateTextarea(element, value, defaultValue) {\n  if (\n    null != value &&\n    ((value = \"\" + getToStringValue(value)),\n    value !== element.value && (element.value = value),\n    null == defaultValue)\n  ) {\n    element.defaultValue !== value && (element.defaultValue = value);\n    return;\n  }\n  element.defaultValue =\n    null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n}\nfunction initTextarea(element, value, defaultValue, children) {\n  if (null == value) {\n    if (null != children) {\n      if (null != defaultValue) throw Error(formatProdErrorMessage(92));\n      if (isArrayImpl(children)) {\n        if (1 < children.length) throw Error(formatProdErrorMessage(93));\n        children = children[0];\n      }\n      defaultValue = children;\n    }\n    null == defaultValue && (defaultValue = \"\");\n    value = defaultValue;\n  }\n  defaultValue = getToStringValue(value);\n  element.defaultValue = defaultValue;\n  children = element.textContent;\n  children === defaultValue &&\n    \"\" !== children &&\n    null !== children &&\n    (element.value = children);\n}\nfunction setTextContent(node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n    if (\n      firstChild &&\n      firstChild === node.lastChild &&\n      3 === firstChild.nodeType\n    ) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n}\nvar unitlessNumbers = new Set(\n  \"animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp\".split(\n    \" \"\n  )\n);\nfunction setValueForStyle(style, styleName, value) {\n  var isCustomProperty = 0 === styleName.indexOf(\"--\");\n  null == value || \"boolean\" === typeof value || \"\" === value\n    ? isCustomProperty\n      ? style.setProperty(styleName, \"\")\n      : \"float\" === styleName\n        ? (style.cssFloat = \"\")\n        : (style[styleName] = \"\")\n    : isCustomProperty\n      ? style.setProperty(styleName, value)\n      : \"number\" !== typeof value ||\n          0 === value ||\n          unitlessNumbers.has(styleName)\n        ? \"float\" === styleName\n          ? (style.cssFloat = value)\n          : (style[styleName] = (\"\" + value).trim())\n        : (style[styleName] = value + \"px\");\n}\nfunction setValueForStyles(node, styles, prevStyles) {\n  if (null != styles && \"object\" !== typeof styles)\n    throw Error(formatProdErrorMessage(62));\n  node = node.style;\n  if (null != prevStyles) {\n    for (var styleName in prevStyles)\n      !prevStyles.hasOwnProperty(styleName) ||\n        (null != styles && styles.hasOwnProperty(styleName)) ||\n        (0 === styleName.indexOf(\"--\")\n          ? node.setProperty(styleName, \"\")\n          : \"float\" === styleName\n            ? (node.cssFloat = \"\")\n            : (node[styleName] = \"\"));\n    for (var styleName$16 in styles)\n      (styleName = styles[styleName$16]),\n        styles.hasOwnProperty(styleName$16) &&\n          prevStyles[styleName$16] !== styleName &&\n          setValueForStyle(node, styleName$16, styleName);\n  } else\n    for (var styleName$17 in styles)\n      styles.hasOwnProperty(styleName$17) &&\n        setValueForStyle(node, styleName$17, styles[styleName$17]);\n}\nfunction isCustomElement(tagName) {\n  if (-1 === tagName.indexOf(\"-\")) return !1;\n  switch (tagName) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n    default:\n      return !0;\n  }\n}\nvar aliases = new Map([\n    [\"acceptCharset\", \"accept-charset\"],\n    [\"htmlFor\", \"for\"],\n    [\"httpEquiv\", \"http-equiv\"],\n    [\"crossOrigin\", \"crossorigin\"],\n    [\"accentHeight\", \"accent-height\"],\n    [\"alignmentBaseline\", \"alignment-baseline\"],\n    [\"arabicForm\", \"arabic-form\"],\n    [\"baselineShift\", \"baseline-shift\"],\n    [\"capHeight\", \"cap-height\"],\n    [\"clipPath\", \"clip-path\"],\n    [\"clipRule\", \"clip-rule\"],\n    [\"colorInterpolation\", \"color-interpolation\"],\n    [\"colorInterpolationFilters\", \"color-interpolation-filters\"],\n    [\"colorProfile\", \"color-profile\"],\n    [\"colorRendering\", \"color-rendering\"],\n    [\"dominantBaseline\", \"dominant-baseline\"],\n    [\"enableBackground\", \"enable-background\"],\n    [\"fillOpacity\", \"fill-opacity\"],\n    [\"fillRule\", \"fill-rule\"],\n    [\"floodColor\", \"flood-color\"],\n    [\"floodOpacity\", \"flood-opacity\"],\n    [\"fontFamily\", \"font-family\"],\n    [\"fontSize\", \"font-size\"],\n    [\"fontSizeAdjust\", \"font-size-adjust\"],\n    [\"fontStretch\", \"font-stretch\"],\n    [\"fontStyle\", \"font-style\"],\n    [\"fontVariant\", \"font-variant\"],\n    [\"fontWeight\", \"font-weight\"],\n    [\"glyphName\", \"glyph-name\"],\n    [\"glyphOrientationHorizontal\", \"glyph-orientation-horizontal\"],\n    [\"glyphOrientationVertical\", \"glyph-orientation-vertical\"],\n    [\"horizAdvX\", \"horiz-adv-x\"],\n    [\"horizOriginX\", \"horiz-origin-x\"],\n    [\"imageRendering\", \"image-rendering\"],\n    [\"letterSpacing\", \"letter-spacing\"],\n    [\"lightingColor\", \"lighting-color\"],\n    [\"markerEnd\", \"marker-end\"],\n    [\"markerMid\", \"marker-mid\"],\n    [\"markerStart\", \"marker-start\"],\n    [\"overlinePosition\", \"overline-position\"],\n    [\"overlineThickness\", \"overline-thickness\"],\n    [\"paintOrder\", \"paint-order\"],\n    [\"panose-1\", \"panose-1\"],\n    [\"pointerEvents\", \"pointer-events\"],\n    [\"renderingIntent\", \"rendering-intent\"],\n    [\"shapeRendering\", \"shape-rendering\"],\n    [\"stopColor\", \"stop-color\"],\n    [\"stopOpacity\", \"stop-opacity\"],\n    [\"strikethroughPosition\", \"strikethrough-position\"],\n    [\"strikethroughThickness\", \"strikethrough-thickness\"],\n    [\"strokeDasharray\", \"stroke-dasharray\"],\n    [\"strokeDashoffset\", \"stroke-dashoffset\"],\n    [\"strokeLinecap\", \"stroke-linecap\"],\n    [\"strokeLinejoin\", \"stroke-linejoin\"],\n    [\"strokeMiterlimit\", \"stroke-miterlimit\"],\n    [\"strokeOpacity\", \"stroke-opacity\"],\n    [\"strokeWidth\", \"stroke-width\"],\n    [\"textAnchor\", \"text-anchor\"],\n    [\"textDecoration\", \"text-decoration\"],\n    [\"textRendering\", \"text-rendering\"],\n    [\"transformOrigin\", \"transform-origin\"],\n    [\"underlinePosition\", \"underline-position\"],\n    [\"underlineThickness\", \"underline-thickness\"],\n    [\"unicodeBidi\", \"unicode-bidi\"],\n    [\"unicodeRange\", \"unicode-range\"],\n    [\"unitsPerEm\", \"units-per-em\"],\n    [\"vAlphabetic\", \"v-alphabetic\"],\n    [\"vHanging\", \"v-hanging\"],\n    [\"vIdeographic\", \"v-ideographic\"],\n    [\"vMathematical\", \"v-mathematical\"],\n    [\"vectorEffect\", \"vector-effect\"],\n    [\"vertAdvY\", \"vert-adv-y\"],\n    [\"vertOriginX\", \"vert-origin-x\"],\n    [\"vertOriginY\", \"vert-origin-y\"],\n    [\"wordSpacing\", \"word-spacing\"],\n    [\"writingMode\", \"writing-mode\"],\n    [\"xmlnsXlink\", \"xmlns:xlink\"],\n    [\"xHeight\", \"x-height\"]\n  ]),\n  isJavaScriptProtocol =\n    /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i;\nfunction sanitizeURL(url) {\n  return isJavaScriptProtocol.test(\"\" + url)\n    ? \"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')\"\n    : url;\n}\nvar currentReplayingEvent = null;\nfunction getEventTarget(nativeEvent) {\n  nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;\n  nativeEvent.correspondingUseElement &&\n    (nativeEvent = nativeEvent.correspondingUseElement);\n  return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;\n}\nvar restoreTarget = null,\n  restoreQueue = null;\nfunction restoreStateOfTarget(target) {\n  var internalInstance = getInstanceFromNode(target);\n  if (internalInstance && (target = internalInstance.stateNode)) {\n    var props = target[internalPropsKey] || null;\n    a: switch (((target = internalInstance.stateNode), internalInstance.type)) {\n      case \"input\":\n        updateInput(\n          target,\n          props.value,\n          props.defaultValue,\n          props.defaultValue,\n          props.checked,\n          props.defaultChecked,\n          props.type,\n          props.name\n        );\n        internalInstance = props.name;\n        if (\"radio\" === props.type && null != internalInstance) {\n          for (props = target; props.parentNode; ) props = props.parentNode;\n          props = props.querySelectorAll(\n            'input[name=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                \"\" + internalInstance\n              ) +\n              '\"][type=\"radio\"]'\n          );\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          ) {\n            var otherNode = props[internalInstance];\n            if (otherNode !== target && otherNode.form === target.form) {\n              var otherProps = otherNode[internalPropsKey] || null;\n              if (!otherProps) throw Error(formatProdErrorMessage(90));\n              updateInput(\n                otherNode,\n                otherProps.value,\n                otherProps.defaultValue,\n                otherProps.defaultValue,\n                otherProps.checked,\n                otherProps.defaultChecked,\n                otherProps.type,\n                otherProps.name\n              );\n            }\n          }\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          )\n            (otherNode = props[internalInstance]),\n              otherNode.form === target.form && updateValueIfChanged(otherNode);\n        }\n        break a;\n      case \"textarea\":\n        updateTextarea(target, props.value, props.defaultValue);\n        break a;\n      case \"select\":\n        (internalInstance = props.value),\n          null != internalInstance &&\n            updateOptions(target, !!props.multiple, internalInstance, !1);\n    }\n  }\n}\nvar isInsideEventHandler = !1;\nfunction batchedUpdates$1(fn, a, b) {\n  if (isInsideEventHandler) return fn(a, b);\n  isInsideEventHandler = !0;\n  try {\n    var JSCompiler_inline_result = fn(a);\n    return JSCompiler_inline_result;\n  } finally {\n    if (\n      ((isInsideEventHandler = !1),\n      null !== restoreTarget || null !== restoreQueue)\n    )\n      if (\n        (flushSyncWork$1(),\n        restoreTarget &&\n          ((a = restoreTarget),\n          (fn = restoreQueue),\n          (restoreQueue = restoreTarget = null),\n          restoreStateOfTarget(a),\n          fn))\n      )\n        for (a = 0; a < fn.length; a++) restoreStateOfTarget(fn[a]);\n  }\n}\nfunction getListener(inst, registrationName) {\n  var stateNode = inst.stateNode;\n  if (null === stateNode) return null;\n  var props = stateNode[internalPropsKey] || null;\n  if (null === props) return null;\n  stateNode = props[registrationName];\n  a: switch (registrationName) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n    case \"onMouseEnter\":\n      (props = !props.disabled) ||\n        ((inst = inst.type),\n        (props = !(\n          \"button\" === inst ||\n          \"input\" === inst ||\n          \"select\" === inst ||\n          \"textarea\" === inst\n        )));\n      inst = !props;\n      break a;\n    default:\n      inst = !1;\n  }\n  if (inst) return null;\n  if (stateNode && \"function\" !== typeof stateNode)\n    throw Error(\n      formatProdErrorMessage(231, registrationName, typeof stateNode)\n    );\n  return stateNode;\n}\nvar passiveBrowserEventsSupported = !1;\nif (canUseDOM)\n  try {\n    var options = {};\n    Object.defineProperty(options, \"passive\", {\n      get: function () {\n        passiveBrowserEventsSupported = !0;\n      }\n    });\n    window.addEventListener(\"test\", options, options);\n    window.removeEventListener(\"test\", options, options);\n  } catch (e) {\n    passiveBrowserEventsSupported = !1;\n  }\nvar root = null,\n  startText = null,\n  fallbackText = null;\nfunction getData() {\n  if (fallbackText) return fallbackText;\n  var start,\n    startValue = startText,\n    startLength = startValue.length,\n    end,\n    endValue = \"value\" in root ? root.value : root.textContent,\n    endLength = endValue.length;\n  for (\n    start = 0;\n    start < startLength && startValue[start] === endValue[start];\n    start++\n  );\n  var minEnd = startLength - start;\n  for (\n    end = 1;\n    end <= minEnd &&\n    startValue[startLength - end] === endValue[endLength - end];\n    end++\n  );\n  return (fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0));\n}\nfunction getEventCharCode(nativeEvent) {\n  var keyCode = nativeEvent.keyCode;\n  \"charCode\" in nativeEvent\n    ? ((nativeEvent = nativeEvent.charCode),\n      0 === nativeEvent && 13 === keyCode && (nativeEvent = 13))\n    : (nativeEvent = keyCode);\n  10 === nativeEvent && (nativeEvent = 13);\n  return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;\n}\nfunction functionThatReturnsTrue() {\n  return !0;\n}\nfunction functionThatReturnsFalse() {\n  return !1;\n}\nfunction createSyntheticEvent(Interface) {\n  function SyntheticBaseEvent(\n    reactName,\n    reactEventType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget\n  ) {\n    this._reactName = reactName;\n    this._targetInst = targetInst;\n    this.type = reactEventType;\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEventTarget;\n    this.currentTarget = null;\n    for (var propName in Interface)\n      Interface.hasOwnProperty(propName) &&\n        ((reactName = Interface[propName]),\n        (this[propName] = reactName\n          ? reactName(nativeEvent)\n          : nativeEvent[propName]));\n    this.isDefaultPrevented = (\n      null != nativeEvent.defaultPrevented\n        ? nativeEvent.defaultPrevented\n        : !1 === nativeEvent.returnValue\n    )\n      ? functionThatReturnsTrue\n      : functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    return this;\n  }\n  assign(SyntheticBaseEvent.prototype, {\n    preventDefault: function () {\n      this.defaultPrevented = !0;\n      var event = this.nativeEvent;\n      event &&\n        (event.preventDefault\n          ? event.preventDefault()\n          : \"unknown\" !== typeof event.returnValue && (event.returnValue = !1),\n        (this.isDefaultPrevented = functionThatReturnsTrue));\n    },\n    stopPropagation: function () {\n      var event = this.nativeEvent;\n      event &&\n        (event.stopPropagation\n          ? event.stopPropagation()\n          : \"unknown\" !== typeof event.cancelBubble &&\n            (event.cancelBubble = !0),\n        (this.isPropagationStopped = functionThatReturnsTrue));\n    },\n    persist: function () {},\n    isPersistent: functionThatReturnsTrue\n  });\n  return SyntheticBaseEvent;\n}\nvar EventInterface = {\n    eventPhase: 0,\n    bubbles: 0,\n    cancelable: 0,\n    timeStamp: function (event) {\n      return event.timeStamp || Date.now();\n    },\n    defaultPrevented: 0,\n    isTrusted: 0\n  },\n  SyntheticEvent = createSyntheticEvent(EventInterface),\n  UIEventInterface = assign({}, EventInterface, { view: 0, detail: 0 }),\n  SyntheticUIEvent = createSyntheticEvent(UIEventInterface),\n  lastMovementX,\n  lastMovementY,\n  lastMouseEvent,\n  MouseEventInterface = assign({}, UIEventInterface, {\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    pageX: 0,\n    pageY: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    getModifierState: getEventModifierState,\n    button: 0,\n    buttons: 0,\n    relatedTarget: function (event) {\n      return void 0 === event.relatedTarget\n        ? event.fromElement === event.srcElement\n          ? event.toElement\n          : event.fromElement\n        : event.relatedTarget;\n    },\n    movementX: function (event) {\n      if (\"movementX\" in event) return event.movementX;\n      event !== lastMouseEvent &&\n        (lastMouseEvent && \"mousemove\" === event.type\n          ? ((lastMovementX = event.screenX - lastMouseEvent.screenX),\n            (lastMovementY = event.screenY - lastMouseEvent.screenY))\n          : (lastMovementY = lastMovementX = 0),\n        (lastMouseEvent = event));\n      return lastMovementX;\n    },\n    movementY: function (event) {\n      return \"movementY\" in event ? event.movementY : lastMovementY;\n    }\n  }),\n  SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface),\n  DragEventInterface = assign({}, MouseEventInterface, { dataTransfer: 0 }),\n  SyntheticDragEvent = createSyntheticEvent(DragEventInterface),\n  FocusEventInterface = assign({}, UIEventInterface, { relatedTarget: 0 }),\n  SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface),\n  AnimationEventInterface = assign({}, EventInterface, {\n    animationName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface),\n  ClipboardEventInterface = assign({}, EventInterface, {\n    clipboardData: function (event) {\n      return \"clipboardData\" in event\n        ? event.clipboardData\n        : window.clipboardData;\n    }\n  }),\n  SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface),\n  CompositionEventInterface = assign({}, EventInterface, { data: 0 }),\n  SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface),\n  normalizeKey = {\n    Esc: \"Escape\",\n    Spacebar: \" \",\n    Left: \"ArrowLeft\",\n    Up: \"ArrowUp\",\n    Right: \"ArrowRight\",\n    Down: \"ArrowDown\",\n    Del: \"Delete\",\n    Win: \"OS\",\n    Menu: \"ContextMenu\",\n    Apps: \"ContextMenu\",\n    Scroll: \"ScrollLock\",\n    MozPrintableKey: \"Unidentified\"\n  },\n  translateToKey = {\n    8: \"Backspace\",\n    9: \"Tab\",\n    12: \"Clear\",\n    13: \"Enter\",\n    16: \"Shift\",\n    17: \"Control\",\n    18: \"Alt\",\n    19: \"Pause\",\n    20: \"CapsLock\",\n    27: \"Escape\",\n    32: \" \",\n    33: \"PageUp\",\n    34: \"PageDown\",\n    35: \"End\",\n    36: \"Home\",\n    37: \"ArrowLeft\",\n    38: \"ArrowUp\",\n    39: \"ArrowRight\",\n    40: \"ArrowDown\",\n    45: \"Insert\",\n    46: \"Delete\",\n    112: \"F1\",\n    113: \"F2\",\n    114: \"F3\",\n    115: \"F4\",\n    116: \"F5\",\n    117: \"F6\",\n    118: \"F7\",\n    119: \"F8\",\n    120: \"F9\",\n    121: \"F10\",\n    122: \"F11\",\n    123: \"F12\",\n    144: \"NumLock\",\n    145: \"ScrollLock\",\n    224: \"Meta\"\n  },\n  modifierKeyToProp = {\n    Alt: \"altKey\",\n    Control: \"ctrlKey\",\n    Meta: \"metaKey\",\n    Shift: \"shiftKey\"\n  };\nfunction modifierStateGetter(keyArg) {\n  var nativeEvent = this.nativeEvent;\n  return nativeEvent.getModifierState\n    ? nativeEvent.getModifierState(keyArg)\n    : (keyArg = modifierKeyToProp[keyArg])\n      ? !!nativeEvent[keyArg]\n      : !1;\n}\nfunction getEventModifierState() {\n  return modifierStateGetter;\n}\nvar KeyboardEventInterface = assign({}, UIEventInterface, {\n    key: function (nativeEvent) {\n      if (nativeEvent.key) {\n        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n        if (\"Unidentified\" !== key) return key;\n      }\n      return \"keypress\" === nativeEvent.type\n        ? ((nativeEvent = getEventCharCode(nativeEvent)),\n          13 === nativeEvent ? \"Enter\" : String.fromCharCode(nativeEvent))\n        : \"keydown\" === nativeEvent.type || \"keyup\" === nativeEvent.type\n          ? translateToKey[nativeEvent.keyCode] || \"Unidentified\"\n          : \"\";\n    },\n    code: 0,\n    location: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    repeat: 0,\n    locale: 0,\n    getModifierState: getEventModifierState,\n    charCode: function (event) {\n      return \"keypress\" === event.type ? getEventCharCode(event) : 0;\n    },\n    keyCode: function (event) {\n      return \"keydown\" === event.type || \"keyup\" === event.type\n        ? event.keyCode\n        : 0;\n    },\n    which: function (event) {\n      return \"keypress\" === event.type\n        ? getEventCharCode(event)\n        : \"keydown\" === event.type || \"keyup\" === event.type\n          ? event.keyCode\n          : 0;\n    }\n  }),\n  SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface),\n  PointerEventInterface = assign({}, MouseEventInterface, {\n    pointerId: 0,\n    width: 0,\n    height: 0,\n    pressure: 0,\n    tangentialPressure: 0,\n    tiltX: 0,\n    tiltY: 0,\n    twist: 0,\n    pointerType: 0,\n    isPrimary: 0\n  }),\n  SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface),\n  TouchEventInterface = assign({}, UIEventInterface, {\n    touches: 0,\n    targetTouches: 0,\n    changedTouches: 0,\n    altKey: 0,\n    metaKey: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    getModifierState: getEventModifierState\n  }),\n  SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface),\n  TransitionEventInterface = assign({}, EventInterface, {\n    propertyName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface),\n  WheelEventInterface = assign({}, MouseEventInterface, {\n    deltaX: function (event) {\n      return \"deltaX\" in event\n        ? event.deltaX\n        : \"wheelDeltaX\" in event\n          ? -event.wheelDeltaX\n          : 0;\n    },\n    deltaY: function (event) {\n      return \"deltaY\" in event\n        ? event.deltaY\n        : \"wheelDeltaY\" in event\n          ? -event.wheelDeltaY\n          : \"wheelDelta\" in event\n            ? -event.wheelDelta\n            : 0;\n    },\n    deltaZ: 0,\n    deltaMode: 0\n  }),\n  SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface),\n  ToggleEventInterface = assign({}, EventInterface, {\n    newState: 0,\n    oldState: 0\n  }),\n  SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface),\n  END_KEYCODES = [9, 13, 27, 32],\n  canUseCompositionEvent = canUseDOM && \"CompositionEvent\" in window,\n  documentMode = null;\ncanUseDOM &&\n  \"documentMode\" in document &&\n  (documentMode = document.documentMode);\nvar canUseTextInputEvent = canUseDOM && \"TextEvent\" in window && !documentMode,\n  useFallbackCompositionData =\n    canUseDOM &&\n    (!canUseCompositionEvent ||\n      (documentMode && 8 < documentMode && 11 >= documentMode)),\n  SPACEBAR_CHAR = String.fromCharCode(32),\n  hasSpaceKeypress = !1;\nfunction isFallbackCompositionEnd(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"keyup\":\n      return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);\n    case \"keydown\":\n      return 229 !== nativeEvent.keyCode;\n    case \"keypress\":\n    case \"mousedown\":\n    case \"focusout\":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction getDataFromCustomEvent(nativeEvent) {\n  nativeEvent = nativeEvent.detail;\n  return \"object\" === typeof nativeEvent && \"data\" in nativeEvent\n    ? nativeEvent.data\n    : null;\n}\nvar isComposing = !1;\nfunction getNativeBeforeInputChars(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"compositionend\":\n      return getDataFromCustomEvent(nativeEvent);\n    case \"keypress\":\n      if (32 !== nativeEvent.which) return null;\n      hasSpaceKeypress = !0;\n      return SPACEBAR_CHAR;\n    case \"textInput\":\n      return (\n        (domEventName = nativeEvent.data),\n        domEventName === SPACEBAR_CHAR && hasSpaceKeypress ? null : domEventName\n      );\n    default:\n      return null;\n  }\n}\nfunction getFallbackBeforeInputChars(domEventName, nativeEvent) {\n  if (isComposing)\n    return \"compositionend\" === domEventName ||\n      (!canUseCompositionEvent &&\n        isFallbackCompositionEnd(domEventName, nativeEvent))\n      ? ((domEventName = getData()),\n        (fallbackText = startText = root = null),\n        (isComposing = !1),\n        domEventName)\n      : null;\n  switch (domEventName) {\n    case \"paste\":\n      return null;\n    case \"keypress\":\n      if (\n        !(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) ||\n        (nativeEvent.ctrlKey && nativeEvent.altKey)\n      ) {\n        if (nativeEvent.char && 1 < nativeEvent.char.length)\n          return nativeEvent.char;\n        if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case \"compositionend\":\n      return useFallbackCompositionData && \"ko\" !== nativeEvent.locale\n        ? null\n        : nativeEvent.data;\n    default:\n      return null;\n  }\n}\nvar supportedInputTypes = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return \"input\" === nodeName\n    ? !!supportedInputTypes[elem.type]\n    : \"textarea\" === nodeName\n      ? !0\n      : !1;\n}\nfunction createAndAccumulateChangeEvent(\n  dispatchQueue,\n  inst,\n  nativeEvent,\n  target\n) {\n  restoreTarget\n    ? restoreQueue\n      ? restoreQueue.push(target)\n      : (restoreQueue = [target])\n    : (restoreTarget = target);\n  inst = accumulateTwoPhaseListeners(inst, \"onChange\");\n  0 < inst.length &&\n    ((nativeEvent = new SyntheticEvent(\n      \"onChange\",\n      \"change\",\n      null,\n      nativeEvent,\n      target\n    )),\n    dispatchQueue.push({ event: nativeEvent, listeners: inst }));\n}\nvar activeElement$1 = null,\n  activeElementInst$1 = null;\nfunction runEventInBatch(dispatchQueue) {\n  processDispatchQueue(dispatchQueue, 0);\n}\nfunction getInstIfValueChanged(targetInst) {\n  var targetNode = getNodeFromInstance(targetInst);\n  if (updateValueIfChanged(targetNode)) return targetInst;\n}\nfunction getTargetInstForChangeEvent(domEventName, targetInst) {\n  if (\"change\" === domEventName) return targetInst;\n}\nvar isInputEventSupported = !1;\nif (canUseDOM) {\n  var JSCompiler_inline_result$jscomp$283;\n  if (canUseDOM) {\n    var isSupported$jscomp$inline_418 = \"oninput\" in document;\n    if (!isSupported$jscomp$inline_418) {\n      var element$jscomp$inline_419 = document.createElement(\"div\");\n      element$jscomp$inline_419.setAttribute(\"oninput\", \"return;\");\n      isSupported$jscomp$inline_418 =\n        \"function\" === typeof element$jscomp$inline_419.oninput;\n    }\n    JSCompiler_inline_result$jscomp$283 = isSupported$jscomp$inline_418;\n  } else JSCompiler_inline_result$jscomp$283 = !1;\n  isInputEventSupported =\n    JSCompiler_inline_result$jscomp$283 &&\n    (!document.documentMode || 9 < document.documentMode);\n}\nfunction stopWatchingForValueChange() {\n  activeElement$1 &&\n    (activeElement$1.detachEvent(\"onpropertychange\", handlePropertyChange),\n    (activeElementInst$1 = activeElement$1 = null));\n}\nfunction handlePropertyChange(nativeEvent) {\n  if (\n    \"value\" === nativeEvent.propertyName &&\n    getInstIfValueChanged(activeElementInst$1)\n  ) {\n    var dispatchQueue = [];\n    createAndAccumulateChangeEvent(\n      dispatchQueue,\n      activeElementInst$1,\n      nativeEvent,\n      getEventTarget(nativeEvent)\n    );\n    batchedUpdates$1(runEventInBatch, dispatchQueue);\n  }\n}\nfunction handleEventsForInputEventPolyfill(domEventName, target, targetInst) {\n  \"focusin\" === domEventName\n    ? (stopWatchingForValueChange(),\n      (activeElement$1 = target),\n      (activeElementInst$1 = targetInst),\n      activeElement$1.attachEvent(\"onpropertychange\", handlePropertyChange))\n    : \"focusout\" === domEventName && stopWatchingForValueChange();\n}\nfunction getTargetInstForInputEventPolyfill(domEventName) {\n  if (\n    \"selectionchange\" === domEventName ||\n    \"keyup\" === domEventName ||\n    \"keydown\" === domEventName\n  )\n    return getInstIfValueChanged(activeElementInst$1);\n}\nfunction getTargetInstForClickEvent(domEventName, targetInst) {\n  if (\"click\" === domEventName) return getInstIfValueChanged(targetInst);\n}\nfunction getTargetInstForInputOrChangeEvent(domEventName, targetInst) {\n  if (\"input\" === domEventName || \"change\" === domEventName)\n    return getInstIfValueChanged(targetInst);\n}\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is;\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) return !0;\n  if (\n    \"object\" !== typeof objA ||\n    null === objA ||\n    \"object\" !== typeof objB ||\n    null === objB\n  )\n    return !1;\n  var keysA = Object.keys(objA),\n    keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return !1;\n  for (keysB = 0; keysB < keysA.length; keysB++) {\n    var currentKey = keysA[keysB];\n    if (\n      !hasOwnProperty.call(objB, currentKey) ||\n      !objectIs(objA[currentKey], objB[currentKey])\n    )\n      return !1;\n  }\n  return !0;\n}\nfunction getLeafNode(node) {\n  for (; node && node.firstChild; ) node = node.firstChild;\n  return node;\n}\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  root = 0;\n  for (var nodeEnd; node; ) {\n    if (3 === node.nodeType) {\n      nodeEnd = root + node.textContent.length;\n      if (root <= offset && nodeEnd >= offset)\n        return { node: node, offset: offset - root };\n      root = nodeEnd;\n    }\n    a: {\n      for (; node; ) {\n        if (node.nextSibling) {\n          node = node.nextSibling;\n          break a;\n        }\n        node = node.parentNode;\n      }\n      node = void 0;\n    }\n    node = getLeafNode(node);\n  }\n}\nfunction containsNode(outerNode, innerNode) {\n  return outerNode && innerNode\n    ? outerNode === innerNode\n      ? !0\n      : outerNode && 3 === outerNode.nodeType\n        ? !1\n        : innerNode && 3 === innerNode.nodeType\n          ? containsNode(outerNode, innerNode.parentNode)\n          : \"contains\" in outerNode\n            ? outerNode.contains(innerNode)\n            : outerNode.compareDocumentPosition\n              ? !!(outerNode.compareDocumentPosition(innerNode) & 16)\n              : !1\n    : !1;\n}\nfunction getActiveElementDeep(containerInfo) {\n  containerInfo =\n    null != containerInfo &&\n    null != containerInfo.ownerDocument &&\n    null != containerInfo.ownerDocument.defaultView\n      ? containerInfo.ownerDocument.defaultView\n      : window;\n  for (\n    var element = getActiveElement(containerInfo.document);\n    element instanceof containerInfo.HTMLIFrameElement;\n\n  ) {\n    try {\n      var JSCompiler_inline_result =\n        \"string\" === typeof element.contentWindow.location.href;\n    } catch (err) {\n      JSCompiler_inline_result = !1;\n    }\n    if (JSCompiler_inline_result) containerInfo = element.contentWindow;\n    else break;\n    element = getActiveElement(containerInfo.document);\n  }\n  return element;\n}\nfunction hasSelectionCapabilities(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return (\n    nodeName &&\n    ((\"input\" === nodeName &&\n      (\"text\" === elem.type ||\n        \"search\" === elem.type ||\n        \"tel\" === elem.type ||\n        \"url\" === elem.type ||\n        \"password\" === elem.type)) ||\n      \"textarea\" === nodeName ||\n      \"true\" === elem.contentEditable)\n  );\n}\nfunction restoreSelection(priorSelectionInformation, containerInfo) {\n  var curFocusedElem = getActiveElementDeep(containerInfo);\n  containerInfo = priorSelectionInformation.focusedElem;\n  var priorSelectionRange = priorSelectionInformation.selectionRange;\n  if (\n    curFocusedElem !== containerInfo &&\n    containerInfo &&\n    containerInfo.ownerDocument &&\n    containsNode(containerInfo.ownerDocument.documentElement, containerInfo)\n  ) {\n    if (null !== priorSelectionRange && hasSelectionCapabilities(containerInfo))\n      if (\n        ((priorSelectionInformation = priorSelectionRange.start),\n        (curFocusedElem = priorSelectionRange.end),\n        void 0 === curFocusedElem &&\n          (curFocusedElem = priorSelectionInformation),\n        \"selectionStart\" in containerInfo)\n      )\n        (containerInfo.selectionStart = priorSelectionInformation),\n          (containerInfo.selectionEnd = Math.min(\n            curFocusedElem,\n            containerInfo.value.length\n          ));\n      else if (\n        ((curFocusedElem =\n          ((priorSelectionInformation =\n            containerInfo.ownerDocument || document) &&\n            priorSelectionInformation.defaultView) ||\n          window),\n        curFocusedElem.getSelection)\n      ) {\n        curFocusedElem = curFocusedElem.getSelection();\n        var length = containerInfo.textContent.length,\n          start = Math.min(priorSelectionRange.start, length);\n        priorSelectionRange =\n          void 0 === priorSelectionRange.end\n            ? start\n            : Math.min(priorSelectionRange.end, length);\n        !curFocusedElem.extend &&\n          start > priorSelectionRange &&\n          ((length = priorSelectionRange),\n          (priorSelectionRange = start),\n          (start = length));\n        length = getNodeForCharacterOffset(containerInfo, start);\n        var endMarker = getNodeForCharacterOffset(\n          containerInfo,\n          priorSelectionRange\n        );\n        length &&\n          endMarker &&\n          (1 !== curFocusedElem.rangeCount ||\n            curFocusedElem.anchorNode !== length.node ||\n            curFocusedElem.anchorOffset !== length.offset ||\n            curFocusedElem.focusNode !== endMarker.node ||\n            curFocusedElem.focusOffset !== endMarker.offset) &&\n          ((priorSelectionInformation =\n            priorSelectionInformation.createRange()),\n          priorSelectionInformation.setStart(length.node, length.offset),\n          curFocusedElem.removeAllRanges(),\n          start > priorSelectionRange\n            ? (curFocusedElem.addRange(priorSelectionInformation),\n              curFocusedElem.extend(endMarker.node, endMarker.offset))\n            : (priorSelectionInformation.setEnd(\n                endMarker.node,\n                endMarker.offset\n              ),\n              curFocusedElem.addRange(priorSelectionInformation)));\n      }\n    priorSelectionInformation = [];\n    for (\n      curFocusedElem = containerInfo;\n      (curFocusedElem = curFocusedElem.parentNode);\n\n    )\n      1 === curFocusedElem.nodeType &&\n        priorSelectionInformation.push({\n          element: curFocusedElem,\n          left: curFocusedElem.scrollLeft,\n          top: curFocusedElem.scrollTop\n        });\n    \"function\" === typeof containerInfo.focus && containerInfo.focus();\n    for (\n      containerInfo = 0;\n      containerInfo < priorSelectionInformation.length;\n      containerInfo++\n    )\n      (curFocusedElem = priorSelectionInformation[containerInfo]),\n        (curFocusedElem.element.scrollLeft = curFocusedElem.left),\n        (curFocusedElem.element.scrollTop = curFocusedElem.top);\n  }\n}\nvar skipSelectionChangeEvent =\n    canUseDOM && \"documentMode\" in document && 11 >= document.documentMode,\n  activeElement = null,\n  activeElementInst = null,\n  lastSelection = null,\n  mouseDown = !1;\nfunction constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {\n  var doc =\n    nativeEventTarget.window === nativeEventTarget\n      ? nativeEventTarget.document\n      : 9 === nativeEventTarget.nodeType\n        ? nativeEventTarget\n        : nativeEventTarget.ownerDocument;\n  mouseDown ||\n    null == activeElement ||\n    activeElement !== getActiveElement(doc) ||\n    ((doc = activeElement),\n    \"selectionStart\" in doc && hasSelectionCapabilities(doc)\n      ? (doc = { start: doc.selectionStart, end: doc.selectionEnd })\n      : ((doc = (\n          (doc.ownerDocument && doc.ownerDocument.defaultView) ||\n          window\n        ).getSelection()),\n        (doc = {\n          anchorNode: doc.anchorNode,\n          anchorOffset: doc.anchorOffset,\n          focusNode: doc.focusNode,\n          focusOffset: doc.focusOffset\n        })),\n    (lastSelection && shallowEqual(lastSelection, doc)) ||\n      ((lastSelection = doc),\n      (doc = accumulateTwoPhaseListeners(activeElementInst, \"onSelect\")),\n      0 < doc.length &&\n        ((nativeEvent = new SyntheticEvent(\n          \"onSelect\",\n          \"select\",\n          null,\n          nativeEvent,\n          nativeEventTarget\n        )),\n        dispatchQueue.push({ event: nativeEvent, listeners: doc }),\n        (nativeEvent.target = activeElement))));\n}\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes[\"Webkit\" + styleProp] = \"webkit\" + eventName;\n  prefixes[\"Moz\" + styleProp] = \"moz\" + eventName;\n  return prefixes;\n}\nvar vendorPrefixes = {\n    animationend: makePrefixMap(\"Animation\", \"AnimationEnd\"),\n    animationiteration: makePrefixMap(\"Animation\", \"AnimationIteration\"),\n    animationstart: makePrefixMap(\"Animation\", \"AnimationStart\"),\n    transitionrun: makePrefixMap(\"Transition\", \"TransitionRun\"),\n    transitionstart: makePrefixMap(\"Transition\", \"TransitionStart\"),\n    transitioncancel: makePrefixMap(\"Transition\", \"TransitionCancel\"),\n    transitionend: makePrefixMap(\"Transition\", \"TransitionEnd\")\n  },\n  prefixedEventNames = {},\n  style = {};\ncanUseDOM &&\n  ((style = document.createElement(\"div\").style),\n  \"AnimationEvent\" in window ||\n    (delete vendorPrefixes.animationend.animation,\n    delete vendorPrefixes.animationiteration.animation,\n    delete vendorPrefixes.animationstart.animation),\n  \"TransitionEvent\" in window ||\n    delete vendorPrefixes.transitionend.transition);\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];\n  if (!vendorPrefixes[eventName]) return eventName;\n  var prefixMap = vendorPrefixes[eventName],\n    styleProp;\n  for (styleProp in prefixMap)\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style)\n      return (prefixedEventNames[eventName] = prefixMap[styleProp]);\n  return eventName;\n}\nvar ANIMATION_END = getVendorPrefixedEventName(\"animationend\"),\n  ANIMATION_ITERATION = getVendorPrefixedEventName(\"animationiteration\"),\n  ANIMATION_START = getVendorPrefixedEventName(\"animationstart\"),\n  TRANSITION_RUN = getVendorPrefixedEventName(\"transitionrun\"),\n  TRANSITION_START = getVendorPrefixedEventName(\"transitionstart\"),\n  TRANSITION_CANCEL = getVendorPrefixedEventName(\"transitioncancel\"),\n  TRANSITION_END = getVendorPrefixedEventName(\"transitionend\"),\n  topLevelEventsToReactNames = new Map(),\n  simpleEventPluginEvents =\n    \"abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel\".split(\n      \" \"\n    );\nfunction registerSimpleEvent(domEventName, reactName) {\n  topLevelEventsToReactNames.set(domEventName, reactName);\n  registerTwoPhaseEvent(reactName, [domEventName]);\n}\nvar concurrentQueues = [],\n  concurrentQueuesIndex = 0,\n  concurrentlyUpdatedLanes = 0;\nfunction finishQueueingConcurrentUpdates() {\n  for (\n    var endIndex = concurrentQueuesIndex,\n      i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);\n    i < endIndex;\n\n  ) {\n    var fiber = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var queue = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var update = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var lane = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    if (null !== queue && null !== update) {\n      var pending = queue.pending;\n      null === pending\n        ? (update.next = update)\n        : ((update.next = pending.next), (pending.next = update));\n      queue.pending = update;\n    }\n    0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);\n  }\n}\nfunction enqueueUpdate$1(fiber, queue, update, lane) {\n  concurrentQueues[concurrentQueuesIndex++] = fiber;\n  concurrentQueues[concurrentQueuesIndex++] = queue;\n  concurrentQueues[concurrentQueuesIndex++] = update;\n  concurrentQueues[concurrentQueuesIndex++] = lane;\n  concurrentlyUpdatedLanes |= lane;\n  fiber.lanes |= lane;\n  fiber = fiber.alternate;\n  null !== fiber && (fiber.lanes |= lane);\n}\nfunction enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n  enqueueUpdate$1(fiber, queue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction enqueueConcurrentRenderForLane(fiber, lane) {\n  enqueueUpdate$1(fiber, null, null, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {\n  sourceFiber.lanes |= lane;\n  var alternate = sourceFiber.alternate;\n  null !== alternate && (alternate.lanes |= lane);\n  for (var isHidden = !1, parent = sourceFiber.return; null !== parent; )\n    (parent.childLanes |= lane),\n      (alternate = parent.alternate),\n      null !== alternate && (alternate.childLanes |= lane),\n      22 === parent.tag &&\n        ((sourceFiber = parent.stateNode),\n        null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = !0)),\n      (sourceFiber = parent),\n      (parent = parent.return);\n  isHidden &&\n    null !== update &&\n    3 === sourceFiber.tag &&\n    ((parent = sourceFiber.stateNode),\n    (isHidden = 31 - clz32(lane)),\n    (parent = parent.hiddenUpdates),\n    (sourceFiber = parent[isHidden]),\n    null === sourceFiber\n      ? (parent[isHidden] = [update])\n      : sourceFiber.push(update),\n    (update.lane = lane | 536870912));\n}\nfunction getRootForUpdatedFiber(sourceFiber) {\n  if (50 < nestedUpdateCount)\n    throw (\n      ((nestedUpdateCount = 0),\n      (rootWithNestedUpdates = null),\n      Error(formatProdErrorMessage(185)))\n    );\n  for (var parent = sourceFiber.return; null !== parent; )\n    (sourceFiber = parent), (parent = sourceFiber.return);\n  return 3 === sourceFiber.tag ? sourceFiber.stateNode : null;\n}\nvar emptyContextObject = {},\n  CapturedStacks = new WeakMap();\nfunction createCapturedValueAtFiber(value, source) {\n  if (\"object\" === typeof value && null !== value) {\n    var existing = CapturedStacks.get(value);\n    if (void 0 !== existing) return existing;\n    source = {\n      value: value,\n      source: source,\n      stack: getStackByFiberInDevAndProd(source)\n    };\n    CapturedStacks.set(value, source);\n    return source;\n  }\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source)\n  };\n}\nvar forkStack = [],\n  forkStackIndex = 0,\n  treeForkProvider = null,\n  treeForkCount = 0,\n  idStack = [],\n  idStackIndex = 0,\n  treeContextProvider = null,\n  treeContextId = 1,\n  treeContextOverflow = \"\";\nfunction pushTreeFork(workInProgress, totalChildren) {\n  forkStack[forkStackIndex++] = treeForkCount;\n  forkStack[forkStackIndex++] = treeForkProvider;\n  treeForkProvider = workInProgress;\n  treeForkCount = totalChildren;\n}\nfunction pushTreeId(workInProgress, totalChildren, index) {\n  idStack[idStackIndex++] = treeContextId;\n  idStack[idStackIndex++] = treeContextOverflow;\n  idStack[idStackIndex++] = treeContextProvider;\n  treeContextProvider = workInProgress;\n  var baseIdWithLeadingBit = treeContextId;\n  workInProgress = treeContextOverflow;\n  var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;\n  baseIdWithLeadingBit &= ~(1 << baseLength);\n  index += 1;\n  var length = 32 - clz32(totalChildren) + baseLength;\n  if (30 < length) {\n    var numberOfOverflowBits = baseLength - (baseLength % 5);\n    length = (\n      baseIdWithLeadingBit &\n      ((1 << numberOfOverflowBits) - 1)\n    ).toString(32);\n    baseIdWithLeadingBit >>= numberOfOverflowBits;\n    baseLength -= numberOfOverflowBits;\n    treeContextId =\n      (1 << (32 - clz32(totalChildren) + baseLength)) |\n      (index << baseLength) |\n      baseIdWithLeadingBit;\n    treeContextOverflow = length + workInProgress;\n  } else\n    (treeContextId =\n      (1 << length) | (index << baseLength) | baseIdWithLeadingBit),\n      (treeContextOverflow = workInProgress);\n}\nfunction pushMaterializedTreeId(workInProgress) {\n  null !== workInProgress.return &&\n    (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));\n}\nfunction popTreeContext(workInProgress) {\n  for (; workInProgress === treeForkProvider; )\n    (treeForkProvider = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null),\n      (treeForkCount = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null);\n  for (; workInProgress === treeContextProvider; )\n    (treeContextProvider = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextOverflow = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextId = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null);\n}\nvar hydrationParentFiber = null,\n  nextHydratableInstance = null,\n  isHydrating = !1,\n  hydrationErrors = null,\n  rootOrSingletonContext = !1,\n  HydrationMismatchException = Error(formatProdErrorMessage(519));\nfunction throwOnHydrationMismatch(fiber) {\n  var error = Error(formatProdErrorMessage(418, \"\"));\n  queueHydrationError(createCapturedValueAtFiber(error, fiber));\n  throw HydrationMismatchException;\n}\nfunction prepareToHydrateHostInstance(fiber) {\n  var instance = fiber.stateNode,\n    type = fiber.type,\n    props = fiber.memoizedProps;\n  instance[internalInstanceKey] = fiber;\n  instance[internalPropsKey] = props;\n  switch (type) {\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"cancel\", instance);\n      listenToNonDelegatedEvent(\"close\", instance);\n      break;\n    case \"iframe\":\n    case \"object\":\n    case \"embed\":\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (type = 0; type < mediaEventTypes.length; type++)\n        listenToNonDelegatedEvent(mediaEventTypes[type], instance);\n      break;\n    case \"source\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      break;\n    case \"img\":\n    case \"image\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", instance);\n      break;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      initInput(\n        instance,\n        props.value,\n        props.defaultValue,\n        props.checked,\n        props.defaultChecked,\n        props.type,\n        props.name,\n        !0\n      );\n      track(instance);\n      break;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      break;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", instance),\n        initTextarea(instance, props.value, props.defaultValue, props.children),\n        track(instance);\n  }\n  type = props.children;\n  (\"string\" !== typeof type &&\n    \"number\" !== typeof type &&\n    \"bigint\" !== typeof type) ||\n  instance.textContent === \"\" + type ||\n  !0 === props.suppressHydrationWarning ||\n  checkForUnmatchedText(instance.textContent, type)\n    ? (null != props.popover &&\n        (listenToNonDelegatedEvent(\"beforetoggle\", instance),\n        listenToNonDelegatedEvent(\"toggle\", instance)),\n      null != props.onScroll && listenToNonDelegatedEvent(\"scroll\", instance),\n      null != props.onScrollEnd &&\n        listenToNonDelegatedEvent(\"scrollend\", instance),\n      null != props.onClick && (instance.onclick = noop$1),\n      (instance = !0))\n    : (instance = !1);\n  instance || throwOnHydrationMismatch(fiber);\n}\nfunction popToNextHostParent(fiber) {\n  for (hydrationParentFiber = fiber.return; hydrationParentFiber; )\n    switch (hydrationParentFiber.tag) {\n      case 3:\n      case 27:\n        rootOrSingletonContext = !0;\n        return;\n      case 5:\n      case 13:\n        rootOrSingletonContext = !1;\n        return;\n      default:\n        hydrationParentFiber = hydrationParentFiber.return;\n    }\n}\nfunction popHydrationState(fiber) {\n  if (fiber !== hydrationParentFiber) return !1;\n  if (!isHydrating) return popToNextHostParent(fiber), (isHydrating = !0), !1;\n  var shouldClear = !1,\n    JSCompiler_temp;\n  if ((JSCompiler_temp = 3 !== fiber.tag && 27 !== fiber.tag)) {\n    if ((JSCompiler_temp = 5 === fiber.tag))\n      (JSCompiler_temp = fiber.type),\n        (JSCompiler_temp =\n          !(\"form\" !== JSCompiler_temp && \"button\" !== JSCompiler_temp) ||\n          shouldSetTextContent(fiber.type, fiber.memoizedProps));\n    JSCompiler_temp = !JSCompiler_temp;\n  }\n  JSCompiler_temp && (shouldClear = !0);\n  shouldClear && nextHydratableInstance && throwOnHydrationMismatch(fiber);\n  popToNextHostParent(fiber);\n  if (13 === fiber.tag) {\n    fiber = fiber.memoizedState;\n    fiber = null !== fiber ? fiber.dehydrated : null;\n    if (!fiber) throw Error(formatProdErrorMessage(317));\n    a: {\n      fiber = fiber.nextSibling;\n      for (shouldClear = 0; fiber; ) {\n        if (8 === fiber.nodeType)\n          if (((JSCompiler_temp = fiber.data), \"/$\" === JSCompiler_temp)) {\n            if (0 === shouldClear) {\n              nextHydratableInstance = getNextHydratable(fiber.nextSibling);\n              break a;\n            }\n            shouldClear--;\n          } else\n            (\"$\" !== JSCompiler_temp &&\n              \"$!\" !== JSCompiler_temp &&\n              \"$?\" !== JSCompiler_temp) ||\n              shouldClear++;\n        fiber = fiber.nextSibling;\n      }\n      nextHydratableInstance = null;\n    }\n  } else\n    nextHydratableInstance = hydrationParentFiber\n      ? getNextHydratable(fiber.stateNode.nextSibling)\n      : null;\n  return !0;\n}\nfunction resetHydrationState() {\n  nextHydratableInstance = hydrationParentFiber = null;\n  isHydrating = !1;\n}\nfunction queueHydrationError(error) {\n  null === hydrationErrors\n    ? (hydrationErrors = [error])\n    : hydrationErrors.push(error);\n}\nvar SuspenseException = Error(formatProdErrorMessage(460)),\n  SuspenseyCommitException = Error(formatProdErrorMessage(474)),\n  noopSuspenseyCommitThenable = { then: function () {} };\nfunction isThenableResolved(thenable) {\n  thenable = thenable.status;\n  return \"fulfilled\" === thenable || \"rejected\" === thenable;\n}\nfunction noop$3() {}\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop$3, noop$3), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      thenableState = thenable.reason;\n      if (thenableState === SuspenseException)\n        throw Error(formatProdErrorMessage(483));\n      throw thenableState;\n    default:\n      if (\"string\" === typeof thenable.status) thenable.then(noop$3, noop$3);\n      else {\n        thenableState = workInProgressRoot;\n        if (null !== thenableState && 100 < thenableState.shellSuspendCounter)\n          throw Error(formatProdErrorMessage(482));\n        thenableState = thenable;\n        thenableState.status = \"pending\";\n        thenableState.then(\n          function (fulfilledValue) {\n            if (\"pending\" === thenable.status) {\n              var fulfilledThenable = thenable;\n              fulfilledThenable.status = \"fulfilled\";\n              fulfilledThenable.value = fulfilledValue;\n            }\n          },\n          function (error) {\n            if (\"pending\" === thenable.status) {\n              var rejectedThenable = thenable;\n              rejectedThenable.status = \"rejected\";\n              rejectedThenable.reason = error;\n            }\n          }\n        );\n      }\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          thenableState = thenable.reason;\n          if (thenableState === SuspenseException)\n            throw Error(formatProdErrorMessage(483));\n          throw thenableState;\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable) throw Error(formatProdErrorMessage(459));\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nvar thenableState$1 = null,\n  thenableIndexCounter$1 = 0;\nfunction unwrapThenable(thenable) {\n  var index = thenableIndexCounter$1;\n  thenableIndexCounter$1 += 1;\n  null === thenableState$1 && (thenableState$1 = []);\n  return trackUsedThenable(thenableState$1, thenable, index);\n}\nfunction coerceRef(workInProgress, element) {\n  element = element.props.ref;\n  workInProgress.ref = void 0 !== element ? element : null;\n}\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE)\n    throw Error(formatProdErrorMessage(525));\n  returnFiber = Object.prototype.toString.call(newChild);\n  throw Error(\n    formatProdErrorMessage(\n      31,\n      \"[object Object]\" === returnFiber\n        ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\"\n        : returnFiber\n    )\n  );\n}\nfunction resolveLazy(lazyType) {\n  var init = lazyType._init;\n  return init(lazyType._payload);\n}\nfunction createChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (shouldTrackSideEffects) {\n      var deletions = returnFiber.deletions;\n      null === deletions\n        ? ((returnFiber.deletions = [childToDelete]), (returnFiber.flags |= 16))\n        : deletions.push(childToDelete);\n    }\n  }\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) return null;\n    for (; null !== currentFirstChild; )\n      deleteChild(returnFiber, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return null;\n  }\n  function mapRemainingChildren(currentFirstChild) {\n    for (var existingChildren = new Map(); null !== currentFirstChild; )\n      null !== currentFirstChild.key\n        ? existingChildren.set(currentFirstChild.key, currentFirstChild)\n        : existingChildren.set(currentFirstChild.index, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return existingChildren;\n  }\n  function useFiber(fiber, pendingProps) {\n    fiber = createWorkInProgress(fiber, pendingProps);\n    fiber.index = 0;\n    fiber.sibling = null;\n    return fiber;\n  }\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects)\n      return (newFiber.flags |= 1048576), lastPlacedIndex;\n    newIndex = newFiber.alternate;\n    if (null !== newIndex)\n      return (\n        (newIndex = newIndex.index),\n        newIndex < lastPlacedIndex\n          ? ((newFiber.flags |= 33554434), lastPlacedIndex)\n          : newIndex\n      );\n    newFiber.flags |= 33554434;\n    return lastPlacedIndex;\n  }\n  function placeSingleChild(newFiber) {\n    shouldTrackSideEffects &&\n      null === newFiber.alternate &&\n      (newFiber.flags |= 33554434);\n    return newFiber;\n  }\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (null === current || 6 !== current.tag)\n      return (\n        (current = createFiberFromText(textContent, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, textContent);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateElement(returnFiber, current, element, lanes) {\n    var elementType = element.type;\n    if (elementType === REACT_FRAGMENT_TYPE)\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key\n      );\n    if (\n      null !== current &&\n      (current.elementType === elementType ||\n        (\"object\" === typeof elementType &&\n          null !== elementType &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type))\n    )\n      return (\n        (current = useFiber(current, element.props)),\n        coerceRef(current, element),\n        (current.return = returnFiber),\n        current\n      );\n    current = createFiberFromTypeAndProps(\n      element.type,\n      element.key,\n      element.props,\n      null,\n      returnFiber.mode,\n      lanes\n    );\n    coerceRef(current, element);\n    current.return = returnFiber;\n    return current;\n  }\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (\n      null === current ||\n      4 !== current.tag ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    )\n      return (\n        (current = createFiberFromPortal(portal, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, portal.children || []);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (null === current || 7 !== current.tag)\n      return (\n        (current = createFiberFromFragment(\n          fragment,\n          returnFiber.mode,\n          lanes,\n          key\n        )),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, fragment);\n    current.return = returnFiber;\n    return current;\n  }\n  function createChild(returnFiber, newChild, lanes) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (newChild = createFiberFromText(\n          \"\" + newChild,\n          returnFiber.mode,\n          lanes\n        )),\n        (newChild.return = returnFiber),\n        newChild\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (lanes = createFiberFromTypeAndProps(\n              newChild.type,\n              newChild.key,\n              newChild.props,\n              null,\n              returnFiber.mode,\n              lanes\n            )),\n            coerceRef(lanes, newChild),\n            (lanes.return = returnFiber),\n            lanes\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (newChild = createFiberFromPortal(\n              newChild,\n              returnFiber.mode,\n              lanes\n            )),\n            (newChild.return = returnFiber),\n            newChild\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return createChild(returnFiber, newChild, lanes);\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (newChild = createFiberFromFragment(\n            newChild,\n            returnFiber.mode,\n            lanes,\n            null\n          )),\n          (newChild.return = returnFiber),\n          newChild\n        );\n      if (\"function\" === typeof newChild.then)\n        return createChild(returnFiber, unwrapThenable(newChild), lanes);\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return createChild(\n          returnFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    var key = null !== oldFiber ? oldFiber.key : null;\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return null !== key\n        ? null\n        : updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return newChild.key === key\n            ? updateElement(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_PORTAL_TYPE:\n          return newChild.key === key\n            ? updatePortal(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            updateSlot(returnFiber, oldFiber, newChild, lanes)\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return null !== key\n          ? null\n          : updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      if (\"function\" === typeof newChild.then)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateFromMap(\n    existingChildren,\n    returnFiber,\n    newIdx,\n    newChild,\n    lanes\n  ) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (existingChildren = existingChildren.get(newIdx) || null),\n        updateTextNode(returnFiber, existingChildren, \"\" + newChild, lanes)\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updateElement(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updatePortal(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return updateFromMap(\n            existingChildren,\n            returnFiber,\n            newIdx,\n            newChild,\n            lanes\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (existingChildren = existingChildren.get(newIdx) || null),\n          updateFragment(returnFiber, existingChildren, newChild, lanes, null)\n        );\n      if (\"function\" === typeof newChild.then)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function reconcileChildrenArray(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null;\n      null !== oldFiber && newIdx < newChildren.length;\n      newIdx++\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes\n      );\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (newIdx === newChildren.length)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; newIdx < newChildren.length; newIdx++)\n        (oldFiber = createChild(returnFiber, newChildren[newIdx], lanes)),\n          null !== oldFiber &&\n            ((currentFirstChild = placeChild(\n              oldFiber,\n              currentFirstChild,\n              newIdx\n            )),\n            null === previousNewFiber\n              ? (resultingFirstChild = oldFiber)\n              : (previousNewFiber.sibling = oldFiber),\n            (previousNewFiber = oldFiber));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      newIdx < newChildren.length;\n      newIdx++\n    )\n      (nextOldFiber = updateFromMap(\n        oldFiber,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes\n      )),\n        null !== nextOldFiber &&\n          (shouldTrackSideEffects &&\n            null !== nextOldFiber.alternate &&\n            oldFiber.delete(\n              null === nextOldFiber.key ? newIdx : nextOldFiber.key\n            ),\n          (currentFirstChild = placeChild(\n            nextOldFiber,\n            currentFirstChild,\n            newIdx\n          )),\n          null === previousNewFiber\n            ? (resultingFirstChild = nextOldFiber)\n            : (previousNewFiber.sibling = nextOldFiber),\n          (previousNewFiber = nextOldFiber));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildrenIterator(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    if (null == newChildren) throw Error(formatProdErrorMessage(151));\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null,\n        step = newChildren.next();\n      null !== oldFiber && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (step.done)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; !step.done; newIdx++, step = newChildren.next())\n        (step = createChild(returnFiber, step.value, lanes)),\n          null !== step &&\n            ((currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n            null === previousNewFiber\n              ? (resultingFirstChild = step)\n              : (previousNewFiber.sibling = step),\n            (previousNewFiber = step));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      !step.done;\n      newIdx++, step = newChildren.next()\n    )\n      (step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes)),\n        null !== step &&\n          (shouldTrackSideEffects &&\n            null !== step.alternate &&\n            oldFiber.delete(null === step.key ? newIdx : step.key),\n          (currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n          null === previousNewFiber\n            ? (resultingFirstChild = step)\n            : (previousNewFiber.sibling = step),\n          (previousNewFiber = step));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildFibersImpl(\n    returnFiber,\n    currentFirstChild,\n    newChild,\n    lanes\n  ) {\n    \"object\" === typeof newChild &&\n      null !== newChild &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      null === newChild.key &&\n      (newChild = newChild.props.children);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          a: {\n            for (var key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key) {\n                key = newChild.type;\n                if (key === REACT_FRAGMENT_TYPE) {\n                  if (7 === currentFirstChild.tag) {\n                    deleteRemainingChildren(\n                      returnFiber,\n                      currentFirstChild.sibling\n                    );\n                    lanes = useFiber(\n                      currentFirstChild,\n                      newChild.props.children\n                    );\n                    lanes.return = returnFiber;\n                    returnFiber = lanes;\n                    break a;\n                  }\n                } else if (\n                  currentFirstChild.elementType === key ||\n                  (\"object\" === typeof key &&\n                    null !== key &&\n                    key.$$typeof === REACT_LAZY_TYPE &&\n                    resolveLazy(key) === currentFirstChild.type)\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.props);\n                  coerceRef(lanes, newChild);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                }\n                deleteRemainingChildren(returnFiber, currentFirstChild);\n                break;\n              } else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            newChild.type === REACT_FRAGMENT_TYPE\n              ? ((lanes = createFiberFromFragment(\n                  newChild.props.children,\n                  returnFiber.mode,\n                  lanes,\n                  newChild.key\n                )),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes))\n              : ((lanes = createFiberFromTypeAndProps(\n                  newChild.type,\n                  newChild.key,\n                  newChild.props,\n                  null,\n                  returnFiber.mode,\n                  lanes\n                )),\n                coerceRef(lanes, newChild),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes));\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_PORTAL_TYPE:\n          a: {\n            for (key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key)\n                if (\n                  4 === currentFirstChild.tag &&\n                  currentFirstChild.stateNode.containerInfo ===\n                    newChild.containerInfo &&\n                  currentFirstChild.stateNode.implementation ===\n                    newChild.implementation\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.children || []);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                } else {\n                  deleteRemainingChildren(returnFiber, currentFirstChild);\n                  break;\n                }\n              else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            lanes = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n            lanes.return = returnFiber;\n            returnFiber = lanes;\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            reconcileChildFibersImpl(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes\n            )\n          );\n      }\n      if (isArrayImpl(newChild))\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      if (getIteratorFn(newChild)) {\n        key = getIteratorFn(newChild);\n        if (\"function\" !== typeof key) throw Error(formatProdErrorMessage(150));\n        newChild = key.call(newChild);\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      }\n      if (\"function\" === typeof newChild.then)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n      ? ((newChild = \"\" + newChild),\n        null !== currentFirstChild && 6 === currentFirstChild.tag\n          ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling),\n            (lanes = useFiber(currentFirstChild, newChild)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes))\n          : (deleteRemainingChildren(returnFiber, currentFirstChild),\n            (lanes = createFiberFromText(newChild, returnFiber.mode, lanes)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes)),\n        placeSingleChild(returnFiber))\n      : deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n  return function (returnFiber, currentFirstChild, newChild, lanes) {\n    try {\n      thenableIndexCounter$1 = 0;\n      var firstChildFiber = reconcileChildFibersImpl(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes\n      );\n      thenableState$1 = null;\n      return firstChildFiber;\n    } catch (x) {\n      if (x === SuspenseException) throw x;\n      var fiber = createFiberImplClass(29, x, null, returnFiber.mode);\n      fiber.lanes = lanes;\n      fiber.return = returnFiber;\n      return fiber;\n    } finally {\n    }\n  };\n}\nvar reconcileChildFibers = createChildReconciler(!0),\n  mountChildFibers = createChildReconciler(!1),\n  currentTreeHiddenStackCursor = createCursor(null),\n  prevEntangledRenderLanesCursor = createCursor(0);\nfunction pushHiddenContext(fiber, context) {\n  fiber = entangledRenderLanes;\n  push(prevEntangledRenderLanesCursor, fiber);\n  push(currentTreeHiddenStackCursor, context);\n  entangledRenderLanes = fiber | context.baseLanes;\n}\nfunction reuseHiddenContextOnStack() {\n  push(prevEntangledRenderLanesCursor, entangledRenderLanes);\n  push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current);\n}\nfunction popHiddenContext() {\n  entangledRenderLanes = prevEntangledRenderLanesCursor.current;\n  pop(currentTreeHiddenStackCursor);\n  pop(prevEntangledRenderLanesCursor);\n}\nvar suspenseHandlerStackCursor = createCursor(null),\n  shellBoundary = null;\nfunction pushPrimaryTreeSuspenseHandler(handler) {\n  var current = handler.alternate;\n  push(suspenseStackCursor, suspenseStackCursor.current & 1);\n  push(suspenseHandlerStackCursor, handler);\n  null === shellBoundary &&\n    (null === current || null !== currentTreeHiddenStackCursor.current\n      ? (shellBoundary = handler)\n      : null !== current.memoizedState && (shellBoundary = handler));\n}\nfunction pushOffscreenSuspenseHandler(fiber) {\n  if (22 === fiber.tag) {\n    if (\n      (push(suspenseStackCursor, suspenseStackCursor.current),\n      push(suspenseHandlerStackCursor, fiber),\n      null === shellBoundary)\n    ) {\n      var current = fiber.alternate;\n      null !== current &&\n        null !== current.memoizedState &&\n        (shellBoundary = fiber);\n    }\n  } else reuseSuspenseHandlerOnStack(fiber);\n}\nfunction reuseSuspenseHandlerOnStack() {\n  push(suspenseStackCursor, suspenseStackCursor.current);\n  push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current);\n}\nfunction popSuspenseHandler(fiber) {\n  pop(suspenseHandlerStackCursor);\n  shellBoundary === fiber && (shellBoundary = null);\n  pop(suspenseStackCursor);\n}\nvar suspenseStackCursor = createCursor(0);\nfunction findFirstSuspended(row) {\n  for (var node = row; null !== node; ) {\n    if (13 === node.tag) {\n      var state = node.memoizedState;\n      if (\n        null !== state &&\n        ((state = state.dehydrated),\n        null === state || \"$?\" === state.data || \"$!\" === state.data)\n      )\n        return node;\n    } else if (19 === node.tag && void 0 !== node.memoizedProps.revealOrder) {\n      if (0 !== (node.flags & 128)) return node;\n    } else if (null !== node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) break;\n    for (; null === node.sibling; ) {\n      if (null === node.return || node.return === row) return null;\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\nvar AbortControllerLocal =\n    \"undefined\" !== typeof AbortController\n      ? AbortController\n      : function () {\n          var listeners = [],\n            signal = (this.signal = {\n              aborted: !1,\n              addEventListener: function (type, listener) {\n                listeners.push(listener);\n              }\n            });\n          this.abort = function () {\n            signal.aborted = !0;\n            listeners.forEach(function (listener) {\n              return listener();\n            });\n          };\n        },\n  scheduleCallback$2 = Scheduler.unstable_scheduleCallback,\n  NormalPriority = Scheduler.unstable_NormalPriority,\n  CacheContext = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    Consumer: null,\n    Provider: null,\n    _currentValue: null,\n    _currentValue2: null,\n    _threadCount: 0\n  };\nfunction createCache() {\n  return {\n    controller: new AbortControllerLocal(),\n    data: new Map(),\n    refCount: 0\n  };\n}\nfunction releaseCache(cache) {\n  cache.refCount--;\n  0 === cache.refCount &&\n    scheduleCallback$2(NormalPriority, function () {\n      cache.controller.abort();\n    });\n}\nvar currentEntangledListeners = null,\n  currentEntangledPendingCount = 0,\n  currentEntangledLane = 0,\n  currentEntangledActionThenable = null;\nfunction entangleAsyncAction(transition, thenable) {\n  if (null === currentEntangledListeners) {\n    var entangledListeners = (currentEntangledListeners = []);\n    currentEntangledPendingCount = 0;\n    currentEntangledLane = requestTransitionLane();\n    currentEntangledActionThenable = {\n      status: \"pending\",\n      value: void 0,\n      then: function (resolve) {\n        entangledListeners.push(resolve);\n      }\n    };\n  }\n  currentEntangledPendingCount++;\n  thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);\n  return thenable;\n}\nfunction pingEngtangledActionScope() {\n  if (\n    0 === --currentEntangledPendingCount &&\n    null !== currentEntangledListeners\n  ) {\n    null !== currentEntangledActionThenable &&\n      (currentEntangledActionThenable.status = \"fulfilled\");\n    var listeners = currentEntangledListeners;\n    currentEntangledListeners = null;\n    currentEntangledLane = 0;\n    currentEntangledActionThenable = null;\n    for (var i = 0; i < listeners.length; i++) (0, listeners[i])();\n  }\n}\nfunction chainThenableValue(thenable, result) {\n  var listeners = [],\n    thenableWithOverride = {\n      status: \"pending\",\n      value: null,\n      reason: null,\n      then: function (resolve) {\n        listeners.push(resolve);\n      }\n    };\n  thenable.then(\n    function () {\n      thenableWithOverride.status = \"fulfilled\";\n      thenableWithOverride.value = result;\n      for (var i = 0; i < listeners.length; i++) (0, listeners[i])(result);\n    },\n    function (error) {\n      thenableWithOverride.status = \"rejected\";\n      thenableWithOverride.reason = error;\n      for (error = 0; error < listeners.length; error++)\n        (0, listeners[error])(void 0);\n    }\n  );\n  return thenableWithOverride;\n}\nvar prevOnStartTransitionFinish = ReactSharedInternals.S;\nReactSharedInternals.S = function (transition, returnValue) {\n  \"object\" === typeof returnValue &&\n    null !== returnValue &&\n    \"function\" === typeof returnValue.then &&\n    entangleAsyncAction(transition, returnValue);\n  null !== prevOnStartTransitionFinish &&\n    prevOnStartTransitionFinish(transition, returnValue);\n};\nvar resumedCache = createCursor(null);\nfunction peekCacheFromPool() {\n  var cacheResumedFromPreviousRender = resumedCache.current;\n  return null !== cacheResumedFromPreviousRender\n    ? cacheResumedFromPreviousRender\n    : workInProgressRoot.pooledCache;\n}\nfunction pushTransition(offscreenWorkInProgress, prevCachePool) {\n  null === prevCachePool\n    ? push(resumedCache, resumedCache.current)\n    : push(resumedCache, prevCachePool.pool);\n}\nfunction getSuspendedCache() {\n  var cacheFromPool = peekCacheFromPool();\n  return null === cacheFromPool\n    ? null\n    : { parent: CacheContext._currentValue, pool: cacheFromPool };\n}\nvar renderLanes = 0,\n  currentlyRenderingFiber$1 = null,\n  currentHook = null,\n  workInProgressHook = null,\n  didScheduleRenderPhaseUpdate = !1,\n  didScheduleRenderPhaseUpdateDuringThisPass = !1,\n  shouldDoubleInvokeUserFnsInHooksDEV = !1,\n  localIdCounter = 0,\n  thenableIndexCounter = 0,\n  thenableState = null,\n  globalClientIdCounter = 0;\nfunction throwInvalidHookError() {\n  throw Error(formatProdErrorMessage(321));\n}\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  if (null === prevDeps) return !1;\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++)\n    if (!objectIs(nextDeps[i], prevDeps[i])) return !1;\n  return !0;\n}\nfunction renderWithHooks(\n  current,\n  workInProgress,\n  Component,\n  props,\n  secondArg,\n  nextRenderLanes\n) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber$1 = workInProgress;\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = 0;\n  ReactSharedInternals.H =\n    null === current || null === current.memoizedState\n      ? HooksDispatcherOnMount\n      : HooksDispatcherOnUpdate;\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  nextRenderLanes = Component(props, secondArg);\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  didScheduleRenderPhaseUpdateDuringThisPass &&\n    (nextRenderLanes = renderWithHooksAgain(\n      workInProgress,\n      Component,\n      props,\n      secondArg\n    ));\n  finishRenderingHooks(current);\n  return nextRenderLanes;\n}\nfunction finishRenderingHooks(current) {\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber$1 = null;\n  didScheduleRenderPhaseUpdate = !1;\n  thenableIndexCounter = 0;\n  thenableState = null;\n  if (didRenderTooFewHooks) throw Error(formatProdErrorMessage(300));\n  null === current ||\n    didReceiveUpdate ||\n    ((current = current.dependencies),\n    null !== current &&\n      checkIfContextChanged(current) &&\n      (didReceiveUpdate = !0));\n}\nfunction renderWithHooksAgain(workInProgress, Component, props, secondArg) {\n  currentlyRenderingFiber$1 = workInProgress;\n  var numberOfReRenders = 0;\n  do {\n    didScheduleRenderPhaseUpdateDuringThisPass && (thenableState = null);\n    thenableIndexCounter = 0;\n    didScheduleRenderPhaseUpdateDuringThisPass = !1;\n    if (25 <= numberOfReRenders) throw Error(formatProdErrorMessage(301));\n    numberOfReRenders += 1;\n    workInProgressHook = currentHook = null;\n    if (null != workInProgress.updateQueue) {\n      var children = workInProgress.updateQueue;\n      children.lastEffect = null;\n      children.events = null;\n      children.stores = null;\n      null != children.memoCache && (children.memoCache.index = 0);\n    }\n    ReactSharedInternals.H = HooksDispatcherOnRerender;\n    children = Component(props, secondArg);\n  } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  return children;\n}\nfunction TransitionAwareHostComponent() {\n  var dispatcher = ReactSharedInternals.H,\n    maybeThenable = dispatcher.useState()[0];\n  maybeThenable =\n    \"function\" === typeof maybeThenable.then\n      ? useThenable(maybeThenable)\n      : maybeThenable;\n  dispatcher = dispatcher.useState()[0];\n  (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher &&\n    (currentlyRenderingFiber$1.flags |= 1024);\n  return maybeThenable;\n}\nfunction checkDidRenderIdHook() {\n  var didRenderIdHook = 0 !== localIdCounter;\n  localIdCounter = 0;\n  return didRenderIdHook;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.flags &= -2053;\n  current.lanes &= ~lanes;\n}\nfunction resetHooksOnUnwind(workInProgress) {\n  if (didScheduleRenderPhaseUpdate) {\n    for (\n      workInProgress = workInProgress.memoizedState;\n      null !== workInProgress;\n\n    ) {\n      var queue = workInProgress.queue;\n      null !== queue && (queue.pending = null);\n      workInProgress = workInProgress.next;\n    }\n    didScheduleRenderPhaseUpdate = !1;\n  }\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber$1 = null;\n  didScheduleRenderPhaseUpdateDuringThisPass = !1;\n  thenableIndexCounter = localIdCounter = 0;\n  thenableState = null;\n}\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n  null === workInProgressHook\n    ? (currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook)\n    : (workInProgressHook = workInProgressHook.next = hook);\n  return workInProgressHook;\n}\nfunction updateWorkInProgressHook() {\n  if (null === currentHook) {\n    var nextCurrentHook = currentlyRenderingFiber$1.alternate;\n    nextCurrentHook =\n      null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;\n  } else nextCurrentHook = currentHook.next;\n  var nextWorkInProgressHook =\n    null === workInProgressHook\n      ? currentlyRenderingFiber$1.memoizedState\n      : workInProgressHook.next;\n  if (null !== nextWorkInProgressHook)\n    (workInProgressHook = nextWorkInProgressHook),\n      (currentHook = nextCurrentHook);\n  else {\n    if (null === nextCurrentHook) {\n      if (null === currentlyRenderingFiber$1.alternate)\n        throw Error(formatProdErrorMessage(467));\n      throw Error(formatProdErrorMessage(310));\n    }\n    currentHook = nextCurrentHook;\n    nextCurrentHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n    null === workInProgressHook\n      ? (currentlyRenderingFiber$1.memoizedState = workInProgressHook =\n          nextCurrentHook)\n      : (workInProgressHook = workInProgressHook.next = nextCurrentHook);\n  }\n  return workInProgressHook;\n}\nvar createFunctionComponentUpdateQueue;\ncreateFunctionComponentUpdateQueue = function () {\n  return { lastEffect: null, events: null, stores: null, memoCache: null };\n};\nfunction useThenable(thenable) {\n  var index = thenableIndexCounter;\n  thenableIndexCounter += 1;\n  null === thenableState && (thenableState = []);\n  thenable = trackUsedThenable(thenableState, thenable, index);\n  index = currentlyRenderingFiber$1;\n  null ===\n    (null === workInProgressHook\n      ? index.memoizedState\n      : workInProgressHook.next) &&\n    ((index = index.alternate),\n    (ReactSharedInternals.H =\n      null === index || null === index.memoizedState\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate));\n  return thenable;\n}\nfunction use(usable) {\n  if (null !== usable && \"object\" === typeof usable) {\n    if (\"function\" === typeof usable.then) return useThenable(usable);\n    if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);\n  }\n  throw Error(formatProdErrorMessage(438, String(usable)));\n}\nfunction useMemoCache(size) {\n  var memoCache = null,\n    updateQueue = currentlyRenderingFiber$1.updateQueue;\n  null !== updateQueue && (memoCache = updateQueue.memoCache);\n  if (null == memoCache) {\n    var current = currentlyRenderingFiber$1.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      null !== current &&\n        ((current = current.memoCache),\n        null != current &&\n          (memoCache = {\n            data: current.data.map(function (array) {\n              return array.slice();\n            }),\n            index: 0\n          })));\n  }\n  null == memoCache && (memoCache = { data: [], index: 0 });\n  null === updateQueue &&\n    ((updateQueue = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber$1.updateQueue = updateQueue));\n  updateQueue.memoCache = memoCache;\n  updateQueue = memoCache.data[memoCache.index];\n  if (void 0 === updateQueue)\n    for (\n      updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0;\n      current < size;\n      current++\n    )\n      updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;\n  memoCache.index++;\n  return updateQueue;\n}\nfunction basicStateReducer(state, action) {\n  return \"function\" === typeof action ? action(state) : action;\n}\nfunction updateReducer(reducer) {\n  var hook = updateWorkInProgressHook();\n  return updateReducerImpl(hook, currentHook, reducer);\n}\nfunction updateReducerImpl(hook, current, reducer) {\n  var queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var baseQueue = hook.baseQueue,\n    pendingQueue = queue.pending;\n  if (null !== pendingQueue) {\n    if (null !== baseQueue) {\n      var baseFirst = baseQueue.next;\n      baseQueue.next = pendingQueue.next;\n      pendingQueue.next = baseFirst;\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n  pendingQueue = hook.baseState;\n  if (null === baseQueue) hook.memoizedState = pendingQueue;\n  else {\n    current = baseQueue.next;\n    var newBaseQueueFirst = (baseFirst = null),\n      newBaseQueueLast = null,\n      update = current,\n      didReadFromEntangledAsyncAction$54 = !1;\n    do {\n      var updateLane = update.lane & -536870913;\n      if (\n        updateLane !== update.lane\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        var revertLane = update.revertLane;\n        if (0 === revertLane)\n          null !== newBaseQueueLast &&\n            (newBaseQueueLast = newBaseQueueLast.next =\n              {\n                lane: 0,\n                revertLane: 0,\n                action: update.action,\n                hasEagerState: update.hasEagerState,\n                eagerState: update.eagerState,\n                next: null\n              }),\n            updateLane === currentEntangledLane &&\n              (didReadFromEntangledAsyncAction$54 = !0);\n        else if ((renderLanes & revertLane) === revertLane) {\n          update = update.next;\n          revertLane === currentEntangledLane &&\n            (didReadFromEntangledAsyncAction$54 = !0);\n          continue;\n        } else\n          (updateLane = {\n            lane: 0,\n            revertLane: update.revertLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null\n          }),\n            null === newBaseQueueLast\n              ? ((newBaseQueueFirst = newBaseQueueLast = updateLane),\n                (baseFirst = pendingQueue))\n              : (newBaseQueueLast = newBaseQueueLast.next = updateLane),\n            (currentlyRenderingFiber$1.lanes |= revertLane),\n            (workInProgressRootSkippedLanes |= revertLane);\n        updateLane = update.action;\n        shouldDoubleInvokeUserFnsInHooksDEV &&\n          reducer(pendingQueue, updateLane);\n        pendingQueue = update.hasEagerState\n          ? update.eagerState\n          : reducer(pendingQueue, updateLane);\n      } else\n        (revertLane = {\n          lane: updateLane,\n          revertLane: update.revertLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null\n        }),\n          null === newBaseQueueLast\n            ? ((newBaseQueueFirst = newBaseQueueLast = revertLane),\n              (baseFirst = pendingQueue))\n            : (newBaseQueueLast = newBaseQueueLast.next = revertLane),\n          (currentlyRenderingFiber$1.lanes |= updateLane),\n          (workInProgressRootSkippedLanes |= updateLane);\n      update = update.next;\n    } while (null !== update && update !== current);\n    null === newBaseQueueLast\n      ? (baseFirst = pendingQueue)\n      : (newBaseQueueLast.next = newBaseQueueFirst);\n    if (\n      !objectIs(pendingQueue, hook.memoizedState) &&\n      ((didReceiveUpdate = !0),\n      didReadFromEntangledAsyncAction$54 &&\n        ((reducer = currentEntangledActionThenable), null !== reducer))\n    )\n      throw reducer;\n    hook.memoizedState = pendingQueue;\n    hook.baseState = baseFirst;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = pendingQueue;\n  }\n  null === baseQueue && (queue.lanes = 0);\n  return [hook.memoizedState, queue.dispatch];\n}\nfunction rerenderReducer(reducer) {\n  var hook = updateWorkInProgressHook(),\n    queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var dispatch = queue.dispatch,\n    lastRenderPhaseUpdate = queue.pending,\n    newState = hook.memoizedState;\n  if (null !== lastRenderPhaseUpdate) {\n    queue.pending = null;\n    var update = (lastRenderPhaseUpdate = lastRenderPhaseUpdate.next);\n    do (newState = reducer(newState, update.action)), (update = update.next);\n    while (update !== lastRenderPhaseUpdate);\n    objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);\n    hook.memoizedState = newState;\n    null === hook.baseQueue && (hook.baseState = newState);\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1,\n    hook = updateWorkInProgressHook(),\n    isHydrating$jscomp$0 = isHydrating;\n  if (isHydrating$jscomp$0) {\n    if (void 0 === getServerSnapshot) throw Error(formatProdErrorMessage(407));\n    getServerSnapshot = getServerSnapshot();\n  } else getServerSnapshot = getSnapshot();\n  var snapshotChanged = !objectIs(\n    (currentHook || hook).memoizedState,\n    getServerSnapshot\n  );\n  snapshotChanged &&\n    ((hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0));\n  hook = hook.queue;\n  updateEffect(subscribeToStore.bind(null, fiber, hook, subscribe), [\n    subscribe\n  ]);\n  if (\n    hook.getSnapshot !== getSnapshot ||\n    snapshotChanged ||\n    (null !== workInProgressHook && workInProgressHook.memoizedState.tag & 1)\n  ) {\n    fiber.flags |= 2048;\n    pushEffect(\n      9,\n      updateStoreInstance.bind(\n        null,\n        fiber,\n        hook,\n        getServerSnapshot,\n        getSnapshot\n      ),\n      { destroy: void 0 },\n      null\n    );\n    if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));\n    isHydrating$jscomp$0 ||\n      0 !== (renderLanes & 60) ||\n      pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n  }\n  return getServerSnapshot;\n}\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n  fiber.flags |= 16384;\n  fiber = { getSnapshot: getSnapshot, value: renderedSnapshot };\n  getSnapshot = currentlyRenderingFiber$1.updateQueue;\n  null === getSnapshot\n    ? ((getSnapshot = createFunctionComponentUpdateQueue()),\n      (currentlyRenderingFiber$1.updateQueue = getSnapshot),\n      (getSnapshot.stores = [fiber]))\n    : ((renderedSnapshot = getSnapshot.stores),\n      null === renderedSnapshot\n        ? (getSnapshot.stores = [fiber])\n        : renderedSnapshot.push(fiber));\n}\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot;\n  checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n}\nfunction subscribeToStore(fiber, inst, subscribe) {\n  return subscribe(function () {\n    checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n  });\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction forceStoreRerender(fiber) {\n  var root = enqueueConcurrentRenderForLane(fiber, 2);\n  null !== root && scheduleUpdateOnFiber(root, fiber, 2);\n}\nfunction mountStateImpl(initialState) {\n  var hook = mountWorkInProgressHook();\n  if (\"function\" === typeof initialState) {\n    var initialStateInitializer = initialState;\n    initialState = initialStateInitializer();\n    if (shouldDoubleInvokeUserFnsInHooksDEV) {\n      setIsStrictModeForDevtools(!0);\n      try {\n        initialStateInitializer();\n      } finally {\n        setIsStrictModeForDevtools(!1);\n      }\n    }\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  hook.queue = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  return hook;\n}\nfunction updateOptimisticImpl(hook, current, passthrough, reducer) {\n  hook.baseState = passthrough;\n  return updateReducerImpl(\n    hook,\n    currentHook,\n    \"function\" === typeof reducer ? reducer : basicStateReducer\n  );\n}\nfunction dispatchActionState(\n  fiber,\n  actionQueue,\n  setPendingState,\n  setState,\n  payload\n) {\n  if (isRenderPhaseUpdate(fiber)) throw Error(formatProdErrorMessage(485));\n  fiber = actionQueue.action;\n  if (null !== fiber) {\n    var actionNode = {\n      payload: payload,\n      action: fiber,\n      next: null,\n      isTransition: !0,\n      status: \"pending\",\n      value: null,\n      reason: null,\n      listeners: [],\n      then: function (listener) {\n        actionNode.listeners.push(listener);\n      }\n    };\n    null !== ReactSharedInternals.T\n      ? setPendingState(!0)\n      : (actionNode.isTransition = !1);\n    setState(actionNode);\n    setPendingState = actionQueue.pending;\n    null === setPendingState\n      ? ((actionNode.next = actionQueue.pending = actionNode),\n        runActionStateAction(actionQueue, actionNode))\n      : ((actionNode.next = setPendingState.next),\n        (actionQueue.pending = setPendingState.next = actionNode));\n  }\n}\nfunction runActionStateAction(actionQueue, node) {\n  var action = node.action,\n    payload = node.payload,\n    prevState = actionQueue.state;\n  if (node.isTransition) {\n    var prevTransition = ReactSharedInternals.T,\n      currentTransition = {};\n    ReactSharedInternals.T = currentTransition;\n    try {\n      var returnValue = action(prevState, payload),\n        onStartTransitionFinish = ReactSharedInternals.S;\n      null !== onStartTransitionFinish &&\n        onStartTransitionFinish(currentTransition, returnValue);\n      handleActionReturnValue(actionQueue, node, returnValue);\n    } catch (error) {\n      onActionError(actionQueue, node, error);\n    } finally {\n      ReactSharedInternals.T = prevTransition;\n    }\n  } else\n    try {\n      (prevTransition = action(prevState, payload)),\n        handleActionReturnValue(actionQueue, node, prevTransition);\n    } catch (error$60) {\n      onActionError(actionQueue, node, error$60);\n    }\n}\nfunction handleActionReturnValue(actionQueue, node, returnValue) {\n  null !== returnValue &&\n  \"object\" === typeof returnValue &&\n  \"function\" === typeof returnValue.then\n    ? returnValue.then(\n        function (nextState) {\n          onActionSuccess(actionQueue, node, nextState);\n        },\n        function (error) {\n          return onActionError(actionQueue, node, error);\n        }\n      )\n    : onActionSuccess(actionQueue, node, returnValue);\n}\nfunction onActionSuccess(actionQueue, actionNode, nextState) {\n  actionNode.status = \"fulfilled\";\n  actionNode.value = nextState;\n  notifyActionListeners(actionNode);\n  actionQueue.state = nextState;\n  actionNode = actionQueue.pending;\n  null !== actionNode &&\n    ((nextState = actionNode.next),\n    nextState === actionNode\n      ? (actionQueue.pending = null)\n      : ((nextState = nextState.next),\n        (actionNode.next = nextState),\n        runActionStateAction(actionQueue, nextState)));\n}\nfunction onActionError(actionQueue, actionNode, error) {\n  var last = actionQueue.pending;\n  actionQueue.pending = null;\n  if (null !== last) {\n    last = last.next;\n    do\n      (actionNode.status = \"rejected\"),\n        (actionNode.reason = error),\n        notifyActionListeners(actionNode),\n        (actionNode = actionNode.next);\n    while (actionNode !== last);\n  }\n  actionQueue.action = null;\n}\nfunction notifyActionListeners(actionNode) {\n  actionNode = actionNode.listeners;\n  for (var i = 0; i < actionNode.length; i++) (0, actionNode[i])();\n}\nfunction actionStateReducer(oldState, newState) {\n  return newState;\n}\nfunction mountActionState(action, initialStateProp) {\n  if (isHydrating) {\n    var ssrFormState = workInProgressRoot.formState;\n    if (null !== ssrFormState) {\n      a: {\n        var JSCompiler_inline_result = currentlyRenderingFiber$1;\n        if (isHydrating) {\n          if (nextHydratableInstance) {\n            b: {\n              var JSCompiler_inline_result$jscomp$0 = nextHydratableInstance;\n              for (\n                var inRootOrSingleton = rootOrSingletonContext;\n                8 !== JSCompiler_inline_result$jscomp$0.nodeType;\n\n              ) {\n                if (!inRootOrSingleton) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n                JSCompiler_inline_result$jscomp$0 = getNextHydratable(\n                  JSCompiler_inline_result$jscomp$0.nextSibling\n                );\n                if (null === JSCompiler_inline_result$jscomp$0) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n              }\n              inRootOrSingleton = JSCompiler_inline_result$jscomp$0.data;\n              JSCompiler_inline_result$jscomp$0 =\n                \"F!\" === inRootOrSingleton || \"F\" === inRootOrSingleton\n                  ? JSCompiler_inline_result$jscomp$0\n                  : null;\n            }\n            if (JSCompiler_inline_result$jscomp$0) {\n              nextHydratableInstance = getNextHydratable(\n                JSCompiler_inline_result$jscomp$0.nextSibling\n              );\n              JSCompiler_inline_result =\n                \"F!\" === JSCompiler_inline_result$jscomp$0.data;\n              break a;\n            }\n          }\n          throwOnHydrationMismatch(JSCompiler_inline_result);\n        }\n        JSCompiler_inline_result = !1;\n      }\n      JSCompiler_inline_result && (initialStateProp = ssrFormState[0]);\n    }\n  }\n  ssrFormState = mountWorkInProgressHook();\n  ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;\n  JSCompiler_inline_result = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: actionStateReducer,\n    lastRenderedState: initialStateProp\n  };\n  ssrFormState.queue = JSCompiler_inline_result;\n  ssrFormState = dispatchSetState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    JSCompiler_inline_result\n  );\n  JSCompiler_inline_result.dispatch = ssrFormState;\n  JSCompiler_inline_result = mountStateImpl(!1);\n  inRootOrSingleton = dispatchOptimisticSetState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    !1,\n    JSCompiler_inline_result.queue\n  );\n  JSCompiler_inline_result = mountWorkInProgressHook();\n  JSCompiler_inline_result$jscomp$0 = {\n    state: initialStateProp,\n    dispatch: null,\n    action: action,\n    pending: null\n  };\n  JSCompiler_inline_result.queue = JSCompiler_inline_result$jscomp$0;\n  ssrFormState = dispatchActionState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    JSCompiler_inline_result$jscomp$0,\n    inRootOrSingleton,\n    ssrFormState\n  );\n  JSCompiler_inline_result$jscomp$0.dispatch = ssrFormState;\n  JSCompiler_inline_result.memoizedState = action;\n  return [initialStateProp, ssrFormState, !1];\n}\nfunction updateActionState(action) {\n  var stateHook = updateWorkInProgressHook();\n  return updateActionStateImpl(stateHook, currentHook, action);\n}\nfunction updateActionStateImpl(stateHook, currentStateHook, action) {\n  currentStateHook = updateReducerImpl(\n    stateHook,\n    currentStateHook,\n    actionStateReducer\n  )[0];\n  stateHook = updateReducer(basicStateReducer)[0];\n  currentStateHook =\n    \"object\" === typeof currentStateHook &&\n    null !== currentStateHook &&\n    \"function\" === typeof currentStateHook.then\n      ? useThenable(currentStateHook)\n      : currentStateHook;\n  var actionQueueHook = updateWorkInProgressHook(),\n    actionQueue = actionQueueHook.queue,\n    dispatch = actionQueue.dispatch;\n  action !== actionQueueHook.memoizedState &&\n    ((currentlyRenderingFiber$1.flags |= 2048),\n    pushEffect(\n      9,\n      actionStateActionEffect.bind(null, actionQueue, action),\n      { destroy: void 0 },\n      null\n    ));\n  return [currentStateHook, dispatch, stateHook];\n}\nfunction actionStateActionEffect(actionQueue, action) {\n  actionQueue.action = action;\n}\nfunction rerenderActionState(action) {\n  var stateHook = updateWorkInProgressHook(),\n    currentStateHook = currentHook;\n  if (null !== currentStateHook)\n    return updateActionStateImpl(stateHook, currentStateHook, action);\n  updateWorkInProgressHook();\n  stateHook = stateHook.memoizedState;\n  currentStateHook = updateWorkInProgressHook();\n  var dispatch = currentStateHook.queue.dispatch;\n  currentStateHook.memoizedState = action;\n  return [stateHook, dispatch, !1];\n}\nfunction pushEffect(tag, create, inst, deps) {\n  tag = { tag: tag, create: create, inst: inst, deps: deps, next: null };\n  create = currentlyRenderingFiber$1.updateQueue;\n  null === create &&\n    ((create = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber$1.updateQueue = create));\n  inst = create.lastEffect;\n  null === inst\n    ? (create.lastEffect = tag.next = tag)\n    : ((deps = inst.next),\n      (inst.next = tag),\n      (tag.next = deps),\n      (create.lastEffect = tag));\n  return tag;\n}\nfunction updateRef() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = mountWorkInProgressHook();\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    1 | hookFlags,\n    create,\n    { destroy: void 0 },\n    void 0 === deps ? null : deps\n  );\n}\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var inst = hook.memoizedState.inst;\n  null !== currentHook &&\n  null !== deps &&\n  areHookInputsEqual(deps, currentHook.memoizedState.deps)\n    ? (hook.memoizedState = pushEffect(hookFlags, create, inst, deps))\n    : ((currentlyRenderingFiber$1.flags |= fiberFlags),\n      (hook.memoizedState = pushEffect(1 | hookFlags, create, inst, deps)));\n}\nfunction mountEffect(create, deps) {\n  mountEffectImpl(8390656, 8, create, deps);\n}\nfunction updateEffect(create, deps) {\n  updateEffectImpl(2048, 8, create, deps);\n}\nfunction updateInsertionEffect(create, deps) {\n  return updateEffectImpl(4, 2, create, deps);\n}\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(4, 4, create, deps);\n}\nfunction imperativeHandleEffect(create, ref) {\n  if (\"function\" === typeof ref) {\n    create = create();\n    var refCleanup = ref(create);\n    return function () {\n      \"function\" === typeof refCleanup ? refCleanup() : ref(null);\n    };\n  }\n  if (null !== ref && void 0 !== ref)\n    return (\n      (create = create()),\n      (ref.current = create),\n      function () {\n        ref.current = null;\n      }\n    );\n}\nfunction updateImperativeHandle(ref, create, deps) {\n  deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n  updateEffectImpl(4, 4, imperativeHandleEffect.bind(null, create, ref), deps);\n}\nfunction mountDebugValue() {}\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  hook.memoizedState = [callback, deps];\n  return callback;\n}\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  prevState = nextCreate();\n  if (shouldDoubleInvokeUserFnsInHooksDEV) {\n    setIsStrictModeForDevtools(!0);\n    try {\n      nextCreate();\n    } finally {\n      setIsStrictModeForDevtools(!1);\n    }\n  }\n  hook.memoizedState = [prevState, deps];\n  return prevState;\n}\nfunction mountDeferredValueImpl(hook, value, initialValue) {\n  if (void 0 === initialValue || 0 !== (renderLanes & 1073741824))\n    return (hook.memoizedState = value);\n  hook.memoizedState = initialValue;\n  hook = requestDeferredLane();\n  currentlyRenderingFiber$1.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return initialValue;\n}\nfunction updateDeferredValueImpl(hook, prevValue, value, initialValue) {\n  if (objectIs(value, prevValue)) return value;\n  if (null !== currentTreeHiddenStackCursor.current)\n    return (\n      (hook = mountDeferredValueImpl(hook, value, initialValue)),\n      objectIs(hook, prevValue) || (didReceiveUpdate = !0),\n      hook\n    );\n  if (0 === (renderLanes & 42))\n    return (didReceiveUpdate = !0), (hook.memoizedState = value);\n  hook = requestDeferredLane();\n  currentlyRenderingFiber$1.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return prevValue;\n}\nfunction startTransition(fiber, queue, pendingState, finishedState, callback) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  ReactDOMSharedInternals.p =\n    0 !== previousPriority && 8 > previousPriority ? previousPriority : 8;\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  dispatchOptimisticSetState(fiber, !1, queue, pendingState);\n  try {\n    var returnValue = callback(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    if (\n      null !== returnValue &&\n      \"object\" === typeof returnValue &&\n      \"function\" === typeof returnValue.then\n    ) {\n      var thenableForFinishedState = chainThenableValue(\n        returnValue,\n        finishedState\n      );\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        thenableForFinishedState,\n        requestUpdateLane(fiber)\n      );\n    } else\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        finishedState,\n        requestUpdateLane(fiber)\n      );\n  } catch (error) {\n    dispatchSetStateInternal(\n      fiber,\n      queue,\n      { then: function () {}, status: \"rejected\", reason: error },\n      requestUpdateLane()\n    );\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction noop$2() {}\nfunction startHostTransition(formFiber, pendingState, action, formData) {\n  if (5 !== formFiber.tag) throw Error(formatProdErrorMessage(476));\n  var queue = ensureFormComponentIsStateful(formFiber).queue;\n  startTransition(\n    formFiber,\n    queue,\n    pendingState,\n    sharedNotPendingObject,\n    null === action\n      ? noop$2\n      : function () {\n          requestFormReset$1(formFiber);\n          return action(formData);\n        }\n  );\n}\nfunction ensureFormComponentIsStateful(formFiber) {\n  var existingStateHook = formFiber.memoizedState;\n  if (null !== existingStateHook) return existingStateHook;\n  existingStateHook = {\n    memoizedState: sharedNotPendingObject,\n    baseState: sharedNotPendingObject,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: sharedNotPendingObject\n    },\n    next: null\n  };\n  var initialResetState = {};\n  existingStateHook.next = {\n    memoizedState: initialResetState,\n    baseState: initialResetState,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: initialResetState\n    },\n    next: null\n  };\n  formFiber.memoizedState = existingStateHook;\n  formFiber = formFiber.alternate;\n  null !== formFiber && (formFiber.memoizedState = existingStateHook);\n  return existingStateHook;\n}\nfunction requestFormReset$1(formFiber) {\n  var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;\n  dispatchSetStateInternal(formFiber, resetStateQueue, {}, requestUpdateLane());\n}\nfunction useHostTransitionStatus() {\n  return readContext(HostTransitionContext);\n}\nfunction updateId() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction updateRefresh() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction refreshCache(fiber) {\n  for (var provider = fiber.return; null !== provider; ) {\n    switch (provider.tag) {\n      case 24:\n      case 3:\n        var lane = requestUpdateLane();\n        fiber = createUpdate(lane);\n        var root$63 = enqueueUpdate(provider, fiber, lane);\n        null !== root$63 &&\n          (scheduleUpdateOnFiber(root$63, provider, lane),\n          entangleTransitions(root$63, provider, lane));\n        provider = { cache: createCache() };\n        fiber.payload = provider;\n        return;\n    }\n    provider = provider.return;\n  }\n}\nfunction dispatchReducerAction(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  action = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  isRenderPhaseUpdate(fiber)\n    ? enqueueRenderPhaseUpdate(queue, action)\n    : ((action = enqueueConcurrentHookUpdate(fiber, queue, action, lane)),\n      null !== action &&\n        (scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane)));\n}\nfunction dispatchSetState(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  dispatchSetStateInternal(fiber, queue, action, lane);\n}\nfunction dispatchSetStateInternal(fiber, queue, action, lane) {\n  var update = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);\n  else {\n    var alternate = fiber.alternate;\n    if (\n      0 === fiber.lanes &&\n      (null === alternate || 0 === alternate.lanes) &&\n      ((alternate = queue.lastRenderedReducer), null !== alternate)\n    )\n      try {\n        var currentState = queue.lastRenderedState,\n          eagerState = alternate(currentState, action);\n        update.hasEagerState = !0;\n        update.eagerState = eagerState;\n        if (objectIs(eagerState, currentState))\n          return (\n            enqueueUpdate$1(fiber, queue, update, 0),\n            null === workInProgressRoot && finishQueueingConcurrentUpdates(),\n            !1\n          );\n      } catch (error) {\n      } finally {\n      }\n    action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n    if (null !== action)\n      return (\n        scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane),\n        !0\n      );\n  }\n  return !1;\n}\nfunction dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {\n  action = {\n    lane: 2,\n    revertLane: requestTransitionLane(),\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) {\n    if (throwIfDuringRender) throw Error(formatProdErrorMessage(479));\n  } else\n    (throwIfDuringRender = enqueueConcurrentHookUpdate(\n      fiber,\n      queue,\n      action,\n      2\n    )),\n      null !== throwIfDuringRender &&\n        scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);\n}\nfunction isRenderPhaseUpdate(fiber) {\n  var alternate = fiber.alternate;\n  return (\n    fiber === currentlyRenderingFiber$1 ||\n    (null !== alternate && alternate === currentlyRenderingFiber$1)\n  );\n}\nfunction enqueueRenderPhaseUpdate(queue, update) {\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate =\n    !0;\n  var pending = queue.pending;\n  null === pending\n    ? (update.next = update)\n    : ((update.next = pending.next), (pending.next = update));\n  queue.pending = update;\n}\nfunction entangleTransitionUpdate(root, queue, lane) {\n  if (0 !== (lane & 4194176)) {\n    var queueLanes = queue.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    queue.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nvar ContextOnlyDispatcher = {\n  readContext: readContext,\n  use: use,\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useInsertionEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useSyncExternalStore: throwInvalidHookError,\n  useId: throwInvalidHookError\n};\nContextOnlyDispatcher.useCacheRefresh = throwInvalidHookError;\nContextOnlyDispatcher.useMemoCache = throwInvalidHookError;\nContextOnlyDispatcher.useHostTransitionStatus = throwInvalidHookError;\nContextOnlyDispatcher.useFormState = throwInvalidHookError;\nContextOnlyDispatcher.useActionState = throwInvalidHookError;\nContextOnlyDispatcher.useOptimistic = throwInvalidHookError;\nvar HooksDispatcherOnMount = {\n  readContext: readContext,\n  use: use,\n  useCallback: function (callback, deps) {\n    mountWorkInProgressHook().memoizedState = [\n      callback,\n      void 0 === deps ? null : deps\n    ];\n    return callback;\n  },\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: function (ref, create, deps) {\n    deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n    mountEffectImpl(\n      4194308,\n      4,\n      imperativeHandleEffect.bind(null, create, ref),\n      deps\n    );\n  },\n  useLayoutEffect: function (create, deps) {\n    return mountEffectImpl(4194308, 4, create, deps);\n  },\n  useInsertionEffect: function (create, deps) {\n    mountEffectImpl(4, 2, create, deps);\n  },\n  useMemo: function (nextCreate, deps) {\n    var hook = mountWorkInProgressHook();\n    deps = void 0 === deps ? null : deps;\n    var nextValue = nextCreate();\n    if (shouldDoubleInvokeUserFnsInHooksDEV) {\n      setIsStrictModeForDevtools(!0);\n      try {\n        nextCreate();\n      } finally {\n        setIsStrictModeForDevtools(!1);\n      }\n    }\n    hook.memoizedState = [nextValue, deps];\n    return nextValue;\n  },\n  useReducer: function (reducer, initialArg, init) {\n    var hook = mountWorkInProgressHook();\n    if (void 0 !== init) {\n      var initialState = init(initialArg);\n      if (shouldDoubleInvokeUserFnsInHooksDEV) {\n        setIsStrictModeForDevtools(!0);\n        try {\n          init(initialArg);\n        } finally {\n          setIsStrictModeForDevtools(!1);\n        }\n      }\n    } else initialState = initialArg;\n    hook.memoizedState = hook.baseState = initialState;\n    reducer = {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: reducer,\n      lastRenderedState: initialState\n    };\n    hook.queue = reducer;\n    reducer = reducer.dispatch = dispatchReducerAction.bind(\n      null,\n      currentlyRenderingFiber$1,\n      reducer\n    );\n    return [hook.memoizedState, reducer];\n  },\n  useRef: function (initialValue) {\n    var hook = mountWorkInProgressHook();\n    initialValue = { current: initialValue };\n    return (hook.memoizedState = initialValue);\n  },\n  useState: function (initialState) {\n    initialState = mountStateImpl(initialState);\n    var queue = initialState.queue,\n      dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);\n    queue.dispatch = dispatch;\n    return [initialState.memoizedState, dispatch];\n  },\n  useDebugValue: mountDebugValue,\n  useDeferredValue: function (value, initialValue) {\n    var hook = mountWorkInProgressHook();\n    return mountDeferredValueImpl(hook, value, initialValue);\n  },\n  useTransition: function () {\n    var stateHook = mountStateImpl(!1);\n    stateHook = startTransition.bind(\n      null,\n      currentlyRenderingFiber$1,\n      stateHook.queue,\n      !0,\n      !1\n    );\n    mountWorkInProgressHook().memoizedState = stateHook;\n    return [!1, stateHook];\n  },\n  useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n    var fiber = currentlyRenderingFiber$1,\n      hook = mountWorkInProgressHook();\n    if (isHydrating) {\n      if (void 0 === getServerSnapshot)\n        throw Error(formatProdErrorMessage(407));\n      getServerSnapshot = getServerSnapshot();\n    } else {\n      getServerSnapshot = getSnapshot();\n      if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));\n      0 !== (workInProgressRootRenderLanes & 60) ||\n        pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n    }\n    hook.memoizedState = getServerSnapshot;\n    var inst = { value: getServerSnapshot, getSnapshot: getSnapshot };\n    hook.queue = inst;\n    mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [\n      subscribe\n    ]);\n    fiber.flags |= 2048;\n    pushEffect(\n      9,\n      updateStoreInstance.bind(\n        null,\n        fiber,\n        inst,\n        getServerSnapshot,\n        getSnapshot\n      ),\n      { destroy: void 0 },\n      null\n    );\n    return getServerSnapshot;\n  },\n  useId: function () {\n    var hook = mountWorkInProgressHook(),\n      identifierPrefix = workInProgressRoot.identifierPrefix;\n    if (isHydrating) {\n      var JSCompiler_inline_result = treeContextOverflow;\n      var idWithLeadingBit = treeContextId;\n      JSCompiler_inline_result =\n        (\n          idWithLeadingBit & ~(1 << (32 - clz32(idWithLeadingBit) - 1))\n        ).toString(32) + JSCompiler_inline_result;\n      identifierPrefix =\n        \":\" + identifierPrefix + \"R\" + JSCompiler_inline_result;\n      JSCompiler_inline_result = localIdCounter++;\n      0 < JSCompiler_inline_result &&\n        (identifierPrefix += \"H\" + JSCompiler_inline_result.toString(32));\n      identifierPrefix += \":\";\n    } else\n      (JSCompiler_inline_result = globalClientIdCounter++),\n        (identifierPrefix =\n          \":\" +\n          identifierPrefix +\n          \"r\" +\n          JSCompiler_inline_result.toString(32) +\n          \":\");\n    return (hook.memoizedState = identifierPrefix);\n  },\n  useCacheRefresh: function () {\n    return (mountWorkInProgressHook().memoizedState = refreshCache.bind(\n      null,\n      currentlyRenderingFiber$1\n    ));\n  }\n};\nHooksDispatcherOnMount.useMemoCache = useMemoCache;\nHooksDispatcherOnMount.useHostTransitionStatus = useHostTransitionStatus;\nHooksDispatcherOnMount.useFormState = mountActionState;\nHooksDispatcherOnMount.useActionState = mountActionState;\nHooksDispatcherOnMount.useOptimistic = function (passthrough) {\n  var hook = mountWorkInProgressHook();\n  hook.memoizedState = hook.baseState = passthrough;\n  var queue = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: null,\n    lastRenderedState: null\n  };\n  hook.queue = queue;\n  hook = dispatchOptimisticSetState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    !0,\n    queue\n  );\n  queue.dispatch = hook;\n  return [passthrough, hook];\n};\nvar HooksDispatcherOnUpdate = {\n  readContext: readContext,\n  use: use,\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useInsertionEffect: updateInsertionEffect,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: function () {\n    return updateReducer(basicStateReducer);\n  },\n  useDebugValue: mountDebugValue,\n  useDeferredValue: function (value, initialValue) {\n    var hook = updateWorkInProgressHook();\n    return updateDeferredValueImpl(\n      hook,\n      currentHook.memoizedState,\n      value,\n      initialValue\n    );\n  },\n  useTransition: function () {\n    var booleanOrThenable = updateReducer(basicStateReducer)[0],\n      start = updateWorkInProgressHook().memoizedState;\n    return [\n      \"boolean\" === typeof booleanOrThenable\n        ? booleanOrThenable\n        : useThenable(booleanOrThenable),\n      start\n    ];\n  },\n  useSyncExternalStore: updateSyncExternalStore,\n  useId: updateId\n};\nHooksDispatcherOnUpdate.useCacheRefresh = updateRefresh;\nHooksDispatcherOnUpdate.useMemoCache = useMemoCache;\nHooksDispatcherOnUpdate.useHostTransitionStatus = useHostTransitionStatus;\nHooksDispatcherOnUpdate.useFormState = updateActionState;\nHooksDispatcherOnUpdate.useActionState = updateActionState;\nHooksDispatcherOnUpdate.useOptimistic = function (passthrough, reducer) {\n  var hook = updateWorkInProgressHook();\n  return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n};\nvar HooksDispatcherOnRerender = {\n  readContext: readContext,\n  use: use,\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useInsertionEffect: updateInsertionEffect,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: rerenderReducer,\n  useRef: updateRef,\n  useState: function () {\n    return rerenderReducer(basicStateReducer);\n  },\n  useDebugValue: mountDebugValue,\n  useDeferredValue: function (value, initialValue) {\n    var hook = updateWorkInProgressHook();\n    return null === currentHook\n      ? mountDeferredValueImpl(hook, value, initialValue)\n      : updateDeferredValueImpl(\n          hook,\n          currentHook.memoizedState,\n          value,\n          initialValue\n        );\n  },\n  useTransition: function () {\n    var booleanOrThenable = rerenderReducer(basicStateReducer)[0],\n      start = updateWorkInProgressHook().memoizedState;\n    return [\n      \"boolean\" === typeof booleanOrThenable\n        ? booleanOrThenable\n        : useThenable(booleanOrThenable),\n      start\n    ];\n  },\n  useSyncExternalStore: updateSyncExternalStore,\n  useId: updateId\n};\nHooksDispatcherOnRerender.useCacheRefresh = updateRefresh;\nHooksDispatcherOnRerender.useMemoCache = useMemoCache;\nHooksDispatcherOnRerender.useHostTransitionStatus = useHostTransitionStatus;\nHooksDispatcherOnRerender.useFormState = rerenderActionState;\nHooksDispatcherOnRerender.useActionState = rerenderActionState;\nHooksDispatcherOnRerender.useOptimistic = function (passthrough, reducer) {\n  var hook = updateWorkInProgressHook();\n  if (null !== currentHook)\n    return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n  hook.baseState = passthrough;\n  return [passthrough, hook.queue.dispatch];\n};\nfunction applyDerivedStateFromProps(\n  workInProgress,\n  ctor,\n  getDerivedStateFromProps,\n  nextProps\n) {\n  ctor = workInProgress.memoizedState;\n  getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);\n  getDerivedStateFromProps =\n    null === getDerivedStateFromProps || void 0 === getDerivedStateFromProps\n      ? ctor\n      : assign({}, ctor, getDerivedStateFromProps);\n  workInProgress.memoizedState = getDerivedStateFromProps;\n  0 === workInProgress.lanes &&\n    (workInProgress.updateQueue.baseState = getDerivedStateFromProps);\n}\nvar classComponentUpdater = {\n  isMounted: function (component) {\n    return (component = component._reactInternals)\n      ? getNearestMountedFiber(component) === component\n      : !1;\n  },\n  enqueueSetState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueReplaceState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 1;\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueForceUpdate: function (inst, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 2;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    callback = enqueueUpdate(inst, update, lane);\n    null !== callback &&\n      (scheduleUpdateOnFiber(callback, inst, lane),\n      entangleTransitions(callback, inst, lane));\n  }\n};\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext\n) {\n  workInProgress = workInProgress.stateNode;\n  return \"function\" === typeof workInProgress.shouldComponentUpdate\n    ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext)\n    : ctor.prototype && ctor.prototype.isPureReactComponent\n      ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n      : !0;\n}\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext\n) {\n  workInProgress = instance.state;\n  \"function\" === typeof instance.componentWillReceiveProps &&\n    instance.componentWillReceiveProps(newProps, nextContext);\n  \"function\" === typeof instance.UNSAFE_componentWillReceiveProps &&\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  instance.state !== workInProgress &&\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n}\nfunction resolveClassComponentProps(Component, baseProps) {\n  var newProps = baseProps;\n  if (\"ref\" in baseProps) {\n    newProps = {};\n    for (var propName in baseProps)\n      \"ref\" !== propName && (newProps[propName] = baseProps[propName]);\n  }\n  if ((Component = Component.defaultProps)) {\n    newProps === baseProps && (newProps = assign({}, newProps));\n    for (var propName$67 in Component)\n      void 0 === newProps[propName$67] &&\n        (newProps[propName$67] = Component[propName$67]);\n  }\n  return newProps;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction defaultOnUncaughtError(error) {\n  reportGlobalError(error);\n}\nfunction defaultOnCaughtError(error) {\n  console.error(error);\n}\nfunction defaultOnRecoverableError(error) {\n  reportGlobalError(error);\n}\nfunction logUncaughtError(root, errorInfo) {\n  try {\n    var onUncaughtError = root.onUncaughtError;\n    onUncaughtError(errorInfo.value, { componentStack: errorInfo.stack });\n  } catch (e$68) {\n    setTimeout(function () {\n      throw e$68;\n    });\n  }\n}\nfunction logCaughtError(root, boundary, errorInfo) {\n  try {\n    var onCaughtError = root.onCaughtError;\n    onCaughtError(errorInfo.value, {\n      componentStack: errorInfo.stack,\n      errorBoundary: 1 === boundary.tag ? boundary.stateNode : null\n    });\n  } catch (e$69) {\n    setTimeout(function () {\n      throw e$69;\n    });\n  }\n}\nfunction createRootErrorUpdate(root, errorInfo, lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  lane.payload = { element: null };\n  lane.callback = function () {\n    logUncaughtError(root, errorInfo);\n  };\n  return lane;\n}\nfunction createClassErrorUpdate(lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  return lane;\n}\nfunction initializeClassErrorUpdate(update, root, fiber, errorInfo) {\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (\"function\" === typeof getDerivedStateFromError) {\n    var error = errorInfo.value;\n    update.payload = function () {\n      return getDerivedStateFromError(error);\n    };\n    update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n    };\n  }\n  var inst = fiber.stateNode;\n  null !== inst &&\n    \"function\" === typeof inst.componentDidCatch &&\n    (update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n      \"function\" !== typeof getDerivedStateFromError &&\n        (null === legacyErrorBoundariesThatAlreadyFailed\n          ? (legacyErrorBoundariesThatAlreadyFailed = new Set([this]))\n          : legacyErrorBoundariesThatAlreadyFailed.add(this));\n      var stack = errorInfo.stack;\n      this.componentDidCatch(errorInfo.value, {\n        componentStack: null !== stack ? stack : \"\"\n      });\n    });\n}\nfunction throwException(\n  root,\n  returnFiber,\n  sourceFiber,\n  value,\n  rootRenderLanes\n) {\n  sourceFiber.flags |= 32768;\n  if (\n    null !== value &&\n    \"object\" === typeof value &&\n    \"function\" === typeof value.then\n  ) {\n    returnFiber = sourceFiber.alternate;\n    null !== returnFiber &&\n      propagateParentContextChanges(\n        returnFiber,\n        sourceFiber,\n        rootRenderLanes,\n        !0\n      );\n    sourceFiber = suspenseHandlerStackCursor.current;\n    if (null !== sourceFiber) {\n      switch (sourceFiber.tag) {\n        case 13:\n          return (\n            null === shellBoundary\n              ? renderDidSuspendDelayIfPossible()\n              : null === sourceFiber.alternate &&\n                0 === workInProgressRootExitStatus &&\n                (workInProgressRootExitStatus = 3),\n            (sourceFiber.flags &= -257),\n            (sourceFiber.flags |= 65536),\n            (sourceFiber.lanes = rootRenderLanes),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? (sourceFiber.updateQueue = new Set([value]))\n                  : returnFiber.add(value),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n        case 22:\n          return (\n            (sourceFiber.flags |= 65536),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? ((returnFiber = {\n                      transitions: null,\n                      markerInstances: null,\n                      retryQueue: new Set([value])\n                    }),\n                    (sourceFiber.updateQueue = returnFiber))\n                  : ((sourceFiber = returnFiber.retryQueue),\n                    null === sourceFiber\n                      ? (returnFiber.retryQueue = new Set([value]))\n                      : sourceFiber.add(value)),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n      }\n      throw Error(formatProdErrorMessage(435, sourceFiber.tag));\n    }\n    attachPingListener(root, value, rootRenderLanes);\n    renderDidSuspendDelayIfPossible();\n    return !1;\n  }\n  if (isHydrating)\n    return (\n      (returnFiber = suspenseHandlerStackCursor.current),\n      null !== returnFiber\n        ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256),\n          (returnFiber.flags |= 65536),\n          (returnFiber.lanes = rootRenderLanes),\n          value !== HydrationMismatchException &&\n            ((root = Error(formatProdErrorMessage(422), { cause: value })),\n            queueHydrationError(createCapturedValueAtFiber(root, sourceFiber))))\n        : (value !== HydrationMismatchException &&\n            ((returnFiber = Error(formatProdErrorMessage(423), {\n              cause: value\n            })),\n            queueHydrationError(\n              createCapturedValueAtFiber(returnFiber, sourceFiber)\n            )),\n          (root = root.current.alternate),\n          (root.flags |= 65536),\n          (rootRenderLanes &= -rootRenderLanes),\n          (root.lanes |= rootRenderLanes),\n          (value = createCapturedValueAtFiber(value, sourceFiber)),\n          (rootRenderLanes = createRootErrorUpdate(\n            root.stateNode,\n            value,\n            rootRenderLanes\n          )),\n          enqueueCapturedUpdate(root, rootRenderLanes),\n          4 !== workInProgressRootExitStatus &&\n            (workInProgressRootExitStatus = 2)),\n      !1\n    );\n  var wrapperError = Error(formatProdErrorMessage(520), { cause: value });\n  wrapperError = createCapturedValueAtFiber(wrapperError, sourceFiber);\n  null === workInProgressRootConcurrentErrors\n    ? (workInProgressRootConcurrentErrors = [wrapperError])\n    : workInProgressRootConcurrentErrors.push(wrapperError);\n  4 !== workInProgressRootExitStatus && (workInProgressRootExitStatus = 2);\n  if (null === returnFiber) return !0;\n  value = createCapturedValueAtFiber(value, sourceFiber);\n  sourceFiber = returnFiber;\n  do {\n    switch (sourceFiber.tag) {\n      case 3:\n        return (\n          (sourceFiber.flags |= 65536),\n          (root = rootRenderLanes & -rootRenderLanes),\n          (sourceFiber.lanes |= root),\n          (root = createRootErrorUpdate(sourceFiber.stateNode, value, root)),\n          enqueueCapturedUpdate(sourceFiber, root),\n          !1\n        );\n      case 1:\n        if (\n          ((returnFiber = sourceFiber.type),\n          (wrapperError = sourceFiber.stateNode),\n          0 === (sourceFiber.flags & 128) &&\n            (\"function\" === typeof returnFiber.getDerivedStateFromError ||\n              (null !== wrapperError &&\n                \"function\" === typeof wrapperError.componentDidCatch &&\n                (null === legacyErrorBoundariesThatAlreadyFailed ||\n                  !legacyErrorBoundariesThatAlreadyFailed.has(wrapperError)))))\n        )\n          return (\n            (sourceFiber.flags |= 65536),\n            (rootRenderLanes &= -rootRenderLanes),\n            (sourceFiber.lanes |= rootRenderLanes),\n            (rootRenderLanes = createClassErrorUpdate(rootRenderLanes)),\n            initializeClassErrorUpdate(\n              rootRenderLanes,\n              root,\n              sourceFiber,\n              value\n            ),\n            enqueueCapturedUpdate(sourceFiber, rootRenderLanes),\n            !1\n          );\n    }\n    sourceFiber = sourceFiber.return;\n  } while (null !== sourceFiber);\n  return !1;\n}\nvar SelectiveHydrationException = Error(formatProdErrorMessage(461)),\n  didReceiveUpdate = !1;\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  workInProgress.child =\n    null === current\n      ? mountChildFibers(workInProgress, null, nextChildren, renderLanes)\n      : reconcileChildFibers(\n          workInProgress,\n          current.child,\n          nextChildren,\n          renderLanes\n        );\n}\nfunction updateForwardRef(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  Component = Component.render;\n  var ref = workInProgress.ref;\n  if (\"ref\" in nextProps) {\n    var propsWithoutRef = {};\n    for (var key in nextProps)\n      \"ref\" !== key && (propsWithoutRef[key] = nextProps[key]);\n  } else propsWithoutRef = nextProps;\n  prepareToReadContext(workInProgress);\n  nextProps = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    propsWithoutRef,\n    ref,\n    renderLanes\n  );\n  key = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && key && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null === current) {\n    var type = Component.type;\n    if (\n      \"function\" === typeof type &&\n      !shouldConstruct(type) &&\n      void 0 === type.defaultProps &&\n      null === Component.compare\n    )\n      return (\n        (workInProgress.tag = 15),\n        (workInProgress.type = type),\n        updateSimpleMemoComponent(\n          current,\n          workInProgress,\n          type,\n          nextProps,\n          renderLanes\n        )\n      );\n    current = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes\n    );\n    current.ref = workInProgress.ref;\n    current.return = workInProgress;\n    return (workInProgress.child = current);\n  }\n  type = current.child;\n  if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n    var prevProps = type.memoizedProps;\n    Component = Component.compare;\n    Component = null !== Component ? Component : shallowEqual;\n    if (Component(prevProps, nextProps) && current.ref === workInProgress.ref)\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n  workInProgress.flags |= 1;\n  current = createWorkInProgress(type, nextProps);\n  current.ref = workInProgress.ref;\n  current.return = workInProgress;\n  return (workInProgress.child = current);\n}\nfunction updateSimpleMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null !== current) {\n    var prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref\n    )\n      if (\n        ((didReceiveUpdate = !1),\n        (workInProgress.pendingProps = nextProps = prevProps),\n        checkScheduledUpdateOrContext(current, renderLanes))\n      )\n        0 !== (current.flags & 131072) && (didReceiveUpdate = !0);\n      else\n        return (\n          (workInProgress.lanes = current.lanes),\n          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n        );\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes\n  );\n}\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    nextChildren = nextProps.children,\n    nextIsDetached = 0 !== (workInProgress.stateNode._pendingVisibility & 2),\n    prevState = null !== current ? current.memoizedState : null;\n  markRef(current, workInProgress);\n  if (\"hidden\" === nextProps.mode || nextIsDetached) {\n    if (0 !== (workInProgress.flags & 128)) {\n      nextProps =\n        null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;\n      if (null !== current) {\n        nextChildren = workInProgress.child = current.child;\n        for (nextIsDetached = 0; null !== nextChildren; )\n          (nextIsDetached =\n            nextIsDetached | nextChildren.lanes | nextChildren.childLanes),\n            (nextChildren = nextChildren.sibling);\n        workInProgress.childLanes = nextIsDetached & ~nextProps;\n      } else (workInProgress.childLanes = 0), (workInProgress.child = null);\n      return deferHiddenOffscreenComponent(\n        current,\n        workInProgress,\n        nextProps,\n        renderLanes\n      );\n    }\n    if (0 !== (renderLanes & 536870912))\n      (workInProgress.memoizedState = { baseLanes: 0, cachePool: null }),\n        null !== current &&\n          pushTransition(\n            workInProgress,\n            null !== prevState ? prevState.cachePool : null\n          ),\n        null !== prevState\n          ? pushHiddenContext(workInProgress, prevState)\n          : reuseHiddenContextOnStack(),\n        pushOffscreenSuspenseHandler(workInProgress);\n    else\n      return (\n        (workInProgress.lanes = workInProgress.childLanes = 536870912),\n        deferHiddenOffscreenComponent(\n          current,\n          workInProgress,\n          null !== prevState ? prevState.baseLanes | renderLanes : renderLanes,\n          renderLanes\n        )\n      );\n  } else\n    null !== prevState\n      ? (pushTransition(workInProgress, prevState.cachePool),\n        pushHiddenContext(workInProgress, prevState),\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (workInProgress.memoizedState = null))\n      : (null !== current && pushTransition(workInProgress, null),\n        reuseHiddenContextOnStack(),\n        reuseSuspenseHandlerOnStack(workInProgress));\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nfunction deferHiddenOffscreenComponent(\n  current,\n  workInProgress,\n  nextBaseLanes,\n  renderLanes\n) {\n  var JSCompiler_inline_result = peekCacheFromPool();\n  JSCompiler_inline_result =\n    null === JSCompiler_inline_result\n      ? null\n      : { parent: CacheContext._currentValue, pool: JSCompiler_inline_result };\n  workInProgress.memoizedState = {\n    baseLanes: nextBaseLanes,\n    cachePool: JSCompiler_inline_result\n  };\n  null !== current && pushTransition(workInProgress, null);\n  reuseHiddenContextOnStack();\n  pushOffscreenSuspenseHandler(workInProgress);\n  null !== current &&\n    propagateParentContextChanges(current, workInProgress, renderLanes, !0);\n  return null;\n}\nfunction markRef(current, workInProgress) {\n  var ref = workInProgress.ref;\n  if (null === ref)\n    null !== current &&\n      null !== current.ref &&\n      (workInProgress.flags |= 2097664);\n  else {\n    if (\"function\" !== typeof ref && \"object\" !== typeof ref)\n      throw Error(formatProdErrorMessage(284));\n    if (null === current || current.ref !== ref)\n      workInProgress.flags |= 2097664;\n  }\n}\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  Component = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    void 0,\n    renderLanes\n  );\n  nextProps = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && nextProps && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, Component, renderLanes);\n  return workInProgress.child;\n}\nfunction replayFunctionComponent(\n  current,\n  workInProgress,\n  nextProps,\n  Component,\n  secondArg,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  workInProgress.updateQueue = null;\n  nextProps = renderWithHooksAgain(\n    workInProgress,\n    Component,\n    nextProps,\n    secondArg\n  );\n  finishRenderingHooks(current);\n  Component = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && Component && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateClassComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  if (null === workInProgress.stateNode) {\n    var context = emptyContextObject,\n      contextType = Component.contextType;\n    \"object\" === typeof contextType &&\n      null !== contextType &&\n      (context = readContext(contextType));\n    context = new Component(nextProps, context);\n    workInProgress.memoizedState =\n      null !== context.state && void 0 !== context.state ? context.state : null;\n    context.updater = classComponentUpdater;\n    workInProgress.stateNode = context;\n    context._reactInternals = workInProgress;\n    context = workInProgress.stateNode;\n    context.props = nextProps;\n    context.state = workInProgress.memoizedState;\n    context.refs = {};\n    initializeUpdateQueue(workInProgress);\n    contextType = Component.contextType;\n    context.context =\n      \"object\" === typeof contextType && null !== contextType\n        ? readContext(contextType)\n        : emptyContextObject;\n    context.state = workInProgress.memoizedState;\n    contextType = Component.getDerivedStateFromProps;\n    \"function\" === typeof contextType &&\n      (applyDerivedStateFromProps(\n        workInProgress,\n        Component,\n        contextType,\n        nextProps\n      ),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof Component.getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate ||\n      (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n        \"function\" !== typeof context.componentWillMount) ||\n      ((contextType = context.state),\n      \"function\" === typeof context.componentWillMount &&\n        context.componentWillMount(),\n      \"function\" === typeof context.UNSAFE_componentWillMount &&\n        context.UNSAFE_componentWillMount(),\n      contextType !== context.state &&\n        classComponentUpdater.enqueueReplaceState(context, context.state, null),\n      processUpdateQueue(workInProgress, nextProps, context, renderLanes),\n      suspendIfUpdateReadFromEntangledAsyncAction(),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof context.componentDidMount &&\n      (workInProgress.flags |= 4194308);\n    nextProps = !0;\n  } else if (null === current) {\n    context = workInProgress.stateNode;\n    var unresolvedOldProps = workInProgress.memoizedProps,\n      oldProps = resolveClassComponentProps(Component, unresolvedOldProps);\n    context.props = oldProps;\n    var oldContext = context.context,\n      contextType$jscomp$0 = Component.contextType;\n    contextType = emptyContextObject;\n    \"object\" === typeof contextType$jscomp$0 &&\n      null !== contextType$jscomp$0 &&\n      (contextType = readContext(contextType$jscomp$0));\n    var getDerivedStateFromProps = Component.getDerivedStateFromProps;\n    contextType$jscomp$0 =\n      \"function\" === typeof getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate;\n    unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;\n    contextType$jscomp$0 ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((unresolvedOldProps || oldContext !== contextType) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          contextType\n        ));\n    hasForceUpdate = !1;\n    var oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    oldContext = workInProgress.memoizedState;\n    unresolvedOldProps || oldState !== oldContext || hasForceUpdate\n      ? (\"function\" === typeof getDerivedStateFromProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            getDerivedStateFromProps,\n            nextProps\n          ),\n          (oldContext = workInProgress.memoizedState)),\n        (oldProps =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            oldProps,\n            nextProps,\n            oldState,\n            oldContext,\n            contextType\n          ))\n          ? (contextType$jscomp$0 ||\n              (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n                \"function\" !== typeof context.componentWillMount) ||\n              (\"function\" === typeof context.componentWillMount &&\n                context.componentWillMount(),\n              \"function\" === typeof context.UNSAFE_componentWillMount &&\n                context.UNSAFE_componentWillMount()),\n            \"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308))\n          : (\"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = oldContext)),\n        (context.props = nextProps),\n        (context.state = oldContext),\n        (context.context = contextType),\n        (nextProps = oldProps))\n      : (\"function\" === typeof context.componentDidMount &&\n          (workInProgress.flags |= 4194308),\n        (nextProps = !1));\n  } else {\n    context = workInProgress.stateNode;\n    cloneUpdateQueue(current, workInProgress);\n    contextType = workInProgress.memoizedProps;\n    contextType$jscomp$0 = resolveClassComponentProps(Component, contextType);\n    context.props = contextType$jscomp$0;\n    getDerivedStateFromProps = workInProgress.pendingProps;\n    oldState = context.context;\n    oldContext = Component.contextType;\n    oldProps = emptyContextObject;\n    \"object\" === typeof oldContext &&\n      null !== oldContext &&\n      (oldProps = readContext(oldContext));\n    unresolvedOldProps = Component.getDerivedStateFromProps;\n    (oldContext =\n      \"function\" === typeof unresolvedOldProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate) ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((contextType !== getDerivedStateFromProps || oldState !== oldProps) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          oldProps\n        ));\n    hasForceUpdate = !1;\n    oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    var newState = workInProgress.memoizedState;\n    contextType !== getDerivedStateFromProps ||\n    oldState !== newState ||\n    hasForceUpdate ||\n    (null !== current &&\n      null !== current.dependencies &&\n      checkIfContextChanged(current.dependencies))\n      ? (\"function\" === typeof unresolvedOldProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            unresolvedOldProps,\n            nextProps\n          ),\n          (newState = workInProgress.memoizedState)),\n        (contextType$jscomp$0 =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            contextType$jscomp$0,\n            nextProps,\n            oldState,\n            newState,\n            oldProps\n          ) ||\n          (null !== current &&\n            null !== current.dependencies &&\n            checkIfContextChanged(current.dependencies)))\n          ? (oldContext ||\n              (\"function\" !== typeof context.UNSAFE_componentWillUpdate &&\n                \"function\" !== typeof context.componentWillUpdate) ||\n              (\"function\" === typeof context.componentWillUpdate &&\n                context.componentWillUpdate(nextProps, newState, oldProps),\n              \"function\" === typeof context.UNSAFE_componentWillUpdate &&\n                context.UNSAFE_componentWillUpdate(\n                  nextProps,\n                  newState,\n                  oldProps\n                )),\n            \"function\" === typeof context.componentDidUpdate &&\n              (workInProgress.flags |= 4),\n            \"function\" === typeof context.getSnapshotBeforeUpdate &&\n              (workInProgress.flags |= 1024))\n          : (\"function\" !== typeof context.componentDidUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 4),\n            \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 1024),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = newState)),\n        (context.props = nextProps),\n        (context.state = newState),\n        (context.context = oldProps),\n        (nextProps = contextType$jscomp$0))\n      : (\"function\" !== typeof context.componentDidUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 4),\n        \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 1024),\n        (nextProps = !1));\n  }\n  context = nextProps;\n  markRef(current, workInProgress);\n  nextProps = 0 !== (workInProgress.flags & 128);\n  context || nextProps\n    ? ((context = workInProgress.stateNode),\n      (Component =\n        nextProps && \"function\" !== typeof Component.getDerivedStateFromError\n          ? null\n          : context.render()),\n      (workInProgress.flags |= 1),\n      null !== current && nextProps\n        ? ((workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            current.child,\n            null,\n            renderLanes\n          )),\n          (workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            null,\n            Component,\n            renderLanes\n          )))\n        : reconcileChildren(current, workInProgress, Component, renderLanes),\n      (workInProgress.memoizedState = context.state),\n      (current = workInProgress.child))\n    : (current = bailoutOnAlreadyFinishedWork(\n        current,\n        workInProgress,\n        renderLanes\n      ));\n  return current;\n}\nfunction mountHostRootWithoutHydrating(\n  current,\n  workInProgress,\n  nextChildren,\n  renderLanes\n) {\n  resetHydrationState();\n  workInProgress.flags |= 256;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nvar SUSPENDED_MARKER = { dehydrated: null, treeContext: null, retryLane: 0 };\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return { baseLanes: renderLanes, cachePool: getSuspendedCache() };\n}\nfunction getRemainingWorkInPrimaryTree(\n  current,\n  primaryTreeDidDefer,\n  renderLanes\n) {\n  current = null !== current ? current.childLanes & ~renderLanes : 0;\n  primaryTreeDidDefer && (current |= workInProgressDeferredLane);\n  return current;\n}\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    showFallback = !1,\n    didSuspend = 0 !== (workInProgress.flags & 128),\n    JSCompiler_temp;\n  (JSCompiler_temp = didSuspend) ||\n    (JSCompiler_temp =\n      null !== current && null === current.memoizedState\n        ? !1\n        : 0 !== (suspenseStackCursor.current & 2));\n  JSCompiler_temp && ((showFallback = !0), (workInProgress.flags &= -129));\n  JSCompiler_temp = 0 !== (workInProgress.flags & 32);\n  workInProgress.flags &= -33;\n  if (null === current) {\n    if (isHydrating) {\n      showFallback\n        ? pushPrimaryTreeSuspenseHandler(workInProgress)\n        : reuseSuspenseHandlerOnStack(workInProgress);\n      if (isHydrating) {\n        var nextInstance = nextHydratableInstance,\n          JSCompiler_temp$jscomp$0;\n        if ((JSCompiler_temp$jscomp$0 = nextInstance)) {\n          c: {\n            JSCompiler_temp$jscomp$0 = nextInstance;\n            for (\n              nextInstance = rootOrSingletonContext;\n              8 !== JSCompiler_temp$jscomp$0.nodeType;\n\n            ) {\n              if (!nextInstance) {\n                nextInstance = null;\n                break c;\n              }\n              JSCompiler_temp$jscomp$0 = getNextHydratable(\n                JSCompiler_temp$jscomp$0.nextSibling\n              );\n              if (null === JSCompiler_temp$jscomp$0) {\n                nextInstance = null;\n                break c;\n              }\n            }\n            nextInstance = JSCompiler_temp$jscomp$0;\n          }\n          null !== nextInstance\n            ? ((workInProgress.memoizedState = {\n                dehydrated: nextInstance,\n                treeContext:\n                  null !== treeContextProvider\n                    ? { id: treeContextId, overflow: treeContextOverflow }\n                    : null,\n                retryLane: 536870912\n              }),\n              (JSCompiler_temp$jscomp$0 = createFiberImplClass(\n                18,\n                null,\n                null,\n                0\n              )),\n              (JSCompiler_temp$jscomp$0.stateNode = nextInstance),\n              (JSCompiler_temp$jscomp$0.return = workInProgress),\n              (workInProgress.child = JSCompiler_temp$jscomp$0),\n              (hydrationParentFiber = workInProgress),\n              (nextHydratableInstance = null),\n              (JSCompiler_temp$jscomp$0 = !0))\n            : (JSCompiler_temp$jscomp$0 = !1);\n        }\n        JSCompiler_temp$jscomp$0 || throwOnHydrationMismatch(workInProgress);\n      }\n      nextInstance = workInProgress.memoizedState;\n      if (\n        null !== nextInstance &&\n        ((nextInstance = nextInstance.dehydrated), null !== nextInstance)\n      )\n        return (\n          \"$!\" === nextInstance.data\n            ? (workInProgress.lanes = 16)\n            : (workInProgress.lanes = 536870912),\n          null\n        );\n      popSuspenseHandler(workInProgress);\n    }\n    nextInstance = nextProps.children;\n    nextProps = nextProps.fallback;\n    if (showFallback)\n      return (\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (showFallback = workInProgress.mode),\n        (nextInstance = mountWorkInProgressOffscreenFiber(\n          { mode: \"hidden\", children: nextInstance },\n          showFallback\n        )),\n        (nextProps = createFiberFromFragment(\n          nextProps,\n          showFallback,\n          renderLanes,\n          null\n        )),\n        (nextInstance.return = workInProgress),\n        (nextProps.return = workInProgress),\n        (nextInstance.sibling = nextProps),\n        (workInProgress.child = nextInstance),\n        (showFallback = workInProgress.child),\n        (showFallback.memoizedState = mountSuspenseOffscreenState(renderLanes)),\n        (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          JSCompiler_temp,\n          renderLanes\n        )),\n        (workInProgress.memoizedState = SUSPENDED_MARKER),\n        nextProps\n      );\n    pushPrimaryTreeSuspenseHandler(workInProgress);\n    return mountSuspensePrimaryChildren(workInProgress, nextInstance);\n  }\n  JSCompiler_temp$jscomp$0 = current.memoizedState;\n  if (\n    null !== JSCompiler_temp$jscomp$0 &&\n    ((nextInstance = JSCompiler_temp$jscomp$0.dehydrated),\n    null !== nextInstance)\n  ) {\n    if (didSuspend)\n      workInProgress.flags & 256\n        ? (pushPrimaryTreeSuspenseHandler(workInProgress),\n          (workInProgress.flags &= -257),\n          (workInProgress = retrySuspenseComponentWithoutHydrating(\n            current,\n            workInProgress,\n            renderLanes\n          )))\n        : null !== workInProgress.memoizedState\n          ? (reuseSuspenseHandlerOnStack(workInProgress),\n            (workInProgress.child = current.child),\n            (workInProgress.flags |= 128),\n            (workInProgress = null))\n          : (reuseSuspenseHandlerOnStack(workInProgress),\n            (showFallback = nextProps.fallback),\n            (nextInstance = workInProgress.mode),\n            (nextProps = mountWorkInProgressOffscreenFiber(\n              { mode: \"visible\", children: nextProps.children },\n              nextInstance\n            )),\n            (showFallback = createFiberFromFragment(\n              showFallback,\n              nextInstance,\n              renderLanes,\n              null\n            )),\n            (showFallback.flags |= 2),\n            (nextProps.return = workInProgress),\n            (showFallback.return = workInProgress),\n            (nextProps.sibling = showFallback),\n            (workInProgress.child = nextProps),\n            reconcileChildFibers(\n              workInProgress,\n              current.child,\n              null,\n              renderLanes\n            ),\n            (nextProps = workInProgress.child),\n            (nextProps.memoizedState =\n              mountSuspenseOffscreenState(renderLanes)),\n            (nextProps.childLanes = getRemainingWorkInPrimaryTree(\n              current,\n              JSCompiler_temp,\n              renderLanes\n            )),\n            (workInProgress.memoizedState = SUSPENDED_MARKER),\n            (workInProgress = showFallback));\n    else if (\n      (pushPrimaryTreeSuspenseHandler(workInProgress),\n      \"$!\" === nextInstance.data)\n    ) {\n      JSCompiler_temp =\n        nextInstance.nextSibling && nextInstance.nextSibling.dataset;\n      if (JSCompiler_temp) var digest = JSCompiler_temp.dgst;\n      JSCompiler_temp = digest;\n      nextProps = Error(formatProdErrorMessage(419));\n      nextProps.stack = \"\";\n      nextProps.digest = JSCompiler_temp;\n      queueHydrationError({ value: nextProps, source: null, stack: null });\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else if (\n      (didReceiveUpdate ||\n        propagateParentContextChanges(current, workInProgress, renderLanes, !1),\n      (JSCompiler_temp = 0 !== (renderLanes & current.childLanes)),\n      didReceiveUpdate || JSCompiler_temp)\n    ) {\n      JSCompiler_temp = workInProgressRoot;\n      if (null !== JSCompiler_temp) {\n        nextProps = renderLanes & -renderLanes;\n        if (0 !== (nextProps & 42)) nextProps = 1;\n        else\n          switch (nextProps) {\n            case 2:\n              nextProps = 1;\n              break;\n            case 8:\n              nextProps = 4;\n              break;\n            case 32:\n              nextProps = 16;\n              break;\n            case 128:\n            case 256:\n            case 512:\n            case 1024:\n            case 2048:\n            case 4096:\n            case 8192:\n            case 16384:\n            case 32768:\n            case 65536:\n            case 131072:\n            case 262144:\n            case 524288:\n            case 1048576:\n            case 2097152:\n            case 4194304:\n            case 8388608:\n            case 16777216:\n            case 33554432:\n              nextProps = 64;\n              break;\n            case 268435456:\n              nextProps = 134217728;\n              break;\n            default:\n              nextProps = 0;\n          }\n        nextProps =\n          0 !== (nextProps & (JSCompiler_temp.suspendedLanes | renderLanes))\n            ? 0\n            : nextProps;\n        if (0 !== nextProps && nextProps !== JSCompiler_temp$jscomp$0.retryLane)\n          throw (\n            ((JSCompiler_temp$jscomp$0.retryLane = nextProps),\n            enqueueConcurrentRenderForLane(current, nextProps),\n            scheduleUpdateOnFiber(JSCompiler_temp, current, nextProps),\n            SelectiveHydrationException)\n          );\n      }\n      \"$?\" === nextInstance.data || renderDidSuspendDelayIfPossible();\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else\n      \"$?\" === nextInstance.data\n        ? ((workInProgress.flags |= 128),\n          (workInProgress.child = current.child),\n          (workInProgress = retryDehydratedSuspenseBoundary.bind(\n            null,\n            current\n          )),\n          (nextInstance._reactRetry = workInProgress),\n          (workInProgress = null))\n        : ((current = JSCompiler_temp$jscomp$0.treeContext),\n          (nextHydratableInstance = getNextHydratable(\n            nextInstance.nextSibling\n          )),\n          (hydrationParentFiber = workInProgress),\n          (isHydrating = !0),\n          (hydrationErrors = null),\n          (rootOrSingletonContext = !1),\n          null !== current &&\n            ((idStack[idStackIndex++] = treeContextId),\n            (idStack[idStackIndex++] = treeContextOverflow),\n            (idStack[idStackIndex++] = treeContextProvider),\n            (treeContextId = current.id),\n            (treeContextOverflow = current.overflow),\n            (treeContextProvider = workInProgress)),\n          (workInProgress = mountSuspensePrimaryChildren(\n            workInProgress,\n            nextProps.children\n          )),\n          (workInProgress.flags |= 4096));\n    return workInProgress;\n  }\n  if (showFallback)\n    return (\n      reuseSuspenseHandlerOnStack(workInProgress),\n      (showFallback = nextProps.fallback),\n      (nextInstance = workInProgress.mode),\n      (JSCompiler_temp$jscomp$0 = current.child),\n      (digest = JSCompiler_temp$jscomp$0.sibling),\n      (nextProps = createWorkInProgress(JSCompiler_temp$jscomp$0, {\n        mode: \"hidden\",\n        children: nextProps.children\n      })),\n      (nextProps.subtreeFlags =\n        JSCompiler_temp$jscomp$0.subtreeFlags & 31457280),\n      null !== digest\n        ? (showFallback = createWorkInProgress(digest, showFallback))\n        : ((showFallback = createFiberFromFragment(\n            showFallback,\n            nextInstance,\n            renderLanes,\n            null\n          )),\n          (showFallback.flags |= 2)),\n      (showFallback.return = workInProgress),\n      (nextProps.return = workInProgress),\n      (nextProps.sibling = showFallback),\n      (workInProgress.child = nextProps),\n      (nextProps = showFallback),\n      (showFallback = workInProgress.child),\n      (nextInstance = current.child.memoizedState),\n      null === nextInstance\n        ? (nextInstance = mountSuspenseOffscreenState(renderLanes))\n        : ((JSCompiler_temp$jscomp$0 = nextInstance.cachePool),\n          null !== JSCompiler_temp$jscomp$0\n            ? ((digest = CacheContext._currentValue),\n              (JSCompiler_temp$jscomp$0 =\n                JSCompiler_temp$jscomp$0.parent !== digest\n                  ? { parent: digest, pool: digest }\n                  : JSCompiler_temp$jscomp$0))\n            : (JSCompiler_temp$jscomp$0 = getSuspendedCache()),\n          (nextInstance = {\n            baseLanes: nextInstance.baseLanes | renderLanes,\n            cachePool: JSCompiler_temp$jscomp$0\n          })),\n      (showFallback.memoizedState = nextInstance),\n      (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n        current,\n        JSCompiler_temp,\n        renderLanes\n      )),\n      (workInProgress.memoizedState = SUSPENDED_MARKER),\n      nextProps\n    );\n  pushPrimaryTreeSuspenseHandler(workInProgress);\n  renderLanes = current.child;\n  current = renderLanes.sibling;\n  renderLanes = createWorkInProgress(renderLanes, {\n    mode: \"visible\",\n    children: nextProps.children\n  });\n  renderLanes.return = workInProgress;\n  renderLanes.sibling = null;\n  null !== current &&\n    ((JSCompiler_temp = workInProgress.deletions),\n    null === JSCompiler_temp\n      ? ((workInProgress.deletions = [current]), (workInProgress.flags |= 16))\n      : JSCompiler_temp.push(current));\n  workInProgress.child = renderLanes;\n  workInProgress.memoizedState = null;\n  return renderLanes;\n}\nfunction mountSuspensePrimaryChildren(workInProgress, primaryChildren) {\n  primaryChildren = mountWorkInProgressOffscreenFiber(\n    { mode: \"visible\", children: primaryChildren },\n    workInProgress.mode\n  );\n  primaryChildren.return = workInProgress;\n  return (workInProgress.child = primaryChildren);\n}\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode) {\n  return createFiberFromOffscreen(offscreenProps, mode, 0, null);\n}\nfunction retrySuspenseComponentWithoutHydrating(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  current = mountSuspensePrimaryChildren(\n    workInProgress,\n    workInProgress.pendingProps.children\n  );\n  current.flags |= 2;\n  workInProgress.memoizedState = null;\n  return current;\n}\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n  fiber.lanes |= renderLanes;\n  var alternate = fiber.alternate;\n  null !== alternate && (alternate.lanes |= renderLanes);\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\nfunction initSuspenseListRenderState(\n  workInProgress,\n  isBackwards,\n  tail,\n  lastContentRow,\n  tailMode\n) {\n  var renderState = workInProgress.memoizedState;\n  null === renderState\n    ? (workInProgress.memoizedState = {\n        isBackwards: isBackwards,\n        rendering: null,\n        renderingStartTime: 0,\n        last: lastContentRow,\n        tail: tail,\n        tailMode: tailMode\n      })\n    : ((renderState.isBackwards = isBackwards),\n      (renderState.rendering = null),\n      (renderState.renderingStartTime = 0),\n      (renderState.last = lastContentRow),\n      (renderState.tail = tail),\n      (renderState.tailMode = tailMode));\n}\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    revealOrder = nextProps.revealOrder,\n    tailMode = nextProps.tail;\n  reconcileChildren(current, workInProgress, nextProps.children, renderLanes);\n  nextProps = suspenseStackCursor.current;\n  if (0 !== (nextProps & 2))\n    (nextProps = (nextProps & 1) | 2), (workInProgress.flags |= 128);\n  else {\n    if (null !== current && 0 !== (current.flags & 128))\n      a: for (current = workInProgress.child; null !== current; ) {\n        if (13 === current.tag)\n          null !== current.memoizedState &&\n            scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (19 === current.tag)\n          scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (null !== current.child) {\n          current.child.return = current;\n          current = current.child;\n          continue;\n        }\n        if (current === workInProgress) break a;\n        for (; null === current.sibling; ) {\n          if (null === current.return || current.return === workInProgress)\n            break a;\n          current = current.return;\n        }\n        current.sibling.return = current.return;\n        current = current.sibling;\n      }\n    nextProps &= 1;\n  }\n  push(suspenseStackCursor, nextProps);\n  switch (revealOrder) {\n    case \"forwards\":\n      renderLanes = workInProgress.child;\n      for (revealOrder = null; null !== renderLanes; )\n        (current = renderLanes.alternate),\n          null !== current &&\n            null === findFirstSuspended(current) &&\n            (revealOrder = renderLanes),\n          (renderLanes = renderLanes.sibling);\n      renderLanes = revealOrder;\n      null === renderLanes\n        ? ((revealOrder = workInProgress.child), (workInProgress.child = null))\n        : ((revealOrder = renderLanes.sibling), (renderLanes.sibling = null));\n      initSuspenseListRenderState(\n        workInProgress,\n        !1,\n        revealOrder,\n        renderLanes,\n        tailMode\n      );\n      break;\n    case \"backwards\":\n      renderLanes = null;\n      revealOrder = workInProgress.child;\n      for (workInProgress.child = null; null !== revealOrder; ) {\n        current = revealOrder.alternate;\n        if (null !== current && null === findFirstSuspended(current)) {\n          workInProgress.child = revealOrder;\n          break;\n        }\n        current = revealOrder.sibling;\n        revealOrder.sibling = renderLanes;\n        renderLanes = revealOrder;\n        revealOrder = current;\n      }\n      initSuspenseListRenderState(\n        workInProgress,\n        !0,\n        renderLanes,\n        null,\n        tailMode\n      );\n      break;\n    case \"together\":\n      initSuspenseListRenderState(workInProgress, !1, null, null, void 0);\n      break;\n    default:\n      workInProgress.memoizedState = null;\n  }\n  return workInProgress.child;\n}\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  null !== current && (workInProgress.dependencies = current.dependencies);\n  workInProgressRootSkippedLanes |= workInProgress.lanes;\n  if (0 === (renderLanes & workInProgress.childLanes))\n    if (null !== current) {\n      if (\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        0 === (renderLanes & workInProgress.childLanes))\n      )\n        return null;\n    } else return null;\n  if (null !== current && workInProgress.child !== current.child)\n    throw Error(formatProdErrorMessage(153));\n  if (null !== workInProgress.child) {\n    current = workInProgress.child;\n    renderLanes = createWorkInProgress(current, current.pendingProps);\n    workInProgress.child = renderLanes;\n    for (renderLanes.return = workInProgress; null !== current.sibling; )\n      (current = current.sibling),\n        (renderLanes = renderLanes.sibling =\n          createWorkInProgress(current, current.pendingProps)),\n        (renderLanes.return = workInProgress);\n    renderLanes.sibling = null;\n  }\n  return workInProgress.child;\n}\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\n  if (0 !== (current.lanes & renderLanes)) return !0;\n  current = current.dependencies;\n  return null !== current && checkIfContextChanged(current) ? !0 : !1;\n}\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  switch (workInProgress.tag) {\n    case 3:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n      resetHydrationState();\n      break;\n    case 27:\n    case 5:\n      pushHostContext(workInProgress);\n      break;\n    case 4:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n    case 10:\n      pushProvider(\n        workInProgress,\n        workInProgress.type,\n        workInProgress.memoizedProps.value\n      );\n      break;\n    case 13:\n      var state = workInProgress.memoizedState;\n      if (null !== state) {\n        if (null !== state.dehydrated)\n          return (\n            pushPrimaryTreeSuspenseHandler(workInProgress),\n            (workInProgress.flags |= 128),\n            null\n          );\n        if (0 !== (renderLanes & workInProgress.child.childLanes))\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        pushPrimaryTreeSuspenseHandler(workInProgress);\n        current = bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes\n        );\n        return null !== current ? current.sibling : null;\n      }\n      pushPrimaryTreeSuspenseHandler(workInProgress);\n      break;\n    case 19:\n      var didSuspendBefore = 0 !== (current.flags & 128);\n      state = 0 !== (renderLanes & workInProgress.childLanes);\n      state ||\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        (state = 0 !== (renderLanes & workInProgress.childLanes)));\n      if (didSuspendBefore) {\n        if (state)\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        workInProgress.flags |= 128;\n      }\n      didSuspendBefore = workInProgress.memoizedState;\n      null !== didSuspendBefore &&\n        ((didSuspendBefore.rendering = null),\n        (didSuspendBefore.tail = null),\n        (didSuspendBefore.lastEffect = null));\n      push(suspenseStackCursor, suspenseStackCursor.current);\n      if (state) break;\n      else return null;\n    case 22:\n    case 23:\n      return (\n        (workInProgress.lanes = 0),\n        updateOffscreenComponent(current, workInProgress, renderLanes)\n      );\n    case 24:\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n  }\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\nfunction beginWork(current, workInProgress, renderLanes) {\n  if (null !== current)\n    if (current.memoizedProps !== workInProgress.pendingProps)\n      didReceiveUpdate = !0;\n    else {\n      if (\n        !checkScheduledUpdateOrContext(current, renderLanes) &&\n        0 === (workInProgress.flags & 128)\n      )\n        return (\n          (didReceiveUpdate = !1),\n          attemptEarlyBailoutIfNoScheduledUpdate(\n            current,\n            workInProgress,\n            renderLanes\n          )\n        );\n      didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;\n    }\n  else\n    (didReceiveUpdate = !1),\n      isHydrating &&\n        0 !== (workInProgress.flags & 1048576) &&\n        pushTreeId(workInProgress, treeForkCount, workInProgress.index);\n  workInProgress.lanes = 0;\n  switch (workInProgress.tag) {\n    case 16:\n      a: {\n        current = workInProgress.pendingProps;\n        var lazyComponent = workInProgress.elementType,\n          init = lazyComponent._init;\n        lazyComponent = init(lazyComponent._payload);\n        workInProgress.type = lazyComponent;\n        if (\"function\" === typeof lazyComponent)\n          shouldConstruct(lazyComponent)\n            ? ((current = resolveClassComponentProps(lazyComponent, current)),\n              (workInProgress.tag = 1),\n              (workInProgress = updateClassComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )))\n            : ((workInProgress.tag = 0),\n              (workInProgress = updateFunctionComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )));\n        else {\n          if (void 0 !== lazyComponent && null !== lazyComponent)\n            if (\n              ((init = lazyComponent.$$typeof), init === REACT_FORWARD_REF_TYPE)\n            ) {\n              workInProgress.tag = 11;\n              workInProgress = updateForwardRef(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            } else if (init === REACT_MEMO_TYPE) {\n              workInProgress.tag = 14;\n              workInProgress = updateMemoComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            }\n          workInProgress =\n            getComponentNameFromType(lazyComponent) || lazyComponent;\n          throw Error(formatProdErrorMessage(306, workInProgress, \"\"));\n        }\n      }\n      return workInProgress;\n    case 0:\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 1:\n      return (\n        (lazyComponent = workInProgress.type),\n        (init = resolveClassComponentProps(\n          lazyComponent,\n          workInProgress.pendingProps\n        )),\n        updateClassComponent(\n          current,\n          workInProgress,\n          lazyComponent,\n          init,\n          renderLanes\n        )\n      );\n    case 3:\n      a: {\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        );\n        if (null === current) throw Error(formatProdErrorMessage(387));\n        var nextProps = workInProgress.pendingProps;\n        init = workInProgress.memoizedState;\n        lazyComponent = init.element;\n        cloneUpdateQueue(current, workInProgress);\n        processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n        var nextState = workInProgress.memoizedState;\n        nextProps = nextState.cache;\n        pushProvider(workInProgress, CacheContext, nextProps);\n        nextProps !== init.cache &&\n          propagateContextChanges(\n            workInProgress,\n            [CacheContext],\n            renderLanes,\n            !0\n          );\n        suspendIfUpdateReadFromEntangledAsyncAction();\n        nextProps = nextState.element;\n        if (init.isDehydrated)\n          if (\n            ((init = {\n              element: nextProps,\n              isDehydrated: !1,\n              cache: nextState.cache\n            }),\n            (workInProgress.updateQueue.baseState = init),\n            (workInProgress.memoizedState = init),\n            workInProgress.flags & 256)\n          ) {\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              nextProps,\n              renderLanes\n            );\n            break a;\n          } else if (nextProps !== lazyComponent) {\n            lazyComponent = createCapturedValueAtFiber(\n              Error(formatProdErrorMessage(424)),\n              workInProgress\n            );\n            queueHydrationError(lazyComponent);\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              nextProps,\n              renderLanes\n            );\n            break a;\n          } else\n            for (\n              nextHydratableInstance = getNextHydratable(\n                workInProgress.stateNode.containerInfo.firstChild\n              ),\n                hydrationParentFiber = workInProgress,\n                isHydrating = !0,\n                hydrationErrors = null,\n                rootOrSingletonContext = !0,\n                renderLanes = mountChildFibers(\n                  workInProgress,\n                  null,\n                  nextProps,\n                  renderLanes\n                ),\n                workInProgress.child = renderLanes;\n              renderLanes;\n\n            )\n              (renderLanes.flags = (renderLanes.flags & -3) | 4096),\n                (renderLanes = renderLanes.sibling);\n        else {\n          resetHydrationState();\n          if (nextProps === lazyComponent) {\n            workInProgress = bailoutOnAlreadyFinishedWork(\n              current,\n              workInProgress,\n              renderLanes\n            );\n            break a;\n          }\n          reconcileChildren(current, workInProgress, nextProps, renderLanes);\n        }\n        workInProgress = workInProgress.child;\n      }\n      return workInProgress;\n    case 26:\n      return (\n        markRef(current, workInProgress),\n        null === current\n          ? (renderLanes = getResource(\n              workInProgress.type,\n              null,\n              workInProgress.pendingProps,\n              null\n            ))\n            ? (workInProgress.memoizedState = renderLanes)\n            : isHydrating ||\n              ((renderLanes = workInProgress.type),\n              (current = workInProgress.pendingProps),\n              (lazyComponent = getOwnerDocumentFromRootContainer(\n                rootInstanceStackCursor.current\n              ).createElement(renderLanes)),\n              (lazyComponent[internalInstanceKey] = workInProgress),\n              (lazyComponent[internalPropsKey] = current),\n              setInitialProperties(lazyComponent, renderLanes, current),\n              markNodeAsHoistable(lazyComponent),\n              (workInProgress.stateNode = lazyComponent))\n          : (workInProgress.memoizedState = getResource(\n              workInProgress.type,\n              current.memoizedProps,\n              workInProgress.pendingProps,\n              current.memoizedState\n            )),\n        null\n      );\n    case 27:\n      return (\n        pushHostContext(workInProgress),\n        null === current &&\n          isHydrating &&\n          ((lazyComponent = workInProgress.stateNode =\n            resolveSingletonInstance(\n              workInProgress.type,\n              workInProgress.pendingProps,\n              rootInstanceStackCursor.current\n            )),\n          (hydrationParentFiber = workInProgress),\n          (rootOrSingletonContext = !0),\n          (nextHydratableInstance = getNextHydratable(\n            lazyComponent.firstChild\n          ))),\n        (lazyComponent = workInProgress.pendingProps.children),\n        null !== current || isHydrating\n          ? reconcileChildren(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            )\n          : (workInProgress.child = reconcileChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            )),\n        markRef(current, workInProgress),\n        workInProgress.child\n      );\n    case 5:\n      if (null === current && isHydrating) {\n        if ((init = lazyComponent = nextHydratableInstance))\n          (lazyComponent = canHydrateInstance(\n            lazyComponent,\n            workInProgress.type,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== lazyComponent\n              ? ((workInProgress.stateNode = lazyComponent),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = getNextHydratable(\n                  lazyComponent.firstChild\n                )),\n                (rootOrSingletonContext = !1),\n                (init = !0))\n              : (init = !1);\n        init || throwOnHydrationMismatch(workInProgress);\n      }\n      pushHostContext(workInProgress);\n      init = workInProgress.type;\n      nextProps = workInProgress.pendingProps;\n      nextState = null !== current ? current.memoizedProps : null;\n      lazyComponent = nextProps.children;\n      shouldSetTextContent(init, nextProps)\n        ? (lazyComponent = null)\n        : null !== nextState &&\n          shouldSetTextContent(init, nextState) &&\n          (workInProgress.flags |= 32);\n      null !== workInProgress.memoizedState &&\n        ((init = renderWithHooks(\n          current,\n          workInProgress,\n          TransitionAwareHostComponent,\n          null,\n          null,\n          renderLanes\n        )),\n        (HostTransitionContext._currentValue = init));\n      markRef(current, workInProgress);\n      reconcileChildren(current, workInProgress, lazyComponent, renderLanes);\n      return workInProgress.child;\n    case 6:\n      if (null === current && isHydrating) {\n        if ((current = renderLanes = nextHydratableInstance))\n          (renderLanes = canHydrateTextInstance(\n            renderLanes,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== renderLanes\n              ? ((workInProgress.stateNode = renderLanes),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = null),\n                (current = !0))\n              : (current = !1);\n        current || throwOnHydrationMismatch(workInProgress);\n      }\n      return null;\n    case 13:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case 4:\n      return (\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        ),\n        (lazyComponent = workInProgress.pendingProps),\n        null === current\n          ? (workInProgress.child = reconcileChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            ))\n          : reconcileChildren(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            ),\n        workInProgress.child\n      );\n    case 11:\n      return updateForwardRef(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 7:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 8:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 12:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 10:\n      return (\n        (lazyComponent = workInProgress.pendingProps),\n        pushProvider(workInProgress, workInProgress.type, lazyComponent.value),\n        reconcileChildren(\n          current,\n          workInProgress,\n          lazyComponent.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 9:\n      return (\n        (init = workInProgress.type._context),\n        (lazyComponent = workInProgress.pendingProps.children),\n        prepareToReadContext(workInProgress),\n        (init = readContext(init)),\n        (lazyComponent = lazyComponent(init)),\n        (workInProgress.flags |= 1),\n        reconcileChildren(current, workInProgress, lazyComponent, renderLanes),\n        workInProgress.child\n      );\n    case 14:\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 15:\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 19:\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    case 22:\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    case 24:\n      return (\n        prepareToReadContext(workInProgress),\n        (lazyComponent = readContext(CacheContext)),\n        null === current\n          ? ((init = peekCacheFromPool()),\n            null === init &&\n              ((init = workInProgressRoot),\n              (nextProps = createCache()),\n              (init.pooledCache = nextProps),\n              nextProps.refCount++,\n              null !== nextProps && (init.pooledCacheLanes |= renderLanes),\n              (init = nextProps)),\n            (workInProgress.memoizedState = {\n              parent: lazyComponent,\n              cache: init\n            }),\n            initializeUpdateQueue(workInProgress),\n            pushProvider(workInProgress, CacheContext, init))\n          : (0 !== (current.lanes & renderLanes) &&\n              (cloneUpdateQueue(current, workInProgress),\n              processUpdateQueue(workInProgress, null, null, renderLanes),\n              suspendIfUpdateReadFromEntangledAsyncAction()),\n            (init = current.memoizedState),\n            (nextProps = workInProgress.memoizedState),\n            init.parent !== lazyComponent\n              ? ((init = { parent: lazyComponent, cache: lazyComponent }),\n                (workInProgress.memoizedState = init),\n                0 === workInProgress.lanes &&\n                  (workInProgress.memoizedState =\n                    workInProgress.updateQueue.baseState =\n                      init),\n                pushProvider(workInProgress, CacheContext, lazyComponent))\n              : ((lazyComponent = nextProps.cache),\n                pushProvider(workInProgress, CacheContext, lazyComponent),\n                lazyComponent !== init.cache &&\n                  propagateContextChanges(\n                    workInProgress,\n                    [CacheContext],\n                    renderLanes,\n                    !0\n                  ))),\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 29:\n      throw workInProgress.pendingProps;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nvar valueCursor = createCursor(null),\n  currentlyRenderingFiber = null,\n  lastContextDependency = null;\nfunction pushProvider(providerFiber, context, nextValue) {\n  push(valueCursor, context._currentValue);\n  context._currentValue = nextValue;\n}\nfunction popProvider(context) {\n  context._currentValue = valueCursor.current;\n  pop(valueCursor);\n}\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n  for (; null !== parent; ) {\n    var alternate = parent.alternate;\n    (parent.childLanes & renderLanes) !== renderLanes\n      ? ((parent.childLanes |= renderLanes),\n        null !== alternate && (alternate.childLanes |= renderLanes))\n      : null !== alternate &&\n        (alternate.childLanes & renderLanes) !== renderLanes &&\n        (alternate.childLanes |= renderLanes);\n    if (parent === propagationRoot) break;\n    parent = parent.return;\n  }\n}\nfunction propagateContextChanges(\n  workInProgress,\n  contexts,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  var fiber = workInProgress.child;\n  null !== fiber && (fiber.return = workInProgress);\n  for (; null !== fiber; ) {\n    var list = fiber.dependencies;\n    if (null !== list) {\n      var nextFiber = fiber.child;\n      list = list.firstContext;\n      a: for (; null !== list; ) {\n        var dependency = list;\n        list = fiber;\n        for (var i = 0; i < contexts.length; i++)\n          if (dependency.context === contexts[i]) {\n            list.lanes |= renderLanes;\n            dependency = list.alternate;\n            null !== dependency && (dependency.lanes |= renderLanes);\n            scheduleContextWorkOnParentPath(\n              list.return,\n              renderLanes,\n              workInProgress\n            );\n            forcePropagateEntireTree || (nextFiber = null);\n            break a;\n          }\n        list = dependency.next;\n      }\n    } else if (18 === fiber.tag) {\n      nextFiber = fiber.return;\n      if (null === nextFiber) throw Error(formatProdErrorMessage(341));\n      nextFiber.lanes |= renderLanes;\n      list = nextFiber.alternate;\n      null !== list && (list.lanes |= renderLanes);\n      scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);\n      nextFiber = null;\n    } else nextFiber = fiber.child;\n    if (null !== nextFiber) nextFiber.return = fiber;\n    else\n      for (nextFiber = fiber; null !== nextFiber; ) {\n        if (nextFiber === workInProgress) {\n          nextFiber = null;\n          break;\n        }\n        fiber = nextFiber.sibling;\n        if (null !== fiber) {\n          fiber.return = nextFiber.return;\n          nextFiber = fiber;\n          break;\n        }\n        nextFiber = nextFiber.return;\n      }\n    fiber = nextFiber;\n  }\n}\nfunction propagateParentContextChanges(\n  current,\n  workInProgress,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  current = null;\n  for (\n    var parent = workInProgress, isInsidePropagationBailout = !1;\n    null !== parent;\n\n  ) {\n    if (!isInsidePropagationBailout)\n      if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;\n      else if (0 !== (parent.flags & 262144)) break;\n    if (10 === parent.tag) {\n      var currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent = currentParent.memoizedProps;\n      if (null !== currentParent) {\n        var context = parent.type;\n        objectIs(parent.pendingProps.value, currentParent.value) ||\n          (null !== current ? current.push(context) : (current = [context]));\n      }\n    } else if (parent === hostTransitionProviderCursor.current) {\n      currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent.memoizedState.memoizedState !==\n        parent.memoizedState.memoizedState &&\n        (null !== current\n          ? current.push(HostTransitionContext)\n          : (current = [HostTransitionContext]));\n    }\n    parent = parent.return;\n  }\n  null !== current &&\n    propagateContextChanges(\n      workInProgress,\n      current,\n      renderLanes,\n      forcePropagateEntireTree\n    );\n  workInProgress.flags |= 262144;\n}\nfunction checkIfContextChanged(currentDependencies) {\n  for (\n    currentDependencies = currentDependencies.firstContext;\n    null !== currentDependencies;\n\n  ) {\n    if (\n      !objectIs(\n        currentDependencies.context._currentValue,\n        currentDependencies.memoizedValue\n      )\n    )\n      return !0;\n    currentDependencies = currentDependencies.next;\n  }\n  return !1;\n}\nfunction prepareToReadContext(workInProgress) {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  workInProgress = workInProgress.dependencies;\n  null !== workInProgress && (workInProgress.firstContext = null);\n}\nfunction readContext(context) {\n  return readContextForConsumer(currentlyRenderingFiber, context);\n}\nfunction readContextDuringReconciliation(consumer, context) {\n  null === currentlyRenderingFiber && prepareToReadContext(consumer);\n  return readContextForConsumer(consumer, context);\n}\nfunction readContextForConsumer(consumer, context) {\n  var value = context._currentValue;\n  context = { context: context, memoizedValue: value, next: null };\n  if (null === lastContextDependency) {\n    if (null === consumer) throw Error(formatProdErrorMessage(308));\n    lastContextDependency = context;\n    consumer.dependencies = { lanes: 0, firstContext: context };\n    consumer.flags |= 524288;\n  } else lastContextDependency = lastContextDependency.next = context;\n  return value;\n}\nvar hasForceUpdate = !1;\nfunction initializeUpdateQueue(fiber) {\n  fiber.updateQueue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: { pending: null, lanes: 0, hiddenCallbacks: null },\n    callbacks: null\n  };\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  current = current.updateQueue;\n  workInProgress.updateQueue === current &&\n    (workInProgress.updateQueue = {\n      baseState: current.baseState,\n      firstBaseUpdate: current.firstBaseUpdate,\n      lastBaseUpdate: current.lastBaseUpdate,\n      shared: current.shared,\n      callbacks: null\n    });\n}\nfunction createUpdate(lane) {\n  return { lane: lane, tag: 0, payload: null, callback: null, next: null };\n}\nfunction enqueueUpdate(fiber, update, lane) {\n  var updateQueue = fiber.updateQueue;\n  if (null === updateQueue) return null;\n  updateQueue = updateQueue.shared;\n  if (0 !== (executionContext & 2)) {\n    var pending = updateQueue.pending;\n    null === pending\n      ? (update.next = update)\n      : ((update.next = pending.next), (pending.next = update));\n    updateQueue.pending = update;\n    update = getRootForUpdatedFiber(fiber);\n    markUpdateLaneFromFiberToRoot(fiber, null, lane);\n    return update;\n  }\n  enqueueUpdate$1(fiber, updateQueue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction entangleTransitions(root, fiber, lane) {\n  fiber = fiber.updateQueue;\n  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194176))) {\n    var queueLanes = fiber.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    fiber.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  var queue = workInProgress.updateQueue,\n    current = workInProgress.alternate;\n  if (\n    null !== current &&\n    ((current = current.updateQueue), queue === current)\n  ) {\n    var newFirst = null,\n      newLast = null;\n    queue = queue.firstBaseUpdate;\n    if (null !== queue) {\n      do {\n        var clone = {\n          lane: queue.lane,\n          tag: queue.tag,\n          payload: queue.payload,\n          callback: null,\n          next: null\n        };\n        null === newLast\n          ? (newFirst = newLast = clone)\n          : (newLast = newLast.next = clone);\n        queue = queue.next;\n      } while (null !== queue);\n      null === newLast\n        ? (newFirst = newLast = capturedUpdate)\n        : (newLast = newLast.next = capturedUpdate);\n    } else newFirst = newLast = capturedUpdate;\n    queue = {\n      baseState: current.baseState,\n      firstBaseUpdate: newFirst,\n      lastBaseUpdate: newLast,\n      shared: current.shared,\n      callbacks: current.callbacks\n    };\n    workInProgress.updateQueue = queue;\n    return;\n  }\n  workInProgress = queue.lastBaseUpdate;\n  null === workInProgress\n    ? (queue.firstBaseUpdate = capturedUpdate)\n    : (workInProgress.next = capturedUpdate);\n  queue.lastBaseUpdate = capturedUpdate;\n}\nvar didReadFromEntangledAsyncAction = !1;\nfunction suspendIfUpdateReadFromEntangledAsyncAction() {\n  if (didReadFromEntangledAsyncAction) {\n    var entangledActionThenable = currentEntangledActionThenable;\n    if (null !== entangledActionThenable) throw entangledActionThenable;\n  }\n}\nfunction processUpdateQueue(\n  workInProgress$jscomp$0,\n  props,\n  instance$jscomp$0,\n  renderLanes\n) {\n  didReadFromEntangledAsyncAction = !1;\n  var queue = workInProgress$jscomp$0.updateQueue;\n  hasForceUpdate = !1;\n  var firstBaseUpdate = queue.firstBaseUpdate,\n    lastBaseUpdate = queue.lastBaseUpdate,\n    pendingQueue = queue.shared.pending;\n  if (null !== pendingQueue) {\n    queue.shared.pending = null;\n    var lastPendingUpdate = pendingQueue,\n      firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    null === lastBaseUpdate\n      ? (firstBaseUpdate = firstPendingUpdate)\n      : (lastBaseUpdate.next = firstPendingUpdate);\n    lastBaseUpdate = lastPendingUpdate;\n    var current = workInProgress$jscomp$0.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      (pendingQueue = current.lastBaseUpdate),\n      pendingQueue !== lastBaseUpdate &&\n        (null === pendingQueue\n          ? (current.firstBaseUpdate = firstPendingUpdate)\n          : (pendingQueue.next = firstPendingUpdate),\n        (current.lastBaseUpdate = lastPendingUpdate)));\n  }\n  if (null !== firstBaseUpdate) {\n    var newState = queue.baseState;\n    lastBaseUpdate = 0;\n    current = firstPendingUpdate = lastPendingUpdate = null;\n    pendingQueue = firstBaseUpdate;\n    do {\n      var updateLane = pendingQueue.lane & -536870913,\n        isHiddenUpdate = updateLane !== pendingQueue.lane;\n      if (\n        isHiddenUpdate\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        0 !== updateLane &&\n          updateLane === currentEntangledLane &&\n          (didReadFromEntangledAsyncAction = !0);\n        null !== current &&\n          (current = current.next =\n            {\n              lane: 0,\n              tag: pendingQueue.tag,\n              payload: pendingQueue.payload,\n              callback: null,\n              next: null\n            });\n        a: {\n          var workInProgress = workInProgress$jscomp$0,\n            update = pendingQueue;\n          updateLane = props;\n          var instance = instance$jscomp$0;\n          switch (update.tag) {\n            case 1:\n              workInProgress = update.payload;\n              if (\"function\" === typeof workInProgress) {\n                newState = workInProgress.call(instance, newState, updateLane);\n                break a;\n              }\n              newState = workInProgress;\n              break a;\n            case 3:\n              workInProgress.flags = (workInProgress.flags & -65537) | 128;\n            case 0:\n              workInProgress = update.payload;\n              updateLane =\n                \"function\" === typeof workInProgress\n                  ? workInProgress.call(instance, newState, updateLane)\n                  : workInProgress;\n              if (null === updateLane || void 0 === updateLane) break a;\n              newState = assign({}, newState, updateLane);\n              break a;\n            case 2:\n              hasForceUpdate = !0;\n          }\n        }\n        updateLane = pendingQueue.callback;\n        null !== updateLane &&\n          ((workInProgress$jscomp$0.flags |= 64),\n          isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192),\n          (isHiddenUpdate = queue.callbacks),\n          null === isHiddenUpdate\n            ? (queue.callbacks = [updateLane])\n            : isHiddenUpdate.push(updateLane));\n      } else\n        (isHiddenUpdate = {\n          lane: updateLane,\n          tag: pendingQueue.tag,\n          payload: pendingQueue.payload,\n          callback: pendingQueue.callback,\n          next: null\n        }),\n          null === current\n            ? ((firstPendingUpdate = current = isHiddenUpdate),\n              (lastPendingUpdate = newState))\n            : (current = current.next = isHiddenUpdate),\n          (lastBaseUpdate |= updateLane);\n      pendingQueue = pendingQueue.next;\n      if (null === pendingQueue)\n        if (((pendingQueue = queue.shared.pending), null === pendingQueue))\n          break;\n        else\n          (isHiddenUpdate = pendingQueue),\n            (pendingQueue = isHiddenUpdate.next),\n            (isHiddenUpdate.next = null),\n            (queue.lastBaseUpdate = isHiddenUpdate),\n            (queue.shared.pending = null);\n    } while (1);\n    null === current && (lastPendingUpdate = newState);\n    queue.baseState = lastPendingUpdate;\n    queue.firstBaseUpdate = firstPendingUpdate;\n    queue.lastBaseUpdate = current;\n    null === firstBaseUpdate && (queue.shared.lanes = 0);\n    workInProgressRootSkippedLanes |= lastBaseUpdate;\n    workInProgress$jscomp$0.lanes = lastBaseUpdate;\n    workInProgress$jscomp$0.memoizedState = newState;\n  }\n}\nfunction callCallback(callback, context) {\n  if (\"function\" !== typeof callback)\n    throw Error(formatProdErrorMessage(191, callback));\n  callback.call(context);\n}\nfunction commitCallbacks(updateQueue, context) {\n  var callbacks = updateQueue.callbacks;\n  if (null !== callbacks)\n    for (\n      updateQueue.callbacks = null, updateQueue = 0;\n      updateQueue < callbacks.length;\n      updateQueue++\n    )\n      callCallback(callbacks[updateQueue], context);\n}\nfunction commitHookEffectListMount(flags, finishedWork) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          lastEffect = void 0;\n          var create = updateQueue.create,\n            inst = updateQueue.inst;\n          lastEffect = create();\n          inst.destroy = lastEffect;\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHookEffectListUnmount(\n  flags,\n  finishedWork,\n  nearestMountedAncestor$jscomp$0\n) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          var inst = updateQueue.inst,\n            destroy = inst.destroy;\n          if (void 0 !== destroy) {\n            inst.destroy = void 0;\n            lastEffect = finishedWork;\n            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0;\n            try {\n              destroy();\n            } catch (error) {\n              captureCommitPhaseError(\n                lastEffect,\n                nearestMountedAncestor,\n                error\n              );\n            }\n          }\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitClassCallbacks(finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  if (null !== updateQueue) {\n    var instance = finishedWork.stateNode;\n    try {\n      commitCallbacks(updateQueue, instance);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n  }\n}\nfunction safelyCallComponentWillUnmount(\n  current,\n  nearestMountedAncestor,\n  instance\n) {\n  instance.props = resolveClassComponentProps(\n    current.type,\n    current.memoizedProps\n  );\n  instance.state = current.memoizedState;\n  try {\n    instance.componentWillUnmount();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyAttachRef(current, nearestMountedAncestor) {\n  try {\n    var ref = current.ref;\n    if (null !== ref) {\n      var instance = current.stateNode;\n      switch (current.tag) {\n        case 26:\n        case 27:\n        case 5:\n          var instanceToUse = instance;\n          break;\n        default:\n          instanceToUse = instance;\n      }\n      \"function\" === typeof ref\n        ? (current.refCleanup = ref(instanceToUse))\n        : (ref.current = instanceToUse);\n    }\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyDetachRef(current, nearestMountedAncestor) {\n  var ref = current.ref,\n    refCleanup = current.refCleanup;\n  if (null !== ref)\n    if (\"function\" === typeof refCleanup)\n      try {\n        refCleanup();\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      } finally {\n        (current.refCleanup = null),\n          (current = current.alternate),\n          null != current && (current.refCleanup = null);\n      }\n    else if (\"function\" === typeof ref)\n      try {\n        ref(null);\n      } catch (error$112) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error$112);\n      }\n    else ref.current = null;\n}\nfunction commitHostMount(finishedWork) {\n  var type = finishedWork.type,\n    props = finishedWork.memoizedProps,\n    instance = finishedWork.stateNode;\n  try {\n    a: switch (type) {\n      case \"button\":\n      case \"input\":\n      case \"select\":\n      case \"textarea\":\n        props.autoFocus && instance.focus();\n        break a;\n      case \"img\":\n        props.src\n          ? (instance.src = props.src)\n          : props.srcSet && (instance.srcset = props.srcSet);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHostUpdate(finishedWork, newProps, oldProps) {\n  try {\n    var domElement = finishedWork.stateNode;\n    updateProperties(domElement, finishedWork.type, oldProps, newProps);\n    domElement[internalPropsKey] = newProps;\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction isHostParent(fiber) {\n  return (\n    5 === fiber.tag ||\n    3 === fiber.tag ||\n    26 === fiber.tag ||\n    27 === fiber.tag ||\n    4 === fiber.tag\n  );\n}\nfunction getHostSibling(fiber) {\n  a: for (;;) {\n    for (; null === fiber.sibling; ) {\n      if (null === fiber.return || isHostParent(fiber.return)) return null;\n      fiber = fiber.return;\n    }\n    fiber.sibling.return = fiber.return;\n    for (\n      fiber = fiber.sibling;\n      5 !== fiber.tag &&\n      6 !== fiber.tag &&\n      27 !== fiber.tag &&\n      18 !== fiber.tag;\n\n    ) {\n      if (fiber.flags & 2) continue a;\n      if (null === fiber.child || 4 === fiber.tag) continue a;\n      else (fiber.child.return = fiber), (fiber = fiber.child);\n    }\n    if (!(fiber.flags & 2)) return fiber.stateNode;\n  }\n}\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before\n        ? 8 === parent.nodeType\n          ? parent.parentNode.insertBefore(node, before)\n          : parent.insertBefore(node, before)\n        : (8 === parent.nodeType\n            ? ((before = parent.parentNode), before.insertBefore(node, parent))\n            : ((before = parent), before.appendChild(node)),\n          (parent = parent._reactRootContainer),\n          (null !== parent && void 0 !== parent) ||\n            null !== before.onclick ||\n            (before.onclick = noop$1));\n  else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))\n    for (\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        (node = node.sibling);\n}\nfunction insertOrAppendPlacementNode(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before ? parent.insertBefore(node, before) : parent.appendChild(node);\n  else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))\n    for (\n      insertOrAppendPlacementNode(node, before, parent), node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNode(node, before, parent), (node = node.sibling);\n}\nvar offscreenSubtreeIsHidden = !1,\n  offscreenSubtreeWasHidden = !1,\n  needsFormReset = !1,\n  PossiblyWeakSet = \"function\" === typeof WeakSet ? WeakSet : Set,\n  nextEffect = null,\n  shouldFireAfterActiveInstanceBlur = !1;\nfunction commitBeforeMutationEffects(root, firstChild) {\n  root = root.containerInfo;\n  eventsEnabled = _enabled;\n  root = getActiveElementDeep(root);\n  if (hasSelectionCapabilities(root)) {\n    if (\"selectionStart\" in root)\n      var JSCompiler_temp = {\n        start: root.selectionStart,\n        end: root.selectionEnd\n      };\n    else\n      a: {\n        JSCompiler_temp =\n          ((JSCompiler_temp = root.ownerDocument) &&\n            JSCompiler_temp.defaultView) ||\n          window;\n        var selection =\n          JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();\n        if (selection && 0 !== selection.rangeCount) {\n          JSCompiler_temp = selection.anchorNode;\n          var anchorOffset = selection.anchorOffset,\n            focusNode = selection.focusNode;\n          selection = selection.focusOffset;\n          try {\n            JSCompiler_temp.nodeType, focusNode.nodeType;\n          } catch (e$20) {\n            JSCompiler_temp = null;\n            break a;\n          }\n          var length = 0,\n            start = -1,\n            end = -1,\n            indexWithinAnchor = 0,\n            indexWithinFocus = 0,\n            node = root,\n            parentNode = null;\n          b: for (;;) {\n            for (var next; ; ) {\n              node !== JSCompiler_temp ||\n                (0 !== anchorOffset && 3 !== node.nodeType) ||\n                (start = length + anchorOffset);\n              node !== focusNode ||\n                (0 !== selection && 3 !== node.nodeType) ||\n                (end = length + selection);\n              3 === node.nodeType && (length += node.nodeValue.length);\n              if (null === (next = node.firstChild)) break;\n              parentNode = node;\n              node = next;\n            }\n            for (;;) {\n              if (node === root) break b;\n              parentNode === JSCompiler_temp &&\n                ++indexWithinAnchor === anchorOffset &&\n                (start = length);\n              parentNode === focusNode &&\n                ++indexWithinFocus === selection &&\n                (end = length);\n              if (null !== (next = node.nextSibling)) break;\n              node = parentNode;\n              parentNode = node.parentNode;\n            }\n            node = next;\n          }\n          JSCompiler_temp =\n            -1 === start || -1 === end ? null : { start: start, end: end };\n        } else JSCompiler_temp = null;\n      }\n    JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };\n  } else JSCompiler_temp = null;\n  selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };\n  _enabled = !1;\n  for (nextEffect = firstChild; null !== nextEffect; )\n    if (\n      ((firstChild = nextEffect),\n      (root = firstChild.child),\n      0 !== (firstChild.subtreeFlags & 1028) && null !== root)\n    )\n      (root.return = firstChild), (nextEffect = root);\n    else\n      for (; null !== nextEffect; ) {\n        firstChild = nextEffect;\n        focusNode = firstChild.alternate;\n        root = firstChild.flags;\n        switch (firstChild.tag) {\n          case 0:\n            break;\n          case 11:\n          case 15:\n            break;\n          case 1:\n            if (0 !== (root & 1024) && null !== focusNode) {\n              root = void 0;\n              JSCompiler_temp = firstChild;\n              anchorOffset = focusNode.memoizedProps;\n              focusNode = focusNode.memoizedState;\n              selection = JSCompiler_temp.stateNode;\n              try {\n                var resolvedPrevProps = resolveClassComponentProps(\n                  JSCompiler_temp.type,\n                  anchorOffset,\n                  JSCompiler_temp.elementType === JSCompiler_temp.type\n                );\n                root = selection.getSnapshotBeforeUpdate(\n                  resolvedPrevProps,\n                  focusNode\n                );\n                selection.__reactInternalSnapshotBeforeUpdate = root;\n              } catch (error) {\n                captureCommitPhaseError(\n                  JSCompiler_temp,\n                  JSCompiler_temp.return,\n                  error\n                );\n              }\n            }\n            break;\n          case 3:\n            if (0 !== (root & 1024))\n              if (\n                ((root = firstChild.stateNode.containerInfo),\n                (JSCompiler_temp = root.nodeType),\n                9 === JSCompiler_temp)\n              )\n                clearContainerSparingly(root);\n              else if (1 === JSCompiler_temp)\n                switch (root.nodeName) {\n                  case \"HEAD\":\n                  case \"HTML\":\n                  case \"BODY\":\n                    clearContainerSparingly(root);\n                    break;\n                  default:\n                    root.textContent = \"\";\n                }\n            break;\n          case 5:\n          case 26:\n          case 27:\n          case 6:\n          case 4:\n          case 17:\n            break;\n          default:\n            if (0 !== (root & 1024)) throw Error(formatProdErrorMessage(163));\n        }\n        root = firstChild.sibling;\n        if (null !== root) {\n          root.return = firstChild.return;\n          nextEffect = root;\n          break;\n        }\n        nextEffect = firstChild.return;\n      }\n  resolvedPrevProps = shouldFireAfterActiveInstanceBlur;\n  shouldFireAfterActiveInstanceBlur = !1;\n  return resolvedPrevProps;\n}\nfunction commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitHookEffectListMount(5, finishedWork);\n      break;\n    case 1:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (flags & 4)\n        if (((finishedRoot = finishedWork.stateNode), null === current))\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        else {\n          var prevProps = resolveClassComponentProps(\n            finishedWork.type,\n            current.memoizedProps\n          );\n          current = current.memoizedState;\n          try {\n            finishedRoot.componentDidUpdate(\n              prevProps,\n              current,\n              finishedRoot.__reactInternalSnapshotBeforeUpdate\n            );\n          } catch (error$111) {\n            captureCommitPhaseError(\n              finishedWork,\n              finishedWork.return,\n              error$111\n            );\n          }\n        }\n      flags & 64 && commitClassCallbacks(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (flags & 64 && ((flags = finishedWork.updateQueue), null !== flags)) {\n        finishedRoot = null;\n        if (null !== finishedWork.child)\n          switch (finishedWork.child.tag) {\n            case 27:\n            case 5:\n              finishedRoot = finishedWork.child.stateNode;\n              break;\n            case 1:\n              finishedRoot = finishedWork.child.stateNode;\n          }\n        try {\n          commitCallbacks(flags, finishedRoot);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 26:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 27:\n    case 5:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      null === current && flags & 4 && commitHostMount(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 12:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n      break;\n    case 22:\n      prevProps =\n        null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;\n      if (!prevProps) {\n        current =\n          (null !== current && null !== current.memoizedState) ||\n          offscreenSubtreeWasHidden;\n        var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,\n          prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n        offscreenSubtreeIsHidden = prevProps;\n        (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden\n          ? recursivelyTraverseReappearLayoutEffects(\n              finishedRoot,\n              finishedWork,\n              0 !== (finishedWork.subtreeFlags & 8772)\n            )\n          : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n        offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      }\n      flags & 512 &&\n        (\"manual\" === finishedWork.memoizedProps.mode\n          ? safelyAttachRef(finishedWork, finishedWork.return)\n          : safelyDetachRef(finishedWork, finishedWork.return));\n      break;\n    default:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n  }\n}\nfunction detachFiberAfterEffects(fiber) {\n  var alternate = fiber.alternate;\n  null !== alternate &&\n    ((fiber.alternate = null), detachFiberAfterEffects(alternate));\n  fiber.child = null;\n  fiber.deletions = null;\n  fiber.sibling = null;\n  5 === fiber.tag &&\n    ((alternate = fiber.stateNode),\n    null !== alternate && detachDeletedInstance(alternate));\n  fiber.stateNode = null;\n  fiber.return = null;\n  fiber.dependencies = null;\n  fiber.memoizedProps = null;\n  fiber.memoizedState = null;\n  fiber.pendingProps = null;\n  fiber.stateNode = null;\n  fiber.updateQueue = null;\n}\nvar hostParent = null,\n  hostParentIsContainer = !1;\nfunction recursivelyTraverseDeletionEffects(\n  finishedRoot,\n  nearestMountedAncestor,\n  parent\n) {\n  for (parent = parent.child; null !== parent; )\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent),\n      (parent = parent.sibling);\n}\nfunction commitDeletionEffectsOnFiber(\n  finishedRoot,\n  nearestMountedAncestor,\n  deletedFiber\n) {\n  if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberUnmount)\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);\n    } catch (err) {}\n  switch (deletedFiber.tag) {\n    case 26:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      deletedFiber.memoizedState\n        ? deletedFiber.memoizedState.count--\n        : deletedFiber.stateNode &&\n          ((deletedFiber = deletedFiber.stateNode),\n          deletedFiber.parentNode.removeChild(deletedFiber));\n      break;\n    case 27:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      var prevHostParent = hostParent,\n        prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = deletedFiber.stateNode;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      deletedFiber = deletedFiber.stateNode;\n      for (\n        nearestMountedAncestor = deletedFiber.attributes;\n        nearestMountedAncestor.length;\n\n      )\n        deletedFiber.removeAttributeNode(nearestMountedAncestor[0]);\n      detachDeletedInstance(deletedFiber);\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 5:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n    case 6:\n      prevHostParentIsContainer = hostParent;\n      var prevHostParentIsContainer$119 = hostParentIsContainer;\n      hostParent = null;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParentIsContainer;\n      hostParentIsContainer = prevHostParentIsContainer$119;\n      if (null !== hostParent)\n        if (hostParentIsContainer)\n          try {\n            (finishedRoot = hostParent),\n              (prevHostParent = deletedFiber.stateNode),\n              8 === finishedRoot.nodeType\n                ? finishedRoot.parentNode.removeChild(prevHostParent)\n                : finishedRoot.removeChild(prevHostParent);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n        else\n          try {\n            hostParent.removeChild(deletedFiber.stateNode);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n      break;\n    case 18:\n      null !== hostParent &&\n        (hostParentIsContainer\n          ? ((nearestMountedAncestor = hostParent),\n            (deletedFiber = deletedFiber.stateNode),\n            8 === nearestMountedAncestor.nodeType\n              ? clearSuspenseBoundary(\n                  nearestMountedAncestor.parentNode,\n                  deletedFiber\n                )\n              : 1 === nearestMountedAncestor.nodeType &&\n                clearSuspenseBoundary(nearestMountedAncestor, deletedFiber),\n            retryIfBlockedOn(nearestMountedAncestor))\n          : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));\n      break;\n    case 4:\n      prevHostParent = hostParent;\n      prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = deletedFiber.stateNode.containerInfo;\n      hostParentIsContainer = !0;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(2, deletedFiber, nearestMountedAncestor);\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(4, deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 1:\n      offscreenSubtreeWasHidden ||\n        (safelyDetachRef(deletedFiber, nearestMountedAncestor),\n        (prevHostParent = deletedFiber.stateNode),\n        \"function\" === typeof prevHostParent.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            deletedFiber,\n            nearestMountedAncestor,\n            prevHostParent\n          ));\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 21:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 22:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      offscreenSubtreeWasHidden =\n        (prevHostParent = offscreenSubtreeWasHidden) ||\n        null !== deletedFiber.memoizedState;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      offscreenSubtreeWasHidden = prevHostParent;\n      break;\n    default:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n  }\n}\nfunction commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {\n  if (\n    null === finishedWork.memoizedState &&\n    ((finishedRoot = finishedWork.alternate),\n    null !== finishedRoot &&\n      ((finishedRoot = finishedRoot.memoizedState),\n      null !== finishedRoot &&\n        ((finishedRoot = finishedRoot.dehydrated), null !== finishedRoot)))\n  )\n    try {\n      retryIfBlockedOn(finishedRoot);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n}\nfunction getRetryCache(finishedWork) {\n  switch (finishedWork.tag) {\n    case 13:\n    case 19:\n      var retryCache = finishedWork.stateNode;\n      null === retryCache &&\n        (retryCache = finishedWork.stateNode = new PossiblyWeakSet());\n      return retryCache;\n    case 22:\n      return (\n        (finishedWork = finishedWork.stateNode),\n        (retryCache = finishedWork._retryCache),\n        null === retryCache &&\n          (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),\n        retryCache\n      );\n    default:\n      throw Error(formatProdErrorMessage(435, finishedWork.tag));\n  }\n}\nfunction attachSuspenseRetryListeners(finishedWork, wakeables) {\n  var retryCache = getRetryCache(finishedWork);\n  wakeables.forEach(function (wakeable) {\n    var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n    retryCache.has(wakeable) ||\n      (retryCache.add(wakeable), wakeable.then(retry, retry));\n  });\n}\nfunction recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (null !== deletions)\n    for (var i = 0; i < deletions.length; i++) {\n      var childToDelete = deletions[i],\n        root = root$jscomp$0,\n        returnFiber = parentFiber,\n        parent = returnFiber;\n      a: for (; null !== parent; ) {\n        switch (parent.tag) {\n          case 27:\n          case 5:\n            hostParent = parent.stateNode;\n            hostParentIsContainer = !1;\n            break a;\n          case 3:\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = !0;\n            break a;\n          case 4:\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = !0;\n            break a;\n        }\n        parent = parent.return;\n      }\n      if (null === hostParent) throw Error(formatProdErrorMessage(160));\n      commitDeletionEffectsOnFiber(root, returnFiber, childToDelete);\n      hostParent = null;\n      hostParentIsContainer = !1;\n      root = childToDelete.alternate;\n      null !== root && (root.return = null);\n      childToDelete.return = null;\n    }\n  if (parentFiber.subtreeFlags & 13878)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitMutationEffectsOnFiber(parentFiber, root$jscomp$0),\n        (parentFiber = parentFiber.sibling);\n}\nvar currentHoistableRoot = null;\nfunction commitMutationEffectsOnFiber(finishedWork, root) {\n  var current = finishedWork.alternate,\n    flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        (commitHookEffectListUnmount(3, finishedWork, finishedWork.return),\n        commitHookEffectListMount(3, finishedWork),\n        commitHookEffectListUnmount(5, finishedWork, finishedWork.return));\n      break;\n    case 1:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      flags & 64 &&\n        offscreenSubtreeIsHidden &&\n        ((finishedWork = finishedWork.updateQueue),\n        null !== finishedWork &&\n          ((flags = finishedWork.callbacks),\n          null !== flags &&\n            ((current = finishedWork.shared.hiddenCallbacks),\n            (finishedWork.shared.hiddenCallbacks =\n              null === current ? flags : current.concat(flags)))));\n      break;\n    case 26:\n      var hoistableRoot = currentHoistableRoot;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (flags & 4) {\n        var currentResource = null !== current ? current.memoizedState : null;\n        flags = finishedWork.memoizedState;\n        if (null === current)\n          if (null === flags)\n            if (null === finishedWork.stateNode) {\n              a: {\n                flags = finishedWork.type;\n                current = finishedWork.memoizedProps;\n                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n                b: switch (flags) {\n                  case \"title\":\n                    currentResource =\n                      hoistableRoot.getElementsByTagName(\"title\")[0];\n                    if (\n                      !currentResource ||\n                      currentResource[internalHoistableMarker] ||\n                      currentResource[internalInstanceKey] ||\n                      \"http://www.w3.org/2000/svg\" ===\n                        currentResource.namespaceURI ||\n                      currentResource.hasAttribute(\"itemprop\")\n                    )\n                      (currentResource = hoistableRoot.createElement(flags)),\n                        hoistableRoot.head.insertBefore(\n                          currentResource,\n                          hoistableRoot.querySelector(\"head > title\")\n                        );\n                    setInitialProperties(currentResource, flags, current);\n                    currentResource[internalInstanceKey] = finishedWork;\n                    markNodeAsHoistable(currentResource);\n                    flags = currentResource;\n                    break a;\n                  case \"link\":\n                    var maybeNodes = getHydratableHoistableCache(\n                      \"link\",\n                      \"href\",\n                      hoistableRoot\n                    ).get(flags + (current.href || \"\"));\n                    if (maybeNodes)\n                      for (var i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"href\") ===\n                            (null == current.href ? null : current.href) &&\n                            currentResource.getAttribute(\"rel\") ===\n                              (null == current.rel ? null : current.rel) &&\n                            currentResource.getAttribute(\"title\") ===\n                              (null == current.title ? null : current.title) &&\n                            currentResource.getAttribute(\"crossorigin\") ===\n                              (null == current.crossOrigin\n                                ? null\n                                : current.crossOrigin))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  case \"meta\":\n                    if (\n                      (maybeNodes = getHydratableHoistableCache(\n                        \"meta\",\n                        \"content\",\n                        hoistableRoot\n                      ).get(flags + (current.content || \"\")))\n                    )\n                      for (i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"content\") ===\n                            (null == current.content\n                              ? null\n                              : \"\" + current.content) &&\n                            currentResource.getAttribute(\"name\") ===\n                              (null == current.name ? null : current.name) &&\n                            currentResource.getAttribute(\"property\") ===\n                              (null == current.property\n                                ? null\n                                : current.property) &&\n                            currentResource.getAttribute(\"http-equiv\") ===\n                              (null == current.httpEquiv\n                                ? null\n                                : current.httpEquiv) &&\n                            currentResource.getAttribute(\"charset\") ===\n                              (null == current.charSet\n                                ? null\n                                : current.charSet))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  default:\n                    throw Error(formatProdErrorMessage(468, flags));\n                }\n                currentResource[internalInstanceKey] = finishedWork;\n                markNodeAsHoistable(currentResource);\n                flags = currentResource;\n              }\n              finishedWork.stateNode = flags;\n            } else\n              mountHoistable(\n                hoistableRoot,\n                finishedWork.type,\n                finishedWork.stateNode\n              );\n          else\n            finishedWork.stateNode = acquireResource(\n              hoistableRoot,\n              flags,\n              finishedWork.memoizedProps\n            );\n        else\n          currentResource !== flags\n            ? (null === currentResource\n                ? null !== current.stateNode &&\n                  ((current = current.stateNode),\n                  current.parentNode.removeChild(current))\n                : currentResource.count--,\n              null === flags\n                ? mountHoistable(\n                    hoistableRoot,\n                    finishedWork.type,\n                    finishedWork.stateNode\n                  )\n                : acquireResource(\n                    hoistableRoot,\n                    flags,\n                    finishedWork.memoizedProps\n                  ))\n            : null === flags &&\n              null !== finishedWork.stateNode &&\n              commitHostUpdate(\n                finishedWork,\n                finishedWork.memoizedProps,\n                current.memoizedProps\n              );\n      }\n      break;\n    case 27:\n      if (flags & 4 && null === finishedWork.alternate) {\n        hoistableRoot = finishedWork.stateNode;\n        currentResource = finishedWork.memoizedProps;\n        try {\n          for (var node = hoistableRoot.firstChild; node; ) {\n            var nextNode = node.nextSibling,\n              nodeName = node.nodeName;\n            node[internalHoistableMarker] ||\n              \"HEAD\" === nodeName ||\n              \"BODY\" === nodeName ||\n              \"SCRIPT\" === nodeName ||\n              \"STYLE\" === nodeName ||\n              (\"LINK\" === nodeName &&\n                \"stylesheet\" === node.rel.toLowerCase()) ||\n              hoistableRoot.removeChild(node);\n            node = nextNode;\n          }\n          for (\n            var type = finishedWork.type, attributes = hoistableRoot.attributes;\n            attributes.length;\n\n          )\n            hoistableRoot.removeAttributeNode(attributes[0]);\n          setInitialProperties(hoistableRoot, type, currentResource);\n          hoistableRoot[internalInstanceKey] = finishedWork;\n          hoistableRoot[internalPropsKey] = currentResource;\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n    case 5:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (finishedWork.flags & 32) {\n        hoistableRoot = finishedWork.stateNode;\n        try {\n          setTextContent(hoistableRoot, \"\");\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      flags & 4 &&\n        null != finishedWork.stateNode &&\n        ((hoistableRoot = finishedWork.memoizedProps),\n        commitHostUpdate(\n          finishedWork,\n          hoistableRoot,\n          null !== current ? current.memoizedProps : hoistableRoot\n        ));\n      flags & 1024 && (needsFormReset = !0);\n      break;\n    case 6:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4) {\n        if (null === finishedWork.stateNode)\n          throw Error(formatProdErrorMessage(162));\n        flags = finishedWork.memoizedProps;\n        current = finishedWork.stateNode;\n        try {\n          current.nodeValue = flags;\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 3:\n      tagCaches = null;\n      hoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(root.containerInfo);\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      currentHoistableRoot = hoistableRoot;\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4 && null !== current && current.memoizedState.isDehydrated)\n        try {\n          retryIfBlockedOn(root.containerInfo);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      needsFormReset &&\n        ((needsFormReset = !1), recursivelyResetForms(finishedWork));\n      break;\n    case 4:\n      flags = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(\n        finishedWork.stateNode.containerInfo\n      );\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      currentHoistableRoot = flags;\n      break;\n    case 12:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      finishedWork.child.flags & 8192 &&\n        (null !== finishedWork.memoizedState) !==\n          (null !== current && null !== current.memoizedState) &&\n        (globalMostRecentFallbackTime = now());\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 22:\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      node = null !== finishedWork.memoizedState;\n      nextNode = null !== current && null !== current.memoizedState;\n      nodeName = offscreenSubtreeIsHidden;\n      type = offscreenSubtreeWasHidden;\n      offscreenSubtreeIsHidden = nodeName || node;\n      offscreenSubtreeWasHidden = type || nextNode;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      offscreenSubtreeWasHidden = type;\n      offscreenSubtreeIsHidden = nodeName;\n      commitReconciliationEffects(finishedWork);\n      root = finishedWork.stateNode;\n      root._current = finishedWork;\n      root._visibility &= -3;\n      root._visibility |= root._pendingVisibility & 2;\n      if (\n        flags & 8192 &&\n        ((root._visibility = node\n          ? root._visibility & -2\n          : root._visibility | 1),\n        node &&\n          ((root = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden),\n          null === current ||\n            nextNode ||\n            root ||\n            recursivelyTraverseDisappearLayoutEffects(finishedWork)),\n        null === finishedWork.memoizedProps ||\n          \"manual\" !== finishedWork.memoizedProps.mode)\n      )\n        a: for (current = null, root = finishedWork; ; ) {\n          if (5 === root.tag || 26 === root.tag || 27 === root.tag) {\n            if (null === current) {\n              nextNode = current = root;\n              try {\n                if (((hoistableRoot = nextNode.stateNode), node))\n                  (currentResource = hoistableRoot.style),\n                    \"function\" === typeof currentResource.setProperty\n                      ? currentResource.setProperty(\n                          \"display\",\n                          \"none\",\n                          \"important\"\n                        )\n                      : (currentResource.display = \"none\");\n                else {\n                  maybeNodes = nextNode.stateNode;\n                  i = nextNode.memoizedProps.style;\n                  var display =\n                    void 0 !== i && null !== i && i.hasOwnProperty(\"display\")\n                      ? i.display\n                      : null;\n                  maybeNodes.style.display =\n                    null == display || \"boolean\" === typeof display\n                      ? \"\"\n                      : (\"\" + display).trim();\n                }\n              } catch (error) {\n                captureCommitPhaseError(nextNode, nextNode.return, error);\n              }\n            }\n          } else if (6 === root.tag) {\n            if (null === current) {\n              nextNode = root;\n              try {\n                nextNode.stateNode.nodeValue = node\n                  ? \"\"\n                  : nextNode.memoizedProps;\n              } catch (error) {\n                captureCommitPhaseError(nextNode, nextNode.return, error);\n              }\n            }\n          } else if (\n            ((22 !== root.tag && 23 !== root.tag) ||\n              null === root.memoizedState ||\n              root === finishedWork) &&\n            null !== root.child\n          ) {\n            root.child.return = root;\n            root = root.child;\n            continue;\n          }\n          if (root === finishedWork) break a;\n          for (; null === root.sibling; ) {\n            if (null === root.return || root.return === finishedWork) break a;\n            current === root && (current = null);\n            root = root.return;\n          }\n          current === root && (current = null);\n          root.sibling.return = root.return;\n          root = root.sibling;\n        }\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((current = flags.retryQueue),\n          null !== current &&\n            ((flags.retryQueue = null),\n            attachSuspenseRetryListeners(finishedWork, current))));\n      break;\n    case 19:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 21:\n      break;\n    default:\n      recursivelyTraverseMutationEffects(root, finishedWork),\n        commitReconciliationEffects(finishedWork);\n  }\n}\nfunction commitReconciliationEffects(finishedWork) {\n  var flags = finishedWork.flags;\n  if (flags & 2) {\n    try {\n      if (27 !== finishedWork.tag) {\n        a: {\n          for (var parent = finishedWork.return; null !== parent; ) {\n            if (isHostParent(parent)) {\n              var JSCompiler_inline_result = parent;\n              break a;\n            }\n            parent = parent.return;\n          }\n          throw Error(formatProdErrorMessage(160));\n        }\n        switch (JSCompiler_inline_result.tag) {\n          case 27:\n            var parent$jscomp$0 = JSCompiler_inline_result.stateNode,\n              before = getHostSibling(finishedWork);\n            insertOrAppendPlacementNode(finishedWork, before, parent$jscomp$0);\n            break;\n          case 5:\n            var parent$113 = JSCompiler_inline_result.stateNode;\n            JSCompiler_inline_result.flags & 32 &&\n              (setTextContent(parent$113, \"\"),\n              (JSCompiler_inline_result.flags &= -33));\n            var before$114 = getHostSibling(finishedWork);\n            insertOrAppendPlacementNode(finishedWork, before$114, parent$113);\n            break;\n          case 3:\n          case 4:\n            var parent$115 = JSCompiler_inline_result.stateNode.containerInfo,\n              before$116 = getHostSibling(finishedWork);\n            insertOrAppendPlacementNodeIntoContainer(\n              finishedWork,\n              before$116,\n              parent$115\n            );\n            break;\n          default:\n            throw Error(formatProdErrorMessage(161));\n        }\n      }\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n    finishedWork.flags &= -3;\n  }\n  flags & 4096 && (finishedWork.flags &= -4097);\n}\nfunction recursivelyResetForms(parentFiber) {\n  if (parentFiber.subtreeFlags & 1024)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var fiber = parentFiber;\n      recursivelyResetForms(fiber);\n      5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();\n      parentFiber = parentFiber.sibling;\n    }\n}\nfunction recursivelyTraverseLayoutEffects(root, parentFiber) {\n  if (parentFiber.subtreeFlags & 8772)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction recursivelyTraverseDisappearLayoutEffects(parentFiber) {\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedWork = parentFiber;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 14:\n      case 15:\n        commitHookEffectListUnmount(4, finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 1:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        var instance = finishedWork.stateNode;\n        \"function\" === typeof instance.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            finishedWork,\n            finishedWork.return,\n            instance\n          );\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 26:\n      case 27:\n      case 5:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 22:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      default:\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseReappearLayoutEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var current = parentFiber.alternate,\n      finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(4, finishedWork);\n        break;\n      case 1:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        current = finishedWork;\n        finishedRoot = current.stateNode;\n        if (\"function\" === typeof finishedRoot.componentDidMount)\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        current = finishedWork;\n        finishedRoot = current.updateQueue;\n        if (null !== finishedRoot) {\n          var instance = current.stateNode;\n          try {\n            var hiddenCallbacks = finishedRoot.shared.hiddenCallbacks;\n            if (null !== hiddenCallbacks)\n              for (\n                finishedRoot.shared.hiddenCallbacks = null, finishedRoot = 0;\n                finishedRoot < hiddenCallbacks.length;\n                finishedRoot++\n              )\n                callCallback(hiddenCallbacks[finishedRoot], instance);\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        }\n        includeWorkInProgressEffects &&\n          flags & 64 &&\n          commitClassCallbacks(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 26:\n      case 27:\n      case 5:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          null === current &&\n          flags & 4 &&\n          commitHostMount(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 12:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        break;\n      case 13:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 4 &&\n          commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n        break;\n      case 22:\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseReappearLayoutEffects(\n            finishedRoot,\n            finishedWork,\n            includeWorkInProgressEffects\n          );\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      default:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitOffscreenPassiveMountEffects(current, finishedWork) {\n  var previousCache = null;\n  null !== current &&\n    null !== current.memoizedState &&\n    null !== current.memoizedState.cachePool &&\n    (previousCache = current.memoizedState.cachePool.pool);\n  current = null;\n  null !== finishedWork.memoizedState &&\n    null !== finishedWork.memoizedState.cachePool &&\n    (current = finishedWork.memoizedState.cachePool.pool);\n  current !== previousCache &&\n    (null != current && current.refCount++,\n    null != previousCache && releaseCache(previousCache));\n}\nfunction commitCachePassiveMountEffect(current, finishedWork) {\n  current = null;\n  null !== finishedWork.alternate &&\n    (current = finishedWork.alternate.memoizedState.cache);\n  finishedWork = finishedWork.memoizedState.cache;\n  finishedWork !== current &&\n    (finishedWork.refCount++, null != current && releaseCache(current));\n}\nfunction recursivelyTraversePassiveMountEffects(\n  root,\n  parentFiber,\n  committedLanes,\n  committedTransitions\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveMountOnFiber(\n        root,\n        parentFiber,\n        committedLanes,\n        committedTransitions\n      ),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveMountOnFiber(\n  finishedRoot,\n  finishedWork,\n  committedLanes,\n  committedTransitions\n) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 && commitHookEffectListMount(9, finishedWork);\n      break;\n    case 3:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        ((finishedRoot = null),\n        null !== finishedWork.alternate &&\n          (finishedRoot = finishedWork.alternate.memoizedState.cache),\n        (finishedWork = finishedWork.memoizedState.cache),\n        finishedWork !== finishedRoot &&\n          (finishedWork.refCount++,\n          null != finishedRoot && releaseCache(finishedRoot)));\n      break;\n    case 12:\n      if (flags & 2048) {\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n        finishedRoot = finishedWork.stateNode;\n        try {\n          var _finishedWork$memoize2 = finishedWork.memoizedProps,\n            id = _finishedWork$memoize2.id,\n            onPostCommit = _finishedWork$memoize2.onPostCommit;\n          \"function\" === typeof onPostCommit &&\n            onPostCommit(\n              id,\n              null === finishedWork.alternate ? \"mount\" : \"update\",\n              finishedRoot.passiveEffectDuration,\n              -0\n            );\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      } else\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n      break;\n    case 23:\n      break;\n    case 22:\n      _finishedWork$memoize2 = finishedWork.stateNode;\n      null !== finishedWork.memoizedState\n        ? _finishedWork$memoize2._visibility & 4\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork)\n        : _finishedWork$memoize2._visibility & 4\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : ((_finishedWork$memoize2._visibility |= 4),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              0 !== (finishedWork.subtreeFlags & 10256)\n            ));\n      flags & 2048 &&\n        commitOffscreenPassiveMountEffects(\n          finishedWork.alternate,\n          finishedWork\n        );\n      break;\n    case 24:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n  }\n}\nfunction recursivelyTraverseReconnectPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  committedLanes$jscomp$0,\n  committedTransitions$jscomp$0,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      committedLanes = committedLanes$jscomp$0,\n      committedTransitions = committedTransitions$jscomp$0,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(8, finishedWork);\n        break;\n      case 23:\n        break;\n      case 22:\n        var instance = finishedWork.stateNode;\n        null !== finishedWork.memoizedState\n          ? instance._visibility & 4\n            ? recursivelyTraverseReconnectPassiveEffects(\n                finishedRoot,\n                finishedWork,\n                committedLanes,\n                committedTransitions,\n                includeWorkInProgressEffects\n              )\n            : recursivelyTraverseAtomicPassiveEffects(\n                finishedRoot,\n                finishedWork\n              )\n          : ((instance._visibility |= 4),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              includeWorkInProgressEffects\n            ));\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitOffscreenPassiveMountEffects(\n            finishedWork.alternate,\n            finishedWork\n          );\n        break;\n      case 24:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n        break;\n      default:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseAtomicPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var finishedRoot = finishedRoot$jscomp$0,\n        finishedWork = parentFiber,\n        flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case 22:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitOffscreenPassiveMountEffects(\n              finishedWork.alternate,\n              finishedWork\n            );\n          break;\n        case 24:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n          break;\n        default:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n      }\n      parentFiber = parentFiber.sibling;\n    }\n}\nvar suspenseyCommitFlag = 8192;\nfunction recursivelyAccumulateSuspenseyCommit(parentFiber) {\n  if (parentFiber.subtreeFlags & suspenseyCommitFlag)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      accumulateSuspenseyCommitOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction accumulateSuspenseyCommitOnFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      fiber.flags & suspenseyCommitFlag &&\n        null !== fiber.memoizedState &&\n        suspendResource(\n          currentHoistableRoot,\n          fiber.memoizedState,\n          fiber.memoizedProps\n        );\n      break;\n    case 5:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      break;\n    case 3:\n    case 4:\n      var previousHoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(fiber.stateNode.containerInfo);\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      currentHoistableRoot = previousHoistableRoot;\n      break;\n    case 22:\n      null === fiber.memoizedState &&\n        ((previousHoistableRoot = fiber.alternate),\n        null !== previousHoistableRoot &&\n        null !== previousHoistableRoot.memoizedState\n          ? ((previousHoistableRoot = suspenseyCommitFlag),\n            (suspenseyCommitFlag = 16777216),\n            recursivelyAccumulateSuspenseyCommit(fiber),\n            (suspenseyCommitFlag = previousHoistableRoot))\n          : recursivelyAccumulateSuspenseyCommit(fiber));\n      break;\n    default:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n  }\n}\nfunction detachAlternateSiblings(parentFiber) {\n  var previousFiber = parentFiber.alternate;\n  if (\n    null !== previousFiber &&\n    ((parentFiber = previousFiber.child), null !== parentFiber)\n  ) {\n    previousFiber.child = null;\n    do\n      (previousFiber = parentFiber.sibling),\n        (parentFiber.sibling = null),\n        (parentFiber = previousFiber);\n    while (null !== parentFiber);\n  }\n}\nfunction recursivelyTraversePassiveUnmountEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveUnmountOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveUnmountOnFiber(finishedWork) {\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      finishedWork.flags & 2048 &&\n        commitHookEffectListUnmount(9, finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 12:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 22:\n      var instance = finishedWork.stateNode;\n      null !== finishedWork.memoizedState &&\n      instance._visibility & 4 &&\n      (null === finishedWork.return || 13 !== finishedWork.return.tag)\n        ? ((instance._visibility &= -5),\n          recursivelyTraverseDisconnectPassiveEffects(finishedWork))\n        : recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n  }\n}\nfunction recursivelyTraverseDisconnectPassiveEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    deletions = parentFiber;\n    switch (deletions.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, deletions, deletions.return);\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n        break;\n      case 22:\n        i = deletions.stateNode;\n        i._visibility & 4 &&\n          ((i._visibility &= -5),\n          recursivelyTraverseDisconnectPassiveEffects(deletions));\n        break;\n      default:\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot,\n  nearestMountedAncestor\n) {\n  for (; null !== nextEffect; ) {\n    var fiber = nextEffect;\n    switch (fiber.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, fiber, nearestMountedAncestor);\n        break;\n      case 23:\n      case 22:\n        if (\n          null !== fiber.memoizedState &&\n          null !== fiber.memoizedState.cachePool\n        ) {\n          var cache = fiber.memoizedState.cachePool.pool;\n          null != cache && cache.refCount++;\n        }\n        break;\n      case 24:\n        releaseCache(fiber.memoizedState.cache);\n    }\n    cache = fiber.child;\n    if (null !== cache) (cache.return = fiber), (nextEffect = cache);\n    else\n      a: for (fiber = deletedSubtreeRoot; null !== nextEffect; ) {\n        cache = nextEffect;\n        var sibling = cache.sibling,\n          returnFiber = cache.return;\n        detachFiberAfterEffects(cache);\n        if (cache === fiber) {\n          nextEffect = null;\n          break a;\n        }\n        if (null !== sibling) {\n          sibling.return = returnFiber;\n          nextEffect = sibling;\n          break a;\n        }\n        nextEffect = returnFiber;\n      }\n  }\n}\nfunction FiberNode(tag, pendingProps, key, mode) {\n  this.tag = tag;\n  this.key = key;\n  this.sibling =\n    this.child =\n    this.return =\n    this.stateNode =\n    this.type =\n    this.elementType =\n      null;\n  this.index = 0;\n  this.refCleanup = this.ref = null;\n  this.pendingProps = pendingProps;\n  this.dependencies =\n    this.memoizedState =\n    this.updateQueue =\n    this.memoizedProps =\n      null;\n  this.mode = mode;\n  this.subtreeFlags = this.flags = 0;\n  this.deletions = null;\n  this.childLanes = this.lanes = 0;\n  this.alternate = null;\n}\nfunction createFiberImplClass(tag, pendingProps, key, mode) {\n  return new FiberNode(tag, pendingProps, key, mode);\n}\nfunction shouldConstruct(Component) {\n  Component = Component.prototype;\n  return !(!Component || !Component.isReactComponent);\n}\nfunction createWorkInProgress(current, pendingProps) {\n  var workInProgress = current.alternate;\n  null === workInProgress\n    ? ((workInProgress = createFiberImplClass(\n        current.tag,\n        pendingProps,\n        current.key,\n        current.mode\n      )),\n      (workInProgress.elementType = current.elementType),\n      (workInProgress.type = current.type),\n      (workInProgress.stateNode = current.stateNode),\n      (workInProgress.alternate = current),\n      (current.alternate = workInProgress))\n    : ((workInProgress.pendingProps = pendingProps),\n      (workInProgress.type = current.type),\n      (workInProgress.flags = 0),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null));\n  workInProgress.flags = current.flags & 31457280;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n  pendingProps = current.dependencies;\n  workInProgress.dependencies =\n    null === pendingProps\n      ? null\n      : { lanes: pendingProps.lanes, firstContext: pendingProps.firstContext };\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n  workInProgress.refCleanup = current.refCleanup;\n  return workInProgress;\n}\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  workInProgress.flags &= 31457282;\n  var current = workInProgress.alternate;\n  null === current\n    ? ((workInProgress.childLanes = 0),\n      (workInProgress.lanes = renderLanes),\n      (workInProgress.child = null),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.memoizedProps = null),\n      (workInProgress.memoizedState = null),\n      (workInProgress.updateQueue = null),\n      (workInProgress.dependencies = null),\n      (workInProgress.stateNode = null))\n    : ((workInProgress.childLanes = current.childLanes),\n      (workInProgress.lanes = current.lanes),\n      (workInProgress.child = current.child),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null),\n      (workInProgress.memoizedProps = current.memoizedProps),\n      (workInProgress.memoizedState = current.memoizedState),\n      (workInProgress.updateQueue = current.updateQueue),\n      (workInProgress.type = current.type),\n      (renderLanes = current.dependencies),\n      (workInProgress.dependencies =\n        null === renderLanes\n          ? null\n          : {\n              lanes: renderLanes.lanes,\n              firstContext: renderLanes.firstContext\n            }));\n  return workInProgress;\n}\nfunction createFiberFromTypeAndProps(\n  type,\n  key,\n  pendingProps,\n  owner,\n  mode,\n  lanes\n) {\n  var fiberTag = 0;\n  owner = type;\n  if (\"function\" === typeof type) shouldConstruct(type) && (fiberTag = 1);\n  else if (\"string\" === typeof type)\n    fiberTag = isHostHoistableType(\n      type,\n      pendingProps,\n      contextStackCursor.current\n    )\n      ? 26\n      : \"html\" === type || \"head\" === type || \"body\" === type\n        ? 27\n        : 5;\n  else\n    a: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = 8;\n        mode |= 24;\n        break;\n      case REACT_PROFILER_TYPE:\n        return (\n          (type = createFiberImplClass(12, pendingProps, key, mode | 2)),\n          (type.elementType = REACT_PROFILER_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_TYPE:\n        return (\n          (type = createFiberImplClass(13, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_LIST_TYPE:\n        return (\n          (type = createFiberImplClass(19, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_LIST_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n      default:\n        if (\"object\" === typeof type && null !== type)\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n            case REACT_CONTEXT_TYPE:\n              fiberTag = 10;\n              break a;\n            case REACT_CONSUMER_TYPE:\n              fiberTag = 9;\n              break a;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = 11;\n              break a;\n            case REACT_MEMO_TYPE:\n              fiberTag = 14;\n              break a;\n            case REACT_LAZY_TYPE:\n              fiberTag = 16;\n              owner = null;\n              break a;\n          }\n        fiberTag = 29;\n        pendingProps = Error(\n          formatProdErrorMessage(130, null === type ? \"null\" : typeof type, \"\")\n        );\n        owner = null;\n    }\n  key = createFiberImplClass(fiberTag, pendingProps, key, mode);\n  key.elementType = type;\n  key.type = owner;\n  key.lanes = lanes;\n  return key;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  elements = createFiberImplClass(7, elements, key, mode);\n  elements.lanes = lanes;\n  return elements;\n}\nfunction createFiberFromOffscreen(pendingProps, mode, lanes, key) {\n  pendingProps = createFiberImplClass(22, pendingProps, key, mode);\n  pendingProps.elementType = REACT_OFFSCREEN_TYPE;\n  pendingProps.lanes = lanes;\n  var primaryChildInstance = {\n    _visibility: 1,\n    _pendingVisibility: 1,\n    _pendingMarkers: null,\n    _retryCache: null,\n    _transitions: null,\n    _current: null,\n    detach: function () {\n      var fiber = primaryChildInstance._current;\n      if (null === fiber) throw Error(formatProdErrorMessage(456));\n      if (0 === (primaryChildInstance._pendingVisibility & 2)) {\n        var root = enqueueConcurrentRenderForLane(fiber, 2);\n        null !== root &&\n          ((primaryChildInstance._pendingVisibility |= 2),\n          scheduleUpdateOnFiber(root, fiber, 2));\n      }\n    },\n    attach: function () {\n      var fiber = primaryChildInstance._current;\n      if (null === fiber) throw Error(formatProdErrorMessage(456));\n      if (0 !== (primaryChildInstance._pendingVisibility & 2)) {\n        var root = enqueueConcurrentRenderForLane(fiber, 2);\n        null !== root &&\n          ((primaryChildInstance._pendingVisibility &= -3),\n          scheduleUpdateOnFiber(root, fiber, 2));\n      }\n    }\n  };\n  pendingProps.stateNode = primaryChildInstance;\n  return pendingProps;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  content = createFiberImplClass(6, content, null, mode);\n  content.lanes = lanes;\n  return content;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  mode = createFiberImplClass(\n    4,\n    null !== portal.children ? portal.children : [],\n    portal.key,\n    mode\n  );\n  mode.lanes = lanes;\n  mode.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    implementation: portal.implementation\n  };\n  return mode;\n}\nfunction markUpdate(workInProgress) {\n  workInProgress.flags |= 4;\n}\nfunction preloadResourceAndSuspendIfNeeded(workInProgress, resource) {\n  if (\"stylesheet\" !== resource.type || 0 !== (resource.state.loading & 4))\n    workInProgress.flags &= -16777217;\n  else if (((workInProgress.flags |= 16777216), !preloadResource(resource))) {\n    resource = suspenseHandlerStackCursor.current;\n    if (\n      null !== resource &&\n      ((workInProgressRootRenderLanes & 4194176) ===\n      workInProgressRootRenderLanes\n        ? null !== shellBoundary\n        : ((workInProgressRootRenderLanes & 62914560) !==\n            workInProgressRootRenderLanes &&\n            0 === (workInProgressRootRenderLanes & 536870912)) ||\n          resource !== shellBoundary)\n    )\n      throw (\n        ((suspendedThenable = noopSuspenseyCommitThenable),\n        SuspenseyCommitException)\n      );\n    workInProgress.flags |= 8192;\n  }\n}\nfunction scheduleRetryEffect(workInProgress, retryQueue) {\n  null !== retryQueue && (workInProgress.flags |= 4);\n  workInProgress.flags & 16384 &&\n    ((retryQueue =\n      22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),\n    (workInProgress.lanes |= retryQueue),\n    (workInProgressSuspendedRetryLanes |= retryQueue));\n}\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n  if (!isHydrating)\n    switch (renderState.tailMode) {\n      case \"hidden\":\n        hasRenderedATailFallback = renderState.tail;\n        for (var lastTailNode = null; null !== hasRenderedATailFallback; )\n          null !== hasRenderedATailFallback.alternate &&\n            (lastTailNode = hasRenderedATailFallback),\n            (hasRenderedATailFallback = hasRenderedATailFallback.sibling);\n        null === lastTailNode\n          ? (renderState.tail = null)\n          : (lastTailNode.sibling = null);\n        break;\n      case \"collapsed\":\n        lastTailNode = renderState.tail;\n        for (var lastTailNode$131 = null; null !== lastTailNode; )\n          null !== lastTailNode.alternate && (lastTailNode$131 = lastTailNode),\n            (lastTailNode = lastTailNode.sibling);\n        null === lastTailNode$131\n          ? hasRenderedATailFallback || null === renderState.tail\n            ? (renderState.tail = null)\n            : (renderState.tail.sibling = null)\n          : (lastTailNode$131.sibling = null);\n    }\n}\nfunction bubbleProperties(completedWork) {\n  var didBailout =\n      null !== completedWork.alternate &&\n      completedWork.alternate.child === completedWork.child,\n    newChildLanes = 0,\n    subtreeFlags = 0;\n  if (didBailout)\n    for (var child$132 = completedWork.child; null !== child$132; )\n      (newChildLanes |= child$132.lanes | child$132.childLanes),\n        (subtreeFlags |= child$132.subtreeFlags & 31457280),\n        (subtreeFlags |= child$132.flags & 31457280),\n        (child$132.return = completedWork),\n        (child$132 = child$132.sibling);\n  else\n    for (child$132 = completedWork.child; null !== child$132; )\n      (newChildLanes |= child$132.lanes | child$132.childLanes),\n        (subtreeFlags |= child$132.subtreeFlags),\n        (subtreeFlags |= child$132.flags),\n        (child$132.return = completedWork),\n        (child$132 = child$132.sibling);\n  completedWork.subtreeFlags |= subtreeFlags;\n  completedWork.childLanes = newChildLanes;\n  return didBailout;\n}\nfunction completeWork(current, workInProgress, renderLanes) {\n  var newProps = workInProgress.pendingProps;\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 16:\n    case 15:\n    case 0:\n    case 11:\n    case 7:\n    case 8:\n    case 12:\n    case 9:\n    case 14:\n      return bubbleProperties(workInProgress), null;\n    case 1:\n      return bubbleProperties(workInProgress), null;\n    case 3:\n      renderLanes = workInProgress.stateNode;\n      newProps = null;\n      null !== current && (newProps = current.memoizedState.cache);\n      workInProgress.memoizedState.cache !== newProps &&\n        (workInProgress.flags |= 2048);\n      popProvider(CacheContext);\n      popHostContainer();\n      renderLanes.pendingContext &&\n        ((renderLanes.context = renderLanes.pendingContext),\n        (renderLanes.pendingContext = null));\n      if (null === current || null === current.child)\n        popHydrationState(workInProgress)\n          ? markUpdate(workInProgress)\n          : null === current ||\n            (current.memoizedState.isDehydrated &&\n              0 === (workInProgress.flags & 256)) ||\n            ((workInProgress.flags |= 1024),\n            null !== hydrationErrors &&\n              (queueRecoverableErrors(hydrationErrors),\n              (hydrationErrors = null)));\n      bubbleProperties(workInProgress);\n      return null;\n    case 26:\n      return (\n        (renderLanes = workInProgress.memoizedState),\n        null === current\n          ? (markUpdate(workInProgress),\n            null !== renderLanes\n              ? (bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217)))\n          : renderLanes\n            ? renderLanes !== current.memoizedState\n              ? (markUpdate(workInProgress),\n                bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217))\n            : (current.memoizedProps !== newProps && markUpdate(workInProgress),\n              bubbleProperties(workInProgress),\n              (workInProgress.flags &= -16777217)),\n        null\n      );\n    case 27:\n      popHostContext(workInProgress);\n      renderLanes = rootInstanceStackCursor.current;\n      var type = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        popHydrationState(workInProgress)\n          ? prepareToHydrateHostInstance(workInProgress, current)\n          : ((current = resolveSingletonInstance(type, newProps, renderLanes)),\n            (workInProgress.stateNode = current),\n            markUpdate(workInProgress));\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 5:\n      popHostContext(workInProgress);\n      renderLanes = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        if (popHydrationState(workInProgress))\n          prepareToHydrateHostInstance(workInProgress, current);\n        else {\n          type = getOwnerDocumentFromRootContainer(\n            rootInstanceStackCursor.current\n          );\n          switch (current) {\n            case 1:\n              current = type.createElementNS(\n                \"http://www.w3.org/2000/svg\",\n                renderLanes\n              );\n              break;\n            case 2:\n              current = type.createElementNS(\n                \"http://www.w3.org/1998/Math/MathML\",\n                renderLanes\n              );\n              break;\n            default:\n              switch (renderLanes) {\n                case \"svg\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/2000/svg\",\n                    renderLanes\n                  );\n                  break;\n                case \"math\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/1998/Math/MathML\",\n                    renderLanes\n                  );\n                  break;\n                case \"script\":\n                  current = type.createElement(\"div\");\n                  current.innerHTML = \"<script>\\x3c/script>\";\n                  current = current.removeChild(current.firstChild);\n                  break;\n                case \"select\":\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(\"select\", { is: newProps.is })\n                      : type.createElement(\"select\");\n                  newProps.multiple\n                    ? (current.multiple = !0)\n                    : newProps.size && (current.size = newProps.size);\n                  break;\n                default:\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(renderLanes, { is: newProps.is })\n                      : type.createElement(renderLanes);\n              }\n          }\n          current[internalInstanceKey] = workInProgress;\n          current[internalPropsKey] = newProps;\n          a: for (type = workInProgress.child; null !== type; ) {\n            if (5 === type.tag || 6 === type.tag)\n              current.appendChild(type.stateNode);\n            else if (4 !== type.tag && 27 !== type.tag && null !== type.child) {\n              type.child.return = type;\n              type = type.child;\n              continue;\n            }\n            if (type === workInProgress) break a;\n            for (; null === type.sibling; ) {\n              if (null === type.return || type.return === workInProgress)\n                break a;\n              type = type.return;\n            }\n            type.sibling.return = type.return;\n            type = type.sibling;\n          }\n          workInProgress.stateNode = current;\n          a: switch (\n            (setInitialProperties(current, renderLanes, newProps), renderLanes)\n          ) {\n            case \"button\":\n            case \"input\":\n            case \"select\":\n            case \"textarea\":\n              current = !!newProps.autoFocus;\n              break a;\n            case \"img\":\n              current = !0;\n              break a;\n            default:\n              current = !1;\n          }\n          current && markUpdate(workInProgress);\n        }\n      }\n      bubbleProperties(workInProgress);\n      workInProgress.flags &= -16777217;\n      return null;\n    case 6:\n      if (current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (\"string\" !== typeof newProps && null === workInProgress.stateNode)\n          throw Error(formatProdErrorMessage(166));\n        current = rootInstanceStackCursor.current;\n        if (popHydrationState(workInProgress)) {\n          current = workInProgress.stateNode;\n          renderLanes = workInProgress.memoizedProps;\n          newProps = null;\n          type = hydrationParentFiber;\n          if (null !== type)\n            switch (type.tag) {\n              case 27:\n              case 5:\n                newProps = type.memoizedProps;\n            }\n          current[internalInstanceKey] = workInProgress;\n          current =\n            current.nodeValue === renderLanes ||\n            (null !== newProps && !0 === newProps.suppressHydrationWarning) ||\n            checkForUnmatchedText(current.nodeValue, renderLanes)\n              ? !0\n              : !1;\n          current || throwOnHydrationMismatch(workInProgress);\n        } else\n          (current =\n            getOwnerDocumentFromRootContainer(current).createTextNode(\n              newProps\n            )),\n            (current[internalInstanceKey] = workInProgress),\n            (workInProgress.stateNode = current);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 13:\n      newProps = workInProgress.memoizedState;\n      if (\n        null === current ||\n        (null !== current.memoizedState &&\n          null !== current.memoizedState.dehydrated)\n      ) {\n        type = popHydrationState(workInProgress);\n        if (null !== newProps && null !== newProps.dehydrated) {\n          if (null === current) {\n            if (!type) throw Error(formatProdErrorMessage(318));\n            type = workInProgress.memoizedState;\n            type = null !== type ? type.dehydrated : null;\n            if (!type) throw Error(formatProdErrorMessage(317));\n            type[internalInstanceKey] = workInProgress;\n          } else\n            resetHydrationState(),\n              0 === (workInProgress.flags & 128) &&\n                (workInProgress.memoizedState = null),\n              (workInProgress.flags |= 4);\n          bubbleProperties(workInProgress);\n          type = !1;\n        } else\n          null !== hydrationErrors &&\n            (queueRecoverableErrors(hydrationErrors), (hydrationErrors = null)),\n            (type = !0);\n        if (!type) {\n          if (workInProgress.flags & 256)\n            return popSuspenseHandler(workInProgress), workInProgress;\n          popSuspenseHandler(workInProgress);\n          return null;\n        }\n      }\n      popSuspenseHandler(workInProgress);\n      if (0 !== (workInProgress.flags & 128))\n        return (workInProgress.lanes = renderLanes), workInProgress;\n      renderLanes = null !== newProps;\n      current = null !== current && null !== current.memoizedState;\n      if (renderLanes) {\n        newProps = workInProgress.child;\n        type = null;\n        null !== newProps.alternate &&\n          null !== newProps.alternate.memoizedState &&\n          null !== newProps.alternate.memoizedState.cachePool &&\n          (type = newProps.alternate.memoizedState.cachePool.pool);\n        var cache$144 = null;\n        null !== newProps.memoizedState &&\n          null !== newProps.memoizedState.cachePool &&\n          (cache$144 = newProps.memoizedState.cachePool.pool);\n        cache$144 !== type && (newProps.flags |= 2048);\n      }\n      renderLanes !== current &&\n        renderLanes &&\n        (workInProgress.child.flags |= 8192);\n      scheduleRetryEffect(workInProgress, workInProgress.updateQueue);\n      bubbleProperties(workInProgress);\n      return null;\n    case 4:\n      return (\n        popHostContainer(),\n        null === current &&\n          listenToAllSupportedEvents(workInProgress.stateNode.containerInfo),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 10:\n      return (\n        popProvider(workInProgress.type), bubbleProperties(workInProgress), null\n      );\n    case 19:\n      pop(suspenseStackCursor);\n      type = workInProgress.memoizedState;\n      if (null === type) return bubbleProperties(workInProgress), null;\n      newProps = 0 !== (workInProgress.flags & 128);\n      cache$144 = type.rendering;\n      if (null === cache$144)\n        if (newProps) cutOffTailIfNeeded(type, !1);\n        else {\n          if (\n            0 !== workInProgressRootExitStatus ||\n            (null !== current && 0 !== (current.flags & 128))\n          )\n            for (current = workInProgress.child; null !== current; ) {\n              cache$144 = findFirstSuspended(current);\n              if (null !== cache$144) {\n                workInProgress.flags |= 128;\n                cutOffTailIfNeeded(type, !1);\n                current = cache$144.updateQueue;\n                workInProgress.updateQueue = current;\n                scheduleRetryEffect(workInProgress, current);\n                workInProgress.subtreeFlags = 0;\n                current = renderLanes;\n                for (renderLanes = workInProgress.child; null !== renderLanes; )\n                  resetWorkInProgress(renderLanes, current),\n                    (renderLanes = renderLanes.sibling);\n                push(\n                  suspenseStackCursor,\n                  (suspenseStackCursor.current & 1) | 2\n                );\n                return workInProgress.child;\n              }\n              current = current.sibling;\n            }\n          null !== type.tail &&\n            now() > workInProgressRootRenderTargetTime &&\n            ((workInProgress.flags |= 128),\n            (newProps = !0),\n            cutOffTailIfNeeded(type, !1),\n            (workInProgress.lanes = 4194304));\n        }\n      else {\n        if (!newProps)\n          if (((current = findFirstSuspended(cache$144)), null !== current)) {\n            if (\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              (current = current.updateQueue),\n              (workInProgress.updateQueue = current),\n              scheduleRetryEffect(workInProgress, current),\n              cutOffTailIfNeeded(type, !0),\n              null === type.tail &&\n                \"hidden\" === type.tailMode &&\n                !cache$144.alternate &&\n                !isHydrating)\n            )\n              return bubbleProperties(workInProgress), null;\n          } else\n            2 * now() - type.renderingStartTime >\n              workInProgressRootRenderTargetTime &&\n              536870912 !== renderLanes &&\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              cutOffTailIfNeeded(type, !1),\n              (workInProgress.lanes = 4194304));\n        type.isBackwards\n          ? ((cache$144.sibling = workInProgress.child),\n            (workInProgress.child = cache$144))\n          : ((current = type.last),\n            null !== current\n              ? (current.sibling = cache$144)\n              : (workInProgress.child = cache$144),\n            (type.last = cache$144));\n      }\n      if (null !== type.tail)\n        return (\n          (workInProgress = type.tail),\n          (type.rendering = workInProgress),\n          (type.tail = workInProgress.sibling),\n          (type.renderingStartTime = now()),\n          (workInProgress.sibling = null),\n          (current = suspenseStackCursor.current),\n          push(suspenseStackCursor, newProps ? (current & 1) | 2 : current & 1),\n          workInProgress\n        );\n      bubbleProperties(workInProgress);\n      return null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        (newProps = null !== workInProgress.memoizedState),\n        null !== current\n          ? (null !== current.memoizedState) !== newProps &&\n            (workInProgress.flags |= 8192)\n          : newProps && (workInProgress.flags |= 8192),\n        newProps\n          ? 0 !== (renderLanes & 536870912) &&\n            0 === (workInProgress.flags & 128) &&\n            (bubbleProperties(workInProgress),\n            workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192))\n          : bubbleProperties(workInProgress),\n        (renderLanes = workInProgress.updateQueue),\n        null !== renderLanes &&\n          scheduleRetryEffect(workInProgress, renderLanes.retryQueue),\n        (renderLanes = null),\n        null !== current &&\n          null !== current.memoizedState &&\n          null !== current.memoizedState.cachePool &&\n          (renderLanes = current.memoizedState.cachePool.pool),\n        (newProps = null),\n        null !== workInProgress.memoizedState &&\n          null !== workInProgress.memoizedState.cachePool &&\n          (newProps = workInProgress.memoizedState.cachePool.pool),\n        newProps !== renderLanes && (workInProgress.flags |= 2048),\n        null !== current && pop(resumedCache),\n        null\n      );\n    case 24:\n      return (\n        (renderLanes = null),\n        null !== current && (renderLanes = current.memoizedState.cache),\n        workInProgress.memoizedState.cache !== renderLanes &&\n          (workInProgress.flags |= 2048),\n        popProvider(CacheContext),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 25:\n      return null;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nfunction unwindWork(current, workInProgress) {\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 1:\n      return (\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 3:\n      return (\n        popProvider(CacheContext),\n        popHostContainer(),\n        (current = workInProgress.flags),\n        0 !== (current & 65536) && 0 === (current & 128)\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 26:\n    case 27:\n    case 5:\n      return popHostContext(workInProgress), null;\n    case 13:\n      popSuspenseHandler(workInProgress);\n      current = workInProgress.memoizedState;\n      if (null !== current && null !== current.dehydrated) {\n        if (null === workInProgress.alternate)\n          throw Error(formatProdErrorMessage(340));\n        resetHydrationState();\n      }\n      current = workInProgress.flags;\n      return current & 65536\n        ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n        : null;\n    case 19:\n      return pop(suspenseStackCursor), null;\n    case 4:\n      return popHostContainer(), null;\n    case 10:\n      return popProvider(workInProgress.type), null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        null !== current && pop(resumedCache),\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 24:\n      return popProvider(CacheContext), null;\n    case 25:\n      return null;\n    default:\n      return null;\n  }\n}\nfunction unwindInterruptedWork(current, interruptedWork) {\n  popTreeContext(interruptedWork);\n  switch (interruptedWork.tag) {\n    case 3:\n      popProvider(CacheContext);\n      popHostContainer();\n      break;\n    case 26:\n    case 27:\n    case 5:\n      popHostContext(interruptedWork);\n      break;\n    case 4:\n      popHostContainer();\n      break;\n    case 13:\n      popSuspenseHandler(interruptedWork);\n      break;\n    case 19:\n      pop(suspenseStackCursor);\n      break;\n    case 10:\n      popProvider(interruptedWork.type);\n      break;\n    case 22:\n    case 23:\n      popSuspenseHandler(interruptedWork);\n      popHiddenContext();\n      null !== current && pop(resumedCache);\n      break;\n    case 24:\n      popProvider(CacheContext);\n  }\n}\nvar DefaultAsyncDispatcher = {\n    getCacheForType: function (resourceType) {\n      var cache = readContext(CacheContext),\n        cacheForType = cache.data.get(resourceType);\n      void 0 === cacheForType &&\n        ((cacheForType = resourceType()),\n        cache.data.set(resourceType, cacheForType));\n      return cacheForType;\n    }\n  },\n  PossiblyWeakMap = \"function\" === typeof WeakMap ? WeakMap : Map,\n  executionContext = 0,\n  workInProgressRoot = null,\n  workInProgress = null,\n  workInProgressRootRenderLanes = 0,\n  workInProgressSuspendedReason = 0,\n  workInProgressThrownValue = null,\n  workInProgressRootDidSkipSuspendedSiblings = !1,\n  workInProgressRootIsPrerendering = !1,\n  workInProgressRootDidAttachPingListener = !1,\n  entangledRenderLanes = 0,\n  workInProgressRootExitStatus = 0,\n  workInProgressRootSkippedLanes = 0,\n  workInProgressRootInterleavedUpdatedLanes = 0,\n  workInProgressRootPingedLanes = 0,\n  workInProgressDeferredLane = 0,\n  workInProgressSuspendedRetryLanes = 0,\n  workInProgressRootConcurrentErrors = null,\n  workInProgressRootRecoverableErrors = null,\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1,\n  globalMostRecentFallbackTime = 0,\n  workInProgressRootRenderTargetTime = Infinity,\n  workInProgressTransitions = null,\n  legacyErrorBoundariesThatAlreadyFailed = null,\n  rootDoesHavePassiveEffects = !1,\n  rootWithPendingPassiveEffects = null,\n  pendingPassiveEffectsLanes = 0,\n  pendingPassiveEffectsRemainingLanes = 0,\n  pendingPassiveTransitions = null,\n  nestedUpdateCount = 0,\n  rootWithNestedUpdates = null;\nfunction requestUpdateLane() {\n  if (0 !== (executionContext & 2) && 0 !== workInProgressRootRenderLanes)\n    return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;\n  if (null !== ReactSharedInternals.T) {\n    var actionScopeLane = currentEntangledLane;\n    return 0 !== actionScopeLane ? actionScopeLane : requestTransitionLane();\n  }\n  return resolveUpdatePriority();\n}\nfunction requestDeferredLane() {\n  0 === workInProgressDeferredLane &&\n    (workInProgressDeferredLane =\n      0 === (workInProgressRootRenderLanes & 536870912) || isHydrating\n        ? claimNextTransitionLane()\n        : 536870912);\n  var suspenseHandler = suspenseHandlerStackCursor.current;\n  null !== suspenseHandler && (suspenseHandler.flags |= 32);\n  return workInProgressDeferredLane;\n}\nfunction scheduleUpdateOnFiber(root, fiber, lane) {\n  if (\n    (root === workInProgressRoot && 2 === workInProgressSuspendedReason) ||\n    null !== root.cancelPendingCommit\n  )\n    prepareFreshStack(root, 0),\n      markRootSuspended(\n        root,\n        workInProgressRootRenderLanes,\n        workInProgressDeferredLane,\n        !1\n      );\n  markRootUpdated$1(root, lane);\n  if (0 === (executionContext & 2) || root !== workInProgressRoot)\n    root === workInProgressRoot &&\n      (0 === (executionContext & 2) &&\n        (workInProgressRootInterleavedUpdatedLanes |= lane),\n      4 === workInProgressRootExitStatus &&\n        markRootSuspended(\n          root,\n          workInProgressRootRenderLanes,\n          workInProgressDeferredLane,\n          !1\n        )),\n      ensureRootIsScheduled(root);\n}\nfunction performWorkOnRoot(root$jscomp$0, lanes, forceSync) {\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  var shouldTimeSlice =\n      (!forceSync &&\n        0 === (lanes & 60) &&\n        0 === (lanes & root$jscomp$0.expiredLanes)) ||\n      checkIfRootIsPrerendering(root$jscomp$0, lanes),\n    exitStatus = shouldTimeSlice\n      ? renderRootConcurrent(root$jscomp$0, lanes)\n      : renderRootSync(root$jscomp$0, lanes, !0),\n    renderWasConcurrent = shouldTimeSlice;\n  do {\n    if (0 === exitStatus) {\n      workInProgressRootIsPrerendering &&\n        !shouldTimeSlice &&\n        markRootSuspended(root$jscomp$0, lanes, 0, !1);\n      break;\n    } else if (6 === exitStatus)\n      markRootSuspended(\n        root$jscomp$0,\n        lanes,\n        0,\n        !workInProgressRootDidSkipSuspendedSiblings\n      );\n    else {\n      forceSync = root$jscomp$0.current.alternate;\n      if (\n        renderWasConcurrent &&\n        !isRenderConsistentWithExternalStores(forceSync)\n      ) {\n        exitStatus = renderRootSync(root$jscomp$0, lanes, !1);\n        renderWasConcurrent = !1;\n        continue;\n      }\n      if (2 === exitStatus) {\n        renderWasConcurrent = lanes;\n        if (root$jscomp$0.errorRecoveryDisabledLanes & renderWasConcurrent)\n          var JSCompiler_inline_result = 0;\n        else\n          (JSCompiler_inline_result = root$jscomp$0.pendingLanes & -536870913),\n            (JSCompiler_inline_result =\n              0 !== JSCompiler_inline_result\n                ? JSCompiler_inline_result\n                : JSCompiler_inline_result & 536870912\n                  ? 536870912\n                  : 0);\n        if (0 !== JSCompiler_inline_result) {\n          lanes = JSCompiler_inline_result;\n          a: {\n            var root = root$jscomp$0;\n            exitStatus = workInProgressRootConcurrentErrors;\n            var wasRootDehydrated = root.current.memoizedState.isDehydrated;\n            wasRootDehydrated &&\n              (prepareFreshStack(root, JSCompiler_inline_result).flags |= 256);\n            JSCompiler_inline_result = renderRootSync(\n              root,\n              JSCompiler_inline_result,\n              !1\n            );\n            if (2 !== JSCompiler_inline_result) {\n              if (\n                workInProgressRootDidAttachPingListener &&\n                !wasRootDehydrated\n              ) {\n                root.errorRecoveryDisabledLanes |= renderWasConcurrent;\n                workInProgressRootInterleavedUpdatedLanes |=\n                  renderWasConcurrent;\n                exitStatus = 4;\n                break a;\n              }\n              renderWasConcurrent = workInProgressRootRecoverableErrors;\n              workInProgressRootRecoverableErrors = exitStatus;\n              null !== renderWasConcurrent &&\n                queueRecoverableErrors(renderWasConcurrent);\n            }\n            exitStatus = JSCompiler_inline_result;\n          }\n          renderWasConcurrent = !1;\n          if (2 !== exitStatus) continue;\n        }\n      }\n      if (1 === exitStatus) {\n        prepareFreshStack(root$jscomp$0, 0);\n        markRootSuspended(root$jscomp$0, lanes, 0, !0);\n        break;\n      }\n      a: {\n        shouldTimeSlice = root$jscomp$0;\n        switch (exitStatus) {\n          case 0:\n          case 1:\n            throw Error(formatProdErrorMessage(345));\n          case 4:\n            if ((lanes & 4194176) === lanes) {\n              markRootSuspended(\n                shouldTimeSlice,\n                lanes,\n                workInProgressDeferredLane,\n                !workInProgressRootDidSkipSuspendedSiblings\n              );\n              break a;\n            }\n            break;\n          case 2:\n            workInProgressRootRecoverableErrors = null;\n            break;\n          case 3:\n          case 5:\n            break;\n          default:\n            throw Error(formatProdErrorMessage(329));\n        }\n        shouldTimeSlice.finishedWork = forceSync;\n        shouldTimeSlice.finishedLanes = lanes;\n        if (\n          (lanes & 62914560) === lanes &&\n          ((renderWasConcurrent = globalMostRecentFallbackTime + 300 - now()),\n          10 < renderWasConcurrent)\n        ) {\n          markRootSuspended(\n            shouldTimeSlice,\n            lanes,\n            workInProgressDeferredLane,\n            !workInProgressRootDidSkipSuspendedSiblings\n          );\n          if (0 !== getNextLanes(shouldTimeSlice, 0)) break a;\n          shouldTimeSlice.timeoutHandle = scheduleTimeout(\n            commitRootWhenReady.bind(\n              null,\n              shouldTimeSlice,\n              forceSync,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions,\n              workInProgressRootDidIncludeRecursiveRenderUpdate,\n              lanes,\n              workInProgressDeferredLane,\n              workInProgressRootInterleavedUpdatedLanes,\n              workInProgressSuspendedRetryLanes,\n              workInProgressRootDidSkipSuspendedSiblings,\n              2,\n              -0,\n              0\n            ),\n            renderWasConcurrent\n          );\n          break a;\n        }\n        commitRootWhenReady(\n          shouldTimeSlice,\n          forceSync,\n          workInProgressRootRecoverableErrors,\n          workInProgressTransitions,\n          workInProgressRootDidIncludeRecursiveRenderUpdate,\n          lanes,\n          workInProgressDeferredLane,\n          workInProgressRootInterleavedUpdatedLanes,\n          workInProgressSuspendedRetryLanes,\n          workInProgressRootDidSkipSuspendedSiblings,\n          0,\n          -0,\n          0\n        );\n      }\n    }\n    break;\n  } while (1);\n  ensureRootIsScheduled(root$jscomp$0);\n}\nfunction queueRecoverableErrors(errors) {\n  null === workInProgressRootRecoverableErrors\n    ? (workInProgressRootRecoverableErrors = errors)\n    : workInProgressRootRecoverableErrors.push.apply(\n        workInProgressRootRecoverableErrors,\n        errors\n      );\n}\nfunction commitRootWhenReady(\n  root,\n  finishedWork,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  lanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes,\n  didSkipSuspendedSiblings,\n  suspendedCommitReason,\n  completedRenderStartTime,\n  completedRenderEndTime\n) {\n  var subtreeFlags = finishedWork.subtreeFlags;\n  if (subtreeFlags & 8192 || 16785408 === (subtreeFlags & 16785408))\n    if (\n      ((suspendedState = { stylesheets: null, count: 0, unsuspend: noop }),\n      accumulateSuspenseyCommitOnFiber(finishedWork),\n      (finishedWork = waitForCommitToBeReady()),\n      null !== finishedWork)\n    ) {\n      root.cancelPendingCommit = finishedWork(\n        commitRoot.bind(\n          null,\n          root,\n          recoverableErrors,\n          transitions,\n          didIncludeRenderPhaseUpdate,\n          spawnedLane,\n          updatedLanes,\n          suspendedRetryLanes,\n          1,\n          completedRenderStartTime,\n          completedRenderEndTime\n        )\n      );\n      markRootSuspended(root, lanes, spawnedLane, !didSkipSuspendedSiblings);\n      return;\n    }\n  commitRoot(\n    root,\n    recoverableErrors,\n    transitions,\n    didIncludeRenderPhaseUpdate,\n    spawnedLane,\n    updatedLanes,\n    suspendedRetryLanes,\n    suspendedCommitReason,\n    completedRenderStartTime,\n    completedRenderEndTime\n  );\n}\nfunction isRenderConsistentWithExternalStores(finishedWork) {\n  for (var node = finishedWork; ; ) {\n    var tag = node.tag;\n    if (\n      (0 === tag || 11 === tag || 15 === tag) &&\n      node.flags & 16384 &&\n      ((tag = node.updateQueue),\n      null !== tag && ((tag = tag.stores), null !== tag))\n    )\n      for (var i = 0; i < tag.length; i++) {\n        var check = tag[i],\n          getSnapshot = check.getSnapshot;\n        check = check.value;\n        try {\n          if (!objectIs(getSnapshot(), check)) return !1;\n        } catch (error) {\n          return !1;\n        }\n      }\n    tag = node.child;\n    if (node.subtreeFlags & 16384 && null !== tag)\n      (tag.return = node), (node = tag);\n    else {\n      if (node === finishedWork) break;\n      for (; null === node.sibling; ) {\n        if (null === node.return || node.return === finishedWork) return !0;\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return !0;\n}\nfunction markRootSuspended(\n  root,\n  suspendedLanes,\n  spawnedLane,\n  didAttemptEntireTree\n) {\n  suspendedLanes &= ~workInProgressRootPingedLanes;\n  suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n  didAttemptEntireTree && (root.warmLanes |= suspendedLanes);\n  didAttemptEntireTree = root.expirationTimes;\n  for (var lanes = suspendedLanes; 0 < lanes; ) {\n    var index$6 = 31 - clz32(lanes),\n      lane = 1 << index$6;\n    didAttemptEntireTree[index$6] = -1;\n    lanes &= ~lane;\n  }\n  0 !== spawnedLane &&\n    markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);\n}\nfunction flushSyncWork$1() {\n  return 0 === (executionContext & 6)\n    ? (flushSyncWorkAcrossRoots_impl(0, !1), !1)\n    : !0;\n}\nfunction resetWorkInProgressStack() {\n  if (null !== workInProgress) {\n    if (0 === workInProgressSuspendedReason)\n      var interruptedWork = workInProgress.return;\n    else\n      (interruptedWork = workInProgress),\n        (lastContextDependency = currentlyRenderingFiber = null),\n        resetHooksOnUnwind(interruptedWork),\n        (thenableState$1 = null),\n        (thenableIndexCounter$1 = 0),\n        (interruptedWork = workInProgress);\n    for (; null !== interruptedWork; )\n      unwindInterruptedWork(interruptedWork.alternate, interruptedWork),\n        (interruptedWork = interruptedWork.return);\n    workInProgress = null;\n  }\n}\nfunction prepareFreshStack(root, lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = 0;\n  var timeoutHandle = root.timeoutHandle;\n  -1 !== timeoutHandle &&\n    ((root.timeoutHandle = -1), cancelTimeout(timeoutHandle));\n  timeoutHandle = root.cancelPendingCommit;\n  null !== timeoutHandle &&\n    ((root.cancelPendingCommit = null), timeoutHandle());\n  resetWorkInProgressStack();\n  workInProgressRoot = root;\n  workInProgress = timeoutHandle = createWorkInProgress(root.current, null);\n  workInProgressRootRenderLanes = lanes;\n  workInProgressSuspendedReason = 0;\n  workInProgressThrownValue = null;\n  workInProgressRootDidSkipSuspendedSiblings = !1;\n  workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);\n  workInProgressRootDidAttachPingListener = !1;\n  workInProgressSuspendedRetryLanes =\n    workInProgressDeferredLane =\n    workInProgressRootPingedLanes =\n    workInProgressRootInterleavedUpdatedLanes =\n    workInProgressRootSkippedLanes =\n    workInProgressRootExitStatus =\n      0;\n  workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =\n    null;\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1;\n  0 !== (lanes & 8) && (lanes |= lanes & 32);\n  var allEntangledLanes = root.entangledLanes;\n  if (0 !== allEntangledLanes)\n    for (\n      root = root.entanglements, allEntangledLanes &= lanes;\n      0 < allEntangledLanes;\n\n    ) {\n      var index$4 = 31 - clz32(allEntangledLanes),\n        lane = 1 << index$4;\n      lanes |= root[index$4];\n      allEntangledLanes &= ~lane;\n    }\n  entangledRenderLanes = lanes;\n  finishQueueingConcurrentUpdates();\n  return timeoutHandle;\n}\nfunction handleThrow(root, thrownValue) {\n  currentlyRenderingFiber$1 = null;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  thrownValue === SuspenseException\n    ? ((thrownValue = getSuspendedThenable()),\n      (workInProgressSuspendedReason = 3))\n    : thrownValue === SuspenseyCommitException\n      ? ((thrownValue = getSuspendedThenable()),\n        (workInProgressSuspendedReason = 4))\n      : (workInProgressSuspendedReason =\n          thrownValue === SelectiveHydrationException\n            ? 8\n            : null !== thrownValue &&\n                \"object\" === typeof thrownValue &&\n                \"function\" === typeof thrownValue.then\n              ? 6\n              : 1);\n  workInProgressThrownValue = thrownValue;\n  null === workInProgress &&\n    ((workInProgressRootExitStatus = 1),\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    ));\n}\nfunction pushDispatcher() {\n  var prevDispatcher = ReactSharedInternals.H;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;\n}\nfunction pushAsyncDispatcher() {\n  var prevAsyncDispatcher = ReactSharedInternals.A;\n  ReactSharedInternals.A = DefaultAsyncDispatcher;\n  return prevAsyncDispatcher;\n}\nfunction renderDidSuspendDelayIfPossible() {\n  workInProgressRootExitStatus = 4;\n  workInProgressRootDidSkipSuspendedSiblings ||\n    ((workInProgressRootRenderLanes & 4194176) !==\n      workInProgressRootRenderLanes &&\n      null !== suspenseHandlerStackCursor.current) ||\n    (workInProgressRootIsPrerendering = !0);\n  (0 === (workInProgressRootSkippedLanes & 134217727) &&\n    0 === (workInProgressRootInterleavedUpdatedLanes & 134217727)) ||\n    null === workInProgressRoot ||\n    markRootSuspended(\n      workInProgressRoot,\n      workInProgressRootRenderLanes,\n      workInProgressDeferredLane,\n      !1\n    );\n}\nfunction renderRootSync(root, lanes, shouldYieldForPrerendering) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes)\n    (workInProgressTransitions = null), prepareFreshStack(root, lanes);\n  lanes = !1;\n  var exitStatus = workInProgressRootExitStatus;\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        var unitOfWork = workInProgress,\n          thrownValue = workInProgressThrownValue;\n        switch (workInProgressSuspendedReason) {\n          case 8:\n            resetWorkInProgressStack();\n            exitStatus = 6;\n            break a;\n          case 3:\n          case 2:\n          case 6:\n            null === suspenseHandlerStackCursor.current && (lanes = !0);\n            var reason = workInProgressSuspendedReason;\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n            if (\n              shouldYieldForPrerendering &&\n              workInProgressRootIsPrerendering\n            ) {\n              exitStatus = 0;\n              break a;\n            }\n            break;\n          default:\n            (reason = workInProgressSuspendedReason),\n              (workInProgressSuspendedReason = 0),\n              (workInProgressThrownValue = null),\n              throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n        }\n      }\n      workLoopSync();\n      exitStatus = workInProgressRootExitStatus;\n      break;\n    } catch (thrownValue$164) {\n      handleThrow(root, thrownValue$164);\n    }\n  while (1);\n  lanes && root.shellSuspendCounter++;\n  lastContextDependency = currentlyRenderingFiber = null;\n  executionContext = prevExecutionContext;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  null === workInProgress &&\n    ((workInProgressRoot = null),\n    (workInProgressRootRenderLanes = 0),\n    finishQueueingConcurrentUpdates());\n  return exitStatus;\n}\nfunction workLoopSync() {\n  for (; null !== workInProgress; ) performUnitOfWork(workInProgress);\n}\nfunction renderRootConcurrent(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes\n    ? ((workInProgressTransitions = null),\n      (workInProgressRootRenderTargetTime = now() + 500),\n      prepareFreshStack(root, lanes))\n    : (workInProgressRootIsPrerendering = checkIfRootIsPrerendering(\n        root,\n        lanes\n      ));\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        lanes = workInProgress;\n        var thrownValue = workInProgressThrownValue;\n        b: switch (workInProgressSuspendedReason) {\n          case 1:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 1);\n            break;\n          case 2:\n            if (isThenableResolved(thrownValue)) {\n              workInProgressSuspendedReason = 0;\n              workInProgressThrownValue = null;\n              replaySuspendedUnitOfWork(lanes);\n              break;\n            }\n            lanes = function () {\n              2 === workInProgressSuspendedReason &&\n                workInProgressRoot === root &&\n                (workInProgressSuspendedReason = 7);\n              ensureRootIsScheduled(root);\n            };\n            thrownValue.then(lanes, lanes);\n            break a;\n          case 3:\n            workInProgressSuspendedReason = 7;\n            break a;\n          case 4:\n            workInProgressSuspendedReason = 5;\n            break a;\n          case 7:\n            isThenableResolved(thrownValue)\n              ? ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                replaySuspendedUnitOfWork(lanes))\n              : ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                throwAndUnwindWorkLoop(root, lanes, thrownValue, 7));\n            break;\n          case 5:\n            var resource = null;\n            switch (workInProgress.tag) {\n              case 26:\n                resource = workInProgress.memoizedState;\n              case 5:\n              case 27:\n                var hostFiber = workInProgress;\n                if (resource ? preloadResource(resource) : 1) {\n                  workInProgressSuspendedReason = 0;\n                  workInProgressThrownValue = null;\n                  var sibling = hostFiber.sibling;\n                  if (null !== sibling) workInProgress = sibling;\n                  else {\n                    var returnFiber = hostFiber.return;\n                    null !== returnFiber\n                      ? ((workInProgress = returnFiber),\n                        completeUnitOfWork(returnFiber))\n                      : (workInProgress = null);\n                  }\n                  break b;\n                }\n            }\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 5);\n            break;\n          case 6:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 6);\n            break;\n          case 8:\n            resetWorkInProgressStack();\n            workInProgressRootExitStatus = 6;\n            break a;\n          default:\n            throw Error(formatProdErrorMessage(462));\n        }\n      }\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue$166) {\n      handleThrow(root, thrownValue$166);\n    }\n  while (1);\n  lastContextDependency = currentlyRenderingFiber = null;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  executionContext = prevExecutionContext;\n  if (null !== workInProgress) return 0;\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = 0;\n  finishQueueingConcurrentUpdates();\n  return workInProgressRootExitStatus;\n}\nfunction workLoopConcurrent() {\n  for (; null !== workInProgress && !shouldYield(); )\n    performUnitOfWork(workInProgress);\n}\nfunction performUnitOfWork(unitOfWork) {\n  var next = beginWork(unitOfWork.alternate, unitOfWork, entangledRenderLanes);\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction replaySuspendedUnitOfWork(unitOfWork) {\n  var next = unitOfWork;\n  var current = next.alternate;\n  switch (next.tag) {\n    case 15:\n    case 0:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type,\n        void 0,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 11:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type.render,\n        next.ref,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 5:\n      resetHooksOnUnwind(next);\n    default:\n      unwindInterruptedWork(current, next),\n        (next = workInProgress =\n          resetWorkInProgress(next, entangledRenderLanes)),\n        (next = beginWork(current, next, entangledRenderLanes));\n  }\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction throwAndUnwindWorkLoop(\n  root,\n  unitOfWork,\n  thrownValue,\n  suspendedReason\n) {\n  lastContextDependency = currentlyRenderingFiber = null;\n  resetHooksOnUnwind(unitOfWork);\n  thenableState$1 = null;\n  thenableIndexCounter$1 = 0;\n  var returnFiber = unitOfWork.return;\n  try {\n    if (\n      throwException(\n        root,\n        returnFiber,\n        unitOfWork,\n        thrownValue,\n        workInProgressRootRenderLanes\n      )\n    ) {\n      workInProgressRootExitStatus = 1;\n      logUncaughtError(\n        root,\n        createCapturedValueAtFiber(thrownValue, root.current)\n      );\n      workInProgress = null;\n      return;\n    }\n  } catch (error) {\n    if (null !== returnFiber) throw ((workInProgress = returnFiber), error);\n    workInProgressRootExitStatus = 1;\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    );\n    workInProgress = null;\n    return;\n  }\n  if (unitOfWork.flags & 32768) {\n    if (isHydrating || 1 === suspendedReason) root = !0;\n    else if (\n      workInProgressRootIsPrerendering ||\n      0 !== (workInProgressRootRenderLanes & 536870912)\n    )\n      root = !1;\n    else if (\n      ((workInProgressRootDidSkipSuspendedSiblings = root = !0),\n      2 === suspendedReason || 3 === suspendedReason || 6 === suspendedReason)\n    )\n      (suspendedReason = suspenseHandlerStackCursor.current),\n        null !== suspendedReason &&\n          13 === suspendedReason.tag &&\n          (suspendedReason.flags |= 16384);\n    unwindUnitOfWork(unitOfWork, root);\n  } else completeUnitOfWork(unitOfWork);\n}\nfunction completeUnitOfWork(unitOfWork) {\n  var completedWork = unitOfWork;\n  do {\n    if (0 !== (completedWork.flags & 32768)) {\n      unwindUnitOfWork(\n        completedWork,\n        workInProgressRootDidSkipSuspendedSiblings\n      );\n      return;\n    }\n    unitOfWork = completedWork.return;\n    var next = completeWork(\n      completedWork.alternate,\n      completedWork,\n      entangledRenderLanes\n    );\n    if (null !== next) {\n      workInProgress = next;\n      return;\n    }\n    completedWork = completedWork.sibling;\n    if (null !== completedWork) {\n      workInProgress = completedWork;\n      return;\n    }\n    workInProgress = completedWork = unitOfWork;\n  } while (null !== completedWork);\n  0 === workInProgressRootExitStatus && (workInProgressRootExitStatus = 5);\n}\nfunction unwindUnitOfWork(unitOfWork, skipSiblings) {\n  do {\n    var next = unwindWork(unitOfWork.alternate, unitOfWork);\n    if (null !== next) {\n      next.flags &= 32767;\n      workInProgress = next;\n      return;\n    }\n    next = unitOfWork.return;\n    null !== next &&\n      ((next.flags |= 32768), (next.subtreeFlags = 0), (next.deletions = null));\n    if (\n      !skipSiblings &&\n      ((unitOfWork = unitOfWork.sibling), null !== unitOfWork)\n    ) {\n      workInProgress = unitOfWork;\n      return;\n    }\n    workInProgress = unitOfWork = next;\n  } while (null !== unitOfWork);\n  workInProgressRootExitStatus = 6;\n  workInProgress = null;\n}\nfunction commitRoot(\n  root,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes,\n  suspendedCommitReason,\n  completedRenderStartTime,\n  completedRenderEndTime\n) {\n  var prevTransition = ReactSharedInternals.T,\n    previousUpdateLanePriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 2),\n      (ReactSharedInternals.T = null),\n      commitRootImpl(\n        root,\n        recoverableErrors,\n        transitions,\n        didIncludeRenderPhaseUpdate,\n        previousUpdateLanePriority,\n        spawnedLane,\n        updatedLanes,\n        suspendedRetryLanes,\n        suspendedCommitReason,\n        completedRenderStartTime,\n        completedRenderEndTime\n      );\n  } finally {\n    (ReactSharedInternals.T = prevTransition),\n      (ReactDOMSharedInternals.p = previousUpdateLanePriority);\n  }\n}\nfunction commitRootImpl(\n  root,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  renderPriorityLevel,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  do flushPassiveEffects();\n  while (null !== rootWithPendingPassiveEffects);\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  var finishedWork = root.finishedWork;\n  didIncludeRenderPhaseUpdate = root.finishedLanes;\n  if (null === finishedWork) return null;\n  root.finishedWork = null;\n  root.finishedLanes = 0;\n  if (finishedWork === root.current) throw Error(formatProdErrorMessage(177));\n  root.callbackNode = null;\n  root.callbackPriority = 0;\n  root.cancelPendingCommit = null;\n  var remainingLanes = finishedWork.lanes | finishedWork.childLanes;\n  remainingLanes |= concurrentlyUpdatedLanes;\n  markRootFinished(\n    root,\n    didIncludeRenderPhaseUpdate,\n    remainingLanes,\n    spawnedLane,\n    updatedLanes,\n    suspendedRetryLanes\n  );\n  root === workInProgressRoot &&\n    ((workInProgress = workInProgressRoot = null),\n    (workInProgressRootRenderLanes = 0));\n  (0 === (finishedWork.subtreeFlags & 10256) &&\n    0 === (finishedWork.flags & 10256)) ||\n    rootDoesHavePassiveEffects ||\n    ((rootDoesHavePassiveEffects = !0),\n    (pendingPassiveEffectsRemainingLanes = remainingLanes),\n    (pendingPassiveTransitions = transitions),\n    scheduleCallback$1(NormalPriority$1, function () {\n      flushPassiveEffects(!0);\n      return null;\n    }));\n  transitions = 0 !== (finishedWork.flags & 15990);\n  0 !== (finishedWork.subtreeFlags & 15990) || transitions\n    ? ((transitions = ReactSharedInternals.T),\n      (ReactSharedInternals.T = null),\n      (spawnedLane = ReactDOMSharedInternals.p),\n      (ReactDOMSharedInternals.p = 2),\n      (updatedLanes = executionContext),\n      (executionContext |= 4),\n      commitBeforeMutationEffects(root, finishedWork),\n      commitMutationEffectsOnFiber(finishedWork, root),\n      restoreSelection(selectionInformation, root.containerInfo),\n      (_enabled = !!eventsEnabled),\n      (selectionInformation = eventsEnabled = null),\n      (root.current = finishedWork),\n      commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork),\n      requestPaint(),\n      (executionContext = updatedLanes),\n      (ReactDOMSharedInternals.p = spawnedLane),\n      (ReactSharedInternals.T = transitions))\n    : (root.current = finishedWork);\n  rootDoesHavePassiveEffects\n    ? ((rootDoesHavePassiveEffects = !1),\n      (rootWithPendingPassiveEffects = root),\n      (pendingPassiveEffectsLanes = didIncludeRenderPhaseUpdate))\n    : releaseRootPooledCache(root, remainingLanes);\n  remainingLanes = root.pendingLanes;\n  0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);\n  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\n  ensureRootIsScheduled(root);\n  if (null !== recoverableErrors)\n    for (\n      renderPriorityLevel = root.onRecoverableError, finishedWork = 0;\n      finishedWork < recoverableErrors.length;\n      finishedWork++\n    )\n      (remainingLanes = recoverableErrors[finishedWork]),\n        renderPriorityLevel(remainingLanes.value, {\n          componentStack: remainingLanes.stack\n        });\n  0 !== (pendingPassiveEffectsLanes & 3) && flushPassiveEffects();\n  remainingLanes = root.pendingLanes;\n  0 !== (didIncludeRenderPhaseUpdate & 4194218) && 0 !== (remainingLanes & 42)\n    ? root === rootWithNestedUpdates\n      ? nestedUpdateCount++\n      : ((nestedUpdateCount = 0), (rootWithNestedUpdates = root))\n    : (nestedUpdateCount = 0);\n  flushSyncWorkAcrossRoots_impl(0, !1);\n  return null;\n}\nfunction releaseRootPooledCache(root, remainingLanes) {\n  0 === (root.pooledCacheLanes &= remainingLanes) &&\n    ((remainingLanes = root.pooledCache),\n    null != remainingLanes &&\n      ((root.pooledCache = null), releaseCache(remainingLanes)));\n}\nfunction flushPassiveEffects() {\n  if (null !== rootWithPendingPassiveEffects) {\n    var root$170 = rootWithPendingPassiveEffects,\n      remainingLanes = pendingPassiveEffectsRemainingLanes;\n    pendingPassiveEffectsRemainingLanes = 0;\n    var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes),\n      prevTransition = ReactSharedInternals.T,\n      previousPriority = ReactDOMSharedInternals.p;\n    try {\n      ReactDOMSharedInternals.p = 32 > renderPriority ? 32 : renderPriority;\n      ReactSharedInternals.T = null;\n      if (null === rootWithPendingPassiveEffects)\n        var JSCompiler_inline_result = !1;\n      else {\n        renderPriority = pendingPassiveTransitions;\n        pendingPassiveTransitions = null;\n        var root = rootWithPendingPassiveEffects,\n          lanes = pendingPassiveEffectsLanes;\n        rootWithPendingPassiveEffects = null;\n        pendingPassiveEffectsLanes = 0;\n        if (0 !== (executionContext & 6))\n          throw Error(formatProdErrorMessage(331));\n        var prevExecutionContext = executionContext;\n        executionContext |= 4;\n        commitPassiveUnmountOnFiber(root.current);\n        commitPassiveMountOnFiber(root, root.current, lanes, renderPriority);\n        executionContext = prevExecutionContext;\n        flushSyncWorkAcrossRoots_impl(0, !1);\n        if (\n          injectedHook &&\n          \"function\" === typeof injectedHook.onPostCommitFiberRoot\n        )\n          try {\n            injectedHook.onPostCommitFiberRoot(rendererID, root);\n          } catch (err) {}\n        JSCompiler_inline_result = !0;\n      }\n      return JSCompiler_inline_result;\n    } finally {\n      (ReactDOMSharedInternals.p = previousPriority),\n        (ReactSharedInternals.T = prevTransition),\n        releaseRootPooledCache(root$170, remainingLanes);\n    }\n  }\n  return !1;\n}\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n  sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);\n  rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);\n  null !== rootFiber &&\n    (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));\n}\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {\n  if (3 === sourceFiber.tag)\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n  else\n    for (; null !== nearestMountedAncestor; ) {\n      if (3 === nearestMountedAncestor.tag) {\n        captureCommitPhaseErrorOnRoot(\n          nearestMountedAncestor,\n          sourceFiber,\n          error\n        );\n        break;\n      } else if (1 === nearestMountedAncestor.tag) {\n        var instance = nearestMountedAncestor.stateNode;\n        if (\n          \"function\" ===\n            typeof nearestMountedAncestor.type.getDerivedStateFromError ||\n          (\"function\" === typeof instance.componentDidCatch &&\n            (null === legacyErrorBoundariesThatAlreadyFailed ||\n              !legacyErrorBoundariesThatAlreadyFailed.has(instance)))\n        ) {\n          sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n          error = createClassErrorUpdate(2);\n          instance = enqueueUpdate(nearestMountedAncestor, error, 2);\n          null !== instance &&\n            (initializeClassErrorUpdate(\n              error,\n              instance,\n              nearestMountedAncestor,\n              sourceFiber\n            ),\n            markRootUpdated$1(instance, 2),\n            ensureRootIsScheduled(instance));\n          break;\n        }\n      }\n      nearestMountedAncestor = nearestMountedAncestor.return;\n    }\n}\nfunction attachPingListener(root, wakeable, lanes) {\n  var pingCache = root.pingCache;\n  if (null === pingCache) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    var threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else\n    (threadIDs = pingCache.get(wakeable)),\n      void 0 === threadIDs &&\n        ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));\n  threadIDs.has(lanes) ||\n    ((workInProgressRootDidAttachPingListener = !0),\n    threadIDs.add(lanes),\n    (root = pingSuspendedRoot.bind(null, root, wakeable, lanes)),\n    wakeable.then(root, root));\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  var pingCache = root.pingCache;\n  null !== pingCache && pingCache.delete(wakeable);\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n  root.warmLanes &= ~pingedLanes;\n  workInProgressRoot === root &&\n    (workInProgressRootRenderLanes & pingedLanes) === pingedLanes &&\n    (4 === workInProgressRootExitStatus ||\n    (3 === workInProgressRootExitStatus &&\n      (workInProgressRootRenderLanes & 62914560) ===\n        workInProgressRootRenderLanes &&\n      300 > now() - globalMostRecentFallbackTime)\n      ? 0 === (executionContext & 2) && prepareFreshStack(root, 0)\n      : (workInProgressRootPingedLanes |= pingedLanes),\n    workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes &&\n      (workInProgressSuspendedRetryLanes = 0));\n  ensureRootIsScheduled(root);\n}\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  0 === retryLane && (retryLane = claimNextRetryLane());\n  boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n  null !== boundaryFiber &&\n    (markRootUpdated$1(boundaryFiber, retryLane),\n    ensureRootIsScheduled(boundaryFiber));\n}\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\n  var suspenseState = boundaryFiber.memoizedState,\n    retryLane = 0;\n  null !== suspenseState && (retryLane = suspenseState.retryLane);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  var retryLane = 0;\n  switch (boundaryFiber.tag) {\n    case 13:\n      var retryCache = boundaryFiber.stateNode;\n      var suspenseState = boundaryFiber.memoizedState;\n      null !== suspenseState && (retryLane = suspenseState.retryLane);\n      break;\n    case 19:\n      retryCache = boundaryFiber.stateNode;\n      break;\n    case 22:\n      retryCache = boundaryFiber.stateNode._retryCache;\n      break;\n    default:\n      throw Error(formatProdErrorMessage(314));\n  }\n  null !== retryCache && retryCache.delete(wakeable);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction scheduleCallback$1(priorityLevel, callback) {\n  return scheduleCallback$3(priorityLevel, callback);\n}\nvar firstScheduledRoot = null,\n  lastScheduledRoot = null,\n  didScheduleMicrotask = !1,\n  mightHavePendingSyncWork = !1,\n  isFlushingWork = !1,\n  currentEventTransitionLane = 0;\nfunction ensureRootIsScheduled(root) {\n  root !== lastScheduledRoot &&\n    null === root.next &&\n    (null === lastScheduledRoot\n      ? (firstScheduledRoot = lastScheduledRoot = root)\n      : (lastScheduledRoot = lastScheduledRoot.next = root));\n  mightHavePendingSyncWork = !0;\n  didScheduleMicrotask ||\n    ((didScheduleMicrotask = !0),\n    scheduleImmediateTask(processRootScheduleInMicrotask));\n}\nfunction flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {\n  if (!isFlushingWork && mightHavePendingSyncWork) {\n    isFlushingWork = !0;\n    do {\n      var didPerformSomeWork = !1;\n      for (var root$172 = firstScheduledRoot; null !== root$172; ) {\n        if (!onlyLegacy)\n          if (0 !== syncTransitionLanes) {\n            var pendingLanes = root$172.pendingLanes;\n            if (0 === pendingLanes) var JSCompiler_inline_result = 0;\n            else {\n              var suspendedLanes = root$172.suspendedLanes,\n                pingedLanes = root$172.pingedLanes;\n              JSCompiler_inline_result =\n                (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;\n              JSCompiler_inline_result &=\n                pendingLanes & ~(suspendedLanes & ~pingedLanes);\n              JSCompiler_inline_result =\n                JSCompiler_inline_result & 201326677\n                  ? (JSCompiler_inline_result & 201326677) | 1\n                  : JSCompiler_inline_result\n                    ? JSCompiler_inline_result | 2\n                    : 0;\n            }\n            0 !== JSCompiler_inline_result &&\n              ((didPerformSomeWork = !0),\n              performSyncWorkOnRoot(root$172, JSCompiler_inline_result));\n          } else\n            (JSCompiler_inline_result = workInProgressRootRenderLanes),\n              (JSCompiler_inline_result = getNextLanes(\n                root$172,\n                root$172 === workInProgressRoot ? JSCompiler_inline_result : 0\n              )),\n              0 === (JSCompiler_inline_result & 3) ||\n                checkIfRootIsPrerendering(root$172, JSCompiler_inline_result) ||\n                ((didPerformSomeWork = !0),\n                performSyncWorkOnRoot(root$172, JSCompiler_inline_result));\n        root$172 = root$172.next;\n      }\n    } while (didPerformSomeWork);\n    isFlushingWork = !1;\n  }\n}\nfunction processRootScheduleInMicrotask() {\n  mightHavePendingSyncWork = didScheduleMicrotask = !1;\n  var syncTransitionLanes = 0;\n  0 !== currentEventTransitionLane &&\n    (shouldAttemptEagerTransition() &&\n      (syncTransitionLanes = currentEventTransitionLane),\n    (currentEventTransitionLane = 0));\n  for (\n    var currentTime = now(), prev = null, root = firstScheduledRoot;\n    null !== root;\n\n  ) {\n    var next = root.next,\n      nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);\n    if (0 === nextLanes)\n      (root.next = null),\n        null === prev ? (firstScheduledRoot = next) : (prev.next = next),\n        null === next && (lastScheduledRoot = prev);\n    else if (\n      ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))\n    )\n      mightHavePendingSyncWork = !0;\n    root = next;\n  }\n  flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);\n}\nfunction scheduleTaskForRootDuringMicrotask(root, currentTime) {\n  for (\n    var suspendedLanes = root.suspendedLanes,\n      pingedLanes = root.pingedLanes,\n      expirationTimes = root.expirationTimes,\n      lanes = root.pendingLanes & -62914561;\n    0 < lanes;\n\n  ) {\n    var index$5 = 31 - clz32(lanes),\n      lane = 1 << index$5,\n      expirationTime = expirationTimes[index$5];\n    if (-1 === expirationTime) {\n      if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes))\n        expirationTimes[index$5] = computeExpirationTime(lane, currentTime);\n    } else expirationTime <= currentTime && (root.expiredLanes |= lane);\n    lanes &= ~lane;\n  }\n  currentTime = workInProgressRoot;\n  suspendedLanes = workInProgressRootRenderLanes;\n  suspendedLanes = getNextLanes(\n    root,\n    root === currentTime ? suspendedLanes : 0\n  );\n  pingedLanes = root.callbackNode;\n  if (\n    0 === suspendedLanes ||\n    (root === currentTime && 2 === workInProgressSuspendedReason) ||\n    null !== root.cancelPendingCommit\n  )\n    return (\n      null !== pingedLanes &&\n        null !== pingedLanes &&\n        cancelCallback$1(pingedLanes),\n      (root.callbackNode = null),\n      (root.callbackPriority = 0)\n    );\n  if (\n    0 === (suspendedLanes & 3) ||\n    checkIfRootIsPrerendering(root, suspendedLanes)\n  ) {\n    currentTime = suspendedLanes & -suspendedLanes;\n    if (currentTime === root.callbackPriority) return currentTime;\n    null !== pingedLanes && cancelCallback$1(pingedLanes);\n    switch (lanesToEventPriority(suspendedLanes)) {\n      case 2:\n      case 8:\n        suspendedLanes = UserBlockingPriority;\n        break;\n      case 32:\n        suspendedLanes = NormalPriority$1;\n        break;\n      case 268435456:\n        suspendedLanes = IdlePriority;\n        break;\n      default:\n        suspendedLanes = NormalPriority$1;\n    }\n    pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);\n    suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes);\n    root.callbackPriority = currentTime;\n    root.callbackNode = suspendedLanes;\n    return currentTime;\n  }\n  null !== pingedLanes && null !== pingedLanes && cancelCallback$1(pingedLanes);\n  root.callbackPriority = 2;\n  root.callbackNode = null;\n  return 2;\n}\nfunction performWorkOnRootViaSchedulerTask(root, didTimeout) {\n  var originalCallbackNode = root.callbackNode;\n  if (flushPassiveEffects() && root.callbackNode !== originalCallbackNode)\n    return null;\n  var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;\n  workInProgressRootRenderLanes$jscomp$0 = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0\n  );\n  if (0 === workInProgressRootRenderLanes$jscomp$0) return null;\n  performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);\n  scheduleTaskForRootDuringMicrotask(root, now());\n  return null != root.callbackNode && root.callbackNode === originalCallbackNode\n    ? performWorkOnRootViaSchedulerTask.bind(null, root)\n    : null;\n}\nfunction performSyncWorkOnRoot(root, lanes) {\n  if (flushPassiveEffects()) return null;\n  performWorkOnRoot(root, lanes, !0);\n}\nfunction scheduleImmediateTask(cb) {\n  scheduleMicrotask(function () {\n    0 !== (executionContext & 6)\n      ? scheduleCallback$3(ImmediatePriority, cb)\n      : cb();\n  });\n}\nfunction requestTransitionLane() {\n  0 === currentEventTransitionLane &&\n    (currentEventTransitionLane = claimNextTransitionLane());\n  return currentEventTransitionLane;\n}\nfunction coerceFormActionProp(actionProp) {\n  return null == actionProp ||\n    \"symbol\" === typeof actionProp ||\n    \"boolean\" === typeof actionProp\n    ? null\n    : \"function\" === typeof actionProp\n      ? actionProp\n      : sanitizeURL(\"\" + actionProp);\n}\nfunction createFormDataWithSubmitter(form, submitter) {\n  var temp = submitter.ownerDocument.createElement(\"input\");\n  temp.name = submitter.name;\n  temp.value = submitter.value;\n  form.id && temp.setAttribute(\"form\", form.id);\n  submitter.parentNode.insertBefore(temp, submitter);\n  form = new FormData(form);\n  temp.parentNode.removeChild(temp);\n  return form;\n}\nfunction extractEvents$1(\n  dispatchQueue,\n  domEventName,\n  maybeTargetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  if (\n    \"submit\" === domEventName &&\n    maybeTargetInst &&\n    maybeTargetInst.stateNode === nativeEventTarget\n  ) {\n    var action = coerceFormActionProp(\n        (nativeEventTarget[internalPropsKey] || null).action\n      ),\n      submitter = nativeEvent.submitter;\n    submitter &&\n      ((domEventName = (domEventName = submitter[internalPropsKey] || null)\n        ? coerceFormActionProp(domEventName.formAction)\n        : submitter.getAttribute(\"formAction\")),\n      null !== domEventName && ((action = domEventName), (submitter = null)));\n    var event = new SyntheticEvent(\n      \"action\",\n      \"action\",\n      null,\n      nativeEvent,\n      nativeEventTarget\n    );\n    dispatchQueue.push({\n      event: event,\n      listeners: [\n        {\n          instance: null,\n          listener: function () {\n            if (nativeEvent.defaultPrevented) {\n              if (0 !== currentEventTransitionLane) {\n                var formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget);\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  null,\n                  formData\n                );\n              }\n            } else\n              \"function\" === typeof action &&\n                (event.preventDefault(),\n                (formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget)),\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  action,\n                  formData\n                ));\n          },\n          currentTarget: nativeEventTarget\n        }\n      ]\n    });\n  }\n}\nfor (\n  var i$jscomp$inline_1439 = 0;\n  i$jscomp$inline_1439 < simpleEventPluginEvents.length;\n  i$jscomp$inline_1439++\n) {\n  var eventName$jscomp$inline_1440 =\n      simpleEventPluginEvents[i$jscomp$inline_1439],\n    domEventName$jscomp$inline_1441 =\n      eventName$jscomp$inline_1440.toLowerCase(),\n    capitalizedEvent$jscomp$inline_1442 =\n      eventName$jscomp$inline_1440[0].toUpperCase() +\n      eventName$jscomp$inline_1440.slice(1);\n  registerSimpleEvent(\n    domEventName$jscomp$inline_1441,\n    \"on\" + capitalizedEvent$jscomp$inline_1442\n  );\n}\nregisterSimpleEvent(ANIMATION_END, \"onAnimationEnd\");\nregisterSimpleEvent(ANIMATION_ITERATION, \"onAnimationIteration\");\nregisterSimpleEvent(ANIMATION_START, \"onAnimationStart\");\nregisterSimpleEvent(\"dblclick\", \"onDoubleClick\");\nregisterSimpleEvent(\"focusin\", \"onFocus\");\nregisterSimpleEvent(\"focusout\", \"onBlur\");\nregisterSimpleEvent(TRANSITION_RUN, \"onTransitionRun\");\nregisterSimpleEvent(TRANSITION_START, \"onTransitionStart\");\nregisterSimpleEvent(TRANSITION_CANCEL, \"onTransitionCancel\");\nregisterSimpleEvent(TRANSITION_END, \"onTransitionEnd\");\nregisterDirectEvent(\"onMouseEnter\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onMouseLeave\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onPointerEnter\", [\"pointerout\", \"pointerover\"]);\nregisterDirectEvent(\"onPointerLeave\", [\"pointerout\", \"pointerover\"]);\nregisterTwoPhaseEvent(\n  \"onChange\",\n  \"change click focusin focusout input keydown keyup selectionchange\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onSelect\",\n  \"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\n    \" \"\n  )\n);\nregisterTwoPhaseEvent(\"onBeforeInput\", [\n  \"compositionend\",\n  \"keypress\",\n  \"textInput\",\n  \"paste\"\n]);\nregisterTwoPhaseEvent(\n  \"onCompositionEnd\",\n  \"compositionend focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionStart\",\n  \"compositionstart focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionUpdate\",\n  \"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \")\n);\nvar mediaEventTypes =\n    \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\n      \" \"\n    ),\n  nonDelegatedEvents = new Set(\n    \"beforetoggle cancel close invalid load scroll scrollend toggle\"\n      .split(\" \")\n      .concat(mediaEventTypes)\n  );\nfunction processDispatchQueue(dispatchQueue, eventSystemFlags) {\n  eventSystemFlags = 0 !== (eventSystemFlags & 4);\n  for (var i = 0; i < dispatchQueue.length; i++) {\n    var _dispatchQueue$i = dispatchQueue[i],\n      event = _dispatchQueue$i.event;\n    _dispatchQueue$i = _dispatchQueue$i.listeners;\n    a: {\n      var previousInstance = void 0;\n      if (eventSystemFlags)\n        for (\n          var i$jscomp$0 = _dispatchQueue$i.length - 1;\n          0 <= i$jscomp$0;\n          i$jscomp$0--\n        ) {\n          var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0],\n            instance = _dispatchListeners$i.instance,\n            currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n      else\n        for (\n          i$jscomp$0 = 0;\n          i$jscomp$0 < _dispatchQueue$i.length;\n          i$jscomp$0++\n        ) {\n          _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];\n          instance = _dispatchListeners$i.instance;\n          currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n    }\n  }\n}\nfunction listenToNonDelegatedEvent(domEventName, targetElement) {\n  var JSCompiler_inline_result = targetElement[internalEventHandlersKey];\n  void 0 === JSCompiler_inline_result &&\n    (JSCompiler_inline_result = targetElement[internalEventHandlersKey] =\n      new Set());\n  var listenerSetKey = domEventName + \"__bubble\";\n  JSCompiler_inline_result.has(listenerSetKey) ||\n    (addTrappedEventListener(targetElement, domEventName, 2, !1),\n    JSCompiler_inline_result.add(listenerSetKey));\n}\nfunction listenToNativeEvent(domEventName, isCapturePhaseListener, target) {\n  var eventSystemFlags = 0;\n  isCapturePhaseListener && (eventSystemFlags |= 4);\n  addTrappedEventListener(\n    target,\n    domEventName,\n    eventSystemFlags,\n    isCapturePhaseListener\n  );\n}\nvar listeningMarker = \"_reactListening\" + Math.random().toString(36).slice(2);\nfunction listenToAllSupportedEvents(rootContainerElement) {\n  if (!rootContainerElement[listeningMarker]) {\n    rootContainerElement[listeningMarker] = !0;\n    allNativeEvents.forEach(function (domEventName) {\n      \"selectionchange\" !== domEventName &&\n        (nonDelegatedEvents.has(domEventName) ||\n          listenToNativeEvent(domEventName, !1, rootContainerElement),\n        listenToNativeEvent(domEventName, !0, rootContainerElement));\n    });\n    var ownerDocument =\n      9 === rootContainerElement.nodeType\n        ? rootContainerElement\n        : rootContainerElement.ownerDocument;\n    null === ownerDocument ||\n      ownerDocument[listeningMarker] ||\n      ((ownerDocument[listeningMarker] = !0),\n      listenToNativeEvent(\"selectionchange\", !1, ownerDocument));\n  }\n}\nfunction addTrappedEventListener(\n  targetContainer,\n  domEventName,\n  eventSystemFlags,\n  isCapturePhaseListener\n) {\n  switch (getEventPriority(domEventName)) {\n    case 2:\n      var listenerWrapper = dispatchDiscreteEvent;\n      break;\n    case 8:\n      listenerWrapper = dispatchContinuousEvent;\n      break;\n    default:\n      listenerWrapper = dispatchEvent;\n  }\n  eventSystemFlags = listenerWrapper.bind(\n    null,\n    domEventName,\n    eventSystemFlags,\n    targetContainer\n  );\n  listenerWrapper = void 0;\n  !passiveBrowserEventsSupported ||\n    (\"touchstart\" !== domEventName &&\n      \"touchmove\" !== domEventName &&\n      \"wheel\" !== domEventName) ||\n    (listenerWrapper = !0);\n  isCapturePhaseListener\n    ? void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          capture: !0,\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !0)\n    : void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !1);\n}\nfunction dispatchEventForPluginEventSystem(\n  domEventName,\n  eventSystemFlags,\n  nativeEvent,\n  targetInst$jscomp$0,\n  targetContainer\n) {\n  var ancestorInst = targetInst$jscomp$0;\n  if (\n    0 === (eventSystemFlags & 1) &&\n    0 === (eventSystemFlags & 2) &&\n    null !== targetInst$jscomp$0\n  )\n    a: for (;;) {\n      if (null === targetInst$jscomp$0) return;\n      var nodeTag = targetInst$jscomp$0.tag;\n      if (3 === nodeTag || 4 === nodeTag) {\n        var container = targetInst$jscomp$0.stateNode.containerInfo;\n        if (\n          container === targetContainer ||\n          (8 === container.nodeType && container.parentNode === targetContainer)\n        )\n          break;\n        if (4 === nodeTag)\n          for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {\n            var grandTag = nodeTag.tag;\n            if (3 === grandTag || 4 === grandTag)\n              if (\n                ((grandTag = nodeTag.stateNode.containerInfo),\n                grandTag === targetContainer ||\n                  (8 === grandTag.nodeType &&\n                    grandTag.parentNode === targetContainer))\n              )\n                return;\n            nodeTag = nodeTag.return;\n          }\n        for (; null !== container; ) {\n          nodeTag = getClosestInstanceFromNode(container);\n          if (null === nodeTag) return;\n          grandTag = nodeTag.tag;\n          if (\n            5 === grandTag ||\n            6 === grandTag ||\n            26 === grandTag ||\n            27 === grandTag\n          ) {\n            targetInst$jscomp$0 = ancestorInst = nodeTag;\n            continue a;\n          }\n          container = container.parentNode;\n        }\n      }\n      targetInst$jscomp$0 = targetInst$jscomp$0.return;\n    }\n  batchedUpdates$1(function () {\n    var targetInst = ancestorInst,\n      nativeEventTarget = getEventTarget(nativeEvent),\n      dispatchQueue = [];\n    a: {\n      var reactName = topLevelEventsToReactNames.get(domEventName);\n      if (void 0 !== reactName) {\n        var SyntheticEventCtor = SyntheticEvent,\n          reactEventType = domEventName;\n        switch (domEventName) {\n          case \"keypress\":\n            if (0 === getEventCharCode(nativeEvent)) break a;\n          case \"keydown\":\n          case \"keyup\":\n            SyntheticEventCtor = SyntheticKeyboardEvent;\n            break;\n          case \"focusin\":\n            reactEventType = \"focus\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"focusout\":\n            reactEventType = \"blur\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"beforeblur\":\n          case \"afterblur\":\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"click\":\n            if (2 === nativeEvent.button) break a;\n          case \"auxclick\":\n          case \"dblclick\":\n          case \"mousedown\":\n          case \"mousemove\":\n          case \"mouseup\":\n          case \"mouseout\":\n          case \"mouseover\":\n          case \"contextmenu\":\n            SyntheticEventCtor = SyntheticMouseEvent;\n            break;\n          case \"drag\":\n          case \"dragend\":\n          case \"dragenter\":\n          case \"dragexit\":\n          case \"dragleave\":\n          case \"dragover\":\n          case \"dragstart\":\n          case \"drop\":\n            SyntheticEventCtor = SyntheticDragEvent;\n            break;\n          case \"touchcancel\":\n          case \"touchend\":\n          case \"touchmove\":\n          case \"touchstart\":\n            SyntheticEventCtor = SyntheticTouchEvent;\n            break;\n          case ANIMATION_END:\n          case ANIMATION_ITERATION:\n          case ANIMATION_START:\n            SyntheticEventCtor = SyntheticAnimationEvent;\n            break;\n          case TRANSITION_END:\n            SyntheticEventCtor = SyntheticTransitionEvent;\n            break;\n          case \"scroll\":\n          case \"scrollend\":\n            SyntheticEventCtor = SyntheticUIEvent;\n            break;\n          case \"wheel\":\n            SyntheticEventCtor = SyntheticWheelEvent;\n            break;\n          case \"copy\":\n          case \"cut\":\n          case \"paste\":\n            SyntheticEventCtor = SyntheticClipboardEvent;\n            break;\n          case \"gotpointercapture\":\n          case \"lostpointercapture\":\n          case \"pointercancel\":\n          case \"pointerdown\":\n          case \"pointermove\":\n          case \"pointerout\":\n          case \"pointerover\":\n          case \"pointerup\":\n            SyntheticEventCtor = SyntheticPointerEvent;\n            break;\n          case \"toggle\":\n          case \"beforetoggle\":\n            SyntheticEventCtor = SyntheticToggleEvent;\n        }\n        var inCapturePhase = 0 !== (eventSystemFlags & 4),\n          accumulateTargetOnly =\n            !inCapturePhase &&\n            (\"scroll\" === domEventName || \"scrollend\" === domEventName),\n          reactEventName = inCapturePhase\n            ? null !== reactName\n              ? reactName + \"Capture\"\n              : null\n            : reactName;\n        inCapturePhase = [];\n        for (\n          var instance = targetInst, lastHostComponent;\n          null !== instance;\n\n        ) {\n          var _instance = instance;\n          lastHostComponent = _instance.stateNode;\n          _instance = _instance.tag;\n          (5 !== _instance && 26 !== _instance && 27 !== _instance) ||\n            null === lastHostComponent ||\n            null === reactEventName ||\n            ((_instance = getListener(instance, reactEventName)),\n            null != _instance &&\n              inCapturePhase.push(\n                createDispatchListener(instance, _instance, lastHostComponent)\n              ));\n          if (accumulateTargetOnly) break;\n          instance = instance.return;\n        }\n        0 < inCapturePhase.length &&\n          ((reactName = new SyntheticEventCtor(\n            reactName,\n            reactEventType,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: reactName, listeners: inCapturePhase }));\n      }\n    }\n    if (0 === (eventSystemFlags & 7)) {\n      a: {\n        reactName =\n          \"mouseover\" === domEventName || \"pointerover\" === domEventName;\n        SyntheticEventCtor =\n          \"mouseout\" === domEventName || \"pointerout\" === domEventName;\n        if (\n          reactName &&\n          nativeEvent !== currentReplayingEvent &&\n          (reactEventType =\n            nativeEvent.relatedTarget || nativeEvent.fromElement) &&\n          (getClosestInstanceFromNode(reactEventType) ||\n            reactEventType[internalContainerInstanceKey])\n        )\n          break a;\n        if (SyntheticEventCtor || reactName) {\n          reactName =\n            nativeEventTarget.window === nativeEventTarget\n              ? nativeEventTarget\n              : (reactName = nativeEventTarget.ownerDocument)\n                ? reactName.defaultView || reactName.parentWindow\n                : window;\n          if (SyntheticEventCtor) {\n            if (\n              ((reactEventType =\n                nativeEvent.relatedTarget || nativeEvent.toElement),\n              (SyntheticEventCtor = targetInst),\n              (reactEventType = reactEventType\n                ? getClosestInstanceFromNode(reactEventType)\n                : null),\n              null !== reactEventType &&\n                ((accumulateTargetOnly =\n                  getNearestMountedFiber(reactEventType)),\n                (inCapturePhase = reactEventType.tag),\n                reactEventType !== accumulateTargetOnly ||\n                  (5 !== inCapturePhase &&\n                    27 !== inCapturePhase &&\n                    6 !== inCapturePhase)))\n            )\n              reactEventType = null;\n          } else (SyntheticEventCtor = null), (reactEventType = targetInst);\n          if (SyntheticEventCtor !== reactEventType) {\n            inCapturePhase = SyntheticMouseEvent;\n            _instance = \"onMouseLeave\";\n            reactEventName = \"onMouseEnter\";\n            instance = \"mouse\";\n            if (\"pointerout\" === domEventName || \"pointerover\" === domEventName)\n              (inCapturePhase = SyntheticPointerEvent),\n                (_instance = \"onPointerLeave\"),\n                (reactEventName = \"onPointerEnter\"),\n                (instance = \"pointer\");\n            accumulateTargetOnly =\n              null == SyntheticEventCtor\n                ? reactName\n                : getNodeFromInstance(SyntheticEventCtor);\n            lastHostComponent =\n              null == reactEventType\n                ? reactName\n                : getNodeFromInstance(reactEventType);\n            reactName = new inCapturePhase(\n              _instance,\n              instance + \"leave\",\n              SyntheticEventCtor,\n              nativeEvent,\n              nativeEventTarget\n            );\n            reactName.target = accumulateTargetOnly;\n            reactName.relatedTarget = lastHostComponent;\n            _instance = null;\n            getClosestInstanceFromNode(nativeEventTarget) === targetInst &&\n              ((inCapturePhase = new inCapturePhase(\n                reactEventName,\n                instance + \"enter\",\n                reactEventType,\n                nativeEvent,\n                nativeEventTarget\n              )),\n              (inCapturePhase.target = lastHostComponent),\n              (inCapturePhase.relatedTarget = accumulateTargetOnly),\n              (_instance = inCapturePhase));\n            accumulateTargetOnly = _instance;\n            if (SyntheticEventCtor && reactEventType)\n              b: {\n                inCapturePhase = SyntheticEventCtor;\n                reactEventName = reactEventType;\n                instance = 0;\n                for (\n                  lastHostComponent = inCapturePhase;\n                  lastHostComponent;\n                  lastHostComponent = getParent(lastHostComponent)\n                )\n                  instance++;\n                lastHostComponent = 0;\n                for (\n                  _instance = reactEventName;\n                  _instance;\n                  _instance = getParent(_instance)\n                )\n                  lastHostComponent++;\n                for (; 0 < instance - lastHostComponent; )\n                  (inCapturePhase = getParent(inCapturePhase)), instance--;\n                for (; 0 < lastHostComponent - instance; )\n                  (reactEventName = getParent(reactEventName)),\n                    lastHostComponent--;\n                for (; instance--; ) {\n                  if (\n                    inCapturePhase === reactEventName ||\n                    (null !== reactEventName &&\n                      inCapturePhase === reactEventName.alternate)\n                  )\n                    break b;\n                  inCapturePhase = getParent(inCapturePhase);\n                  reactEventName = getParent(reactEventName);\n                }\n                inCapturePhase = null;\n              }\n            else inCapturePhase = null;\n            null !== SyntheticEventCtor &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                reactName,\n                SyntheticEventCtor,\n                inCapturePhase,\n                !1\n              );\n            null !== reactEventType &&\n              null !== accumulateTargetOnly &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                accumulateTargetOnly,\n                reactEventType,\n                inCapturePhase,\n                !0\n              );\n          }\n        }\n      }\n      a: {\n        reactName = targetInst ? getNodeFromInstance(targetInst) : window;\n        SyntheticEventCtor =\n          reactName.nodeName && reactName.nodeName.toLowerCase();\n        if (\n          \"select\" === SyntheticEventCtor ||\n          (\"input\" === SyntheticEventCtor && \"file\" === reactName.type)\n        )\n          var getTargetInstFunc = getTargetInstForChangeEvent;\n        else if (isTextInputElement(reactName))\n          if (isInputEventSupported)\n            getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n          else {\n            getTargetInstFunc = getTargetInstForInputEventPolyfill;\n            var handleEventFunc = handleEventsForInputEventPolyfill;\n          }\n        else\n          (SyntheticEventCtor = reactName.nodeName),\n            !SyntheticEventCtor ||\n            \"input\" !== SyntheticEventCtor.toLowerCase() ||\n            (\"checkbox\" !== reactName.type && \"radio\" !== reactName.type)\n              ? targetInst &&\n                isCustomElement(targetInst.elementType) &&\n                (getTargetInstFunc = getTargetInstForChangeEvent)\n              : (getTargetInstFunc = getTargetInstForClickEvent);\n        if (\n          getTargetInstFunc &&\n          (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))\n        ) {\n          createAndAccumulateChangeEvent(\n            dispatchQueue,\n            getTargetInstFunc,\n            nativeEvent,\n            nativeEventTarget\n          );\n          break a;\n        }\n        handleEventFunc && handleEventFunc(domEventName, reactName, targetInst);\n        \"focusout\" === domEventName &&\n          targetInst &&\n          \"number\" === reactName.type &&\n          null != targetInst.memoizedProps.value &&\n          setDefaultValue(reactName, \"number\", reactName.value);\n      }\n      handleEventFunc = targetInst ? getNodeFromInstance(targetInst) : window;\n      switch (domEventName) {\n        case \"focusin\":\n          if (\n            isTextInputElement(handleEventFunc) ||\n            \"true\" === handleEventFunc.contentEditable\n          )\n            (activeElement = handleEventFunc),\n              (activeElementInst = targetInst),\n              (lastSelection = null);\n          break;\n        case \"focusout\":\n          lastSelection = activeElementInst = activeElement = null;\n          break;\n        case \"mousedown\":\n          mouseDown = !0;\n          break;\n        case \"contextmenu\":\n        case \"mouseup\":\n        case \"dragend\":\n          mouseDown = !1;\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n          break;\n        case \"selectionchange\":\n          if (skipSelectionChangeEvent) break;\n        case \"keydown\":\n        case \"keyup\":\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n      }\n      var fallbackData;\n      if (canUseCompositionEvent)\n        b: {\n          switch (domEventName) {\n            case \"compositionstart\":\n              var eventType = \"onCompositionStart\";\n              break b;\n            case \"compositionend\":\n              eventType = \"onCompositionEnd\";\n              break b;\n            case \"compositionupdate\":\n              eventType = \"onCompositionUpdate\";\n              break b;\n          }\n          eventType = void 0;\n        }\n      else\n        isComposing\n          ? isFallbackCompositionEnd(domEventName, nativeEvent) &&\n            (eventType = \"onCompositionEnd\")\n          : \"keydown\" === domEventName &&\n            229 === nativeEvent.keyCode &&\n            (eventType = \"onCompositionStart\");\n      eventType &&\n        (useFallbackCompositionData &&\n          \"ko\" !== nativeEvent.locale &&\n          (isComposing || \"onCompositionStart\" !== eventType\n            ? \"onCompositionEnd\" === eventType &&\n              isComposing &&\n              (fallbackData = getData())\n            : ((root = nativeEventTarget),\n              (startText = \"value\" in root ? root.value : root.textContent),\n              (isComposing = !0))),\n        (handleEventFunc = accumulateTwoPhaseListeners(targetInst, eventType)),\n        0 < handleEventFunc.length &&\n          ((eventType = new SyntheticCompositionEvent(\n            eventType,\n            domEventName,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: eventType, listeners: handleEventFunc }),\n          fallbackData\n            ? (eventType.data = fallbackData)\n            : ((fallbackData = getDataFromCustomEvent(nativeEvent)),\n              null !== fallbackData && (eventType.data = fallbackData))));\n      if (\n        (fallbackData = canUseTextInputEvent\n          ? getNativeBeforeInputChars(domEventName, nativeEvent)\n          : getFallbackBeforeInputChars(domEventName, nativeEvent))\n      )\n        (eventType = accumulateTwoPhaseListeners(targetInst, \"onBeforeInput\")),\n          0 < eventType.length &&\n            ((handleEventFunc = new SyntheticCompositionEvent(\n              \"onBeforeInput\",\n              \"beforeinput\",\n              null,\n              nativeEvent,\n              nativeEventTarget\n            )),\n            dispatchQueue.push({\n              event: handleEventFunc,\n              listeners: eventType\n            }),\n            (handleEventFunc.data = fallbackData));\n      extractEvents$1(\n        dispatchQueue,\n        domEventName,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n    }\n    processDispatchQueue(dispatchQueue, eventSystemFlags);\n  });\n}\nfunction createDispatchListener(instance, listener, currentTarget) {\n  return {\n    instance: instance,\n    listener: listener,\n    currentTarget: currentTarget\n  };\n}\nfunction accumulateTwoPhaseListeners(targetFiber, reactName) {\n  for (\n    var captureName = reactName + \"Capture\", listeners = [];\n    null !== targetFiber;\n\n  ) {\n    var _instance2 = targetFiber,\n      stateNode = _instance2.stateNode;\n    _instance2 = _instance2.tag;\n    (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||\n      null === stateNode ||\n      ((_instance2 = getListener(targetFiber, captureName)),\n      null != _instance2 &&\n        listeners.unshift(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ),\n      (_instance2 = getListener(targetFiber, reactName)),\n      null != _instance2 &&\n        listeners.push(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ));\n    targetFiber = targetFiber.return;\n  }\n  return listeners;\n}\nfunction getParent(inst) {\n  if (null === inst) return null;\n  do inst = inst.return;\n  while (inst && 5 !== inst.tag && 27 !== inst.tag);\n  return inst ? inst : null;\n}\nfunction accumulateEnterLeaveListenersForEvent(\n  dispatchQueue,\n  event,\n  target,\n  common,\n  inCapturePhase\n) {\n  for (\n    var registrationName = event._reactName, listeners = [];\n    null !== target && target !== common;\n\n  ) {\n    var _instance3 = target,\n      alternate = _instance3.alternate,\n      stateNode = _instance3.stateNode;\n    _instance3 = _instance3.tag;\n    if (null !== alternate && alternate === common) break;\n    (5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3) ||\n      null === stateNode ||\n      ((alternate = stateNode),\n      inCapturePhase\n        ? ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.unshift(\n              createDispatchListener(target, stateNode, alternate)\n            ))\n        : inCapturePhase ||\n          ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.push(\n              createDispatchListener(target, stateNode, alternate)\n            )));\n    target = target.return;\n  }\n  0 !== listeners.length &&\n    dispatchQueue.push({ event: event, listeners: listeners });\n}\nvar NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g,\n  NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\nfunction normalizeMarkupForTextOrAttribute(markup) {\n  return (\"string\" === typeof markup ? markup : \"\" + markup)\n    .replace(NORMALIZE_NEWLINES_REGEX, \"\\n\")\n    .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, \"\");\n}\nfunction checkForUnmatchedText(serverText, clientText) {\n  clientText = normalizeMarkupForTextOrAttribute(clientText);\n  return normalizeMarkupForTextOrAttribute(serverText) === clientText ? !0 : !1;\n}\nfunction noop$1() {}\nfunction setProp(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"children\":\n      \"string\" === typeof value\n        ? \"body\" === tag ||\n          (\"textarea\" === tag && \"\" === value) ||\n          setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          \"body\" !== tag &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"className\":\n      setValueForKnownAttribute(domElement, \"class\", value);\n      break;\n    case \"tabIndex\":\n      setValueForKnownAttribute(domElement, \"tabindex\", value);\n      break;\n    case \"dir\":\n    case \"role\":\n    case \"viewBox\":\n    case \"width\":\n    case \"height\":\n      setValueForKnownAttribute(domElement, key, value);\n      break;\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"data\":\n      if (\"object\" !== tag) {\n        setValueForKnownAttribute(domElement, \"data\", value);\n        break;\n      }\n    case \"src\":\n    case \"href\":\n      if (\"\" === value && (\"a\" !== tag || \"href\" !== key)) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"action\":\n    case \"formAction\":\n      if (\"function\" === typeof value) {\n        domElement.setAttribute(\n          key,\n          \"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')\"\n        );\n        break;\n      } else\n        \"function\" === typeof prevValue &&\n          (\"formAction\" === key\n            ? (\"input\" !== tag &&\n                setProp(domElement, tag, \"name\", props.name, props, null),\n              setProp(\n                domElement,\n                tag,\n                \"formEncType\",\n                props.formEncType,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formMethod\",\n                props.formMethod,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formTarget\",\n                props.formTarget,\n                props,\n                null\n              ))\n            : (setProp(domElement, tag, \"encType\", props.encType, props, null),\n              setProp(domElement, tag, \"method\", props.method, props, null),\n              setProp(domElement, tag, \"target\", props.target, props, null)));\n      if (\n        null == value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"multiple\":\n      domElement.multiple =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"muted\":\n      domElement.muted =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"defaultValue\":\n    case \"defaultChecked\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"autoFocus\":\n      break;\n    case \"xlinkHref\":\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"boolean\" === typeof value ||\n        \"symbol\" === typeof value\n      ) {\n        domElement.removeAttribute(\"xlink:href\");\n        break;\n      }\n      key = sanitizeURL(\"\" + value);\n      domElement.setAttributeNS(\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:href\",\n        key\n      );\n      break;\n    case \"contentEditable\":\n    case \"spellCheck\":\n    case \"draggable\":\n    case \"value\":\n    case \"autoReverse\":\n    case \"externalResourcesRequired\":\n    case \"focusable\":\n    case \"preserveAlpha\":\n      null != value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\" + value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"inert\":\n    case \"allowFullScreen\":\n    case \"async\":\n    case \"autoPlay\":\n    case \"controls\":\n    case \"default\":\n    case \"defer\":\n    case \"disabled\":\n    case \"disablePictureInPicture\":\n    case \"disableRemotePlayback\":\n    case \"formNoValidate\":\n    case \"hidden\":\n    case \"loop\":\n    case \"noModule\":\n    case \"noValidate\":\n    case \"open\":\n    case \"playsInline\":\n    case \"readOnly\":\n    case \"required\":\n    case \"reversed\":\n    case \"scoped\":\n    case \"seamless\":\n    case \"itemScope\":\n      value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\")\n        : domElement.removeAttribute(key);\n      break;\n    case \"capture\":\n    case \"download\":\n      !0 === value\n        ? domElement.setAttribute(key, \"\")\n        : !1 !== value &&\n            null != value &&\n            \"function\" !== typeof value &&\n            \"symbol\" !== typeof value\n          ? domElement.setAttribute(key, value)\n          : domElement.removeAttribute(key);\n      break;\n    case \"cols\":\n    case \"rows\":\n    case \"size\":\n    case \"span\":\n      null != value &&\n      \"function\" !== typeof value &&\n      \"symbol\" !== typeof value &&\n      !isNaN(value) &&\n      1 <= value\n        ? domElement.setAttribute(key, value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"rowSpan\":\n    case \"start\":\n      null == value ||\n      \"function\" === typeof value ||\n      \"symbol\" === typeof value ||\n      isNaN(value)\n        ? domElement.removeAttribute(key)\n        : domElement.setAttribute(key, value);\n      break;\n    case \"popover\":\n      listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      setValueForAttribute(domElement, \"popover\", value);\n      break;\n    case \"xlinkActuate\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:actuate\",\n        value\n      );\n      break;\n    case \"xlinkArcrole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:arcrole\",\n        value\n      );\n      break;\n    case \"xlinkRole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:role\",\n        value\n      );\n      break;\n    case \"xlinkShow\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:show\",\n        value\n      );\n      break;\n    case \"xlinkTitle\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:title\",\n        value\n      );\n      break;\n    case \"xlinkType\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:type\",\n        value\n      );\n      break;\n    case \"xmlBase\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:base\",\n        value\n      );\n      break;\n    case \"xmlLang\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:lang\",\n        value\n      );\n      break;\n    case \"xmlSpace\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:space\",\n        value\n      );\n      break;\n    case \"is\":\n      setValueForAttribute(domElement, \"is\", value);\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (\n        !(2 < key.length) ||\n        (\"o\" !== key[0] && \"O\" !== key[0]) ||\n        (\"n\" !== key[1] && \"N\" !== key[1])\n      )\n        (key = aliases.get(key) || key),\n          setValueForAttribute(domElement, key, value);\n  }\n}\nfunction setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"children\":\n      \"string\" === typeof value\n        ? setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (!registrationNameDependencies.hasOwnProperty(key))\n        a: {\n          if (\n            \"o\" === key[0] &&\n            \"n\" === key[1] &&\n            ((props = key.endsWith(\"Capture\")),\n            (tag = key.slice(2, props ? key.length - 7 : void 0)),\n            (prevValue = domElement[internalPropsKey] || null),\n            (prevValue = null != prevValue ? prevValue[key] : null),\n            \"function\" === typeof prevValue &&\n              domElement.removeEventListener(tag, prevValue, props),\n            \"function\" === typeof value)\n          ) {\n            \"function\" !== typeof prevValue &&\n              null !== prevValue &&\n              (key in domElement\n                ? (domElement[key] = null)\n                : domElement.hasAttribute(key) &&\n                  domElement.removeAttribute(key));\n            domElement.addEventListener(tag, value, props);\n            break a;\n          }\n          key in domElement\n            ? (domElement[key] = value)\n            : !0 === value\n              ? domElement.setAttribute(key, \"\")\n              : setValueForAttribute(domElement, key, value);\n        }\n  }\n}\nfunction setInitialProperties(domElement, tag, props) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"img\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      var hasSrc = !1,\n        hasSrcSet = !1,\n        propKey;\n      for (propKey in props)\n        if (props.hasOwnProperty(propKey)) {\n          var propValue = props[propKey];\n          if (null != propValue)\n            switch (propKey) {\n              case \"src\":\n                hasSrc = !0;\n                break;\n              case \"srcSet\":\n                hasSrcSet = !0;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(formatProdErrorMessage(137, tag));\n              default:\n                setProp(domElement, tag, propKey, propValue, props, null);\n            }\n        }\n      hasSrcSet &&\n        setProp(domElement, tag, \"srcSet\", props.srcSet, props, null);\n      hasSrc && setProp(domElement, tag, \"src\", props.src, props, null);\n      return;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      var defaultValue = (propKey = propValue = hasSrcSet = null),\n        checked = null,\n        defaultChecked = null;\n      for (hasSrc in props)\n        if (props.hasOwnProperty(hasSrc)) {\n          var propValue$186 = props[hasSrc];\n          if (null != propValue$186)\n            switch (hasSrc) {\n              case \"name\":\n                hasSrcSet = propValue$186;\n                break;\n              case \"type\":\n                propValue = propValue$186;\n                break;\n              case \"checked\":\n                checked = propValue$186;\n                break;\n              case \"defaultChecked\":\n                defaultChecked = propValue$186;\n                break;\n              case \"value\":\n                propKey = propValue$186;\n                break;\n              case \"defaultValue\":\n                defaultValue = propValue$186;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                if (null != propValue$186)\n                  throw Error(formatProdErrorMessage(137, tag));\n                break;\n              default:\n                setProp(domElement, tag, hasSrc, propValue$186, props, null);\n            }\n        }\n      initInput(\n        domElement,\n        propKey,\n        defaultValue,\n        checked,\n        defaultChecked,\n        propValue,\n        hasSrcSet,\n        !1\n      );\n      track(domElement);\n      return;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      hasSrc = propValue = propKey = null;\n      for (hasSrcSet in props)\n        if (\n          props.hasOwnProperty(hasSrcSet) &&\n          ((defaultValue = props[hasSrcSet]), null != defaultValue)\n        )\n          switch (hasSrcSet) {\n            case \"value\":\n              propKey = defaultValue;\n              break;\n            case \"defaultValue\":\n              propValue = defaultValue;\n              break;\n            case \"multiple\":\n              hasSrc = defaultValue;\n            default:\n              setProp(domElement, tag, hasSrcSet, defaultValue, props, null);\n          }\n      tag = propKey;\n      props = propValue;\n      domElement.multiple = !!hasSrc;\n      null != tag\n        ? updateOptions(domElement, !!hasSrc, tag, !1)\n        : null != props && updateOptions(domElement, !!hasSrc, props, !0);\n      return;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      propKey = hasSrcSet = hasSrc = null;\n      for (propValue in props)\n        if (\n          props.hasOwnProperty(propValue) &&\n          ((defaultValue = props[propValue]), null != defaultValue)\n        )\n          switch (propValue) {\n            case \"value\":\n              hasSrc = defaultValue;\n              break;\n            case \"defaultValue\":\n              hasSrcSet = defaultValue;\n              break;\n            case \"children\":\n              propKey = defaultValue;\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != defaultValue) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              setProp(domElement, tag, propValue, defaultValue, props, null);\n          }\n      initTextarea(domElement, hasSrc, hasSrcSet, propKey);\n      track(domElement);\n      return;\n    case \"option\":\n      for (checked in props)\n        if (\n          props.hasOwnProperty(checked) &&\n          ((hasSrc = props[checked]), null != hasSrc)\n        )\n          switch (checked) {\n            case \"selected\":\n              domElement.selected =\n                hasSrc &&\n                \"function\" !== typeof hasSrc &&\n                \"symbol\" !== typeof hasSrc;\n              break;\n            default:\n              setProp(domElement, tag, checked, hasSrc, props, null);\n          }\n      return;\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"cancel\", domElement);\n      listenToNonDelegatedEvent(\"close\", domElement);\n      break;\n    case \"iframe\":\n    case \"object\":\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)\n        listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);\n      break;\n    case \"image\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      break;\n    case \"embed\":\n    case \"source\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", domElement),\n        listenToNonDelegatedEvent(\"load\", domElement);\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (defaultChecked in props)\n        if (\n          props.hasOwnProperty(defaultChecked) &&\n          ((hasSrc = props[defaultChecked]), null != hasSrc)\n        )\n          switch (defaultChecked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              throw Error(formatProdErrorMessage(137, tag));\n            default:\n              setProp(domElement, tag, defaultChecked, hasSrc, props, null);\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (propValue$186 in props)\n          props.hasOwnProperty(propValue$186) &&\n            ((hasSrc = props[propValue$186]),\n            void 0 !== hasSrc &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propValue$186,\n                hasSrc,\n                props,\n                void 0\n              ));\n        return;\n      }\n  }\n  for (defaultValue in props)\n    props.hasOwnProperty(defaultValue) &&\n      ((hasSrc = props[defaultValue]),\n      null != hasSrc &&\n        setProp(domElement, tag, defaultValue, hasSrc, props, null));\n}\nfunction updateProperties(domElement, tag, lastProps, nextProps) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"input\":\n      var name = null,\n        type = null,\n        value = null,\n        defaultValue = null,\n        lastDefaultValue = null,\n        checked = null,\n        defaultChecked = null;\n      for (propKey in lastProps) {\n        var lastProp = lastProps[propKey];\n        if (lastProps.hasOwnProperty(propKey) && null != lastProp)\n          switch (propKey) {\n            case \"checked\":\n              break;\n            case \"value\":\n              break;\n            case \"defaultValue\":\n              lastDefaultValue = lastProp;\n            default:\n              nextProps.hasOwnProperty(propKey) ||\n                setProp(domElement, tag, propKey, null, nextProps, lastProp);\n          }\n      }\n      for (var propKey$203 in nextProps) {\n        var propKey = nextProps[propKey$203];\n        lastProp = lastProps[propKey$203];\n        if (\n          nextProps.hasOwnProperty(propKey$203) &&\n          (null != propKey || null != lastProp)\n        )\n          switch (propKey$203) {\n            case \"type\":\n              type = propKey;\n              break;\n            case \"name\":\n              name = propKey;\n              break;\n            case \"checked\":\n              checked = propKey;\n              break;\n            case \"defaultChecked\":\n              defaultChecked = propKey;\n              break;\n            case \"value\":\n              value = propKey;\n              break;\n            case \"defaultValue\":\n              defaultValue = propKey;\n              break;\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              propKey !== lastProp &&\n                setProp(\n                  domElement,\n                  tag,\n                  propKey$203,\n                  propKey,\n                  nextProps,\n                  lastProp\n                );\n          }\n      }\n      updateInput(\n        domElement,\n        value,\n        defaultValue,\n        lastDefaultValue,\n        checked,\n        defaultChecked,\n        type,\n        name\n      );\n      return;\n    case \"select\":\n      propKey = value = defaultValue = propKey$203 = null;\n      for (type in lastProps)\n        if (\n          ((lastDefaultValue = lastProps[type]),\n          lastProps.hasOwnProperty(type) && null != lastDefaultValue)\n        )\n          switch (type) {\n            case \"value\":\n              break;\n            case \"multiple\":\n              propKey = lastDefaultValue;\n            default:\n              nextProps.hasOwnProperty(type) ||\n                setProp(\n                  domElement,\n                  tag,\n                  type,\n                  null,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      for (name in nextProps)\n        if (\n          ((type = nextProps[name]),\n          (lastDefaultValue = lastProps[name]),\n          nextProps.hasOwnProperty(name) &&\n            (null != type || null != lastDefaultValue))\n        )\n          switch (name) {\n            case \"value\":\n              propKey$203 = type;\n              break;\n            case \"defaultValue\":\n              defaultValue = type;\n              break;\n            case \"multiple\":\n              value = type;\n            default:\n              type !== lastDefaultValue &&\n                setProp(\n                  domElement,\n                  tag,\n                  name,\n                  type,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      tag = defaultValue;\n      lastProps = value;\n      nextProps = propKey;\n      null != propKey$203\n        ? updateOptions(domElement, !!lastProps, propKey$203, !1)\n        : !!nextProps !== !!lastProps &&\n          (null != tag\n            ? updateOptions(domElement, !!lastProps, tag, !0)\n            : updateOptions(domElement, !!lastProps, lastProps ? [] : \"\", !1));\n      return;\n    case \"textarea\":\n      propKey = propKey$203 = null;\n      for (defaultValue in lastProps)\n        if (\n          ((name = lastProps[defaultValue]),\n          lastProps.hasOwnProperty(defaultValue) &&\n            null != name &&\n            !nextProps.hasOwnProperty(defaultValue))\n        )\n          switch (defaultValue) {\n            case \"value\":\n              break;\n            case \"children\":\n              break;\n            default:\n              setProp(domElement, tag, defaultValue, null, nextProps, name);\n          }\n      for (value in nextProps)\n        if (\n          ((name = nextProps[value]),\n          (type = lastProps[value]),\n          nextProps.hasOwnProperty(value) && (null != name || null != type))\n        )\n          switch (value) {\n            case \"value\":\n              propKey$203 = name;\n              break;\n            case \"defaultValue\":\n              propKey = name;\n              break;\n            case \"children\":\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != name) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              name !== type &&\n                setProp(domElement, tag, value, name, nextProps, type);\n          }\n      updateTextarea(domElement, propKey$203, propKey);\n      return;\n    case \"option\":\n      for (var propKey$219 in lastProps)\n        if (\n          ((propKey$203 = lastProps[propKey$219]),\n          lastProps.hasOwnProperty(propKey$219) &&\n            null != propKey$203 &&\n            !nextProps.hasOwnProperty(propKey$219))\n        )\n          switch (propKey$219) {\n            case \"selected\":\n              domElement.selected = !1;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                propKey$219,\n                null,\n                nextProps,\n                propKey$203\n              );\n          }\n      for (lastDefaultValue in nextProps)\n        if (\n          ((propKey$203 = nextProps[lastDefaultValue]),\n          (propKey = lastProps[lastDefaultValue]),\n          nextProps.hasOwnProperty(lastDefaultValue) &&\n            propKey$203 !== propKey &&\n            (null != propKey$203 || null != propKey))\n        )\n          switch (lastDefaultValue) {\n            case \"selected\":\n              domElement.selected =\n                propKey$203 &&\n                \"function\" !== typeof propKey$203 &&\n                \"symbol\" !== typeof propKey$203;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                lastDefaultValue,\n                propKey$203,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    case \"img\":\n    case \"link\":\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"embed\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"source\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (var propKey$224 in lastProps)\n        (propKey$203 = lastProps[propKey$224]),\n          lastProps.hasOwnProperty(propKey$224) &&\n            null != propKey$203 &&\n            !nextProps.hasOwnProperty(propKey$224) &&\n            setProp(domElement, tag, propKey$224, null, nextProps, propKey$203);\n      for (checked in nextProps)\n        if (\n          ((propKey$203 = nextProps[checked]),\n          (propKey = lastProps[checked]),\n          nextProps.hasOwnProperty(checked) &&\n            propKey$203 !== propKey &&\n            (null != propKey$203 || null != propKey))\n        )\n          switch (checked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey$203)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                checked,\n                propKey$203,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (var propKey$229 in lastProps)\n          (propKey$203 = lastProps[propKey$229]),\n            lastProps.hasOwnProperty(propKey$229) &&\n              void 0 !== propKey$203 &&\n              !nextProps.hasOwnProperty(propKey$229) &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propKey$229,\n                void 0,\n                nextProps,\n                propKey$203\n              );\n        for (defaultChecked in nextProps)\n          (propKey$203 = nextProps[defaultChecked]),\n            (propKey = lastProps[defaultChecked]),\n            !nextProps.hasOwnProperty(defaultChecked) ||\n              propKey$203 === propKey ||\n              (void 0 === propKey$203 && void 0 === propKey) ||\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                defaultChecked,\n                propKey$203,\n                nextProps,\n                propKey\n              );\n        return;\n      }\n  }\n  for (var propKey$234 in lastProps)\n    (propKey$203 = lastProps[propKey$234]),\n      lastProps.hasOwnProperty(propKey$234) &&\n        null != propKey$203 &&\n        !nextProps.hasOwnProperty(propKey$234) &&\n        setProp(domElement, tag, propKey$234, null, nextProps, propKey$203);\n  for (lastProp in nextProps)\n    (propKey$203 = nextProps[lastProp]),\n      (propKey = lastProps[lastProp]),\n      !nextProps.hasOwnProperty(lastProp) ||\n        propKey$203 === propKey ||\n        (null == propKey$203 && null == propKey) ||\n        setProp(domElement, tag, lastProp, propKey$203, nextProps, propKey);\n}\nvar eventsEnabled = null,\n  selectionInformation = null;\nfunction getOwnerDocumentFromRootContainer(rootContainerElement) {\n  return 9 === rootContainerElement.nodeType\n    ? rootContainerElement\n    : rootContainerElement.ownerDocument;\n}\nfunction getOwnHostContext(namespaceURI) {\n  switch (namespaceURI) {\n    case \"http://www.w3.org/2000/svg\":\n      return 1;\n    case \"http://www.w3.org/1998/Math/MathML\":\n      return 2;\n    default:\n      return 0;\n  }\n}\nfunction getChildHostContextProd(parentNamespace, type) {\n  if (0 === parentNamespace)\n    switch (type) {\n      case \"svg\":\n        return 1;\n      case \"math\":\n        return 2;\n      default:\n        return 0;\n    }\n  return 1 === parentNamespace && \"foreignObject\" === type\n    ? 0\n    : parentNamespace;\n}\nfunction shouldSetTextContent(type, props) {\n  return (\n    \"textarea\" === type ||\n    \"noscript\" === type ||\n    \"string\" === typeof props.children ||\n    \"number\" === typeof props.children ||\n    \"bigint\" === typeof props.children ||\n    (\"object\" === typeof props.dangerouslySetInnerHTML &&\n      null !== props.dangerouslySetInnerHTML &&\n      null != props.dangerouslySetInnerHTML.__html)\n  );\n}\nvar currentPopstateTransitionEvent = null;\nfunction shouldAttemptEagerTransition() {\n  var event = window.event;\n  if (event && \"popstate\" === event.type) {\n    if (event === currentPopstateTransitionEvent) return !1;\n    currentPopstateTransitionEvent = event;\n    return !0;\n  }\n  currentPopstateTransitionEvent = null;\n  return !1;\n}\nvar scheduleTimeout = \"function\" === typeof setTimeout ? setTimeout : void 0,\n  cancelTimeout = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n  localPromise = \"function\" === typeof Promise ? Promise : void 0,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : \"undefined\" !== typeof localPromise\n        ? function (callback) {\n            return localPromise\n              .resolve(null)\n              .then(callback)\n              .catch(handleErrorInNextTick);\n          }\n        : scheduleTimeout;\nfunction handleErrorInNextTick(error) {\n  setTimeout(function () {\n    throw error;\n  });\n}\nfunction clearSuspenseBoundary(parentInstance, suspenseInstance) {\n  var node = suspenseInstance,\n    depth = 0;\n  do {\n    var nextNode = node.nextSibling;\n    parentInstance.removeChild(node);\n    if (nextNode && 8 === nextNode.nodeType)\n      if (((node = nextNode.data), \"/$\" === node)) {\n        if (0 === depth) {\n          parentInstance.removeChild(nextNode);\n          retryIfBlockedOn(suspenseInstance);\n          return;\n        }\n        depth--;\n      } else (\"$\" !== node && \"$?\" !== node && \"$!\" !== node) || depth++;\n    node = nextNode;\n  } while (node);\n  retryIfBlockedOn(suspenseInstance);\n}\nfunction clearContainerSparingly(container) {\n  var nextNode = container.firstChild;\n  nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);\n  for (; nextNode; ) {\n    var node = nextNode;\n    nextNode = nextNode.nextSibling;\n    switch (node.nodeName) {\n      case \"HTML\":\n      case \"HEAD\":\n      case \"BODY\":\n        clearContainerSparingly(node);\n        detachDeletedInstance(node);\n        continue;\n      case \"SCRIPT\":\n      case \"STYLE\":\n        continue;\n      case \"LINK\":\n        if (\"stylesheet\" === node.rel.toLowerCase()) continue;\n    }\n    container.removeChild(node);\n  }\n}\nfunction canHydrateInstance(instance, type, props, inRootOrSingleton) {\n  for (; 1 === instance.nodeType; ) {\n    var anyProps = props;\n    if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {\n      if (\n        !inRootOrSingleton &&\n        (\"INPUT\" !== instance.nodeName || \"hidden\" !== instance.type)\n      )\n        break;\n    } else if (!inRootOrSingleton)\n      if (\"input\" === type && \"hidden\" === instance.type) {\n        var name = null == anyProps.name ? null : \"\" + anyProps.name;\n        if (\n          \"hidden\" === anyProps.type &&\n          instance.getAttribute(\"name\") === name\n        )\n          return instance;\n      } else return instance;\n    else if (!instance[internalHoistableMarker])\n      switch (type) {\n        case \"meta\":\n          if (!instance.hasAttribute(\"itemprop\")) break;\n          return instance;\n        case \"link\":\n          name = instance.getAttribute(\"rel\");\n          if (\"stylesheet\" === name && instance.hasAttribute(\"data-precedence\"))\n            break;\n          else if (\n            name !== anyProps.rel ||\n            instance.getAttribute(\"href\") !==\n              (null == anyProps.href ? null : anyProps.href) ||\n            instance.getAttribute(\"crossorigin\") !==\n              (null == anyProps.crossOrigin ? null : anyProps.crossOrigin) ||\n            instance.getAttribute(\"title\") !==\n              (null == anyProps.title ? null : anyProps.title)\n          )\n            break;\n          return instance;\n        case \"style\":\n          if (instance.hasAttribute(\"data-precedence\")) break;\n          return instance;\n        case \"script\":\n          name = instance.getAttribute(\"src\");\n          if (\n            (name !== (null == anyProps.src ? null : anyProps.src) ||\n              instance.getAttribute(\"type\") !==\n                (null == anyProps.type ? null : anyProps.type) ||\n              instance.getAttribute(\"crossorigin\") !==\n                (null == anyProps.crossOrigin ? null : anyProps.crossOrigin)) &&\n            name &&\n            instance.hasAttribute(\"async\") &&\n            !instance.hasAttribute(\"itemprop\")\n          )\n            break;\n          return instance;\n        default:\n          return instance;\n      }\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) break;\n  }\n  return null;\n}\nfunction canHydrateTextInstance(instance, text, inRootOrSingleton) {\n  if (\"\" === text) return null;\n  for (; 3 !== instance.nodeType; ) {\n    if (\n      (1 !== instance.nodeType ||\n        \"INPUT\" !== instance.nodeName ||\n        \"hidden\" !== instance.type) &&\n      !inRootOrSingleton\n    )\n      return null;\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) return null;\n  }\n  return instance;\n}\nfunction getNextHydratable(node) {\n  for (; null != node; node = node.nextSibling) {\n    var nodeType = node.nodeType;\n    if (1 === nodeType || 3 === nodeType) break;\n    if (8 === nodeType) {\n      nodeType = node.data;\n      if (\n        \"$\" === nodeType ||\n        \"$!\" === nodeType ||\n        \"$?\" === nodeType ||\n        \"F!\" === nodeType ||\n        \"F\" === nodeType\n      )\n        break;\n      if (\"/$\" === nodeType) return null;\n    }\n  }\n  return node;\n}\nfunction getParentSuspenseInstance(targetInstance) {\n  targetInstance = targetInstance.previousSibling;\n  for (var depth = 0; targetInstance; ) {\n    if (8 === targetInstance.nodeType) {\n      var data = targetInstance.data;\n      if (\"$\" === data || \"$!\" === data || \"$?\" === data) {\n        if (0 === depth) return targetInstance;\n        depth--;\n      } else \"/$\" === data && depth++;\n    }\n    targetInstance = targetInstance.previousSibling;\n  }\n  return null;\n}\nfunction resolveSingletonInstance(type, props, rootContainerInstance) {\n  props = getOwnerDocumentFromRootContainer(rootContainerInstance);\n  switch (type) {\n    case \"html\":\n      type = props.documentElement;\n      if (!type) throw Error(formatProdErrorMessage(452));\n      return type;\n    case \"head\":\n      type = props.head;\n      if (!type) throw Error(formatProdErrorMessage(453));\n      return type;\n    case \"body\":\n      type = props.body;\n      if (!type) throw Error(formatProdErrorMessage(454));\n      return type;\n    default:\n      throw Error(formatProdErrorMessage(451));\n  }\n}\nvar preloadPropsMap = new Map(),\n  preconnectsSet = new Set();\nfunction getHoistableRoot(container) {\n  return \"function\" === typeof container.getRootNode\n    ? container.getRootNode()\n    : container.ownerDocument;\n}\nvar previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: flushSyncWork,\n  r: requestFormReset,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nfunction flushSyncWork() {\n  var previousWasRendering = previousDispatcher.f(),\n    wasRendering = flushSyncWork$1();\n  return previousWasRendering || wasRendering;\n}\nfunction requestFormReset(form) {\n  var formInst = getInstanceFromNode(form);\n  null !== formInst && 5 === formInst.tag && \"form\" === formInst.type\n    ? requestFormReset$1(formInst)\n    : previousDispatcher.r(form);\n}\nvar globalDocument = \"undefined\" === typeof document ? null : document;\nfunction preconnectAs(rel, href, crossOrigin) {\n  var ownerDocument = globalDocument;\n  if (ownerDocument && \"string\" === typeof href && href) {\n    var limitedEscapedHref =\n      escapeSelectorAttributeValueInsideDoubleQuotes(href);\n    limitedEscapedHref =\n      'link[rel=\"' + rel + '\"][href=\"' + limitedEscapedHref + '\"]';\n    \"string\" === typeof crossOrigin &&\n      (limitedEscapedHref += '[crossorigin=\"' + crossOrigin + '\"]');\n    preconnectsSet.has(limitedEscapedHref) ||\n      (preconnectsSet.add(limitedEscapedHref),\n      (rel = { rel: rel, crossOrigin: crossOrigin, href: href }),\n      null === ownerDocument.querySelector(limitedEscapedHref) &&\n        ((href = ownerDocument.createElement(\"link\")),\n        setInitialProperties(href, \"link\", rel),\n        markNodeAsHoistable(href),\n        ownerDocument.head.appendChild(href)));\n  }\n}\nfunction prefetchDNS(href) {\n  previousDispatcher.D(href);\n  preconnectAs(\"dns-prefetch\", href, null);\n}\nfunction preconnect(href, crossOrigin) {\n  previousDispatcher.C(href, crossOrigin);\n  preconnectAs(\"preconnect\", href, crossOrigin);\n}\nfunction preload(href, as, options) {\n  previousDispatcher.L(href, as, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href && as) {\n    var preloadSelector =\n      'link[rel=\"preload\"][as=\"' +\n      escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n      '\"]';\n    \"image\" === as\n      ? options && options.imageSrcSet\n        ? ((preloadSelector +=\n            '[imagesrcset=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(\n              options.imageSrcSet\n            ) +\n            '\"]'),\n          \"string\" === typeof options.imageSizes &&\n            (preloadSelector +=\n              '[imagesizes=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                options.imageSizes\n              ) +\n              '\"]'))\n        : (preloadSelector +=\n            '[href=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n            '\"]')\n      : (preloadSelector +=\n          '[href=\"' +\n          escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n          '\"]');\n    var key = preloadSelector;\n    switch (as) {\n      case \"style\":\n        key = getStyleKey(href);\n        break;\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    preloadPropsMap.has(key) ||\n      ((href = assign(\n        {\n          rel: \"preload\",\n          href:\n            \"image\" === as && options && options.imageSrcSet ? void 0 : href,\n          as: as\n        },\n        options\n      )),\n      preloadPropsMap.set(key, href),\n      null !== ownerDocument.querySelector(preloadSelector) ||\n        (\"style\" === as &&\n          ownerDocument.querySelector(getStylesheetSelectorFromKey(key))) ||\n        (\"script\" === as &&\n          ownerDocument.querySelector(getScriptSelectorFromKey(key))) ||\n        ((as = ownerDocument.createElement(\"link\")),\n        setInitialProperties(as, \"link\", href),\n        markNodeAsHoistable(as),\n        ownerDocument.head.appendChild(as)));\n  }\n}\nfunction preloadModule(href, options) {\n  previousDispatcher.m(href, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var as = options && \"string\" === typeof options.as ? options.as : \"script\",\n      preloadSelector =\n        'link[rel=\"modulepreload\"][as=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n        '\"][href=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n        '\"]',\n      key = preloadSelector;\n    switch (as) {\n      case \"audioworklet\":\n      case \"paintworklet\":\n      case \"serviceworker\":\n      case \"sharedworker\":\n      case \"worker\":\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    if (\n      !preloadPropsMap.has(key) &&\n      ((href = assign({ rel: \"modulepreload\", href: href }, options)),\n      preloadPropsMap.set(key, href),\n      null === ownerDocument.querySelector(preloadSelector))\n    ) {\n      switch (as) {\n        case \"audioworklet\":\n        case \"paintworklet\":\n        case \"serviceworker\":\n        case \"sharedworker\":\n        case \"worker\":\n        case \"script\":\n          if (ownerDocument.querySelector(getScriptSelectorFromKey(key)))\n            return;\n      }\n      as = ownerDocument.createElement(\"link\");\n      setInitialProperties(as, \"link\", href);\n      markNodeAsHoistable(as);\n      ownerDocument.head.appendChild(as);\n    }\n  }\n}\nfunction preinitStyle(href, precedence, options) {\n  previousDispatcher.S(href, precedence, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var styles = getResourcesFromRoot(ownerDocument).hoistableStyles,\n      key = getStyleKey(href);\n    precedence = precedence || \"default\";\n    var resource = styles.get(key);\n    if (!resource) {\n      var state = { loading: 0, preload: null };\n      if (\n        (resource = ownerDocument.querySelector(\n          getStylesheetSelectorFromKey(key)\n        ))\n      )\n        state.loading = 5;\n      else {\n        href = assign(\n          { rel: \"stylesheet\", href: href, \"data-precedence\": precedence },\n          options\n        );\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForStylesheet(href, options);\n        var link = (resource = ownerDocument.createElement(\"link\"));\n        markNodeAsHoistable(link);\n        setInitialProperties(link, \"link\", href);\n        link._p = new Promise(function (resolve, reject) {\n          link.onload = resolve;\n          link.onerror = reject;\n        });\n        link.addEventListener(\"load\", function () {\n          state.loading |= 1;\n        });\n        link.addEventListener(\"error\", function () {\n          state.loading |= 2;\n        });\n        state.loading |= 4;\n        insertStylesheet(resource, precedence, ownerDocument);\n      }\n      resource = {\n        type: \"stylesheet\",\n        instance: resource,\n        count: 1,\n        state: state\n      };\n      styles.set(key, resource);\n    }\n  }\n}\nfunction preinitScript(src, options) {\n  previousDispatcher.X(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0 }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction preinitModuleScript(src, options) {\n  previousDispatcher.M(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0, type: \"module\" }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction getResource(type, currentProps, pendingProps, currentResource) {\n  var JSCompiler_inline_result = (JSCompiler_inline_result =\n    rootInstanceStackCursor.current)\n    ? getHoistableRoot(JSCompiler_inline_result)\n    : null;\n  if (!JSCompiler_inline_result) throw Error(formatProdErrorMessage(446));\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return null;\n    case \"style\":\n      return \"string\" === typeof pendingProps.precedence &&\n        \"string\" === typeof pendingProps.href\n        ? ((currentProps = getStyleKey(pendingProps.href)),\n          (pendingProps = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles),\n          (currentResource = pendingProps.get(currentProps)),\n          currentResource ||\n            ((currentResource = {\n              type: \"style\",\n              instance: null,\n              count: 0,\n              state: null\n            }),\n            pendingProps.set(currentProps, currentResource)),\n          currentResource)\n        : { type: \"void\", instance: null, count: 0, state: null };\n    case \"link\":\n      if (\n        \"stylesheet\" === pendingProps.rel &&\n        \"string\" === typeof pendingProps.href &&\n        \"string\" === typeof pendingProps.precedence\n      ) {\n        type = getStyleKey(pendingProps.href);\n        var styles$242 = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles,\n          resource$243 = styles$242.get(type);\n        resource$243 ||\n          ((JSCompiler_inline_result =\n            JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),\n          (resource$243 = {\n            type: \"stylesheet\",\n            instance: null,\n            count: 0,\n            state: { loading: 0, preload: null }\n          }),\n          styles$242.set(type, resource$243),\n          (styles$242 = JSCompiler_inline_result.querySelector(\n            getStylesheetSelectorFromKey(type)\n          )) &&\n            !styles$242._p &&\n            ((resource$243.instance = styles$242),\n            (resource$243.state.loading = 5)),\n          preloadPropsMap.has(type) ||\n            ((pendingProps = {\n              rel: \"preload\",\n              as: \"style\",\n              href: pendingProps.href,\n              crossOrigin: pendingProps.crossOrigin,\n              integrity: pendingProps.integrity,\n              media: pendingProps.media,\n              hrefLang: pendingProps.hrefLang,\n              referrerPolicy: pendingProps.referrerPolicy\n            }),\n            preloadPropsMap.set(type, pendingProps),\n            styles$242 ||\n              preloadStylesheet(\n                JSCompiler_inline_result,\n                type,\n                pendingProps,\n                resource$243.state\n              )));\n        if (currentProps && null === currentResource)\n          throw Error(formatProdErrorMessage(528, \"\"));\n        return resource$243;\n      }\n      if (currentProps && null !== currentResource)\n        throw Error(formatProdErrorMessage(529, \"\"));\n      return null;\n    case \"script\":\n      return (\n        (currentProps = pendingProps.async),\n        (pendingProps = pendingProps.src),\n        \"string\" === typeof pendingProps &&\n        currentProps &&\n        \"function\" !== typeof currentProps &&\n        \"symbol\" !== typeof currentProps\n          ? ((currentProps = getScriptKey(pendingProps)),\n            (pendingProps = getResourcesFromRoot(\n              JSCompiler_inline_result\n            ).hoistableScripts),\n            (currentResource = pendingProps.get(currentProps)),\n            currentResource ||\n              ((currentResource = {\n                type: \"script\",\n                instance: null,\n                count: 0,\n                state: null\n              }),\n              pendingProps.set(currentProps, currentResource)),\n            currentResource)\n          : { type: \"void\", instance: null, count: 0, state: null }\n      );\n    default:\n      throw Error(formatProdErrorMessage(444, type));\n  }\n}\nfunction getStyleKey(href) {\n  return 'href=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '\"';\n}\nfunction getStylesheetSelectorFromKey(key) {\n  return 'link[rel=\"stylesheet\"][' + key + \"]\";\n}\nfunction stylesheetPropsFromRawProps(rawProps) {\n  return assign({}, rawProps, {\n    \"data-precedence\": rawProps.precedence,\n    precedence: null\n  });\n}\nfunction preloadStylesheet(ownerDocument, key, preloadProps, state) {\n  ownerDocument.querySelector('link[rel=\"preload\"][as=\"style\"][' + key + \"]\")\n    ? (state.loading = 1)\n    : ((key = ownerDocument.createElement(\"link\")),\n      (state.preload = key),\n      key.addEventListener(\"load\", function () {\n        return (state.loading |= 1);\n      }),\n      key.addEventListener(\"error\", function () {\n        return (state.loading |= 2);\n      }),\n      setInitialProperties(key, \"link\", preloadProps),\n      markNodeAsHoistable(key),\n      ownerDocument.head.appendChild(key));\n}\nfunction getScriptKey(src) {\n  return '[src=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '\"]';\n}\nfunction getScriptSelectorFromKey(key) {\n  return \"script[async]\" + key;\n}\nfunction acquireResource(hoistableRoot, resource, props) {\n  resource.count++;\n  if (null === resource.instance)\n    switch (resource.type) {\n      case \"style\":\n        var instance = hoistableRoot.querySelector(\n          'style[data-href~=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(props.href) +\n            '\"]'\n        );\n        if (instance)\n          return (\n            (resource.instance = instance),\n            markNodeAsHoistable(instance),\n            instance\n          );\n        var styleProps = assign({}, props, {\n          \"data-href\": props.href,\n          \"data-precedence\": props.precedence,\n          href: null,\n          precedence: null\n        });\n        instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement(\n          \"style\"\n        );\n        markNodeAsHoistable(instance);\n        setInitialProperties(instance, \"style\", styleProps);\n        insertStylesheet(instance, props.precedence, hoistableRoot);\n        return (resource.instance = instance);\n      case \"stylesheet\":\n        styleProps = getStyleKey(props.href);\n        var instance$248 = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(styleProps)\n        );\n        if (instance$248)\n          return (\n            (resource.state.loading |= 4),\n            (resource.instance = instance$248),\n            markNodeAsHoistable(instance$248),\n            instance$248\n          );\n        instance = stylesheetPropsFromRawProps(props);\n        (styleProps = preloadPropsMap.get(styleProps)) &&\n          adoptPreloadPropsForStylesheet(instance, styleProps);\n        instance$248 = (\n          hoistableRoot.ownerDocument || hoistableRoot\n        ).createElement(\"link\");\n        markNodeAsHoistable(instance$248);\n        var linkInstance = instance$248;\n        linkInstance._p = new Promise(function (resolve, reject) {\n          linkInstance.onload = resolve;\n          linkInstance.onerror = reject;\n        });\n        setInitialProperties(instance$248, \"link\", instance);\n        resource.state.loading |= 4;\n        insertStylesheet(instance$248, props.precedence, hoistableRoot);\n        return (resource.instance = instance$248);\n      case \"script\":\n        instance$248 = getScriptKey(props.src);\n        if (\n          (styleProps = hoistableRoot.querySelector(\n            getScriptSelectorFromKey(instance$248)\n          ))\n        )\n          return (\n            (resource.instance = styleProps),\n            markNodeAsHoistable(styleProps),\n            styleProps\n          );\n        instance = props;\n        if ((styleProps = preloadPropsMap.get(instance$248)))\n          (instance = assign({}, props)),\n            adoptPreloadPropsForScript(instance, styleProps);\n        hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n        styleProps = hoistableRoot.createElement(\"script\");\n        markNodeAsHoistable(styleProps);\n        setInitialProperties(styleProps, \"link\", instance);\n        hoistableRoot.head.appendChild(styleProps);\n        return (resource.instance = styleProps);\n      case \"void\":\n        return null;\n      default:\n        throw Error(formatProdErrorMessage(443, resource.type));\n    }\n  else\n    \"stylesheet\" === resource.type &&\n      0 === (resource.state.loading & 4) &&\n      ((instance = resource.instance),\n      (resource.state.loading |= 4),\n      insertStylesheet(instance, props.precedence, hoistableRoot));\n  return resource.instance;\n}\nfunction insertStylesheet(instance, precedence, root) {\n  for (\n    var nodes = root.querySelectorAll(\n        'link[rel=\"stylesheet\"][data-precedence],style[data-precedence]'\n      ),\n      last = nodes.length ? nodes[nodes.length - 1] : null,\n      prior = last,\n      i = 0;\n    i < nodes.length;\n    i++\n  ) {\n    var node = nodes[i];\n    if (node.dataset.precedence === precedence) prior = node;\n    else if (prior !== last) break;\n  }\n  prior\n    ? prior.parentNode.insertBefore(instance, prior.nextSibling)\n    : ((precedence = 9 === root.nodeType ? root.head : root),\n      precedence.insertBefore(instance, precedence.firstChild));\n}\nfunction adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {\n  null == stylesheetProps.crossOrigin &&\n    (stylesheetProps.crossOrigin = preloadProps.crossOrigin);\n  null == stylesheetProps.referrerPolicy &&\n    (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == stylesheetProps.title && (stylesheetProps.title = preloadProps.title);\n}\nfunction adoptPreloadPropsForScript(scriptProps, preloadProps) {\n  null == scriptProps.crossOrigin &&\n    (scriptProps.crossOrigin = preloadProps.crossOrigin);\n  null == scriptProps.referrerPolicy &&\n    (scriptProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == scriptProps.integrity &&\n    (scriptProps.integrity = preloadProps.integrity);\n}\nvar tagCaches = null;\nfunction getHydratableHoistableCache(type, keyAttribute, ownerDocument) {\n  if (null === tagCaches) {\n    var cache = new Map();\n    var caches = (tagCaches = new Map());\n    caches.set(ownerDocument, cache);\n  } else\n    (caches = tagCaches),\n      (cache = caches.get(ownerDocument)),\n      cache || ((cache = new Map()), caches.set(ownerDocument, cache));\n  if (cache.has(type)) return cache;\n  cache.set(type, null);\n  ownerDocument = ownerDocument.getElementsByTagName(type);\n  for (caches = 0; caches < ownerDocument.length; caches++) {\n    var node = ownerDocument[caches];\n    if (\n      !(\n        node[internalHoistableMarker] ||\n        node[internalInstanceKey] ||\n        (\"link\" === type && \"stylesheet\" === node.getAttribute(\"rel\"))\n      ) &&\n      \"http://www.w3.org/2000/svg\" !== node.namespaceURI\n    ) {\n      var nodeKey = node.getAttribute(keyAttribute) || \"\";\n      nodeKey = type + nodeKey;\n      var existing = cache.get(nodeKey);\n      existing ? existing.push(node) : cache.set(nodeKey, [node]);\n    }\n  }\n  return cache;\n}\nfunction mountHoistable(hoistableRoot, type, instance) {\n  hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n  hoistableRoot.head.insertBefore(\n    instance,\n    \"title\" === type ? hoistableRoot.querySelector(\"head > title\") : null\n  );\n}\nfunction isHostHoistableType(type, props, hostContext) {\n  if (1 === hostContext || null != props.itemProp) return !1;\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return !0;\n    case \"style\":\n      if (\n        \"string\" !== typeof props.precedence ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href\n      )\n        break;\n      return !0;\n    case \"link\":\n      if (\n        \"string\" !== typeof props.rel ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href ||\n        props.onLoad ||\n        props.onError\n      )\n        break;\n      switch (props.rel) {\n        case \"stylesheet\":\n          return (\n            (type = props.disabled),\n            \"string\" === typeof props.precedence && null == type\n          );\n        default:\n          return !0;\n      }\n    case \"script\":\n      if (\n        props.async &&\n        \"function\" !== typeof props.async &&\n        \"symbol\" !== typeof props.async &&\n        !props.onLoad &&\n        !props.onError &&\n        props.src &&\n        \"string\" === typeof props.src\n      )\n        return !0;\n  }\n  return !1;\n}\nfunction preloadResource(resource) {\n  return \"stylesheet\" === resource.type && 0 === (resource.state.loading & 3)\n    ? !1\n    : !0;\n}\nvar suspendedState = null;\nfunction noop() {}\nfunction suspendResource(hoistableRoot, resource, props) {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  if (\n    \"stylesheet\" === resource.type &&\n    (\"string\" !== typeof props.media ||\n      !1 !== matchMedia(props.media).matches) &&\n    0 === (resource.state.loading & 4)\n  ) {\n    if (null === resource.instance) {\n      var key = getStyleKey(props.href),\n        instance = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(key)\n        );\n      if (instance) {\n        hoistableRoot = instance._p;\n        null !== hoistableRoot &&\n          \"object\" === typeof hoistableRoot &&\n          \"function\" === typeof hoistableRoot.then &&\n          (state.count++,\n          (state = onUnsuspend.bind(state)),\n          hoistableRoot.then(state, state));\n        resource.state.loading |= 4;\n        resource.instance = instance;\n        markNodeAsHoistable(instance);\n        return;\n      }\n      instance = hoistableRoot.ownerDocument || hoistableRoot;\n      props = stylesheetPropsFromRawProps(props);\n      (key = preloadPropsMap.get(key)) &&\n        adoptPreloadPropsForStylesheet(props, key);\n      instance = instance.createElement(\"link\");\n      markNodeAsHoistable(instance);\n      var linkInstance = instance;\n      linkInstance._p = new Promise(function (resolve, reject) {\n        linkInstance.onload = resolve;\n        linkInstance.onerror = reject;\n      });\n      setInitialProperties(instance, \"link\", props);\n      resource.instance = instance;\n    }\n    null === state.stylesheets && (state.stylesheets = new Map());\n    state.stylesheets.set(resource, hoistableRoot);\n    (hoistableRoot = resource.state.preload) &&\n      0 === (resource.state.loading & 3) &&\n      (state.count++,\n      (resource = onUnsuspend.bind(state)),\n      hoistableRoot.addEventListener(\"load\", resource),\n      hoistableRoot.addEventListener(\"error\", resource));\n  }\n}\nfunction waitForCommitToBeReady() {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  state.stylesheets &&\n    0 === state.count &&\n    insertSuspendedStylesheets(state, state.stylesheets);\n  return 0 < state.count\n    ? function (commit) {\n        var stylesheetTimer = setTimeout(function () {\n          state.stylesheets &&\n            insertSuspendedStylesheets(state, state.stylesheets);\n          if (state.unsuspend) {\n            var unsuspend = state.unsuspend;\n            state.unsuspend = null;\n            unsuspend();\n          }\n        }, 6e4);\n        state.unsuspend = commit;\n        return function () {\n          state.unsuspend = null;\n          clearTimeout(stylesheetTimer);\n        };\n      }\n    : null;\n}\nfunction onUnsuspend() {\n  this.count--;\n  if (0 === this.count)\n    if (this.stylesheets) insertSuspendedStylesheets(this, this.stylesheets);\n    else if (this.unsuspend) {\n      var unsuspend = this.unsuspend;\n      this.unsuspend = null;\n      unsuspend();\n    }\n}\nvar precedencesByRoot = null;\nfunction insertSuspendedStylesheets(state, resources) {\n  state.stylesheets = null;\n  null !== state.unsuspend &&\n    (state.count++,\n    (precedencesByRoot = new Map()),\n    resources.forEach(insertStylesheetIntoRoot, state),\n    (precedencesByRoot = null),\n    onUnsuspend.call(state));\n}\nfunction insertStylesheetIntoRoot(root, resource) {\n  if (!(resource.state.loading & 4)) {\n    var precedences = precedencesByRoot.get(root);\n    if (precedences) var last = precedences.get(null);\n    else {\n      precedences = new Map();\n      precedencesByRoot.set(root, precedences);\n      for (\n        var nodes = root.querySelectorAll(\n            \"link[data-precedence],style[data-precedence]\"\n          ),\n          i = 0;\n        i < nodes.length;\n        i++\n      ) {\n        var node = nodes[i];\n        if (\n          \"LINK\" === node.nodeName ||\n          \"not all\" !== node.getAttribute(\"media\")\n        )\n          precedences.set(node.dataset.precedence, node), (last = node);\n      }\n      last && precedences.set(null, last);\n    }\n    nodes = resource.instance;\n    node = nodes.getAttribute(\"data-precedence\");\n    i = precedences.get(node) || last;\n    i === last && precedences.set(null, nodes);\n    precedences.set(node, nodes);\n    this.count++;\n    last = onUnsuspend.bind(this);\n    nodes.addEventListener(\"load\", last);\n    nodes.addEventListener(\"error\", last);\n    i\n      ? i.parentNode.insertBefore(nodes, i.nextSibling)\n      : ((root = 9 === root.nodeType ? root.head : root),\n        root.insertBefore(nodes, root.firstChild));\n    resource.state.loading |= 4;\n  }\n}\nvar HostTransitionContext = {\n  $$typeof: REACT_CONTEXT_TYPE,\n  Provider: null,\n  Consumer: null,\n  _currentValue: sharedNotPendingObject,\n  _currentValue2: sharedNotPendingObject,\n  _threadCount: 0\n};\nfunction FiberRootNode(\n  containerInfo,\n  tag,\n  hydrate,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  formState\n) {\n  this.tag = 1;\n  this.containerInfo = containerInfo;\n  this.finishedWork =\n    this.pingCache =\n    this.current =\n    this.pendingChildren =\n      null;\n  this.timeoutHandle = -1;\n  this.callbackNode =\n    this.next =\n    this.pendingContext =\n    this.context =\n    this.cancelPendingCommit =\n      null;\n  this.callbackPriority = 0;\n  this.expirationTimes = createLaneMap(-1);\n  this.entangledLanes =\n    this.shellSuspendCounter =\n    this.errorRecoveryDisabledLanes =\n    this.finishedLanes =\n    this.expiredLanes =\n    this.warmLanes =\n    this.pingedLanes =\n    this.suspendedLanes =\n    this.pendingLanes =\n      0;\n  this.entanglements = createLaneMap(0);\n  this.hiddenUpdates = createLaneMap(null);\n  this.identifierPrefix = identifierPrefix;\n  this.onUncaughtError = onUncaughtError;\n  this.onCaughtError = onCaughtError;\n  this.onRecoverableError = onRecoverableError;\n  this.pooledCache = null;\n  this.pooledCacheLanes = 0;\n  this.formState = formState;\n  this.incompleteTransitions = new Map();\n}\nfunction createFiberRoot(\n  containerInfo,\n  tag,\n  hydrate,\n  initialChildren,\n  hydrationCallbacks,\n  isStrictMode,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  transitionCallbacks,\n  formState\n) {\n  containerInfo = new FiberRootNode(\n    containerInfo,\n    tag,\n    hydrate,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    formState\n  );\n  tag = 1;\n  !0 === isStrictMode && (tag |= 24);\n  isStrictMode = createFiberImplClass(3, null, null, tag);\n  containerInfo.current = isStrictMode;\n  isStrictMode.stateNode = containerInfo;\n  tag = createCache();\n  tag.refCount++;\n  containerInfo.pooledCache = tag;\n  tag.refCount++;\n  isStrictMode.memoizedState = {\n    element: initialChildren,\n    isDehydrated: hydrate,\n    cache: tag\n  };\n  initializeUpdateQueue(isStrictMode);\n  return containerInfo;\n}\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) return emptyContextObject;\n  parentComponent = emptyContextObject;\n  return parentComponent;\n}\nfunction updateContainerImpl(\n  rootFiber,\n  lane,\n  element,\n  container,\n  parentComponent,\n  callback\n) {\n  parentComponent = getContextForSubtree(parentComponent);\n  null === container.context\n    ? (container.context = parentComponent)\n    : (container.pendingContext = parentComponent);\n  container = createUpdate(lane);\n  container.payload = { element: element };\n  callback = void 0 === callback ? null : callback;\n  null !== callback && (container.callback = callback);\n  element = enqueueUpdate(rootFiber, container, lane);\n  null !== element &&\n    (scheduleUpdateOnFiber(element, rootFiber, lane),\n    entangleTransitions(element, rootFiber, lane));\n}\nfunction markRetryLaneImpl(fiber, retryLane) {\n  fiber = fiber.memoizedState;\n  if (null !== fiber && null !== fiber.dehydrated) {\n    var a = fiber.retryLane;\n    fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;\n  }\n}\nfunction markRetryLaneIfNotHydrated(fiber, retryLane) {\n  markRetryLaneImpl(fiber, retryLane);\n  (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);\n}\nfunction attemptContinuousHydration(fiber) {\n  if (13 === fiber.tag) {\n    var root = enqueueConcurrentRenderForLane(fiber, 67108864);\n    null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);\n    markRetryLaneIfNotHydrated(fiber, 67108864);\n  }\n}\nvar _enabled = !0;\nfunction dispatchDiscreteEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 2),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchContinuousEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 8),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchEvent(\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (_enabled) {\n    var blockedOn = findInstanceBlockingEvent(nativeEvent);\n    if (null === blockedOn)\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        return_targetInst,\n        targetContainer\n      ),\n        clearIfContinuousEvent(domEventName, nativeEvent);\n    else if (\n      queueIfContinuousEvent(\n        blockedOn,\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        nativeEvent\n      )\n    )\n      nativeEvent.stopPropagation();\n    else if (\n      (clearIfContinuousEvent(domEventName, nativeEvent),\n      eventSystemFlags & 4 &&\n        -1 < discreteReplayableEvents.indexOf(domEventName))\n    ) {\n      for (; null !== blockedOn; ) {\n        var fiber = getInstanceFromNode(blockedOn);\n        if (null !== fiber)\n          switch (fiber.tag) {\n            case 3:\n              fiber = fiber.stateNode;\n              if (fiber.current.memoizedState.isDehydrated) {\n                var lanes = getHighestPriorityLanes(fiber.pendingLanes);\n                if (0 !== lanes) {\n                  var root = fiber;\n                  root.pendingLanes |= 2;\n                  for (root.entangledLanes |= 2; lanes; ) {\n                    var lane = 1 << (31 - clz32(lanes));\n                    root.entanglements[1] |= lane;\n                    lanes &= ~lane;\n                  }\n                  ensureRootIsScheduled(fiber);\n                  0 === (executionContext & 6) &&\n                    ((workInProgressRootRenderTargetTime = now() + 500),\n                    flushSyncWorkAcrossRoots_impl(0, !1));\n                }\n              }\n              break;\n            case 13:\n              (root = enqueueConcurrentRenderForLane(fiber, 2)),\n                null !== root && scheduleUpdateOnFiber(root, fiber, 2),\n                flushSyncWork$1(),\n                markRetryLaneIfNotHydrated(fiber, 2);\n          }\n        fiber = findInstanceBlockingEvent(nativeEvent);\n        null === fiber &&\n          dispatchEventForPluginEventSystem(\n            domEventName,\n            eventSystemFlags,\n            nativeEvent,\n            return_targetInst,\n            targetContainer\n          );\n        if (fiber === blockedOn) break;\n        blockedOn = fiber;\n      }\n      null !== blockedOn && nativeEvent.stopPropagation();\n    } else\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        null,\n        targetContainer\n      );\n  }\n}\nfunction findInstanceBlockingEvent(nativeEvent) {\n  nativeEvent = getEventTarget(nativeEvent);\n  return findInstanceBlockingTarget(nativeEvent);\n}\nvar return_targetInst = null;\nfunction findInstanceBlockingTarget(targetNode) {\n  return_targetInst = null;\n  targetNode = getClosestInstanceFromNode(targetNode);\n  if (null !== targetNode) {\n    var nearestMounted = getNearestMountedFiber(targetNode);\n    if (null === nearestMounted) targetNode = null;\n    else {\n      var tag = nearestMounted.tag;\n      if (13 === tag) {\n        targetNode = getSuspenseInstanceFromFiber(nearestMounted);\n        if (null !== targetNode) return targetNode;\n        targetNode = null;\n      } else if (3 === tag) {\n        if (nearestMounted.stateNode.current.memoizedState.isDehydrated)\n          return 3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        targetNode = null;\n      } else nearestMounted !== targetNode && (targetNode = null);\n    }\n  }\n  return_targetInst = targetNode;\n  return null;\n}\nfunction getEventPriority(domEventName) {\n  switch (domEventName) {\n    case \"beforetoggle\":\n    case \"cancel\":\n    case \"click\":\n    case \"close\":\n    case \"contextmenu\":\n    case \"copy\":\n    case \"cut\":\n    case \"auxclick\":\n    case \"dblclick\":\n    case \"dragend\":\n    case \"dragstart\":\n    case \"drop\":\n    case \"focusin\":\n    case \"focusout\":\n    case \"input\":\n    case \"invalid\":\n    case \"keydown\":\n    case \"keypress\":\n    case \"keyup\":\n    case \"mousedown\":\n    case \"mouseup\":\n    case \"paste\":\n    case \"pause\":\n    case \"play\":\n    case \"pointercancel\":\n    case \"pointerdown\":\n    case \"pointerup\":\n    case \"ratechange\":\n    case \"reset\":\n    case \"resize\":\n    case \"seeked\":\n    case \"submit\":\n    case \"toggle\":\n    case \"touchcancel\":\n    case \"touchend\":\n    case \"touchstart\":\n    case \"volumechange\":\n    case \"change\":\n    case \"selectionchange\":\n    case \"textInput\":\n    case \"compositionstart\":\n    case \"compositionend\":\n    case \"compositionupdate\":\n    case \"beforeblur\":\n    case \"afterblur\":\n    case \"beforeinput\":\n    case \"blur\":\n    case \"fullscreenchange\":\n    case \"focus\":\n    case \"hashchange\":\n    case \"popstate\":\n    case \"select\":\n    case \"selectstart\":\n      return 2;\n    case \"drag\":\n    case \"dragenter\":\n    case \"dragexit\":\n    case \"dragleave\":\n    case \"dragover\":\n    case \"mousemove\":\n    case \"mouseout\":\n    case \"mouseover\":\n    case \"pointermove\":\n    case \"pointerout\":\n    case \"pointerover\":\n    case \"scroll\":\n    case \"touchmove\":\n    case \"wheel\":\n    case \"mouseenter\":\n    case \"mouseleave\":\n    case \"pointerenter\":\n    case \"pointerleave\":\n      return 8;\n    case \"message\":\n      switch (getCurrentPriorityLevel()) {\n        case ImmediatePriority:\n          return 2;\n        case UserBlockingPriority:\n          return 8;\n        case NormalPriority$1:\n        case LowPriority:\n          return 32;\n        case IdlePriority:\n          return 268435456;\n        default:\n          return 32;\n      }\n    default:\n      return 32;\n  }\n}\nvar hasScheduledReplayAttempt = !1,\n  queuedFocus = null,\n  queuedDrag = null,\n  queuedMouse = null,\n  queuedPointers = new Map(),\n  queuedPointerCaptures = new Map(),\n  queuedExplicitHydrationTargets = [],\n  discreteReplayableEvents =\n    \"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset\".split(\n      \" \"\n    );\nfunction clearIfContinuousEvent(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"focusin\":\n    case \"focusout\":\n      queuedFocus = null;\n      break;\n    case \"dragenter\":\n    case \"dragleave\":\n      queuedDrag = null;\n      break;\n    case \"mouseover\":\n    case \"mouseout\":\n      queuedMouse = null;\n      break;\n    case \"pointerover\":\n    case \"pointerout\":\n      queuedPointers.delete(nativeEvent.pointerId);\n      break;\n    case \"gotpointercapture\":\n    case \"lostpointercapture\":\n      queuedPointerCaptures.delete(nativeEvent.pointerId);\n  }\n}\nfunction accumulateOrCreateContinuousQueuedReplayableEvent(\n  existingQueuedEvent,\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (\n    null === existingQueuedEvent ||\n    existingQueuedEvent.nativeEvent !== nativeEvent\n  )\n    return (\n      (existingQueuedEvent = {\n        blockedOn: blockedOn,\n        domEventName: domEventName,\n        eventSystemFlags: eventSystemFlags,\n        nativeEvent: nativeEvent,\n        targetContainers: [targetContainer]\n      }),\n      null !== blockedOn &&\n        ((blockedOn = getInstanceFromNode(blockedOn)),\n        null !== blockedOn && attemptContinuousHydration(blockedOn)),\n      existingQueuedEvent\n    );\n  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;\n  blockedOn = existingQueuedEvent.targetContainers;\n  null !== targetContainer &&\n    -1 === blockedOn.indexOf(targetContainer) &&\n    blockedOn.push(targetContainer);\n  return existingQueuedEvent;\n}\nfunction queueIfContinuousEvent(\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  switch (domEventName) {\n    case \"focusin\":\n      return (\n        (queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedFocus,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"dragenter\":\n      return (\n        (queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedDrag,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"mouseover\":\n      return (\n        (queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedMouse,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"pointerover\":\n      var pointerId = nativeEvent.pointerId;\n      queuedPointers.set(\n        pointerId,\n        accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedPointers.get(pointerId) || null,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )\n      );\n      return !0;\n    case \"gotpointercapture\":\n      return (\n        (pointerId = nativeEvent.pointerId),\n        queuedPointerCaptures.set(\n          pointerId,\n          accumulateOrCreateContinuousQueuedReplayableEvent(\n            queuedPointerCaptures.get(pointerId) || null,\n            blockedOn,\n            domEventName,\n            eventSystemFlags,\n            targetContainer,\n            nativeEvent\n          )\n        ),\n        !0\n      );\n  }\n  return !1;\n}\nfunction attemptExplicitHydrationTarget(queuedTarget) {\n  var targetInst = getClosestInstanceFromNode(queuedTarget.target);\n  if (null !== targetInst) {\n    var nearestMounted = getNearestMountedFiber(targetInst);\n    if (null !== nearestMounted)\n      if (((targetInst = nearestMounted.tag), 13 === targetInst)) {\n        if (\n          ((targetInst = getSuspenseInstanceFromFiber(nearestMounted)),\n          null !== targetInst)\n        ) {\n          queuedTarget.blockedOn = targetInst;\n          runWithPriority(queuedTarget.priority, function () {\n            if (13 === nearestMounted.tag) {\n              var lane = requestUpdateLane(),\n                root = enqueueConcurrentRenderForLane(nearestMounted, lane);\n              null !== root &&\n                scheduleUpdateOnFiber(root, nearestMounted, lane);\n              markRetryLaneIfNotHydrated(nearestMounted, lane);\n            }\n          });\n          return;\n        }\n      } else if (\n        3 === targetInst &&\n        nearestMounted.stateNode.current.memoizedState.isDehydrated\n      ) {\n        queuedTarget.blockedOn =\n          3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        return;\n      }\n  }\n  queuedTarget.blockedOn = null;\n}\nfunction attemptReplayContinuousQueuedEvent(queuedEvent) {\n  if (null !== queuedEvent.blockedOn) return !1;\n  for (\n    var targetContainers = queuedEvent.targetContainers;\n    0 < targetContainers.length;\n\n  ) {\n    var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);\n    if (null === nextBlockedOn) {\n      nextBlockedOn = queuedEvent.nativeEvent;\n      var nativeEventClone = new nextBlockedOn.constructor(\n        nextBlockedOn.type,\n        nextBlockedOn\n      );\n      currentReplayingEvent = nativeEventClone;\n      nextBlockedOn.target.dispatchEvent(nativeEventClone);\n      currentReplayingEvent = null;\n    } else\n      return (\n        (targetContainers = getInstanceFromNode(nextBlockedOn)),\n        null !== targetContainers &&\n          attemptContinuousHydration(targetContainers),\n        (queuedEvent.blockedOn = nextBlockedOn),\n        !1\n      );\n    targetContainers.shift();\n  }\n  return !0;\n}\nfunction attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {\n  attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);\n}\nfunction replayUnblockedEvents() {\n  hasScheduledReplayAttempt = !1;\n  null !== queuedFocus &&\n    attemptReplayContinuousQueuedEvent(queuedFocus) &&\n    (queuedFocus = null);\n  null !== queuedDrag &&\n    attemptReplayContinuousQueuedEvent(queuedDrag) &&\n    (queuedDrag = null);\n  null !== queuedMouse &&\n    attemptReplayContinuousQueuedEvent(queuedMouse) &&\n    (queuedMouse = null);\n  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);\n  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);\n}\nfunction scheduleCallbackIfUnblocked(queuedEvent, unblocked) {\n  queuedEvent.blockedOn === unblocked &&\n    ((queuedEvent.blockedOn = null),\n    hasScheduledReplayAttempt ||\n      ((hasScheduledReplayAttempt = !0),\n      Scheduler.unstable_scheduleCallback(\n        Scheduler.unstable_NormalPriority,\n        replayUnblockedEvents\n      )));\n}\nvar lastScheduledReplayQueue = null;\nfunction scheduleReplayQueueIfNeeded(formReplayingQueue) {\n  lastScheduledReplayQueue !== formReplayingQueue &&\n    ((lastScheduledReplayQueue = formReplayingQueue),\n    Scheduler.unstable_scheduleCallback(\n      Scheduler.unstable_NormalPriority,\n      function () {\n        lastScheduledReplayQueue === formReplayingQueue &&\n          (lastScheduledReplayQueue = null);\n        for (var i = 0; i < formReplayingQueue.length; i += 3) {\n          var form = formReplayingQueue[i],\n            submitterOrAction = formReplayingQueue[i + 1],\n            formData = formReplayingQueue[i + 2];\n          if (\"function\" !== typeof submitterOrAction)\n            if (null === findInstanceBlockingTarget(submitterOrAction || form))\n              continue;\n            else break;\n          var formInst = getInstanceFromNode(form);\n          null !== formInst &&\n            (formReplayingQueue.splice(i, 3),\n            (i -= 3),\n            startHostTransition(\n              formInst,\n              {\n                pending: !0,\n                data: formData,\n                method: form.method,\n                action: submitterOrAction\n              },\n              submitterOrAction,\n              formData\n            ));\n        }\n      }\n    ));\n}\nfunction retryIfBlockedOn(unblocked) {\n  function unblock(queuedEvent) {\n    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);\n  }\n  null !== queuedFocus && scheduleCallbackIfUnblocked(queuedFocus, unblocked);\n  null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);\n  null !== queuedMouse && scheduleCallbackIfUnblocked(queuedMouse, unblocked);\n  queuedPointers.forEach(unblock);\n  queuedPointerCaptures.forEach(unblock);\n  for (var i = 0; i < queuedExplicitHydrationTargets.length; i++) {\n    var queuedTarget = queuedExplicitHydrationTargets[i];\n    queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);\n  }\n  for (\n    ;\n    0 < queuedExplicitHydrationTargets.length &&\n    ((i = queuedExplicitHydrationTargets[0]), null === i.blockedOn);\n\n  )\n    attemptExplicitHydrationTarget(i),\n      null === i.blockedOn && queuedExplicitHydrationTargets.shift();\n  i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;\n  if (null != i)\n    for (queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3) {\n      var form = i[queuedTarget],\n        submitterOrAction = i[queuedTarget + 1],\n        formProps = form[internalPropsKey] || null;\n      if (\"function\" === typeof submitterOrAction)\n        formProps || scheduleReplayQueueIfNeeded(i);\n      else if (formProps) {\n        var action = null;\n        if (submitterOrAction && submitterOrAction.hasAttribute(\"formAction\"))\n          if (\n            ((form = submitterOrAction),\n            (formProps = submitterOrAction[internalPropsKey] || null))\n          )\n            action = formProps.formAction;\n          else {\n            if (null !== findInstanceBlockingTarget(form)) continue;\n          }\n        else action = formProps.action;\n        \"function\" === typeof action\n          ? (i[queuedTarget + 1] = action)\n          : (i.splice(queuedTarget, 3), (queuedTarget -= 3));\n        scheduleReplayQueueIfNeeded(i);\n      }\n    }\n}\nfunction ReactDOMRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render =\n  function (children) {\n    var root = this._internalRoot;\n    if (null === root) throw Error(formatProdErrorMessage(409));\n    var current = root.current,\n      lane = requestUpdateLane();\n    updateContainerImpl(current, lane, children, root, null, null);\n  };\nReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount =\n  function () {\n    var root = this._internalRoot;\n    if (null !== root) {\n      this._internalRoot = null;\n      var container = root.containerInfo;\n      0 === root.tag && flushPassiveEffects();\n      updateContainerImpl(root.current, 2, null, root, null, null);\n      flushSyncWork$1();\n      container[internalContainerInstanceKey] = null;\n    }\n  };\nfunction ReactDOMHydrationRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {\n  if (target) {\n    var updatePriority = resolveUpdatePriority();\n    target = { blockedOn: null, target: target, priority: updatePriority };\n    for (\n      var i = 0;\n      i < queuedExplicitHydrationTargets.length &&\n      0 !== updatePriority &&\n      updatePriority < queuedExplicitHydrationTargets[i].priority;\n      i++\n    );\n    queuedExplicitHydrationTargets.splice(i, 0, target);\n    0 === i && attemptExplicitHydrationTarget(target);\n  }\n};\nvar isomorphicReactPackageVersion$jscomp$inline_1686 = React.version;\nif (\n  \"19.0.0\" !==\n  isomorphicReactPackageVersion$jscomp$inline_1686\n)\n  throw Error(\n    formatProdErrorMessage(\n      527,\n      isomorphicReactPackageVersion$jscomp$inline_1686,\n      \"19.0.0\"\n    )\n  );\nReactDOMSharedInternals.findDOMNode = function (componentOrElement) {\n  var fiber = componentOrElement._reactInternals;\n  if (void 0 === fiber) {\n    if (\"function\" === typeof componentOrElement.render)\n      throw Error(formatProdErrorMessage(188));\n    componentOrElement = Object.keys(componentOrElement).join(\",\");\n    throw Error(formatProdErrorMessage(268, componentOrElement));\n  }\n  componentOrElement = findCurrentFiberUsingSlowPath(fiber);\n  componentOrElement =\n    null !== componentOrElement\n      ? findCurrentHostFiberImpl(componentOrElement)\n      : null;\n  componentOrElement =\n    null === componentOrElement ? null : componentOrElement.stateNode;\n  return componentOrElement;\n};\nvar internals$jscomp$inline_2165 = {\n  bundleType: 0,\n  version: \"19.0.0\",\n  rendererPackageName: \"react-dom\",\n  currentDispatcherRef: ReactSharedInternals,\n  findFiberByHostInstance: getClosestInstanceFromNode,\n  reconcilerVersion: \"19.0.0\"\n};\nif (\"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {\n  var hook$jscomp$inline_2166 = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (\n    !hook$jscomp$inline_2166.isDisabled &&\n    hook$jscomp$inline_2166.supportsFiber\n  )\n    try {\n      (rendererID = hook$jscomp$inline_2166.inject(\n        internals$jscomp$inline_2165\n      )),\n        (injectedHook = hook$jscomp$inline_2166);\n    } catch (err) {}\n}\nexports.createRoot = function (container, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks));\n  options = createFiberRoot(\n    container,\n    1,\n    !1,\n    null,\n    null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    null\n  );\n  container[internalContainerInstanceKey] = options.current;\n  listenToAllSupportedEvents(\n    8 === container.nodeType ? container.parentNode : container\n  );\n  return new ReactDOMRoot(options);\n};\nexports.hydrateRoot = function (container, initialChildren, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null,\n    formState = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks),\n    void 0 !== options.formState && (formState = options.formState));\n  initialChildren = createFiberRoot(\n    container,\n    1,\n    !0,\n    initialChildren,\n    null != options ? options : null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    formState\n  );\n  initialChildren.context = getContextForSubtree(null);\n  options = initialChildren.current;\n  isStrictMode = requestUpdateLane();\n  identifierPrefix = createUpdate(isStrictMode);\n  identifierPrefix.callback = null;\n  enqueueUpdate(options, identifierPrefix, isStrictMode);\n  initialChildren.current.lanes = isStrictMode;\n  markRootUpdated$1(initialChildren, isStrictMode);\n  ensureRootIsScheduled(initialChildren);\n  container[internalContainerInstanceKey] = initialChildren.current;\n  listenToAllSupportedEvents(container);\n  return new ReactDOMHydrationRoot(initialChildren);\n};\nexports.version = \"19.0.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.act = function () {\n  throw Error(\"act(...) is not supported in production builds of React.\");\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    ReactSharedInternals.T = prevTransition;\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, deps) {\n  return ReactSharedInternals.H.useEffect(create, deps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.0.0\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom-client.production.js');\n} else {\n  module.exports = require('./cjs/react-dom-client.development.js');\n}\n","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnmountClosed = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Collapse = require(\"./Collapse\");\n\nvar _excluded = [\"isOpened\"],\n    _excluded2 = [\"isOpened\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar UnmountClosed = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(UnmountClosed, _React$PureComponent);\n\n  var _super = _createSuper(UnmountClosed);\n\n  function UnmountClosed(props) {\n    var _this;\n\n    _classCallCheck(this, UnmountClosed);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onWork\", function (_ref) {\n      var isOpened = _ref.isOpened,\n          rest = _objectWithoutProperties(_ref, _excluded);\n\n      _this.setState({\n        isResting: false,\n        isOpened: isOpened\n      });\n\n      var onWork = _this.props.onWork;\n\n      if (onWork) {\n        onWork(_objectSpread({\n          isOpened: isOpened\n        }, rest));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRest\", function (_ref2) {\n      var isOpened = _ref2.isOpened,\n          rest = _objectWithoutProperties(_ref2, _excluded2);\n\n      _this.setState({\n        isResting: true,\n        isOpened: isOpened,\n        isInitialRender: false\n      });\n\n      var onRest = _this.props.onRest;\n\n      if (onRest) {\n        onRest(_objectSpread({\n          isOpened: isOpened\n        }, rest));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getInitialStyle\", function () {\n      var _this$state = _this.state,\n          isOpened = _this$state.isOpened,\n          isInitialRender = _this$state.isInitialRender;\n\n      if (isInitialRender) {\n        return isOpened ? {\n          height: 'auto',\n          overflow: 'initial'\n        } : {\n          height: '0px',\n          overflow: 'hidden'\n        };\n      }\n\n      return {\n        height: '0px',\n        overflow: 'hidden'\n      };\n    });\n\n    _this.state = {\n      isResting: true,\n      isOpened: props.isOpened,\n      isInitialRender: true\n    };\n    return _this;\n  }\n\n  _createClass(UnmountClosed, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var isOpened = this.props.isOpened;\n\n      if (prevProps.isOpened !== isOpened) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          isResting: false,\n          isOpened: isOpened,\n          isInitialRender: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          isResting = _this$state2.isResting,\n          isOpened = _this$state2.isOpened;\n      return isResting && !isOpened ? null : /*#__PURE__*/_react[\"default\"].createElement(_Collapse.Collapse, _extends({}, this.props, {\n        initialStyle: this.getInitialStyle(),\n        onWork: this.onWork,\n        onRest: this.onRest\n      }));\n    }\n  }]);\n\n  return UnmountClosed;\n}(_react[\"default\"].PureComponent);\n\nexports.UnmountClosed = UnmountClosed;\n\n_defineProperty(UnmountClosed, \"defaultProps\", {\n  onWork: undefined,\n  onRest: undefined\n});","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Collapse = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Collapse = /*#__PURE__*/function (_React$Component) {\n  _inherits(Collapse, _React$Component);\n\n  var _super = _createSuper(Collapse);\n\n  function Collapse(props) {\n    var _this;\n\n    _classCallCheck(this, Collapse);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"timeout\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"content\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"onResize\", function () {\n      clearTimeout(_this.timeout);\n\n      if (!_this.container || !_this.content) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          isOpened = _this$props.isOpened,\n          checkTimeout = _this$props.checkTimeout;\n      var containerHeight = Math.floor(_this.container.clientHeight);\n      var contentHeight = Math.floor(_this.content.clientHeight);\n      var isFullyOpened = isOpened && Math.abs(contentHeight - containerHeight) <= 1;\n      var isFullyClosed = !isOpened && Math.abs(containerHeight) <= 1;\n\n      if (isFullyOpened || isFullyClosed) {\n        _this.onRest({\n          isFullyOpened: isFullyOpened,\n          isFullyClosed: isFullyClosed,\n          isOpened: isOpened,\n          containerHeight: containerHeight,\n          contentHeight: contentHeight\n        });\n      } else {\n        _this.onWork({\n          isFullyOpened: isFullyOpened,\n          isFullyClosed: isFullyClosed,\n          isOpened: isOpened,\n          containerHeight: containerHeight,\n          contentHeight: contentHeight\n        });\n\n        _this.timeout = setTimeout(function () {\n          return _this.onResize();\n        }, checkTimeout);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRest\", function (_ref) {\n      var isFullyOpened = _ref.isFullyOpened,\n          isFullyClosed = _ref.isFullyClosed,\n          isOpened = _ref.isOpened,\n          containerHeight = _ref.containerHeight,\n          contentHeight = _ref.contentHeight;\n\n      if (!_this.container || !_this.content) {\n        return;\n      }\n\n      var hasOpened = isOpened && _this.container.style.height === \"\".concat(contentHeight, \"px\");\n      var hasClosed = !isOpened && _this.container.style.height === '0px';\n\n      if (hasOpened || hasClosed) {\n        _this.container.style.overflow = isOpened ? 'initial' : 'hidden';\n        _this.container.style.height = isOpened ? 'auto' : '0px';\n        var onRest = _this.props.onRest;\n\n        if (onRest) {\n          onRest({\n            isFullyOpened: isFullyOpened,\n            isFullyClosed: isFullyClosed,\n            isOpened: isOpened,\n            containerHeight: containerHeight,\n            contentHeight: contentHeight\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onWork\", function (_ref2) {\n      var isFullyOpened = _ref2.isFullyOpened,\n          isFullyClosed = _ref2.isFullyClosed,\n          isOpened = _ref2.isOpened,\n          containerHeight = _ref2.containerHeight,\n          contentHeight = _ref2.contentHeight;\n\n      if (!_this.container || !_this.content) {\n        return;\n      }\n\n      var isOpenining = isOpened && _this.container.style.height === \"\".concat(contentHeight, \"px\");\n      var isClosing = !isOpened && _this.container.style.height === '0px';\n\n      if (isOpenining || isClosing) {\n        // No need to do any work\n        return;\n      }\n\n      _this.container.style.overflow = 'hidden';\n      _this.container.style.height = isOpened ? \"\".concat(contentHeight, \"px\") : '0px';\n      var onWork = _this.props.onWork;\n\n      if (onWork) {\n        onWork({\n          isFullyOpened: isFullyOpened,\n          isFullyClosed: isFullyClosed,\n          isOpened: isOpened,\n          containerHeight: containerHeight,\n          contentHeight: contentHeight\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRefContainer\", function (container) {\n      _this.container = container;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRefContent\", function (content) {\n      _this.content = content;\n    });\n\n    if (props.initialStyle) {\n      _this.initialStyle = props.initialStyle;\n    } else {\n      _this.initialStyle = props.isOpened ? {\n        height: 'auto',\n        overflow: 'initial'\n      } : {\n        height: '0px',\n        overflow: 'hidden'\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(Collapse, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onResize();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _this$props2 = this.props,\n          theme = _this$props2.theme,\n          isOpened = _this$props2.isOpened,\n          children = _this$props2.children;\n      return children !== nextProps.children || isOpened !== nextProps.isOpened || Object.keys(theme).some(function (c) {\n        return theme[c] !== nextProps.theme[c];\n      });\n    }\n  }, {\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate() {\n      if (!this.container || !this.content) {\n        return null;\n      }\n\n      if (this.container.style.height === 'auto') {\n        var contentHeight = this.content.clientHeight;\n        this.container.style.height = \"\".concat(contentHeight, \"px\");\n      }\n\n      return null;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onResize();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeout);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          theme = _this$props3.theme,\n          children = _this$props3.children,\n          isOpened = _this$props3.isOpened;\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        ref: this.onRefContainer,\n        className: theme.collapse,\n        style: this.initialStyle,\n        \"aria-hidden\": !isOpened\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        ref: this.onRefContent,\n        className: theme.content\n      }, children));\n    }\n  }]);\n\n  return Collapse;\n}(_react[\"default\"].Component);\n\nexports.Collapse = Collapse;\n\n_defineProperty(Collapse, \"defaultProps\", {\n  theme: {\n    collapse: 'ReactCollapse--collapse',\n    content: 'ReactCollapse--content'\n  },\n  initialStyle: undefined,\n  onRest: undefined,\n  onWork: undefined,\n  checkTimeout: 50\n});","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-dom.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction noop() {}\nvar Internals = {\n    d: {\n      f: noop,\n      r: function () {\n        throw Error(formatProdErrorMessage(522));\n      },\n      D: noop,\n      C: noop,\n      L: noop,\n      m: noop,\n      X: noop,\n      S: noop,\n      M: noop\n    },\n    p: 0,\n    findDOMNode: null\n  },\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nfunction createPortal$1(children, containerInfo, implementation) {\n  var key =\n    3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: REACT_PORTAL_TYPE,\n    key: null == key ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\nvar ReactSharedInternals =\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.createPortal = function (children, container) {\n  var key =\n    2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  if (\n    !container ||\n    (1 !== container.nodeType &&\n      9 !== container.nodeType &&\n      11 !== container.nodeType)\n  )\n    throw Error(formatProdErrorMessage(299));\n  return createPortal$1(children, container, null, key);\n};\nexports.flushSync = function (fn) {\n  var previousTransition = ReactSharedInternals.T,\n    previousUpdatePriority = Internals.p;\n  try {\n    if (((ReactSharedInternals.T = null), (Internals.p = 2), fn)) return fn();\n  } finally {\n    (ReactSharedInternals.T = previousTransition),\n      (Internals.p = previousUpdatePriority),\n      Internals.d.f();\n  }\n};\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.requestFormReset = function (form) {\n  Internals.d.r(form);\n};\nexports.unstable_batchedUpdates = function (fn, a) {\n  return fn(a);\n};\nexports.useFormState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useFormState(action, initialState, permalink);\n};\nexports.useFormStatus = function () {\n  return ReactSharedInternals.H.useHostTransitionStatus();\n};\nexports.version = \"19.0.0\";\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * scheduler.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  a: for (; 0 < index; ) {\n    var parentIndex = (index - 1) >>> 1,\n      parent = heap[parentIndex];\n    if (0 < compare(parent, node))\n      (heap[parentIndex] = node), (heap[index] = parent), (index = parentIndex);\n    else break a;\n  }\n}\nfunction peek(heap) {\n  return 0 === heap.length ? null : heap[0];\n}\nfunction pop(heap) {\n  if (0 === heap.length) return null;\n  var first = heap[0],\n    last = heap.pop();\n  if (last !== first) {\n    heap[0] = last;\n    a: for (\n      var index = 0, length = heap.length, halfLength = length >>> 1;\n      index < halfLength;\n\n    ) {\n      var leftIndex = 2 * (index + 1) - 1,\n        left = heap[leftIndex],\n        rightIndex = leftIndex + 1,\n        right = heap[rightIndex];\n      if (0 > compare(left, last))\n        rightIndex < length && 0 > compare(right, left)\n          ? ((heap[index] = right),\n            (heap[rightIndex] = last),\n            (index = rightIndex))\n          : ((heap[index] = left),\n            (heap[leftIndex] = last),\n            (index = leftIndex));\n      else if (rightIndex < length && 0 > compare(right, last))\n        (heap[index] = right), (heap[rightIndex] = last), (index = rightIndex);\n      else break a;\n    }\n  }\n  return first;\n}\nfunction compare(a, b) {\n  var diff = a.sortIndex - b.sortIndex;\n  return 0 !== diff ? diff : a.id - b.id;\n}\nexports.unstable_now = void 0;\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var localPerformance = performance;\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date,\n    initialTime = localDate.now();\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n}\nvar taskQueue = [],\n  timerQueue = [],\n  taskIdCounter = 1,\n  currentTask = null,\n  currentPriorityLevel = 3,\n  isPerformingWork = !1,\n  isHostCallbackScheduled = !1,\n  isHostTimeoutScheduled = !1,\n  localSetTimeout = \"function\" === typeof setTimeout ? setTimeout : null,\n  localClearTimeout = \"function\" === typeof clearTimeout ? clearTimeout : null,\n  localSetImmediate = \"undefined\" !== typeof setImmediate ? setImmediate : null;\nfunction advanceTimers(currentTime) {\n  for (var timer = peek(timerQueue); null !== timer; ) {\n    if (null === timer.callback) pop(timerQueue);\n    else if (timer.startTime <= currentTime)\n      pop(timerQueue),\n        (timer.sortIndex = timer.expirationTime),\n        push(taskQueue, timer);\n    else break;\n    timer = peek(timerQueue);\n  }\n}\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = !1;\n  advanceTimers(currentTime);\n  if (!isHostCallbackScheduled)\n    if (null !== peek(taskQueue))\n      (isHostCallbackScheduled = !0), requestHostCallback();\n    else {\n      var firstTimer = peek(timerQueue);\n      null !== firstTimer &&\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n}\nvar isMessageLoopRunning = !1,\n  taskTimeoutID = -1,\n  frameInterval = 5,\n  startTime = -1;\nfunction shouldYieldToHost() {\n  return exports.unstable_now() - startTime < frameInterval ? !1 : !0;\n}\nfunction performWorkUntilDeadline() {\n  if (isMessageLoopRunning) {\n    var currentTime = exports.unstable_now();\n    startTime = currentTime;\n    var hasMoreWork = !0;\n    try {\n      a: {\n        isHostCallbackScheduled = !1;\n        isHostTimeoutScheduled &&\n          ((isHostTimeoutScheduled = !1),\n          localClearTimeout(taskTimeoutID),\n          (taskTimeoutID = -1));\n        isPerformingWork = !0;\n        var previousPriorityLevel = currentPriorityLevel;\n        try {\n          b: {\n            advanceTimers(currentTime);\n            for (\n              currentTask = peek(taskQueue);\n              null !== currentTask &&\n              !(\n                currentTask.expirationTime > currentTime && shouldYieldToHost()\n              );\n\n            ) {\n              var callback = currentTask.callback;\n              if (\"function\" === typeof callback) {\n                currentTask.callback = null;\n                currentPriorityLevel = currentTask.priorityLevel;\n                var continuationCallback = callback(\n                  currentTask.expirationTime <= currentTime\n                );\n                currentTime = exports.unstable_now();\n                if (\"function\" === typeof continuationCallback) {\n                  currentTask.callback = continuationCallback;\n                  advanceTimers(currentTime);\n                  hasMoreWork = !0;\n                  break b;\n                }\n                currentTask === peek(taskQueue) && pop(taskQueue);\n                advanceTimers(currentTime);\n              } else pop(taskQueue);\n              currentTask = peek(taskQueue);\n            }\n            if (null !== currentTask) hasMoreWork = !0;\n            else {\n              var firstTimer = peek(timerQueue);\n              null !== firstTimer &&\n                requestHostTimeout(\n                  handleTimeout,\n                  firstTimer.startTime - currentTime\n                );\n              hasMoreWork = !1;\n            }\n          }\n          break a;\n        } finally {\n          (currentTask = null),\n            (currentPriorityLevel = previousPriorityLevel),\n            (isPerformingWork = !1);\n        }\n        hasMoreWork = void 0;\n      }\n    } finally {\n      hasMoreWork\n        ? schedulePerformWorkUntilDeadline()\n        : (isMessageLoopRunning = !1);\n    }\n  }\n}\nvar schedulePerformWorkUntilDeadline;\nif (\"function\" === typeof localSetImmediate)\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\nelse if (\"undefined\" !== typeof MessageChannel) {\n  var channel = new MessageChannel(),\n    port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\nfunction requestHostCallback() {\n  isMessageLoopRunning ||\n    ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());\n}\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\nexports.unstable_IdlePriority = 5;\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_LowPriority = 4;\nexports.unstable_NormalPriority = 3;\nexports.unstable_Profiling = null;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_cancelCallback = function (task) {\n  task.callback = null;\n};\nexports.unstable_continueExecution = function () {\n  isHostCallbackScheduled ||\n    isPerformingWork ||\n    ((isHostCallbackScheduled = !0), requestHostCallback());\n};\nexports.unstable_forceFrameRate = function (fps) {\n  0 > fps || 125 < fps\n    ? console.error(\n        \"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"\n      )\n    : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);\n};\nexports.unstable_getCurrentPriorityLevel = function () {\n  return currentPriorityLevel;\n};\nexports.unstable_getFirstCallbackNode = function () {\n  return peek(taskQueue);\n};\nexports.unstable_next = function (eventHandler) {\n  switch (currentPriorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n      var priorityLevel = 3;\n      break;\n    default:\n      priorityLevel = currentPriorityLevel;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_pauseExecution = function () {};\nexports.unstable_requestPaint = function () {};\nexports.unstable_runWithPriority = function (priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n    default:\n      priorityLevel = 3;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_scheduleCallback = function (\n  priorityLevel,\n  callback,\n  options\n) {\n  var currentTime = exports.unstable_now();\n  \"object\" === typeof options && null !== options\n    ? ((options = options.delay),\n      (options =\n        \"number\" === typeof options && 0 < options\n          ? currentTime + options\n          : currentTime))\n    : (options = currentTime);\n  switch (priorityLevel) {\n    case 1:\n      var timeout = -1;\n      break;\n    case 2:\n      timeout = 250;\n      break;\n    case 5:\n      timeout = 1073741823;\n      break;\n    case 4:\n      timeout = 1e4;\n      break;\n    default:\n      timeout = 5e3;\n  }\n  timeout = options + timeout;\n  priorityLevel = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: options,\n    expirationTime: timeout,\n    sortIndex: -1\n  };\n  options > currentTime\n    ? ((priorityLevel.sortIndex = options),\n      push(timerQueue, priorityLevel),\n      null === peek(taskQueue) &&\n        priorityLevel === peek(timerQueue) &&\n        (isHostTimeoutScheduled\n          ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))\n          : (isHostTimeoutScheduled = !0),\n        requestHostTimeout(handleTimeout, options - currentTime)))\n    : ((priorityLevel.sortIndex = timeout),\n      push(taskQueue, priorityLevel),\n      isHostCallbackScheduled ||\n        isPerformingWork ||\n        ((isHostCallbackScheduled = !0), requestHostCallback()));\n  return priorityLevel;\n};\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = function (callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n};\n","\"use strict\";\n\nvar _require = require('./Collapse'),\n    Collapse = _require.Collapse;\n\nvar _require2 = require('./UnmountClosed'),\n    UnmountClosed = _require2.UnmountClosed; // Default export\n\n\nmodule.exports = UnmountClosed; // Extra \"named exports\"\n\nUnmountClosed.Collapse = Collapse;\nUnmountClosed.UnmountClosed = UnmountClosed;","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/data-quality/\";","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 207,\n    height: 34,\n    viewBox: \"0 0 207 34\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48 3.63043C48 5.35933 46.5985 6.76087 44.8696 6.76087C43.1407 6.76087 41.7391 5.35933 41.7391 3.63043C41.7391 1.90154 43.1407 0.5 44.8696 0.5C46.5985 0.5 48 1.90154 48 3.63043Z\",\n    fill: \"#69BFF3\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.26087 11.9783C6.26087 13.7072 4.85933 15.1087 3.13043 15.1087C1.40154 15.1087 0 13.7072 0 11.9783C0 10.2494 1.40154 8.84783 3.13043 8.84783C4.85933 8.84783 6.26087 10.2494 6.26087 11.9783Z\",\n    fill: \"#69BFF3\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.6522 11.9783C39.6522 13.7072 38.2506 15.1087 36.5217 15.1087C34.7928 15.1087 33.3913 13.7072 33.3913 11.9783C33.3913 10.2494 34.7928 8.84783 36.5217 8.84783C38.2506 8.84783 39.6522 10.2494 39.6522 11.9783Z\",\n    fill: \"#69BFF3\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.4783 11.9783C47.4783 13.419 46.3103 14.587 44.8696 14.587C43.4288 14.587 42.2609 13.419 42.2609 11.9783C42.2609 10.5375 43.4288 9.36957 44.8696 9.36957C46.3103 9.36957 47.4783 10.5375 47.4783 11.9783Z\",\n    fill: \"#69BFF3\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.73913 20.3261C5.73913 21.7668 4.57118 22.9348 3.13043 22.9348C1.68969 22.9348 0.521739 21.7668 0.521739 20.3261C0.521739 18.8853 1.68969 17.7174 3.13043 17.7174C4.57118 17.7174 5.73913 18.8853 5.73913 20.3261Z\",\n    fill: \"#69BFF3\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.6087 20.3261C14.6087 22.055 13.2072 23.4565 11.4783 23.4565C9.74937 23.4565 8.34783 22.055 8.34783 20.3261C8.34783 18.5972 9.74937 17.1957 11.4783 17.1957C13.2072 17.1957 14.6087 18.5972 14.6087 20.3261Z\",\n    fill: \"#69BFF3\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.3043 20.3261C31.3043 22.055 29.9028 23.4565 28.1739 23.4565C26.445 23.4565 25.0435 22.055 25.0435 20.3261C25.0435 18.5972 26.445 17.1957 28.1739 17.1957C29.9028 17.1957 31.3043 18.5972 31.3043 20.3261Z\",\n    fill: \"#69BFF3\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.1304 20.3261C39.1304 21.7668 37.9625 22.9348 36.5217 22.9348C35.081 22.9348 33.913 21.7668 33.913 20.3261C33.913 18.8853 35.081 17.7174 36.5217 17.7174C37.9625 17.7174 39.1304 18.8853 39.1304 20.3261Z\",\n    fill: \"#69BFF3\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.9565 20.3261C46.9565 21.4787 46.0222 22.413 44.8696 22.413C43.717 22.413 42.7826 21.4787 42.7826 20.3261C42.7826 19.1735 43.717 18.2391 44.8696 18.2391C46.0222 18.2391 46.9565 19.1735 46.9565 20.3261Z\",\n    fill: \"#69BFF3\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.21739 28.6739C5.21739 29.8265 4.28303 30.7609 3.13043 30.7609C1.97784 30.7609 1.04348 29.8265 1.04348 28.6739C1.04348 27.5213 1.97784 26.587 3.13043 26.587C4.28303 26.587 5.21739 27.5213 5.21739 28.6739Z\",\n    fill: \"#69BFF3\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.087 28.6739C14.087 30.1147 12.919 31.2826 11.4783 31.2826C10.0375 31.2826 8.86957 30.1147 8.86957 28.6739C8.86957 27.2332 10.0375 26.0652 11.4783 26.0652C12.919 26.0652 14.087 27.2332 14.087 28.6739Z\",\n    fill: \"#69BFF3\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.9565 28.6739C22.9565 30.4028 21.555 31.8043 19.8261 31.8043C18.0972 31.8043 16.6957 30.4028 16.6957 28.6739C16.6957 26.945 18.0972 25.5435 19.8261 25.5435C21.555 25.5435 22.9565 26.945 22.9565 28.6739Z\",\n    fill: \"#69BFF3\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.7826 28.6739C30.7826 30.1147 29.6147 31.2826 28.1739 31.2826C26.7332 31.2826 25.5652 30.1147 25.5652 28.6739C25.5652 27.2332 26.7332 26.0652 28.1739 26.0652C29.6147 26.0652 30.7826 27.2332 30.7826 28.6739Z\",\n    fill: \"#69BFF3\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.6087 28.6739C38.6087 29.8265 37.6743 30.7609 36.5217 30.7609C35.3691 30.7609 34.4348 29.8265 34.4348 28.6739C34.4348 27.5213 35.3691 26.587 36.5217 26.587C37.6743 26.587 38.6087 27.5213 38.6087 28.6739Z\",\n    fill: \"#69BFF3\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.9565 28.6739C46.9565 29.8265 46.0222 30.7609 44.8696 30.7609C43.717 30.7609 42.7826 29.8265 42.7826 28.6739C42.7826 27.5213 43.717 26.587 44.8696 26.587C46.0222 26.587 46.9565 27.5213 46.9565 28.6739Z\",\n    fill: \"#69BFF3\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.028 27.1522V8.04217H70.63C72.346 8.04217 73.802 8.23284 74.998 8.61417C76.2113 8.99551 77.208 9.50684 77.988 10.1482C78.768 10.7722 79.3747 11.4915 79.808 12.3062C80.2587 13.1035 80.5707 13.9355 80.744 14.8022C80.9173 15.6515 81.004 16.4748 81.004 17.2722C81.004 18.4682 80.8307 19.6555 80.484 20.8342C80.1547 21.9955 79.6 23.0528 78.82 24.0062C78.04 24.9595 76.9913 25.7222 75.674 26.2942C74.374 26.8662 72.7447 27.1522 70.786 27.1522H66.028ZM68.94 24.5782H71.098C72.3807 24.5782 73.4553 24.3788 74.322 23.9802C75.206 23.5815 75.908 23.0442 76.428 22.3682C76.9653 21.6748 77.3467 20.9035 77.572 20.0542C77.8147 19.1875 77.936 18.3035 77.936 17.4022C77.936 16.1715 77.7193 15.0448 77.286 14.0222C76.8527 12.9822 76.1333 12.1502 75.128 11.5262C74.14 10.9022 72.7967 10.5902 71.098 10.5902H68.94V24.5782Z\",\n    fill: \"#283034\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M88.2444 27.4122C87.1871 27.4122 86.1991 27.1608 85.2804 26.6582C84.3791 26.1555 83.6511 25.4362 83.0964 24.5002C82.5417 23.5642 82.2644 22.4462 82.2644 21.1462C82.2644 19.8982 82.4984 18.8062 82.9664 17.8702C83.4517 16.9342 84.1277 16.2062 84.9944 15.6862C85.8784 15.1662 86.9271 14.9062 88.1404 14.9062C88.8684 14.9062 89.5271 15.0362 90.1164 15.2962C90.7231 15.5388 91.2257 15.8422 91.6244 16.2062C92.0404 16.5528 92.3177 16.8908 92.4564 17.2202L92.5084 15.2182H95.1864V27.1522H92.5344L92.4824 25.0462C92.3091 25.4275 92.0144 25.8002 91.5984 26.1642C91.1997 26.5282 90.7144 26.8315 90.1424 27.0742C89.5704 27.2995 88.9377 27.4122 88.2444 27.4122ZM88.7124 25.0722C89.3537 25.0722 89.9344 24.9248 90.4544 24.6302C90.9917 24.3182 91.4164 23.8848 91.7284 23.3302C92.0577 22.7755 92.2224 22.1168 92.2224 21.3542V21.1722C92.2224 20.3922 92.0577 19.7162 91.7284 19.1442C91.4164 18.5548 90.9917 18.1042 90.4544 17.7922C89.9344 17.4628 89.3537 17.2982 88.7124 17.2982C87.5511 17.2982 86.6757 17.6708 86.0864 18.4162C85.5144 19.1615 85.2284 20.0802 85.2284 21.1722C85.2284 22.2815 85.5144 23.2088 86.0864 23.9542C86.6757 24.6995 87.5511 25.0722 88.7124 25.0722Z\",\n    fill: \"#283034\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M98.9686 27.1522V17.5062H96.8626V15.2182H98.9686V10.3562L101.803 9.73217V15.2182H104.559V17.5062H101.803V27.1522H98.9686Z\",\n    fill: \"#283034\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M111.11 27.4122C110.053 27.4122 109.065 27.1608 108.146 26.6582C107.245 26.1555 106.517 25.4362 105.962 24.5002C105.408 23.5642 105.13 22.4462 105.13 21.1462C105.13 19.8982 105.364 18.8062 105.832 17.8702C106.318 16.9342 106.994 16.2062 107.86 15.6862C108.744 15.1662 109.793 14.9062 111.006 14.9062C111.734 14.9062 112.393 15.0362 112.982 15.2962C113.589 15.5388 114.092 15.8422 114.49 16.2062C114.906 16.5528 115.184 16.8908 115.322 17.2202L115.374 15.2182H118.052V27.1522H115.4L115.348 25.0462C115.175 25.4275 114.88 25.8002 114.464 26.1642C114.066 26.5282 113.58 26.8315 113.008 27.0742C112.436 27.2995 111.804 27.4122 111.11 27.4122ZM111.578 25.0722C112.22 25.0722 112.8 24.9248 113.32 24.6302C113.858 24.3182 114.282 23.8848 114.594 23.3302C114.924 22.7755 115.088 22.1168 115.088 21.3542V21.1722C115.088 20.3922 114.924 19.7162 114.594 19.1442C114.282 18.5548 113.858 18.1042 113.32 17.7922C112.8 17.4628 112.22 17.2982 111.578 17.2982C110.417 17.2982 109.542 17.6708 108.952 18.4162C108.38 19.1615 108.094 20.0802 108.094 21.1722C108.094 22.2815 108.38 23.2088 108.952 23.9542C109.542 24.6995 110.417 25.0722 111.578 25.0722Z\",\n    fill: \"#283034\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M135.611 27.4122C134.311 27.4122 133.081 27.1868 131.919 26.7362C130.775 26.2855 129.761 25.6355 128.877 24.7862C127.993 23.9195 127.291 22.8795 126.771 21.6662C126.269 20.4528 126.017 19.0835 126.017 17.5582C126.017 16.0155 126.269 14.6375 126.771 13.4242C127.291 12.2108 127.993 11.1795 128.877 10.3302C129.779 9.48084 130.801 8.83951 131.945 8.40617C133.107 7.95551 134.329 7.73017 135.611 7.73017C136.894 7.73017 138.107 7.95551 139.251 8.40617C140.413 8.83951 141.435 9.48084 142.319 10.3302C143.221 11.1795 143.923 12.2108 144.425 13.4242C144.945 14.6375 145.205 16.0155 145.205 17.5582C145.205 19.4822 144.807 21.1548 144.009 22.5762C143.212 23.9975 142.163 25.1155 140.863 25.9302L143.229 29.5962H140.343L138.627 26.9702C137.657 27.2648 136.651 27.4122 135.611 27.4122ZM135.611 24.7862C136.131 24.7862 136.634 24.7342 137.119 24.6302L135.377 21.7962H138.289L139.407 23.6162C140.222 23.0268 140.872 22.2295 141.357 21.2242C141.86 20.2015 142.111 18.9882 142.111 17.5842C142.111 16.0068 141.817 14.6895 141.227 13.6322C140.638 12.5575 139.849 11.7515 138.861 11.2142C137.891 10.6595 136.807 10.3822 135.611 10.3822C134.415 10.3822 133.323 10.6595 132.335 11.2142C131.365 11.7515 130.585 12.5575 129.995 13.6322C129.406 14.6895 129.111 16.0068 129.111 17.5842C129.111 19.1442 129.415 20.4615 130.021 21.5362C130.628 22.5935 131.425 23.3995 132.413 23.9542C133.401 24.5088 134.467 24.7862 135.611 24.7862Z\",\n    fill: \"#283034\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M151.501 27.4122C150.305 27.4122 149.395 27.1608 148.771 26.6582C148.147 26.1555 147.723 25.4882 147.497 24.6562C147.289 23.8242 147.185 22.9055 147.185 21.9002V15.2182H149.993V21.1982C149.993 22.1168 150.045 22.8622 150.149 23.4342C150.271 24.0062 150.496 24.4308 150.825 24.7082C151.172 24.9682 151.683 25.0982 152.359 25.0982C152.845 25.0982 153.304 24.9682 153.737 24.7082C154.188 24.4308 154.561 24.0582 154.855 23.5902C155.15 23.1048 155.297 22.5675 155.297 21.9782V15.2182H158.079V27.1522H155.791L155.479 25.4102C155.046 26.0688 154.509 26.5715 153.867 26.9182C153.226 27.2475 152.437 27.4122 151.501 27.4122Z\",\n    fill: \"#283034\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.084 27.4122C165.027 27.4122 164.039 27.1608 163.12 26.6582C162.219 26.1555 161.491 25.4362 160.936 24.5002C160.381 23.5642 160.104 22.4462 160.104 21.1462C160.104 19.8982 160.338 18.8062 160.806 17.8702C161.291 16.9342 161.967 16.2062 162.834 15.6862C163.718 15.1662 164.767 14.9062 165.98 14.9062C166.708 14.9062 167.367 15.0362 167.956 15.2962C168.563 15.5388 169.065 15.8422 169.464 16.2062C169.88 16.5528 170.157 16.8908 170.296 17.2202L170.348 15.2182H173.026V27.1522H170.374L170.322 25.0462C170.149 25.4275 169.854 25.8002 169.438 26.1642C169.039 26.5282 168.554 26.8315 167.982 27.0742C167.41 27.2995 166.777 27.4122 166.084 27.4122ZM166.552 25.0722C167.193 25.0722 167.774 24.9248 168.294 24.6302C168.831 24.3182 169.256 23.8848 169.568 23.3302C169.897 22.7755 170.062 22.1168 170.062 21.3542V21.1722C170.062 20.3922 169.897 19.7162 169.568 19.1442C169.256 18.5548 168.831 18.1042 168.294 17.7922C167.774 17.4628 167.193 17.2982 166.552 17.2982C165.391 17.2982 164.515 17.6708 163.926 18.4162C163.354 19.1615 163.068 20.0802 163.068 21.1722C163.068 22.2815 163.354 23.2088 163.926 23.9542C164.515 24.6995 165.391 25.0722 166.552 25.0722Z\",\n    fill: \"#283034\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M175.647 27.1522V8.04217H178.429V27.1522H175.647Z\",\n    fill: \"#283034\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M181.239 27.1522V15.2182H184.151V27.1522H181.239ZM182.695 12.9822C182.158 12.9822 181.707 12.8002 181.343 12.4362C180.996 12.0722 180.823 11.6215 180.823 11.0842C180.823 10.5988 180.996 10.1828 181.343 9.83617C181.707 9.48951 182.158 9.31617 182.695 9.31617C183.232 9.31617 183.674 9.48951 184.021 9.83617C184.385 10.1828 184.567 10.5988 184.567 11.0842C184.567 11.6215 184.385 12.0722 184.021 12.4362C183.674 12.8002 183.232 12.9822 182.695 12.9822Z\",\n    fill: \"#283034\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.969 27.1522V17.5062H185.863V15.2182H187.969V10.3562L190.803 9.73217V15.2182H193.559V17.5062H190.803V27.1522H187.969Z\",\n    fill: \"#283034\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M196.097 33.7042L198.671 27.5162L193.731 15.2182H196.903L199.451 22.8102L200.023 24.6562L200.595 22.8102L203.273 15.2182H206.341L199.009 33.7042H196.097Z\",\n    fill: \"#283034\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.631ddd8260ce43976628a95de0bda018.svg\";\nexport { ForwardRef as ReactComponent };","import './header.scss';\nimport logo from './images/logo.svg';\n\nfunction Header() {\n    return (\n        <header className='header'>\n            <div className=\"header_top\">\n                <div className=\"container\">\n                    <div className=\"header_wrapper\">\n                        <div className=\"header_wraper_city\">\n                            <svg width=\"14\" height=\"20\" viewBox=\"0 0 14 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M7.00071 20L12.601 11.9072C14.7016 9.10532 14.3979 4.49988 11.9509 2.05198C10.6286 0.728674 8.87053 0 7.00071 0C5.13089 0 3.37277 0.728674 2.05054 2.05161C-0.396438 4.49952 -0.700165 9.10495 1.39198 11.8958L7.00071 20ZM7.06532 4.383C8.47444 4.383 9.62072 5.53025 9.62072 6.93975C9.62072 8.34925 8.47444 9.4965 7.06532 9.4965C5.6562 9.4965 4.50993 8.34925 4.50993 6.93975C4.50993 5.53025 5.6562 4.383 7.06532 4.383Z\" fill=\"white\" />\n                            </svg>\n                            <button type=\"button\" className='header_wraper_city_curent btn-reset'>Москва</button>\n                        </div>\n                        <a href=\"tel:+74953325541\" className=\"header_wrapper_tel\">+7 495 332-55-41</a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container\">\n                <div className=\"header_inner\">\n                    <a href=\"#!\" className=\"header_logo\">\n                        <img src={logo} alt=\"logo\" width={207} height={34} />\n                    </a>\n                    <nav>\n                        <ul className=\"list-reset header_nav\">\n                            <li className='menu-item-has-children'><a href=\"!#\">Наши услуги</a>\n                                <ul className=\"sub-menu\">\n                                    <li><a href=\"#!\">Тайный покупатель</a></li>\n                                    <li><a href=\"#!\">Мониторинг цен</a></li>\n                                    <li><a href=\"#!\">Опросы на заказ</a></li>\n                                    <li><a href=\"#!\">Конкурентная разведка</a></li>\n                                </ul>\n                            </li>\n                            <li><a href=\"!#\">Отрасли</a></li>\n                            <li><a href=\"!#\">Кейсы</a></li>\n                            <li><a href=\"!#\">Карьера</a></li>\n                            <li><a href=\"!#\">О нас</a></li>\n                        </ul>\n                    </nav>\n                    <div className=\"header_services\">\n                        <button type='button' className=\"btn-reset accent_button\">Заказать услугу</button>\n                    </div>\n                    <button type=\"button\" className='header_burger'>\n                        <span></span>\n                        <span></span>\n                    </button>\n                </div>\n            </div>\n            <div className=\"header_mobile active\">\n                <div className=\"header_mobile_inner\">\n                    <div className=\"header_mobile_top\">\n                        <a href=\"#!\" className=\"header_logo\">\n                            <img src={logo} alt=\"logo\" width={199} height={32} />\n                        </a>\n                        <button type=\"button\" className='header_mobile_close' aria-label='Close menu' data-close>\n                            <svg width=\"14\" height=\"12\" viewBox=\"0 0 14 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M2.08094 11.9935C1.78333 12.0108 1.49062 11.9119 1.26455 11.7175C0.818718 11.269 0.818718 10.5447 1.26455 10.0962L11.0268 0.333722C11.4905 -0.10019 12.2182 -0.0760693 12.6521 0.387644C13.0444 0.806977 13.0673 1.4515 12.7056 1.89757L2.88582 11.7175C2.66268 11.9091 2.37465 12.0078 2.08094 11.9935Z\" fill=\"#283034\" />\n                                <path d=\"M11.832 11.9938C11.5303 11.9925 11.2413 11.8728 11.0271 11.6603L1.26477 1.89783C0.851729 1.41549 0.907884 0.689587 1.39022 0.276501C1.82072 -0.092167 2.45561 -0.092167 2.88607 0.276501L12.7059 10.039C13.1695 10.473 13.1934 11.2007 12.7594 11.6643C12.7421 11.6827 12.7243 11.7006 12.7059 11.7178C12.5869 11.8213 12.4479 11.8991 12.2976 11.9466C12.1473 11.9941 11.9888 12.0102 11.832 11.9938Z\" fill=\"#283034\" />\n                            </svg>\n                        </button>\n                    </div>\n                    <nav className=\"header_mobile_middle\">\n                        <ul className=\"header_mobile_menu header_nav list-reset\">\n                            <li className='menu-item-has-children'><a href=\"!#\">Наши услуги</a>\n                                <ul className=\"sub-menu\">\n                                    <li><a href=\"#!\">Тайный покупатель</a></li>\n                                    <li><a href=\"#!\">Мониторинг цен</a></li>\n                                    <li><a href=\"#!\">Опросы на заказ</a></li>\n                                    <li><a href=\"#!\">Конкурентная разведка</a></li>\n                                </ul>\n                            </li>\n                            <li><a href=\"!#\">Отрасли</a></li>\n                            <li><a href=\"!#\">Кейсы</a></li>\n                            <li><a href=\"!#\">Карьера</a></li>\n                            <li><a href=\"!#\">О нас</a></li>\n                        </ul>\n                    </nav>\n                    <nav className=\"header_mobile_bottom\">\n                        <ul className=\"list-reset header_mobile_contacts\">\n                            <li><a href=\"\">hello@data-quality.com</a></li>\n                            <li><a href=\"\">Telegram</a></li>\n                            <li className='--mobile'><a href=\"\">+7 495 332-55-41</a></li>\n                        </ul>\n                    </nav>\n                    <div className=\"header_mobile_order\">\n                        <a href='#!' className=\"btn-reset project_link accent_button\">Заказать услугу</a>\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.4.10\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { cancelFrame, frame } from '../frameloop/frame.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.preRender(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { collectMotionValues } from './index.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","import { interpolate } from './interpolate.mjs';\n\nconst isCustomValueType = (v) => {\n    return v && typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","function capturePointer(event, action) {\n    const actionName = `${action}PointerCapture`;\n    if (event.target instanceof Element &&\n        actionName in event.target &&\n        event.pointerId !== undefined) {\n        try {\n            event.target[actionName](event.pointerId);\n        }\n        catch (e) { }\n    }\n}\n\nexport { capturePointer };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { capturePointer } from '../utils/capture-pointer.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!target || !isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        capturePointer(startEvent, \"set\");\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            target.removeEventListener(\"pointerup\", onPointerUp);\n            target.removeEventListener(\"pointercancel\", onPointerCancel);\n            capturePointer(endEvent, \"release\");\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            const isOutside = !upEvent.isTrusted\n                ? false\n                : checkOutside(upEvent, target instanceof Element\n                    ? target.getBoundingClientRect()\n                    : {\n                        left: 0,\n                        top: 0,\n                        right: window.innerWidth,\n                        bottom: window.innerHeight,\n                    });\n            if (isOutside) {\n                onPointerEnd(upEvent, false);\n            }\n            else {\n                onPointerEnd(upEvent, !(target instanceof Element) ||\n                    isNodeOrChild(target, upEvent.target));\n            }\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        target.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        target.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n        target.addEventListener(\"lostpointercapture\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        target = options.useGlobalTarget ? window : target;\n        let canAddKeyboardAccessibility = false;\n        if (target instanceof HTMLElement) {\n            canAddKeyboardAccessibility = true;\n            if (!isElementKeyboardAccessible(target) &&\n                target.getAttribute(\"tabindex\") === null) {\n                target.tabIndex = 0;\n            }\n        }\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (canAddKeyboardAccessibility) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n        }\n    });\n    return cancelEvents;\n}\nfunction checkOutside(event, rect) {\n    return (event.clientX < rect.left ||\n        event.clientX > rect.right ||\n        event.clientY < rect.top ||\n        event.clientY > rect.bottom);\n}\n\nexport { press };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { wrap } from '../../utils/wrap.mjs';\nimport { isEasingArray } from './is-easing-array.mjs';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingArray(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nexport { getEasingForSegment };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","function isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nexport { isDOMKeyframes };\n","import { resolveElements } from 'motion-dom';\nimport { isDOMKeyframes } from '../utils/is-dom-keyframes.mjs';\n\nfunction resolveSubjects(subject, keyframes, scope, selectorCache) {\n    if (typeof subject === \"string\" && isDOMKeyframes(keyframes)) {\n        return resolveElements(subject, scope, selectorCache);\n    }\n    else if (subject instanceof NodeList) {\n        return Array.from(subject);\n    }\n    else if (Array.isArray(subject)) {\n        return subject;\n    }\n    else {\n        return [subject];\n    }\n}\n\nexport { resolveSubjects };\n","function calculateRepeatDuration(duration, repeat, _repeatDelay) {\n    return duration * (repeat + 1);\n}\n\nexport { calculateRepeatDuration };\n","/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n","import { getEasingForSegment } from '../../../easing/utils/get-easing-for-segment.mjs';\nimport { removeItem } from '../../../utils/array.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mixNumber(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n","/**\n * Take an array of times that represent repeated keyframes. For instance\n * if we have original times of [0, 0.5, 1] then our repeated times will\n * be [0, 0.5, 1, 1, 1.5, 2]. Loop over the times and scale them back\n * down to a 0-1 scale.\n */\nfunction normalizeTimes(times, repeat) {\n    for (let i = 0; i < times.length; i++) {\n        times[i] = times[i] / (repeat + 1);\n    }\n}\n\nexport { normalizeTimes };\n","function compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n","import { isGenerator, createGeneratorEasing } from 'motion-dom';\nimport { progress, secondsToMilliseconds, invariant } from 'motion-utils';\nimport { getEasingForSegment } from '../../easing/utils/get-easing-for-segment.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { fillOffset } from '../../utils/offsets/fill.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { resolveSubjects } from '../animate/resolve-subjects.mjs';\nimport { calculateRepeatDuration } from './utils/calc-repeat-duration.mjs';\nimport { calcNextTime } from './utils/calc-time.mjs';\nimport { addKeyframes } from './utils/edit.mjs';\nimport { normalizeTimes } from './utils/normalize-times.mjs';\nimport { compareByTime } from './utils/sort.mjs';\n\nconst defaultSegmentEasing = \"easeInOut\";\nconst MAX_REPEAT = 20;\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope, generators) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numSubjects = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset(valueKeyframesAsList), type = \"keyframes\", repeat, repeatType, repeatDelay = 0, ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numSubjects)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            const createGenerator = isGenerator(type)\n                ? type\n                : generators === null || generators === void 0 ? void 0 : generators[type];\n            if (numKeyframes <= 2 && createGenerator) {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta, createGenerator);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Handle repeat options\n             */\n            if (repeat) {\n                invariant(repeat < MAX_REPEAT, \"Repeat count too high, must be less than 20\");\n                duration = calculateRepeatDuration(duration, repeat);\n                const originalKeyframes = [...valueKeyframesAsList];\n                const originalTimes = [...times];\n                ease = Array.isArray(ease) ? [...ease] : [ease];\n                const originalEase = [...ease];\n                for (let repeatIndex = 0; repeatIndex < repeat; repeatIndex++) {\n                    valueKeyframesAsList.push(...originalKeyframes);\n                    for (let keyframeIndex = 0; keyframeIndex < originalKeyframes.length; keyframeIndex++) {\n                        times.push(originalTimes[keyframeIndex] + (repeatIndex + 1));\n                        ease.push(keyframeIndex === 0\n                            ? \"linear\"\n                            : getEasingForSegment(originalEase, keyframeIndex - 1));\n                    }\n                }\n                normalizeTimes(times, repeat);\n            }\n            const targetTime = startTime + duration;\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            const subjects = resolveSubjects(subject, keyframes, scope, elementCache);\n            const numSubjects = subjects.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let subjectIndex = 0; subjectIndex < numSubjects; subjectIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const thisSubject = subjects[subjectIndex];\n                const subjectSequence = getSubjectSequence(thisSubject, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), subjectIndex, numSubjects);\n                }\n            }\n        }\n        prevTime = currentTime;\n        currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition && transition[key]\n        ? {\n            ...transition,\n            ...transition[key],\n        }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nexport { createAnimationsFromSequence, getValueTransition };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\nimport { activeAnimations } from '../../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../../stats/buffer.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.4.10\", `Attempting to mix Motion versions ${nextValue.version} with 12.4.10 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nfunction isObjectKey(key, object) {\n    return key in object;\n}\nclass ObjectVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"object\";\n    }\n    readValueFromInstance(instance, key) {\n        if (isObjectKey(key, instance)) {\n            const value = instance[key];\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    getBaseTargetFromProps() {\n        return undefined;\n    }\n    removeValueFromRenderState(key, renderState) {\n        delete renderState.output[key];\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    build(renderState, latestValues) {\n        Object.assign(renderState.output, latestValues);\n    }\n    renderInstance(instance, { output }) {\n        Object.assign(instance, output);\n    }\n    sortInstanceNodePosition() {\n        return 0;\n    }\n}\n\nexport { ObjectVisualElement };\n","import { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { SVGVisualElement } from '../../render/svg/SVGVisualElement.mjs';\nimport { HTMLVisualElement } from '../../render/html/HTMLVisualElement.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\nimport { ObjectVisualElement } from '../../render/object/ObjectVisualElement.mjs';\n\nfunction createDOMVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options);\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\nfunction createObjectVisualElement(subject) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                output: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = new ObjectVisualElement(options);\n    node.mount(subject);\n    visualElementStore.set(subject, node);\n}\n\nexport { createDOMVisualElement, createObjectVisualElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { invariant } from 'motion-utils';\nimport { visualElementStore } from '../../render/store.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateTarget } from '../interfaces/visual-element-target.mjs';\nimport { createDOMVisualElement, createObjectVisualElement } from '../utils/create-visual-element.mjs';\nimport { isDOMKeyframes } from '../utils/is-dom-keyframes.mjs';\nimport { resolveSubjects } from './resolve-subjects.mjs';\nimport { animateSingleValue } from './single-value.mjs';\n\nfunction isSingleValue(subject, keyframes) {\n    return (isMotionValue(subject) ||\n        typeof subject === \"number\" ||\n        (typeof subject === \"string\" && !isDOMKeyframes(keyframes)));\n}\n/**\n * Implementation\n */\nfunction animateSubject(subject, keyframes, options, scope) {\n    const animations = [];\n    if (isSingleValue(subject, keyframes)) {\n        animations.push(animateSingleValue(subject, isDOMKeyframes(keyframes)\n            ? keyframes.default || keyframes\n            : keyframes, options ? options.default || options : options));\n    }\n    else {\n        const subjects = resolveSubjects(subject, keyframes, scope);\n        const numSubjects = subjects.length;\n        invariant(Boolean(numSubjects), \"No valid elements provided.\");\n        for (let i = 0; i < numSubjects; i++) {\n            const thisSubject = subjects[i];\n            const createVisualElement = thisSubject instanceof Element\n                ? createDOMVisualElement\n                : createObjectVisualElement;\n            if (!visualElementStore.has(thisSubject)) {\n                createVisualElement(thisSubject);\n            }\n            const visualElement = visualElementStore.get(thisSubject);\n            const transition = { ...options };\n            /**\n             * Resolve stagger function if provided.\n             */\n            if (\"delay\" in transition &&\n                typeof transition.delay === \"function\") {\n                transition.delay = transition.delay(i, numSubjects);\n            }\n            animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n        }\n    }\n    return animations;\n}\n\nexport { animateSubject };\n","import { spring } from '../generators/spring/index.mjs';\nimport { createAnimationsFromSequence } from '../sequence/create.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope, { spring });\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        animations.push(...animateSubject(subject, keyframes, transition));\n    });\n    return animations;\n}\n\nexport { animateSequence };\n","import { GroupPlaybackControls } from 'motion-dom';\nimport { animateSequence } from './sequence.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction isSequence(value) {\n    return Array.isArray(value) && value.some(Array.isArray);\n}\n/**\n * Creates an animation function that is optionally scoped\n * to a specific element.\n */\nfunction createScopedAnimate(scope) {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {\n        let animations = [];\n        if (isSequence(subjectOrSequence)) {\n            animations = animateSequence(subjectOrSequence, optionsOrKeyframes, scope);\n        }\n        else {\n            animations = animateSubject(subjectOrSequence, optionsOrKeyframes, options, scope);\n        }\n        const animation = new GroupPlaybackControls(animations);\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n}\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { capturePointer, isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.index = getElementIndex(event.currentTarget);\n            if (event.target instanceof Element &&\n                event.target.hasPointerCapture &&\n                event.pointerId !== undefined) {\n                try {\n                    if (!event.target.hasPointerCapture(event.pointerId)) {\n                        return;\n                    }\n                }\n                catch (e) { }\n            }\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            capturePointer(event, \"release\");\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\" ||\n                event.type === \"lostpointercapture\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        capturePointer(event, \"set\");\n        this.removeListeners = pipe(addPointerEvent(event.currentTarget, \"pointermove\", this.handlePointerMove), addPointerEvent(event.currentTarget, \"pointerup\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"pointercancel\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"lostpointercapture\", (lostPointerEvent, lostPointerInfo) => {\n            const index = getElementIndex(lostPointerEvent.currentTarget);\n            /**\n             * If the pointer has lost capture because it's moved in the DOM\n             * then we need to re-capture it.\n             */\n            if (index !== this.index) {\n                capturePointer(lostPointerEvent, \"set\");\n            }\n            else {\n                this.handlePointerUp(lostPointerEvent, lostPointerInfo);\n            }\n        }));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\nfunction getElementIndex(element) {\n    if (!element.parentNode)\n        return -1;\n    return Array.from(element.parentNode.children).indexOf(element);\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { PanSession } from './PanSession.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import React, { useRef, useEffect, useState } from 'react';\nimport { motion, useMotionValue, useTransform, animate } from 'framer-motion';\n\nconst AnimatedPath = ({ path, duration = 8 }) => {\n  const pathRef = useRef(null);\n  const progress = useMotionValue(0);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 576);\n\n  // Преобразуем прогресс в координаты x и y\n  const x = useTransform(progress, (value) => {\n    if (!pathRef.current) return 0;\n    const point = pathRef.current.getPointAtLength(value);\n    return point.x;\n  });\n\n  const y = useTransform(progress, (value) => {\n    if (!pathRef.current) return 0;\n    const point = pathRef.current.getPointAtLength(value);\n    return point.y;\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 576);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (!pathRef.current || isMobile) return;\n\n    const pathElement = pathRef.current;\n    const pathLength = pathElement.getTotalLength();\n\n    // Анимация прогресса\n    const animation = animate(progress, pathLength, {\n      duration,\n      repeat: Infinity,\n      ease: 'linear',\n    });\n\n    return () => animation.stop();\n  }, [progress, duration, isMobile]); // Добавили `isMobile` в зависимости\n\n  return (\n    <>\n      <path\n        ref={pathRef}\n        d={path}\n        stroke=\"#D2DADE\"\n        fill=\"none\"\n        strokeWidth=\"2\"\n      />\n      {!isMobile && ( // Убираем круг, если экран маленький\n        <motion.circle\n          cx={x}\n          cy={y}\n          r=\"8\"\n          fill=\"#F2AB68\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default AnimatedPath;\n","import AnimatedPath from \"../animatedPath/AnimatedPath\";\nimport './intro.scss';\n\nconst Intro = () => {\n    const path = \"M0 1.00001L56 1.00001C64.8366 1.00001 72 8.16345 72 17L72 103C72 111.837 79.1634 119 88 119L238 119C246.837 119 254 126.163 254 135L254 218C254 226.837 261.163 234 270 234L932 234C940.837 234 948 241.163 948 250L948 262C948 270.837 955.163 278 964 278L1003 278C1011.84 278 1019 285.163 1019 294L1019 298.5C1019 307.337 1026.16 314.5 1035 314.5L1074 314.5C1082.84 314.5 1090 307.337 1090 298.5L1090 135C1090 126.163 1097.16 119 1106 119L1194 119C1202.84 119 1210 111.837 1210 103L1210 28.5C1210 19.6635 1217.16 12.5 1226 12.5L1297.5 12.5\";\n\n    return (\n        <section className=\"section intro\">\n            <div className=\"container\">\n                <div className=\"intro_inner\">\n                    <h1 className=\"project_title_h1 mb40\">Тайные проверки <br /> по регионам <br className=\"mobile\" /> РФ и СНГ</h1>\n                    <p className=\"project_description mb60\">Вы можете заказать услугу по проверке тайным покупателем по нескольким схемам в зависимости от ваших потребностей. Отчёт тайного покупателя мы предоставляем в виде аудиозаписи посещения и чек-листа с комментариями и оценками.</p>\n                    <a href=\"#!\" className=\"project_link accent_button mt60\">Заказать услугу</a>\n                    <div className=\"intro_diagramm\">\n                        <ul className=\"list-reset\">\n                            <li>\n                                <dl className=\"h-reset\">\n                                    <dt>10 <span>индустрий</span></dt>\n                                    <dd className=\"h-reset\">тайных проверок</dd>\n                                </dl>\n                            </li>\n                            <li>\n                                <dl className=\"h-reset\">\n                                    <dt>85</dt>\n                                    <dd className=\"h-reset\">городов</dd>\n                                </dl>\n                            </li>\n                            <li>\n                                <dl className=\"h-reset\">\n                                    <dt>100+</dt>\n                                    <dd className=\"h-reset\">тайных покупателей</dd>\n                                </dl>\n                            </li>\n                            <li>\n                                <dl className=\"h-reset\">\n                                    <dt>5000+</dt>\n                                    <dd className=\"h-reset\">проверок ежемесячно</dd>\n                                </dl>\n                            </li>\n                        </ul>\n                        <svg width=\"1298\" height=\"315\" viewBox=\"0 0 1298 315\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <AnimatedPath path={path} />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Intro;","var _rect, _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _path54, _path55, _path56, _path57, _path58, _path59, _path60, _path61, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70, _path71, _path72, _path73, _path74, _path75, _path76, _path77, _path78, _path79, _path80, _path81, _path82, _path83, _path84, _path85, _path86, _path87, _path88, _path89, _path90, _path91, _path92, _path93, _path94, _path95, _path96, _path97, _path98, _path99, _path100, _path101, _path102, _path103, _path104, _path105, _path106, _path107, _path108, _path109, _path110, _path111, _path112, _path113, _path114, _path115, _path116, _path117, _path118, _path119, _path120, _path121, _path122, _path123, _path124, _path125, _path126, _path127, _path128, _path129, _path130, _path131, _path132, _path133, _path134, _path135, _path136, _path137, _path138, _path139, _path140, _path141, _path142, _path143, _path144, _path145, _path146, _path147, _path148, _path149, _path150, _path151, _path152, _path153, _path154, _path155, _path156, _path157, _path158, _path159, _path160, _path161, _path162, _path163, _path164, _path165, _path166, _path167, _path168, _path169, _path170, _path171, _path172, _path173, _path174, _path175, _path176, _path177, _path178, _path179, _path180, _path181, _path182, _path183, _path184, _path185, _path186, _path187, _path188, _path189, _path190, _path191, _path192, _path193, _path194, _path195, _path196, _path197, _path198, _path199, _path200, _path201, _path202, _path203, _path204, _path205, _path206, _path207, _path208, _path209, _path210, _path211, _path212, _path213, _path214, _path215, _path216, _path217, _path218, _path219, _path220, _path221, _path222, _path223, _path224, _path225, _path226;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgIllustration(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 1312,\n    height: 496,\n    viewBox: \"0 0 1312 496\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 1312,\n    height: 495,\n    rx: 32,\n    fill: \"#FCECDD\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M613.476 128.368H529.529V181.703H613.476V128.368Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M613.476 182.541H529.529C529.067 182.541 528.691 182.166 528.691 181.703V128.368C528.691 127.905 529.067 127.53 529.529 127.53H613.476C613.938 127.53 614.313 127.905 614.313 128.368V181.703C614.313 182.166 613.938 182.541 613.476 182.541ZM530.367 180.865H612.637V129.206H530.367V180.865Z\",\n    fill: \"#283034\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M567.738 139.701H630.624V136.169H567.738V139.701Z\",\n    fill: \"#D2DADE\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M567.738 146.07H630.624V142.538H567.738V146.07Z\",\n    fill: \"#D2DADE\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M567.738 152.638H630.624V149.106H567.738V152.638Z\",\n    fill: \"#D2DADE\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M567.738 160.236H630.624V156.705H567.738V160.236Z\",\n    fill: \"#D2DADE\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M567.738 166.605H630.624V163.073H567.738V166.605Z\",\n    fill: \"#D2DADE\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M567.738 173.173H630.624V169.641H567.738V173.173Z\",\n    fill: \"#D2DADE\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M561.704 101.336H477.758V154.671H561.704V101.336Z\",\n    fill: \"white\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M561.704 155.509H477.758C477.295 155.509 476.92 155.134 476.92 154.671V101.336C476.92 100.873 477.295 100.498 477.758 100.498H561.704C562.167 100.498 562.542 100.873 562.542 101.336V154.671C562.542 155.134 562.167 155.509 561.704 155.509ZM478.596 153.833H560.866V102.174H478.596V153.833Z\",\n    fill: \"#283034\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M514.305 112.925H552.4V109.393H514.305V112.925Z\",\n    fill: \"#D2DADE\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M514.305 119.294H552.4V115.762H514.305V119.294Z\",\n    fill: \"#D2DADE\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M514.305 125.861H552.4V122.329H514.305V125.861Z\",\n    fill: \"#D2DADE\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M505.692 89.0565H485.011V121.881H505.692V89.0565Z\",\n    fill: \"#D2DADE\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M470.626 448.685L461.999 493.732L502.699 493.706C502.699 493.706 504.708 491.087 501.158 489.379C498.624 488.16 495.61 488.512 493.163 487.27C490.716 486.028 495.93 453.134 495.93 453.134L470.626 448.685Z\",\n    fill: \"white\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M461.999 494.72C461.705 494.72 461.425 494.589 461.237 494.362C461.05 494.135 460.973 493.836 461.028 493.546L469.655 448.499C469.756 447.968 470.266 447.619 470.797 447.711L496.102 452.16C496.633 452.254 496.991 452.756 496.907 453.288C496.894 453.365 495.677 461.069 494.708 469.049C492.994 483.159 493.54 485.936 493.755 486.459C494.82 486.964 496.04 487.158 497.329 487.364C498.742 487.589 500.203 487.822 501.587 488.488C503.024 489.179 503.891 490.112 504.166 491.262C504.547 492.861 503.593 494.164 503.483 494.308C503.296 494.551 503.007 494.694 502.699 494.695L462 494.72C461.999 494.72 461.999 494.72 461.999 494.72ZM471.413 449.827L463.195 492.743L502.123 492.718C502.235 492.453 502.332 492.083 502.239 491.708C502.106 491.171 501.598 490.687 500.729 490.27C499.606 489.729 498.349 489.529 497.018 489.316C495.579 489.086 494.091 488.849 492.716 488.151C491.823 487.698 491.35 486.443 491.576 481.369C491.705 478.461 492.066 474.509 492.648 469.619C493.439 462.974 494.433 456.357 494.805 453.94L471.413 449.827Z\",\n    fill: \"#283034\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M503.912 494.424L460.269 494.472L462.808 478.28C470.249 479 475.066 487.219 482.592 485.25C486.911 484.145 490.718 479.582 494.866 479.774C495.165 483.473 495.593 486.019 496.234 486.403C498.885 487.892 499.508 487.699 502.245 489.141C506.094 491.254 503.912 494.424 503.912 494.424Z\",\n    fill: \"#283034\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.665 448.685L522.394 493.732L563.094 493.706C563.094 493.706 565.104 491.087 561.553 489.379C559.019 488.16 556.005 488.512 553.558 487.27C551.112 486.028 548.971 451.841 548.971 451.841L520.665 448.685Z\",\n    fill: \"white\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M522.394 494.72C521.863 494.72 521.427 494.3 521.406 493.77L519.677 448.723C519.666 448.435 519.78 448.157 519.991 447.961C520.202 447.765 520.488 447.67 520.774 447.702L549.081 450.859C549.558 450.912 549.928 451.3 549.958 451.779C549.963 451.86 550.476 460.003 551.271 468.37C552.689 483.29 553.754 485.96 554.094 486.432C555.172 486.957 556.413 487.155 557.724 487.364C559.137 487.589 560.598 487.822 561.981 488.488C563.418 489.179 564.286 490.112 564.56 491.261C564.941 492.861 563.988 494.164 563.878 494.308C563.691 494.551 563.401 494.694 563.094 494.694L522.394 494.72C522.394 494.72 522.395 494.721 522.394 494.72ZM521.696 449.794L523.345 492.743L562.518 492.718C562.63 492.453 562.728 492.083 562.635 491.708C562.501 491.171 561.993 490.687 561.124 490.27C560.002 489.729 558.744 489.529 557.413 489.316C555.974 489.087 554.486 488.85 553.111 488.151C552.358 487.769 551.098 487.13 549.364 469.185C548.681 462.124 548.195 455.09 548.039 452.732L521.696 449.794Z\",\n    fill: \"#283034\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M564.308 494.424L521.796 494.472L520.665 478.28C528.106 479 535.461 487.219 542.988 485.25C547.307 484.145 551.113 479.582 555.261 479.774C555.561 483.473 555.988 486.019 556.63 486.403C559.281 487.892 559.903 487.699 562.64 489.141C566.489 491.254 564.308 494.424 564.308 494.424Z\",\n    fill: \"#283034\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M551.732 470.19L520.674 469.143L516.606 383.724L494.584 472.655L464.665 470.367L482.623 374.597C482.623 374.597 481.746 332.175 481.398 318.592C481.05 305.008 484.864 293.87 484.864 293.87L536.881 291.912C536.881 291.912 550.223 358.942 552.348 375.074C554.477 391.202 551.732 470.19 551.732 470.19Z\",\n    fill: \"#55ABDF\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M516.973 386.653C516.768 386.653 516.576 386.524 516.505 386.32L494.884 324.227C494.793 323.969 494.93 323.686 495.189 323.596C495.447 323.505 495.73 323.642 495.82 323.901L517.441 385.994C517.531 386.252 517.394 386.535 517.136 386.625C517.082 386.644 517.027 386.653 516.973 386.653Z\",\n    fill: \"white\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M551.547 454.771C551.541 454.771 551.535 454.771 551.529 454.771L519.466 453.629C519.192 453.619 518.978 453.39 518.988 453.116C518.998 452.842 519.224 452.626 519.501 452.638L551.564 453.78C551.838 453.79 552.051 454.02 552.042 454.293C552.032 454.561 551.812 454.771 551.547 454.771Z\",\n    fill: \"white\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M498.558 456.295C498.546 456.295 498.533 456.294 498.52 456.293L467.931 453.942C467.658 453.921 467.454 453.682 467.475 453.409C467.496 453.136 467.731 452.932 468.007 452.953L498.596 455.305C498.869 455.326 499.073 455.564 499.052 455.837C499.032 456.097 498.815 456.295 498.558 456.295Z\",\n    fill: \"white\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M490.186 194.229C486.435 188.423 488.605 180.358 495.023 176.213C501.445 172.066 509.686 173.41 513.433 179.213C517.181 185.015 515.015 193.084 508.596 197.229C502.175 201.374 493.933 200.031 490.186 194.229Z\",\n    fill: \"white\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M500.595 200.566C496.1 200.566 491.852 198.537 489.399 194.737C487.44 191.705 486.902 188.018 487.886 184.355C488.861 180.728 491.215 177.557 494.515 175.426C497.816 173.294 501.675 172.453 505.382 173.057C509.123 173.667 512.262 175.673 514.22 178.705C518.243 184.934 515.948 193.597 509.105 198.016C506.437 199.738 503.466 200.565 500.595 200.566ZM503.018 174.74C500.428 174.74 497.83 175.516 495.531 177C492.622 178.879 490.55 181.664 489.696 184.841C488.851 187.985 489.305 191.139 490.973 193.721C494.433 199.079 502.111 200.3 508.088 196.442C514.063 192.583 516.108 185.082 512.646 179.721C510.979 177.14 508.292 175.43 505.08 174.907C504.398 174.795 503.708 174.74 503.018 174.74Z\",\n    fill: \"#283034\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M499.187 195.88C497.966 195.88 496.815 195.334 496.153 194.309C495.06 192.619 495.697 190.257 497.573 189.044C499.449 187.835 501.863 188.226 502.955 189.915C503.497 190.753 503.635 191.773 503.344 192.786C503.065 193.753 502.423 194.602 501.535 195.176C500.797 195.651 499.977 195.88 499.187 195.88ZM499.927 190.146C499.474 190.146 498.991 190.282 498.554 190.564C497.517 191.235 497.121 192.474 497.672 193.326C498.222 194.177 499.515 194.325 500.553 193.656C501.074 193.319 501.447 192.832 501.605 192.285C501.75 191.783 501.689 191.289 501.436 190.897C501.117 190.404 500.549 190.146 499.927 190.146Z\",\n    fill: \"#283034\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M493.859 208.001C493.621 208.001 493.392 207.907 493.222 207.739C493.047 207.566 492.951 207.329 492.954 207.084L493.131 195.053C493.138 194.554 493.544 194.156 494.048 194.162C494.548 194.169 494.947 194.58 494.94 195.08L494.777 206.171L509.425 205.836C508.518 201.425 507.193 195.206 506.913 194.504C506.699 194.066 506.872 193.534 507.306 193.306C507.749 193.074 508.296 193.246 508.527 193.688C508.924 194.447 510.679 202.925 511.415 206.535C511.469 206.798 511.403 207.071 511.236 207.28C511.069 207.49 510.818 207.614 510.55 207.621L493.879 208.001C493.873 208.001 493.866 208.001 493.859 208.001ZM506.917 194.512C506.92 194.518 506.923 194.523 506.925 194.527C506.922 194.522 506.92 194.517 506.917 194.512Z\",\n    fill: \"#283034\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M500.268 188.493C499.773 189.683 499.694 181.905 500.022 180.199C500.607 177.168 503.673 173.565 503.611 170.619C503.503 165.211 500.192 157.102 493.556 159.055C487.006 160.985 491.767 169.134 488.74 172.861C486.442 175.69 483.976 170.709 481.643 172.479C473.81 178.417 479.515 192.516 484.003 198.43C485.065 199.831 493.265 205.048 494.843 202.153C495.801 200.398 499.766 196.966 499.383 195.392C499.213 194.689 496.819 194.129 496.438 192.561C495.998 190.752 500.984 186.773 500.268 188.493Z\",\n    fill: \"#283034\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M499.352 181.41C499.352 180.303 500.099 183.573 500.881 184.358C501.797 185.271 506.001 190.454 506.776 190.645C509.309 191.281 514.073 190.645 515.502 188.268C515.91 187.586 515.623 185.763 516.07 185.32C516.122 185.268 516.589 186.486 516.692 186.625C517.398 187.565 518.218 188.427 519.184 189.116C522.2 191.271 526.736 195.011 524.342 199.205C522.771 201.949 519.913 200.485 517.485 201.527C509.821 204.81 504.704 207.146 498.559 199.769C498.24 199.388 496.753 196.696 496.915 196.371C497.86 194.479 501.579 195.544 502.638 193.423C504.305 190.084 500.756 189.953 499.41 188.607C498.694 187.891 498.829 183.805 499.012 182.884C499.064 182.625 500.012 183.168 499.749 183.168L499.352 181.41Z\",\n    fill: \"#283034\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M481.874 239.767C481.874 239.767 443.267 204.791 444.818 184.523C446.369 164.255 480.855 142.218 480.855 142.218L491.223 153.815C491.223 153.815 467.451 178.849 468.872 182.997C472.958 194.922 486.056 198.551 491.223 210.57C496.39 222.587 481.874 239.767 481.874 239.767Z\",\n    fill: \"#283034\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M528.403 217.051L511.065 207.142L494.105 206.951C494.105 206.951 481.076 212.235 476.861 219.46C465.958 238.15 481.874 294.087 481.874 294.087H539.756C539.756 294.087 534.884 260.878 533.548 250.588C532.216 240.298 528.403 217.051 528.403 217.051Z\",\n    fill: \"white\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M539.756 294.992H481.874C481.469 294.992 481.114 294.724 481.004 294.335C480.964 294.195 476.98 280.112 474.385 263.926C470.88 242.055 471.45 226.941 476.08 219.004C480.401 211.597 493.221 206.334 493.765 206.113C493.876 206.068 493.996 206.047 494.115 206.047L511.075 206.237C511.229 206.239 511.38 206.28 511.514 206.356L528.852 216.266C529.088 216.401 529.252 216.636 529.296 216.905C529.334 217.137 533.126 240.285 534.445 250.472C535.764 260.637 540.602 293.624 540.651 293.956C540.689 294.216 540.612 294.48 540.44 294.679C540.269 294.878 540.019 294.992 539.756 294.992ZM482.562 293.183H538.709C537.874 287.478 533.839 259.86 532.651 250.704C531.435 241.311 528.104 220.831 527.58 217.622L510.82 208.043L494.281 207.858C492.777 208.494 481.403 213.47 477.642 219.916C467.686 236.983 480.835 286.862 482.562 293.183Z\",\n    fill: \"#283034\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M584.42 203.817L571.628 198.82C571.628 198.82 561.439 236.994 552.644 238.592C543.852 240.191 527.895 200.925 511.473 212.21C493.887 225.002 533.171 275.171 557.242 268.369C584.821 260.574 584.42 203.817 584.42 203.817Z\",\n    fill: \"#283034\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M571.998 199.25C571.998 199.25 570.881 184.264 572.002 182.348C573.126 180.431 576.375 189.427 576.375 189.427C576.375 189.427 580.036 174.172 581.738 174.795C583.444 175.418 580.849 187.977 580.849 187.977C580.849 187.977 585.793 172.335 587.63 173.217C589.467 174.099 585.236 188.316 585.236 188.316C585.236 188.316 591.007 175.597 592.588 176.877C594.169 178.154 588.46 190.229 588.46 190.229C588.46 190.229 595.47 182.86 594.903 185.285C594.339 187.711 586.198 199.927 586.198 199.927L584.333 204.28L571.998 199.25Z\",\n    fill: \"white\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M584.333 205.185C584.219 205.185 584.103 205.164 583.991 205.118L571.656 200.087C571.338 199.958 571.122 199.659 571.096 199.317C570.829 195.736 570.049 183.895 571.221 181.891C571.514 181.391 571.981 181.134 572.499 181.181C573.321 181.256 574.185 182.008 575.727 185.429C575.889 185.787 576.043 186.143 576.188 186.485C576.509 185.262 576.919 183.754 577.368 182.233C579.56 174.813 580.543 174.286 581.015 174.032C581.348 173.854 581.715 173.822 582.049 173.945C582.923 174.264 583.422 175.27 583.152 178.805C585.177 173.755 586.192 172.709 586.918 172.395C587.288 172.234 587.68 172.237 588.022 172.401C589.087 172.912 589.484 174.474 588.179 180.507C590.297 176.8 591.301 176.087 592.003 175.921C592.423 175.822 592.833 175.912 593.157 176.174C594.058 176.901 594.199 178.571 591.961 184.358C591.717 184.989 591.464 185.615 591.216 186.214C594.224 183.46 594.831 183.787 595.267 184.022C595.496 184.146 596.007 184.537 595.784 185.49C595.209 187.962 588.031 198.804 586.996 200.359L585.164 204.636C585.018 204.979 584.684 205.185 584.333 205.185ZM572.859 198.624L583.852 203.107L585.366 199.572C585.388 199.521 585.415 199.472 585.445 199.426C587.904 195.737 591.59 189.954 593.22 186.874C592.038 187.902 590.463 189.437 589.116 190.853C588.81 191.175 588.315 191.227 587.949 190.976C587.583 190.725 587.453 190.245 587.643 189.843C589.771 185.34 591.808 180.002 591.97 178.063C590.664 179.483 588.039 184.329 586.059 188.69C585.863 189.123 585.365 189.33 584.919 189.163C584.473 188.997 584.233 188.514 584.369 188.058C584.378 188.027 585.321 184.848 586.11 181.462C587.078 177.305 587.22 175.398 587.187 174.546C585.887 176.399 583.475 182.671 581.711 188.25C581.566 188.709 581.087 188.974 580.621 188.852C580.155 188.731 579.865 188.266 579.963 187.794C580.866 183.42 581.552 178.347 581.404 176.307C580.312 178.38 578.523 184.353 577.255 189.638C577.162 190.027 576.824 190.308 576.425 190.33C576.027 190.35 575.66 190.11 575.524 189.734C574.639 187.282 573.393 184.505 572.613 183.4C572.238 185.592 572.42 192.479 572.859 198.624Z\",\n    fill: \"#283034\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M491.47 152.636C491.47 152.636 503.841 146.845 504.848 145.085C505.853 143.322 497.253 144.718 497.253 144.718C497.253 144.718 506.257 132.765 504.989 131.669C503.719 130.571 496.365 140.461 496.365 140.461C496.365 140.461 506.497 129.487 504.962 128.398C503.428 127.31 494.103 138.42 494.103 138.42C494.103 138.42 503.262 128.744 501.529 128.04C499.799 127.335 491.825 136.901 491.825 136.901C491.825 136.901 497.667 127.175 496.005 128.716C494.342 130.254 484.47 141.483 484.47 141.483L481.874 144.931L491.47 152.636Z\",\n    fill: \"white\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M491.47 153.466C491.285 153.466 491.101 153.404 490.951 153.283L481.354 145.578C481.005 145.297 480.941 144.79 481.211 144.432L483.808 140.984C483.82 140.967 483.834 140.951 483.847 140.935C484.252 140.475 493.767 129.656 495.442 128.107C496.116 127.482 496.621 127.764 496.806 127.915C497.452 128.439 497.046 129.246 496.485 130.363C496.422 130.488 496.354 130.62 496.282 130.76C500.028 127 501.12 126.977 501.843 127.272C502.206 127.419 502.463 127.727 502.547 128.114C502.571 128.224 502.583 128.345 502.576 128.485C504.098 127.352 504.871 127.317 505.443 127.722C505.727 127.923 505.904 128.237 505.943 128.606C505.987 129.028 505.88 129.638 505.183 130.834C505.31 130.882 505.428 130.952 505.532 131.042C506.306 131.71 505.9 132.93 505.051 134.555C504.448 135.709 503.518 137.227 502.286 139.066C501.142 140.775 499.942 142.456 499.089 143.627C499.591 143.567 500.152 143.508 500.724 143.46C504.132 143.176 505.118 143.534 505.551 144.158C505.824 144.55 505.83 145.038 505.569 145.496C504.513 147.342 494.78 152.003 491.822 153.387C491.71 153.44 491.59 153.466 491.47 153.466ZM483.021 144.787L491.586 151.664C496.658 149.27 502.203 146.336 503.747 145.063C502.6 144.931 500.002 145.113 497.387 145.537C497.052 145.592 496.718 145.437 496.543 145.147C496.368 144.857 496.387 144.489 496.591 144.218C499.775 139.99 503.148 134.962 504.049 132.844C503.868 132.989 503.665 133.168 503.445 133.376C502.903 134.094 502.25 134.921 501.462 135.876C499.258 138.548 496.998 140.999 496.975 141.024C496.676 141.348 496.175 141.382 495.835 141.099C495.496 140.818 495.436 140.319 495.699 139.965C495.715 139.943 497.347 137.753 499.186 135.566C500.452 134.062 501.417 133.025 502.168 132.311C503.069 131.115 503.75 130.104 504.077 129.432C503 130.113 501.066 131.959 498.96 134.2C498.872 134.305 498.783 134.411 498.692 134.52C496.745 136.834 494.727 138.969 494.706 138.99C494.398 139.316 493.886 139.338 493.551 139.039C493.216 138.741 493.179 138.23 493.468 137.886C493.489 137.861 495.445 135.534 497.692 133.132C499.048 131.498 500.144 130.04 500.636 129.141C498.968 130.219 495.369 133.946 492.463 137.432C492.185 137.765 491.698 137.829 491.344 137.577C490.991 137.326 490.89 136.845 491.114 136.473C491.815 135.306 492.535 134.078 493.182 132.944C489.881 136.592 485.459 141.616 485.115 142.007L483.021 144.787Z\",\n    fill: \"#283034\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M189.854 259.743H90V313.079H189.854V259.743Z\",\n    fill: \"#D2DADE\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M220.279 165.443H136.333V218.778H220.279V165.443Z\",\n    fill: \"#D2DADE\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.863 176.777H209.749V173.245H146.863V176.777Z\",\n    fill: \"white\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.863 183.146H209.749V179.614H146.863V183.146Z\",\n    fill: \"white\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.863 189.713H209.749V186.181H146.863V189.713Z\",\n    fill: \"white\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.863 197.312H209.749V193.78H146.863V197.312Z\",\n    fill: \"white\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.863 203.68H209.749V200.149H146.863V203.68Z\",\n    fill: \"white\"\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.863 210.248H209.749V206.716H146.863V210.248Z\",\n    fill: \"white\"\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M276.63 445.763L270.05 493.884L232.97 494.302C232.97 494.302 231.047 491.856 234.374 490.207C236.749 489.029 238.795 489.179 241.087 487.981C243.379 486.783 247.398 452.418 247.398 452.418L276.63 445.763Z\",\n    fill: \"white\"\n  })), _path48 || (_path48 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M232.97 495.139C232.714 495.139 232.471 495.021 232.313 494.819C232.21 494.689 231.322 493.504 231.654 492.036C231.892 490.98 232.683 490.112 234.003 489.457C235.256 488.836 236.405 488.564 237.516 488.301C238.583 488.048 239.591 487.809 240.642 487.27C241.975 485.706 244.695 468.331 246.568 452.321C246.609 451.969 246.867 451.681 247.212 451.603L276.444 444.948C276.711 444.887 276.992 444.961 277.194 445.147C277.397 445.332 277.495 445.605 277.458 445.877L270.879 493.998C270.823 494.408 270.474 494.716 270.059 494.72L232.98 495.139C232.976 495.139 232.973 495.139 232.97 495.139ZM248.159 453.102C247.909 455.19 247.015 462.519 245.929 469.872C243.284 487.776 242.106 488.391 241.474 488.722C240.217 489.379 239.04 489.658 237.901 489.928C236.835 490.18 235.828 490.419 234.745 490.956C233.904 491.373 233.414 491.856 233.287 492.394C233.192 492.8 233.315 493.195 233.44 493.461L269.319 493.056L275.637 446.846L248.159 453.102Z\",\n    fill: \"#283034\"\n  })), _path49 || (_path49 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.389 494.998L270.776 494.777L272.142 479.145C265.137 479.907 260.122 487.865 253.007 486.093C248.925 485.101 245.287 480.843 241.38 481.071C241.139 484.56 240.765 486.964 240.165 487.333C237.683 488.766 235.464 488.612 232.9 490C229.298 492.035 231.389 494.998 231.389 494.998Z\",\n    fill: \"#283034\"\n  })), _path50 || (_path50 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M276.63 464.486H244.732L258.909 299.091L291.566 300.562L276.63 464.486Z\",\n    fill: \"#F2D468\"\n  })), _path51 || (_path51 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M202.019 233.839C202.019 233.839 193.441 227.612 195.458 218.895C195.63 218.155 198.251 223.767 198.251 223.767C198.251 223.767 190.161 210.325 191.812 209.575C193.464 208.823 198.212 216.995 198.212 216.995L203.65 216.026C203.65 216.026 209.716 214.942 211.012 217.068C212.311 219.193 214.588 228.347 214.588 228.347L217.858 237.776L207.663 247.057L202.019 233.839Z\",\n    fill: \"white\"\n  })), _path52 || (_path52 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M207.663 247.962C207.599 247.962 207.534 247.955 207.47 247.941C207.184 247.879 206.946 247.682 206.831 247.413L201.282 234.416C199.929 233.366 192.799 227.38 194.502 219.034C194.306 218.676 194.109 218.31 193.913 217.943C190.272 211.117 190.603 210.051 190.761 209.539C190.873 209.179 191.113 208.899 191.437 208.752C192.652 208.2 194.08 209.279 196.367 212.478C197.348 213.849 198.218 215.249 198.669 215.995L203.491 215.135C204.605 214.936 210.244 214.07 211.784 216.598C213.1 218.749 215.176 226.967 215.456 228.089L218.713 237.48C218.831 237.822 218.734 238.202 218.467 238.445L208.272 247.726C208.104 247.879 207.886 247.962 207.663 247.962ZM196.064 221.82C196.243 228.424 202.48 233.056 202.552 233.108C202.683 233.204 202.787 233.334 202.851 233.484L207.995 245.532L216.808 237.509L213.733 228.644C213.725 228.618 213.717 228.592 213.71 228.566C213.086 226.057 211.246 219.186 210.24 217.54C209.577 216.452 206.01 216.525 203.808 216.916L198.37 217.886C197.997 217.953 197.62 217.779 197.429 217.45C195.72 214.509 193.715 211.775 192.609 210.801C193.008 212.197 194.357 214.986 196.021 218.049C196.468 218.321 196.93 219.086 197.841 220.87C198.475 222.11 199.064 223.372 199.07 223.384C199.274 223.821 199.101 224.339 198.676 224.566C198.251 224.792 197.724 224.646 197.475 224.234C197.465 224.216 196.881 223.244 196.064 221.82Z\",\n    fill: \"#283034\"\n  })), _path53 || (_path53 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M278.035 229.324C266.143 221.638 248.121 259.341 240.007 261.624C236.654 262.567 226.186 246.535 217.516 236.562C215.866 240.09 212.508 242.756 207.434 242.756C206.632 242.756 205.882 242.676 205.165 242.551C207.617 260.885 220.178 283.613 235.441 285.6C261.272 288.965 289.927 237.013 278.035 229.324Z\",\n    fill: \"white\"\n  })), _path54 || (_path54 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.923 286.727C237.06 286.727 236.191 286.673 235.316 286.559C228.044 285.612 220.718 279.992 214.689 270.733C209.386 262.59 205.467 252.103 204.207 242.679C204.166 242.374 204.273 242.067 204.495 241.854C204.718 241.64 205.028 241.545 205.332 241.599C206.062 241.727 206.749 241.789 207.434 241.789C213.15 241.789 215.656 238.258 216.641 236.153C216.78 235.857 217.058 235.65 217.383 235.605C217.707 235.56 218.031 235.682 218.246 235.928C221.075 239.182 224.075 243.053 226.976 246.796C229.993 250.688 232.843 254.365 235.232 257.006C238.705 260.847 239.648 260.721 239.745 260.693C242.475 259.925 246.954 254.033 251.696 247.795C255.793 242.404 260.438 236.294 264.93 232.235C270.37 227.319 274.829 226.101 278.56 228.512C282.508 231.065 282.82 237.849 279.416 247.125C275.933 256.616 269.369 266.787 261.857 274.335C256.079 280.141 247.427 286.727 237.923 286.727ZM206.306 243.674C207.695 252.495 211.389 262.123 216.309 269.678C222.025 278.455 228.863 283.769 235.566 284.642C252.784 286.884 271.351 263.488 277.601 246.459C280.622 238.227 280.588 232.125 277.51 230.135C270.828 225.816 261.073 238.651 253.234 248.964C248.077 255.75 243.622 261.61 240.268 262.554C237.509 263.33 233.066 257.807 225.448 247.98C222.874 244.659 220.223 241.238 217.697 238.258C215.537 241.749 211.871 243.722 207.434 243.722C207.059 243.722 206.685 243.707 206.306 243.674Z\",\n    fill: \"#283034\"\n  })), _path55 || (_path55 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M332.778 446.029L341.1 493.878L303.443 494.303C303.443 494.303 301.52 491.856 304.847 490.207C307.221 489.03 309.267 489.18 311.559 487.981C313.851 486.783 306.22 452.075 306.22 452.075L332.778 446.029Z\",\n    fill: \"white\"\n  })), _path56 || (_path56 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M303.443 495.139C303.187 495.139 302.945 495.021 302.786 494.82C302.684 494.689 301.795 493.504 302.127 492.036C302.365 490.98 303.156 490.112 304.476 489.458C305.729 488.836 306.878 488.564 307.989 488.301C309.03 488.054 310.015 487.821 311.038 487.309C311.253 486.712 311.528 483.727 308.78 468.934C307.214 460.502 305.421 452.336 305.403 452.255C305.305 451.806 305.587 451.362 306.035 451.26L332.592 445.214C332.815 445.163 333.05 445.207 333.241 445.334C333.432 445.46 333.562 445.66 333.602 445.886L341.924 493.735C341.966 493.976 341.9 494.224 341.743 494.413C341.586 494.601 341.355 494.712 341.109 494.714L303.452 495.139C303.45 495.139 303.446 495.139 303.443 495.139ZM307.213 452.707C307.724 455.071 309.251 462.237 310.572 469.428C311.516 474.571 312.173 478.724 312.523 481.77C313.188 487.564 312.63 488.365 311.947 488.722C310.69 489.379 309.513 489.658 308.374 489.928C307.308 490.18 306.301 490.419 305.218 490.956C304.377 491.373 303.886 491.857 303.76 492.394C303.665 492.8 303.789 493.195 303.913 493.461L340.108 493.052L332.105 447.04L307.213 452.707Z\",\n    fill: \"#283034\"\n  })), _path57 || (_path57 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M301.862 494.998L342.431 494.534L339.769 479.335C332.765 480.097 330.596 487.865 323.481 486.093C319.398 485.101 315.76 480.843 311.853 481.071C311.612 484.56 311.238 486.964 310.638 487.333C308.156 488.765 305.937 488.611 303.373 489.999C299.771 492.035 301.862 494.998 301.862 494.998Z\",\n    fill: \"#283034\"\n  })), _path58 || (_path58 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M307.016 462.851L335.908 460.841L319.277 340.739C319.277 340.739 317.889 313.507 313.008 307.135C310.08 303.312 270.776 300.562 270.776 300.562L307.016 462.851Z\",\n    fill: \"#F2D468\"\n  })), _path59 || (_path59 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M280.119 201.218C278.655 205.84 279.618 211.222 283.122 215.308C288.366 221.48 297.335 222.372 303.147 217.323C308.946 212.288 309.403 203.21 304.159 197.038C303.07 195.752 301.824 194.715 300.467 193.91C295.312 190.761 288.719 191.033 284.135 195.023C282.178 196.716 280.836 198.863 280.119 201.218Z\",\n    fill: \"white\"\n  })), _path60 || (_path60 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M294.335 221.563C293.956 221.563 293.574 221.549 293.191 221.52C289.012 221.203 285.174 219.22 282.384 215.935C278.808 211.766 277.584 206.016 279.193 200.93C279.983 198.342 281.472 196.046 283.501 194.29C288.297 190.116 295.32 189.63 300.972 193.083C302.443 193.954 303.768 195.076 304.899 196.411C310.472 202.971 309.971 212.681 303.783 218.054C301.154 220.338 297.835 221.563 294.335 221.563ZM292.935 192.732C289.969 192.732 287.072 193.752 284.771 195.754C283.016 197.273 281.728 199.259 281.046 201.5C281.045 201.504 281.044 201.507 281.043 201.51C279.632 205.963 280.711 211.008 283.858 214.677C286.313 217.567 289.679 219.309 293.337 219.587C296.732 219.845 299.991 218.78 302.511 216.591C307.902 211.91 308.31 203.42 303.421 197.665C302.428 196.494 301.268 195.512 299.973 194.744C297.767 193.396 295.328 192.732 292.935 192.732Z\",\n    fill: \"#283034\"\n  })), _path61 || (_path61 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M308.725 215.249C312.325 212.099 314.672 206.402 312.225 200.017C308.803 191.089 295.613 186.661 292.013 189.811C288.413 192.961 296.85 213.375 299.959 217.054C303.069 220.732 305.125 218.399 308.725 215.249Z\",\n    fill: \"#283034\"\n  })), _path62 || (_path62 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M280.121 199.086C284.882 200.173 301.702 195.318 305.789 191.93C300.247 184.55 288.247 187.03 284.004 191.38C280.931 194.53 280.489 196.249 280.121 199.086Z\",\n    fill: \"#283034\"\n  })), _path63 || (_path63 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M290.621 219.906C288.324 219.039 285.799 218.18 285.799 218.18C285.162 218.837 284.044 223.859 284.044 223.859C284.044 223.859 277.395 234.654 279.601 236.257C285.61 240.625 297.864 232.574 297.864 232.574L299.451 220.554C299.451 220.554 292.916 220.773 290.621 219.906Z\",\n    fill: \"white\"\n  })), _path64 || (_path64 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M284.114 238.515C282.255 238.516 280.494 238.102 279.032 237.039C277.628 236.018 277.965 233.552 280.123 229.04C281.352 226.468 282.772 224.089 283.135 223.492C283.67 221.107 284.435 218.197 285.104 217.507C285.364 217.239 285.755 217.145 286.109 217.265C286.135 217.274 288.676 218.139 290.962 219.002C292.697 219.657 297.654 219.646 299.418 219.587C299.704 219.578 299.976 219.694 300.167 219.904C300.358 220.114 300.446 220.398 300.409 220.68L298.822 232.7C298.785 232.978 298.629 233.227 298.394 233.381C297.989 233.648 290.486 238.515 284.114 238.515ZM286.271 219.366C285.906 220.349 285.37 222.349 284.987 224.069C284.963 224.174 284.923 224.274 284.866 224.366C284.851 224.39 283.324 226.877 282.007 229.582C279.587 234.555 280.178 235.481 280.184 235.49C285.024 239.005 294.932 233.249 296.964 231.997L298.345 221.544C296.295 221.568 292.159 221.52 290.279 220.811C288.793 220.25 287.195 219.687 286.271 219.366Z\",\n    fill: \"#283034\"\n  })), _path65 || (_path65 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M309.848 216.766C311.625 215.205 311.8 212.435 310.236 210.579C308.673 208.724 305.963 208.484 304.185 210.045C302.405 211.603 302.232 214.373 303.795 216.229C305.361 218.087 308.07 218.327 309.848 216.766Z\",\n    fill: \"white\"\n  })), _path66 || (_path66 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M307.12 218.763C306.989 218.763 306.858 218.758 306.727 218.748C305.3 218.641 303.996 217.967 303.056 216.852C301.157 214.597 301.379 211.218 303.549 209.318C304.589 208.405 305.925 207.96 307.309 208.063C308.735 208.17 310.037 208.843 310.975 209.957C312.873 212.208 312.653 215.589 310.486 217.492C309.545 218.319 308.362 218.763 307.12 218.763ZM306.918 209.981C306.145 209.981 305.409 210.257 304.823 210.772C303.439 211.983 303.31 214.152 304.535 215.606C305.137 216.321 305.967 216.752 306.872 216.82C307.733 216.885 308.563 216.608 309.21 216.039C310.593 214.825 310.721 212.655 309.497 211.202C308.896 210.488 308.067 210.058 307.164 209.99C307.082 209.984 307 209.981 306.918 209.981Z\",\n    fill: \"#283034\"\n  })), _path67 || (_path67 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M317.592 196.389C314.654 199.416 309.817 199.489 306.79 196.551C303.762 193.612 303.689 188.776 306.628 185.748C309.566 182.72 314.402 182.648 317.43 185.586C320.458 188.524 320.531 193.361 317.592 196.389Z\",\n    fill: \"#283034\"\n  })), _path68 || (_path68 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M318.259 239.254C314.552 233.389 298.255 227.828 298.255 227.828C298.255 227.828 284.27 236.561 279.6 236.257C276.927 236.147 282.089 226.777 282.089 226.777C282.089 226.777 277.952 224.518 267.788 231.891C259.107 243.304 253.889 248.983 252.486 259.978C252.228 264.169 254.709 274.305 255.532 278.864C257.715 290.958 258.471 307.529 258.471 307.529L314.435 308.879C314.434 308.879 328.364 255.241 318.259 239.254Z\",\n    fill: \"white\"\n  })), _path69 || (_path69 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M314.435 309.846C314.427 309.846 314.419 309.846 314.411 309.846L258.447 308.496C257.939 308.483 257.528 308.08 257.505 307.573C257.497 307.408 256.727 290.926 254.581 279.035C254.378 277.911 254.077 276.464 253.729 274.788C252.655 269.623 251.319 263.194 251.521 259.918C251.522 259.897 251.524 259.876 251.527 259.855C252.812 249.781 257.153 244.14 264.346 234.793C265.196 233.688 266.087 232.53 267.018 231.306C267.075 231.231 267.143 231.164 267.22 231.109C277.58 223.594 282.074 225.667 282.552 225.928C282.778 226.051 282.945 226.259 283.017 226.506C283.089 226.753 283.06 227.018 282.936 227.243C281.054 230.66 279.65 234.285 279.792 235.298C283.493 235.386 293.971 229.363 297.743 227.008C297.99 226.854 298.292 226.819 298.567 226.913C299.246 227.145 315.231 232.654 319.076 238.738C323.393 245.568 324.072 259.517 321.093 280.199C318.891 295.484 315.405 308.988 315.37 309.122C315.259 309.549 314.874 309.846 314.435 309.846ZM259.39 306.585L313.686 307.894C315.302 301.393 326.575 254.218 317.442 239.77C314.283 234.772 300.94 229.812 298.371 228.893C295.798 230.478 284.557 237.23 279.827 237.23C279.728 237.23 279.632 237.227 279.538 237.221C278.937 237.197 278.433 236.896 278.14 236.377C277.747 235.68 277.523 234.361 279.285 230.308C279.763 229.209 280.269 228.18 280.647 227.44C278.968 227.321 275.105 227.804 268.471 232.59C267.569 233.775 266.705 234.898 265.878 235.972C258.893 245.05 254.674 250.532 253.449 260.067C253.274 263.098 254.631 269.625 255.622 274.395C255.973 276.084 256.276 277.542 256.484 278.691C258.362 289.101 259.196 302.953 259.39 306.585Z\",\n    fill: \"#283034\"\n  })), _path70 || (_path70 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M313.231 236.264C299.831 240.838 320.826 274.42 323.211 284.154C323.211 286.627 288.158 301.301 284.731 311.495C278.7 329.436 344.749 303.437 348.02 296.891C354.417 284.087 328.947 230.898 313.231 236.264Z\",\n    fill: \"white\"\n  })), _path71 || (_path71 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M291.573 318.673C289.535 318.673 287.761 318.43 286.396 317.863C284.815 317.206 282.376 315.465 283.815 311.188C286.153 304.232 301.428 295.862 312.582 289.749C316.663 287.513 321.259 284.994 322.182 284.038C321.481 281.488 319.602 277.375 317.441 272.646C312.124 261.008 305.507 246.525 308.635 239.262C309.456 237.355 310.897 236.039 312.919 235.349C317.552 233.767 323.19 236.581 329.224 243.486C335.333 250.476 341.453 261.207 345.596 272.189C349.928 283.674 351.127 292.835 348.885 297.323C347.201 300.692 333.55 307.09 320.935 311.668C314.473 314.013 300.506 318.672 291.573 318.673ZM315.565 236.848C314.881 236.848 314.206 236.952 313.544 237.178C312.039 237.692 311.015 238.623 310.411 240.026C307.622 246.502 314.314 261.148 319.2 271.843C321.502 276.882 323.49 281.234 324.149 283.925C324.168 284 324.177 284.077 324.177 284.155C324.177 285.475 322.293 286.632 313.511 291.445C303.25 297.068 287.745 305.565 285.647 311.804C284.691 314.646 285.942 315.581 287.138 316.078C288.185 316.513 289.654 316.725 291.483 316.725C297.684 316.726 308.041 314.291 320.276 309.851C335.027 304.497 346.083 298.604 347.155 296.459C349.128 292.511 347.869 283.693 343.787 272.872C339.722 262.094 333.733 251.584 327.768 244.758C324.472 240.987 319.873 236.848 315.565 236.848Z\",\n    fill: \"#283034\"\n  })), _path72 || (_path72 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.126 322.614C258.226 321.02 271.969 314.763 273.811 314.173C272.276 314.517 258.215 318.888 258.474 317.38C258.658 316.309 276.44 310.179 276.44 310.179C276.44 310.179 268.422 313.151 268.386 310.645C268.369 309.47 282.176 306.607 282.176 306.607C282.176 306.607 289.696 305.478 293.027 303.49C293.356 303.861 295.846 311.706 298.848 315.768C288.658 320.077 278.979 321.475 278.979 321.475C278.979 321.475 270.006 328.003 268.828 326.976C267.771 326.054 275.62 319.594 275.62 319.594C275.62 319.594 262.882 325.813 262.277 324.639C261.435 323.005 274.118 316.836 274.118 316.836C274.118 316.836 259.511 323.294 259.126 322.614Z\",\n    fill: \"white\"\n  })), _path73 || (_path73 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M269.176 327.963C268.766 327.963 268.481 327.837 268.251 327.637C267.989 327.408 267.848 327.083 267.853 326.719C267.862 326.116 268.228 325.22 270.624 322.879C270.261 323.041 269.892 323.202 269.523 323.362C267.605 324.19 266.046 324.801 264.889 325.179C263.392 325.669 262.005 326.027 261.498 325.041C261.386 324.824 261.285 324.47 261.436 324.014C261.574 323.6 261.989 323.111 262.595 322.579C262.36 322.667 262.137 322.749 261.926 322.824C259.746 323.605 258.814 323.844 258.363 323.045C258.177 322.716 258.157 322.324 258.307 321.941C258.466 321.536 258.865 320.515 264.162 317.697C259.751 318.77 258.51 318.716 257.948 318.212C257.673 317.965 257.546 317.599 257.61 317.232C257.717 316.606 257.81 316.066 267.22 312.557C267.598 312.416 267.976 312.276 268.352 312.137C268.321 312.119 268.291 312.099 268.262 312.079C267.785 311.752 267.517 311.248 267.509 310.658C267.496 309.769 267.998 309.102 275.062 307.336C278.489 306.479 281.964 305.757 281.998 305.75C282.014 305.747 282.03 305.744 282.046 305.741C282.119 305.73 289.434 304.613 292.577 302.738C292.939 302.522 293.403 302.594 293.682 302.909C293.863 303.113 293.957 303.341 294.529 304.832C295.538 307.462 297.415 312.356 299.553 315.248C299.712 315.464 299.764 315.741 299.693 316C299.622 316.259 299.437 316.471 299.189 316.576C289.851 320.525 280.821 322.071 279.321 322.309C278.744 322.723 276.819 324.091 274.812 325.353C271.718 327.299 270.118 327.963 269.176 327.963ZM275.62 318.717C275.909 318.717 276.191 318.861 276.358 319.119C276.598 319.493 276.52 319.988 276.177 320.271C273.822 322.209 271.255 324.595 270.15 325.941C271.933 325.179 275.49 322.929 278.463 320.766C278.578 320.682 278.712 320.628 278.853 320.607C278.946 320.594 287.917 319.266 297.511 315.373C295.509 312.281 293.833 307.912 292.892 305.459C292.793 305.201 292.693 304.939 292.602 304.707C288.994 306.431 282.847 307.392 282.331 307.471C277.283 308.518 271.528 309.964 269.656 310.771C270.594 310.893 272.775 310.477 275.04 309.739C275.729 309.497 276.141 309.355 276.154 309.351C276.608 309.194 277.104 309.432 277.266 309.885C277.427 310.337 277.195 310.835 276.745 311.002C276.439 311.115 275.989 311.276 275.451 311.451C270.572 313.152 265.576 315.003 262.416 316.309C265.443 315.627 269.542 314.459 271.313 313.954C272.499 313.616 273.283 313.393 273.619 313.318C274.077 313.215 274.534 313.491 274.657 313.943C274.78 314.396 274.525 314.865 274.078 315.008C273.258 315.271 269.849 316.765 266.582 318.418C264.512 319.464 263.085 320.276 262.101 320.893C264.985 319.809 269.554 317.896 273.763 316.034C274.2 315.841 274.712 316.033 274.913 316.467C275.114 316.901 274.931 317.415 274.501 317.624C270.425 319.607 265.931 322.127 264.019 323.624C266.395 322.878 271.142 320.804 275.235 318.806C275.359 318.745 275.49 318.717 275.62 318.717Z\",\n    fill: \"#283034\"\n  })), _path74 || (_path74 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.169 296.891H182.223V350.226H266.169V296.891Z\",\n    fill: \"white\"\n  })), _path75 || (_path75 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.169 351.064H182.223C181.76 351.064 181.385 350.689 181.385 350.226V296.891C181.385 296.428 181.76 296.053 182.223 296.053H266.169C266.632 296.053 267.007 296.428 267.007 296.891V350.226C267.007 350.689 266.632 351.064 266.169 351.064ZM183.061 349.388H265.331V297.729H183.061V349.388Z\",\n    fill: \"#283034\"\n  })), _path76 || (_path76 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M192.753 308.225H255.639V304.693H192.753V308.225Z\",\n    fill: \"#D2DADE\"\n  })), _path77 || (_path77 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M192.753 314.593H255.639V311.061H192.753V314.593Z\",\n    fill: \"#D2DADE\"\n  })), _path78 || (_path78 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M192.753 321.161H255.639V317.629H192.753V321.161Z\",\n    fill: \"#D2DADE\"\n  })), _path79 || (_path79 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M192.753 328.759H255.639V325.228H192.753V328.759Z\",\n    fill: \"#D2DADE\"\n  })), _path80 || (_path80 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M192.753 335.129H255.639V331.597H192.753V335.129Z\",\n    fill: \"#D2DADE\"\n  })), _path81 || (_path81 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M192.753 341.696H255.639V338.164H192.753V341.696Z\",\n    fill: \"#D2DADE\"\n  })), _path82 || (_path82 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M163.723 206.495H115.117V278.631H163.723V206.495Z\",\n    fill: \"white\"\n  })), _path83 || (_path83 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M163.723 279.469H115.117C114.654 279.469 114.279 279.094 114.279 278.631V206.495C114.279 206.032 114.654 205.657 115.117 205.657H163.723C164.185 205.657 164.561 206.032 164.561 206.495V278.631C164.561 279.094 164.186 279.469 163.723 279.469ZM115.955 277.793H162.885V207.333H115.955V277.793Z\",\n    fill: \"#283034\"\n  })), _path84 || (_path84 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.721 217.846H139.161V214.315H103.721V217.846Z\",\n    fill: \"#D2DADE\"\n  })), _path85 || (_path85 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.721 224.215H139.161V220.683H103.721V224.215Z\",\n    fill: \"#D2DADE\"\n  })), _path86 || (_path86 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.721 230.783H139.161V227.251H103.721V230.783Z\",\n    fill: \"#D2DADE\"\n  })), _path87 || (_path87 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M122.207 238.381H157.647V234.85H122.207V238.381Z\",\n    fill: \"#D2DADE\"\n  })), _path88 || (_path88 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M122.207 244.75H157.647V241.218H122.207V244.75Z\",\n    fill: \"#D2DADE\"\n  })), _path89 || (_path89 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M122.207 251.318H157.647V247.786H122.207V251.318Z\",\n    fill: \"#D2DADE\"\n  })), _path90 || (_path90 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M722.339 158.04H673.733V230.176H722.339V158.04Z\",\n    fill: \"white\"\n  })), _path91 || (_path91 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M722.339 231.014H673.733C673.27 231.014 672.895 230.638 672.895 230.176V158.04C672.895 157.577 673.27 157.202 673.733 157.202H722.339C722.801 157.202 723.177 157.577 723.177 158.04V230.176C723.177 230.639 722.801 231.014 722.339 231.014ZM674.571 229.338H721.501V158.878H674.571V229.338Z\",\n    fill: \"#283034\"\n  })), _path92 || (_path92 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.993 171.751H702.433V168.219H666.993V171.751Z\",\n    fill: \"#D2DADE\"\n  })), _path93 || (_path93 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.993 178.12H702.432V174.588H666.993V178.12Z\",\n    fill: \"#D2DADE\"\n  })), _path94 || (_path94 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.993 184.687H702.432V181.155H666.993V184.687Z\",\n    fill: \"#D2DADE\"\n  })), _path95 || (_path95 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.993 192.286H702.433V188.754H666.993V192.286Z\",\n    fill: \"#D2DADE\"\n  })), _path96 || (_path96 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.993 198.655H702.432V195.123H666.993V198.655Z\",\n    fill: \"#D2DADE\"\n  })), _path97 || (_path97 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.993 205.222H702.432V201.69H666.993V205.222Z\",\n    fill: \"#D2DADE\"\n  })), _path98 || (_path98 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M765.488 251.472H671.692V304.807H765.488V251.472Z\",\n    fill: \"#D2DADE\"\n  })), _path99 || (_path99 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M947.67 179.511H863.724V232.846H947.67V179.511Z\",\n    fill: \"white\"\n  })), _path100 || (_path100 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M947.67 233.684H863.724C863.261 233.684 862.886 233.309 862.886 232.847V179.511C862.886 179.048 863.261 178.673 863.724 178.673H947.67C948.133 178.673 948.508 179.048 948.508 179.511V232.847C948.508 233.309 948.133 233.684 947.67 233.684ZM864.562 232.009H946.832V180.349H864.562V232.009Z\",\n    fill: \"#283034\"\n  })), _path101 || (_path101 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M874.253 190.845H937.139V187.313H874.253V190.845Z\",\n    fill: \"#D2DADE\"\n  })), _path102 || (_path102 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M874.253 197.214H937.139V193.682H874.253V197.214Z\",\n    fill: \"#D2DADE\"\n  })), _path103 || (_path103 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M874.253 203.781H937.139V200.249H874.253V203.781Z\",\n    fill: \"#D2DADE\"\n  })), _path104 || (_path104 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M874.253 211.38H937.139V207.848H874.253V211.38Z\",\n    fill: \"#D2DADE\"\n  })), _path105 || (_path105 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M874.253 217.749H937.139V214.217H874.253V217.749Z\",\n    fill: \"#D2DADE\"\n  })), _path106 || (_path106 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M874.253 224.316H937.139V220.784H874.253V224.316Z\",\n    fill: \"#D2DADE\"\n  })), _path107 || (_path107 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M777.212 449.296L771.425 493.776L732.277 493.613C732.277 493.613 730.41 491.162 733.729 489.58C736.097 488.451 738.119 488.631 740.406 487.48C742.693 486.33 747.372 450.946 747.372 450.946L777.212 449.296Z\",\n    fill: \"white\"\n  })), _path108 || (_path108 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M771.425 494.777C771.424 494.777 771.422 494.777 771.421 494.777L732.272 494.614C731.962 494.612 731.669 494.467 731.48 494.219C731.376 494.082 730.47 492.835 730.839 491.309C731.105 490.213 731.932 489.328 733.298 488.676C734.566 488.072 735.717 487.818 736.83 487.572C737.864 487.344 738.844 487.128 739.858 486.635C741.217 484.817 744.227 467.091 746.379 450.815C746.443 450.338 746.836 449.974 747.316 449.947L777.156 448.296C777.455 448.283 777.742 448.397 777.945 448.615C778.148 448.833 778.243 449.13 778.204 449.425L772.418 493.905C772.353 494.404 771.928 494.777 771.425 494.777ZM732.87 492.614L770.546 492.771L776.063 450.362L748.254 451.9C747.928 454.305 746.921 461.614 745.735 468.942C742.742 487.425 741.607 487.996 740.856 488.374C739.583 489.015 738.402 489.275 737.261 489.527C736.212 489.759 735.221 489.977 734.159 490.483C733.617 490.742 732.938 491.175 732.788 491.768C732.71 492.075 732.779 492.382 732.87 492.614Z\",\n    fill: \"#283034\"\n  })), _path109 || (_path109 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M730.707 494.277L773.036 494.472L772.572 479.01C765.628 479.658 759.256 487.657 752.241 485.794C748.215 484.75 744.68 480.48 740.809 480.645C740.517 484.095 740.111 486.469 739.51 486.825C737.032 488.205 734.838 488.018 732.28 489.353C728.682 491.312 730.707 494.277 730.707 494.277Z\",\n    fill: \"#283034\"\n  })), _path110 || (_path110 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M778.101 468.541H742.879L757.966 307.771L796.588 306.248L778.101 468.541Z\",\n    fill: \"white\"\n  })), _path111 || (_path111 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M778.101 469.377H742.879C742.644 469.377 742.419 469.278 742.261 469.104C742.102 468.93 742.025 468.697 742.047 468.462L757.134 307.693C757.173 307.276 757.515 306.952 757.933 306.936L796.556 305.412C796.791 305.401 797.035 305.5 797.201 305.679C797.367 305.858 797.447 306.1 797.419 306.343L778.932 468.635C778.884 469.058 778.526 469.377 778.101 469.377ZM743.798 467.704H777.355L795.647 307.122L758.73 308.578L743.798 467.704Z\",\n    fill: \"#283034\"\n  })), _path112 || (_path112 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M746.278 469.036C746.261 469.036 746.243 469.035 746.226 469.034C745.954 469.006 745.756 468.762 745.784 468.49L761.799 311.577C761.827 311.305 762.076 311.107 762.343 311.134C762.615 311.162 762.813 311.405 762.786 311.678L746.77 468.591C746.744 468.846 746.528 469.036 746.278 469.036Z\",\n    fill: \"#283034\"\n  })), _path113 || (_path113 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M751.812 469.036C751.795 469.036 751.777 469.035 751.761 469.034C751.488 469.006 751.29 468.762 751.318 468.49L767.333 311.577C767.361 311.305 767.609 311.107 767.877 311.134C768.149 311.162 768.348 311.405 768.32 311.678L752.304 468.591C752.278 468.846 752.062 469.036 751.812 469.036Z\",\n    fill: \"#283034\"\n  })), _path114 || (_path114 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M758.122 469.036C758.105 469.036 758.088 469.035 758.071 469.034C757.798 469.006 757.6 468.762 757.628 468.49L773.643 311.577C773.671 311.305 773.92 311.107 774.187 311.134C774.459 311.162 774.658 311.405 774.63 311.678L758.614 468.591C758.589 468.846 758.373 469.036 758.122 469.036Z\",\n    fill: \"#283034\"\n  })), _path115 || (_path115 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M763.716 469.036C763.699 469.036 763.681 469.035 763.665 469.034C763.392 469.006 763.194 468.762 763.222 468.49L779.237 311.577C779.265 311.305 779.515 311.107 779.781 311.134C780.053 311.162 780.252 311.405 780.224 311.678L764.208 468.591C764.182 468.846 763.967 469.036 763.716 469.036Z\",\n    fill: \"#283034\"\n  })), _path116 || (_path116 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M770.069 469.036C770.052 469.036 770.035 469.035 770.018 469.034C769.746 469.006 769.548 468.762 769.575 468.49L785.591 311.577C785.619 311.305 785.867 311.107 786.135 311.134C786.407 311.162 786.605 311.405 786.578 311.678L770.562 468.591C770.536 468.846 770.32 469.036 770.069 469.036Z\",\n    fill: \"#283034\"\n  })), _path117 || (_path117 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M775.379 469.036C775.362 469.036 775.345 469.035 775.328 469.034C775.056 469.006 774.858 468.762 774.885 468.49L790.901 311.577C790.929 311.305 791.178 311.107 791.445 311.134C791.717 311.162 791.915 311.405 791.887 311.678L775.872 468.591C775.846 468.846 775.63 469.036 775.379 469.036Z\",\n    fill: \"#283034\"\n  })), _path118 || (_path118 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M797.939 447.68L806.063 493.776L845.211 493.612C845.211 493.612 847.078 491.162 843.76 489.58C841.392 488.451 839.368 488.63 837.082 487.48C834.795 486.329 829.825 449.444 829.825 449.444L797.939 447.68Z\",\n    fill: \"white\"\n  })), _path119 || (_path119 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M806.063 494.777C805.578 494.777 805.162 494.428 805.078 493.949L796.953 447.854C796.9 447.553 796.988 447.245 797.19 447.016C797.393 446.787 797.687 446.666 797.995 446.681L829.881 448.444C830.36 448.471 830.753 448.834 830.817 449.31C830.829 449.398 832.018 458.198 833.478 467.215C836.077 483.27 837.28 486.133 837.636 486.637C838.649 487.129 839.626 487.344 840.658 487.572C841.771 487.818 842.922 488.072 844.19 488.676C845.556 489.327 846.383 490.213 846.648 491.308C847.018 492.835 846.112 494.082 846.008 494.219C845.819 494.467 845.526 494.612 845.215 494.613L806.067 494.777C806.066 494.777 806.065 494.777 806.063 494.777ZM799.144 448.749L806.903 492.771L844.619 492.614C844.708 492.382 844.778 492.076 844.7 491.768C844.55 491.175 843.872 490.742 843.329 490.483C842.268 489.977 841.276 489.759 840.227 489.527C839.086 489.275 837.906 489.015 836.632 488.374C835.882 487.997 834.747 487.426 831.609 468.192C830.357 460.522 829.286 452.866 828.946 450.398L799.144 448.749Z\",\n    fill: \"#283034\"\n  })), _path120 || (_path120 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M846.782 494.277L804.453 494.472L801.81 479.187C808.754 479.835 818.233 487.656 825.248 485.794C829.274 484.749 832.54 480.701 836.41 480.867C836.702 484.316 839.064 486.474 839.664 486.83C842.143 488.21 842.65 488.018 845.209 489.353C848.806 491.312 846.782 494.277 846.782 494.277Z\",\n    fill: \"#283034\"\n  })), _path121 || (_path121 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M779.418 294.897L798.927 469.072L837.56 468.838L819.146 297.099L779.418 294.897Z\",\n    fill: \"white\"\n  })), _path122 || (_path122 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M798.927 469.908C798.501 469.908 798.143 469.589 798.096 469.165L778.587 294.991C778.56 294.746 778.641 294.502 778.81 294.323C778.979 294.144 779.22 294.051 779.464 294.063L819.192 296.264C819.601 296.287 819.934 296.603 819.977 297.01L838.392 468.749C838.417 468.984 838.341 469.219 838.184 469.395C838.026 469.572 837.802 469.673 837.565 469.674L798.932 469.909C798.93 469.908 798.928 469.908 798.927 469.908ZM780.359 295.787L799.674 468.232L836.63 468.007L818.39 297.895L780.359 295.787Z\",\n    fill: \"#283034\"\n  })), _path123 || (_path123 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M831.464 469.036C831.213 469.036 830.998 468.846 830.972 468.591L814.956 311.678C814.928 311.406 815.127 311.162 815.399 311.134C815.666 311.105 815.915 311.305 815.943 311.577L831.958 468.49C831.986 468.762 831.787 469.006 831.515 469.034C831.498 469.036 831.481 469.036 831.464 469.036Z\",\n    fill: \"#283034\"\n  })), _path124 || (_path124 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M825.93 469.036C825.679 469.036 825.464 468.846 825.438 468.591L809.422 311.678C809.394 311.406 809.593 311.162 809.865 311.134C810.133 311.105 810.381 311.305 810.409 311.577L826.424 468.49C826.452 468.762 826.254 469.006 825.981 469.034C825.964 469.036 825.947 469.036 825.93 469.036Z\",\n    fill: \"#283034\"\n  })), _path125 || (_path125 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M819.62 469.036C819.369 469.036 819.154 468.846 819.127 468.591L803.112 311.678C803.084 311.406 803.282 311.162 803.555 311.134C803.824 311.105 804.07 311.305 804.098 311.577L820.114 468.49C820.142 468.762 819.943 469.006 819.671 469.034C819.654 469.036 819.637 469.036 819.62 469.036Z\",\n    fill: \"#283034\"\n  })), _path126 || (_path126 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M814.026 469.036C813.775 469.036 813.56 468.846 813.534 468.591L797.518 311.678C797.49 311.406 797.689 311.162 797.961 311.134C798.229 311.105 798.477 311.305 798.505 311.577L814.52 468.49C814.548 468.762 814.35 469.006 814.077 469.034C814.06 469.036 814.043 469.036 814.026 469.036Z\",\n    fill: \"#283034\"\n  })), _path127 || (_path127 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M807.673 469.036C807.422 469.036 807.206 468.846 807.18 468.591L791.165 311.678C791.137 311.406 791.335 311.162 791.608 311.134C791.875 311.105 792.123 311.305 792.151 311.577L808.167 468.49C808.195 468.762 807.996 469.006 807.724 469.034C807.707 469.036 807.69 469.036 807.673 469.036Z\",\n    fill: \"#283034\"\n  })), _path128 || (_path128 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M802.362 469.036C802.112 469.036 801.896 468.846 801.87 468.591L785.854 311.678C785.827 311.406 786.025 311.162 786.297 311.134C786.564 311.105 786.813 311.305 786.841 311.577L802.857 468.49C802.884 468.762 802.686 469.006 802.414 469.034C802.396 469.036 802.379 469.036 802.362 469.036Z\",\n    fill: \"#283034\"\n  })), _path129 || (_path129 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M768.781 213.506C769.769 214.787 787.255 215.237 787.255 215.237C788.728 215.459 790.596 206.956 788.136 197.72C786.912 198.778 775.356 170.677 768.781 213.506Z\",\n    fill: \"#283034\"\n  })), _path130 || (_path130 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M728.642 220.637C728.642 220.637 719.35 197.905 716.866 196.324C713.826 194.389 720.876 213.72 720.876 213.72L720.784 217.494C720.784 217.494 713.054 207.184 711.803 209.853C710.978 211.615 717.676 226.545 717.676 226.545C717.676 226.545 715.763 280.05 730.918 283.644C747.685 287.62 776.429 240.713 776.429 240.713L769.143 224.269L738.657 255.638L728.642 220.637Z\",\n    fill: \"white\"\n  })), _path131 || (_path131 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M733.027 284.68C732.234 284.68 731.471 284.593 730.735 284.419C724.085 282.841 719.74 272.549 717.823 253.828C716.507 240.984 716.825 228.373 716.875 226.702C716.531 225.928 715.063 222.606 713.691 219.154C710.422 210.929 710.852 210.01 711.084 209.516C711.327 208.997 711.758 208.681 712.297 208.625C713.119 208.539 714.511 208.943 717.993 212.841C718.757 213.696 719.469 214.55 720.044 215.26L720.078 213.851C719.803 213.09 718.481 209.401 717.312 205.644C716.542 203.167 715.987 201.14 715.662 199.621C715.148 197.217 715.191 196.135 715.822 195.629C716.012 195.476 716.537 195.171 717.294 195.653C719.862 197.286 727.811 216.501 729.379 220.336C729.39 220.363 729.399 220.39 729.407 220.418L739.045 254.098L768.573 223.714C768.757 223.525 769.022 223.439 769.284 223.486C769.544 223.532 769.764 223.705 769.871 223.946L777.157 240.391C777.263 240.63 777.245 240.906 777.108 241.129C777.036 241.247 769.786 253.033 760.575 264.177C749.315 277.799 740.065 284.679 733.027 284.68ZM712.527 210.212C712.33 211.596 715.332 219.375 718.402 226.22C718.452 226.331 718.476 226.452 718.471 226.574C718.466 226.707 718.011 240.067 719.407 253.681C721.223 271.393 725.267 281.487 731.103 282.871C737.643 284.422 747.405 277.61 759.339 263.175C767.589 253.196 774.257 242.691 775.532 240.651L768.893 225.668L739.228 256.193C739.03 256.396 738.74 256.478 738.464 256.41C738.189 256.341 737.971 256.13 737.893 255.857L727.89 220.897C723.814 210.93 718.846 199.98 716.902 197.47C717.117 199.95 719.346 207.201 721.624 213.448C721.658 213.541 721.675 213.64 721.672 213.74L721.58 217.514C721.572 217.853 721.35 218.149 721.027 218.253C720.705 218.356 720.352 218.243 720.148 217.972C720.133 217.952 718.581 215.886 716.79 213.884C713.89 210.639 712.794 210.254 712.527 210.212Z\",\n    fill: \"#283034\"\n  })), _path132 || (_path132 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M791.025 209.556C787.789 210.166 785.142 210.893 785.142 210.893C785.142 211.087 784.72 219.527 784.72 219.527L778.43 221.233L780.792 241.709L806.253 221.548L800.176 219.765L798.03 205.233C798.03 205.233 794.261 208.942 791.025 209.556Z\",\n    fill: \"white\"\n  })), _path133 || (_path133 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M780.792 242.637C780.672 242.637 780.551 242.613 780.437 242.566C780.126 242.437 779.909 242.15 779.871 241.815L777.509 221.339C777.456 220.884 777.745 220.458 778.188 220.338L783.828 218.808C783.991 215.526 784.209 211.121 784.214 210.88C784.224 210.471 784.502 210.108 784.896 209.999C785.006 209.969 787.617 209.254 790.854 208.644C793.778 208.089 797.343 204.607 797.379 204.572C797.628 204.328 797.993 204.244 798.325 204.354C798.656 204.465 798.897 204.753 798.948 205.098L801.008 219.042L806.515 220.658C806.847 220.755 807.098 221.03 807.164 221.371C807.23 221.711 807.101 222.06 806.829 222.275L781.368 242.436C781.202 242.568 780.998 242.637 780.792 242.637ZM779.444 221.919L781.523 239.947L804.272 221.933L799.915 220.655C799.568 220.553 799.312 220.258 799.259 219.9L797.363 207.069C795.908 208.276 793.473 210.035 791.198 210.467C791.198 210.467 791.198 210.467 791.197 210.467C788.97 210.887 787.011 211.367 786.038 211.617C785.959 213.312 785.749 217.533 785.647 219.573C785.627 219.974 785.351 220.317 784.964 220.422L779.444 221.919Z\",\n    fill: \"#283034\"\n  })), _path134 || (_path134 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M769.313 222.635L779.124 220.054L783.32 239.979L805.615 220.162C805.615 220.162 812.525 221.004 817.18 223.967C821.839 226.926 820.461 233.337 820.461 233.337L820.812 292.813L823.457 311.962L753.409 309.989L754.872 299.54C754.872 299.54 754.642 267.326 756.444 256.561C757.963 247.484 769.313 222.635 769.313 222.635Z\",\n    fill: \"#283034\"\n  })), _path135 || (_path135 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M801.954 203.683C805.223 195.996 802.011 187.083 794.78 183.774C787.549 180.461 779.038 184.007 775.769 191.693C772.502 199.377 775.714 208.289 782.944 211.602C790.175 214.912 798.687 211.366 801.954 203.683Z\",\n    fill: \"white\"\n  })), _path136 || (_path136 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M788.603 213.772C786.539 213.772 784.486 213.329 782.557 212.446C774.886 208.931 771.458 199.459 774.915 191.331C776.649 187.251 779.8 184.154 783.786 182.61C787.518 181.165 791.559 181.278 795.165 182.931C802.837 186.442 806.265 195.914 802.807 204.046C801.074 208.123 797.925 211.218 793.94 212.763C792.203 213.436 790.399 213.772 788.603 213.772ZM789.116 183.46C787.548 183.46 785.973 183.753 784.456 184.34C780.941 185.702 778.159 188.442 776.622 192.057C773.555 199.269 776.564 207.659 783.329 210.759C786.477 212.2 790.007 212.297 793.269 211.033C796.783 209.671 799.564 206.932 801.1 203.32C804.168 196.104 801.159 187.715 794.393 184.618C792.71 183.847 790.918 183.46 789.116 183.46Z\",\n    fill: \"#283034\"\n  })), _path137 || (_path137 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M798.836 199.511C798.965 200.082 794.518 194.478 793.92 193.274C790.292 192.092 776.472 192.916 776.031 187.536C775.886 185.787 785.733 172.416 802.085 178.632C825.835 187.66 821.779 216.536 819.079 216.129C819.079 216.129 801.354 217.181 800.366 215.901C795.598 206.277 800.545 204.3 800.545 204.3C800.545 204.3 805.07 201.924 805.208 200.215C805.571 195.694 798.127 196.381 798.836 199.511Z\",\n    fill: \"#283034\"\n  })), _path138 || (_path138 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M816.282 224.988C801.449 222.865 824.242 281.181 833.572 287.699C842.432 293.888 861.883 304.871 861.883 304.871C861.883 304.871 869.087 312.411 869.857 310.947C870.548 309.634 866.503 303.795 866.503 303.795C866.503 303.795 881.542 314.456 882.937 314.533C885.047 314.651 875.68 305.335 875.68 305.335C875.68 305.335 886.819 314.534 887.899 313.38C889.855 311.289 877.79 303.31 877.79 303.31C877.79 303.31 888.955 311.503 889.857 309.133C890.142 308.384 879.646 301.116 879.646 301.116C879.646 301.116 888.116 306.264 888.675 304.323C889.053 303.013 879.562 297.994 879.562 297.994L868.592 292.003C868.592 292.003 849.104 277.891 845.976 272.763C838.654 260.757 828.888 226.792 816.282 224.988Z\",\n    fill: \"white\"\n  })), _path139 || (_path139 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M882.973 315.462C882.944 315.462 882.915 315.461 882.886 315.459C882.463 315.436 881.756 315.397 873.675 309.903C872.253 308.936 870.848 307.966 869.634 307.122C871.081 309.82 870.999 310.769 870.678 311.379C870.485 311.747 870.135 311.991 869.717 312.049C869 312.149 867.874 311.822 864.538 308.765C863.025 307.377 861.675 305.992 861.308 305.612C859.659 304.678 841.475 294.351 833.04 288.459C828.448 285.251 821.673 271.44 817.321 259.965C815.129 254.184 808.208 234.731 811.208 227.131C812.139 224.774 813.938 223.716 816.413 224.069C825.791 225.412 833.155 242.361 839.651 257.315C842.211 263.206 844.628 268.771 846.768 272.279C849.69 277.071 868.02 290.44 869.088 291.217L880.006 297.18C880.019 297.186 882.42 298.458 884.743 299.875C889.161 302.569 889.847 303.607 889.567 304.579C889.436 305.032 889.117 305.378 888.667 305.553C888.348 305.678 887.934 305.698 887.456 305.639C888.046 306.095 888.554 306.5 888.975 306.851C890.39 308.031 891.024 308.672 890.724 309.462C890.547 309.926 890.18 310.261 889.689 310.407C889.301 310.521 888.751 310.56 887.788 310.268C888.486 311.115 888.948 311.907 889.027 312.573C889.092 313.131 888.936 313.628 888.576 314.014C887.885 314.752 886.769 314.66 883.167 312.201C884.323 313.776 884.287 314.31 884.073 314.789C883.883 315.215 883.476 315.462 882.973 315.462ZM866.503 302.868C866.69 302.868 866.878 302.924 867.039 303.039C871.577 306.256 877.849 310.559 881.084 312.544C879.663 310.797 877.254 308.209 875.026 305.993C874.674 305.644 874.66 305.08 874.993 304.713C875.325 304.345 875.888 304.305 876.271 304.62C880.3 307.948 885.161 311.536 887.032 312.372C886.703 311.75 885.673 310.406 882.469 307.861C881.579 307.153 880.68 306.481 879.886 305.906C878.358 304.877 877.257 304.07 877.241 304.058C876.835 303.76 876.741 303.193 877.028 302.78C877.317 302.366 877.882 302.259 878.301 302.536C879.015 303.009 880.208 303.815 881.543 304.794C884.13 306.502 886.474 307.819 887.903 308.368C886.107 306.866 882.486 304.212 879.118 301.879C878.705 301.594 878.595 301.032 878.868 300.611C879.141 300.191 879.699 300.063 880.128 300.323C882.806 301.951 885.637 303.305 887.112 303.715C885.656 302.519 882.21 300.444 879.128 298.814L868.147 292.817C868.112 292.798 868.079 292.777 868.047 292.754C867.246 292.173 848.371 278.472 845.184 273.246C842.977 269.628 840.535 264.006 837.95 258.055C831.958 244.264 824.502 227.102 816.15 225.907C814.539 225.676 813.546 226.263 812.934 227.813C811.103 232.453 813.448 244.521 819.056 259.308C824.173 272.802 830.502 284.423 834.103 286.938C842.826 293.031 862.145 303.954 862.339 304.064C862.419 304.108 862.491 304.165 862.554 304.23C864.764 306.543 867.504 309.046 868.874 309.904C868.465 308.713 867.202 306.434 865.74 304.324C865.484 303.954 865.53 303.453 865.851 303.136C866.03 302.959 866.266 302.868 866.503 302.868Z\",\n    fill: \"#283034\"\n  })), _path140 || (_path140 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M804.942 202.34C805.65 200.672 804.908 198.719 803.287 197.973C801.664 197.232 799.776 197.981 799.068 199.648C798.36 201.316 799.099 203.269 800.72 204.013C802.342 204.754 804.231 204.006 804.942 202.34Z\",\n    fill: \"white\"\n  })), _path141 || (_path141 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M802.023 205.228C801.449 205.228 800.875 205.104 800.334 204.857C798.263 203.906 797.313 201.407 798.214 199.286C798.658 198.239 799.477 197.439 800.52 197.034C801.545 196.636 802.665 196.669 803.672 197.129C805.745 198.082 806.696 200.582 805.795 202.702C805.795 202.703 805.795 202.703 805.795 202.704C805.348 203.751 804.527 204.55 803.484 204.954C803.01 205.137 802.516 205.228 802.023 205.228ZM801.983 198.615C801.715 198.615 801.448 198.664 801.192 198.764C800.62 198.986 800.169 199.429 799.922 200.011C799.409 201.217 799.941 202.634 801.107 203.17C801.651 203.419 802.259 203.438 802.814 203.223C803.387 203.001 803.839 202.558 804.088 201.976C804.6 200.77 804.067 199.352 802.899 198.816C802.606 198.682 802.295 198.615 801.983 198.615Z\",\n    fill: \"#283034\"\n  })), _path142 || (_path142 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M929.681 325.702H845.734V379.037H929.681V325.702Z\",\n    fill: \"#D2DADE\"\n  })), _path143 || (_path143 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M876.18 337.036H939.066V333.504H876.18V337.036Z\",\n    fill: \"white\"\n  })), _path144 || (_path144 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M876.18 343.405H939.066V339.873H876.18V343.405Z\",\n    fill: \"white\"\n  })), _path145 || (_path145 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M876.18 349.972H939.066V346.441H876.18V349.972Z\",\n    fill: \"white\"\n  })), _path146 || (_path146 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M876.18 357.571H939.066V354.039H876.18V357.571Z\",\n    fill: \"white\"\n  })), _path147 || (_path147 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M876.18 363.94H939.066V360.408H876.18V363.94Z\",\n    fill: \"white\"\n  })), _path148 || (_path148 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M876.18 370.507H939.066V366.975H876.18V370.507Z\",\n    fill: \"white\"\n  })), _path149 || (_path149 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M865.643 134.068H789.615V150.628H865.643V134.068Z\",\n    fill: \"#D2DADE\"\n  })), _path150 || (_path150 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M865.643 109.246H789.615V125.806H865.643V109.246Z\",\n    fill: \"#D2DADE\"\n  })), _path151 || (_path151 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M865.643 85.2298H789.615V101.79H865.643V85.2298Z\",\n    fill: \"#D2DADE\"\n  })), _path152 || (_path152 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M782.695 134.068H766.135V150.628H782.695V134.068Z\",\n    fill: \"#D2DADE\"\n  })), _path153 || (_path153 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M769.751 149.165C769.586 149.165 769.42 149.127 769.268 149.05C768.914 148.873 768.687 148.515 768.676 148.12L768.319 135.71C768.302 135.116 768.769 134.621 769.363 134.604C769.959 134.584 770.452 135.055 770.469 135.648L770.768 146.063L788.763 133.46C789.25 133.119 789.92 133.238 790.261 133.724C790.602 134.21 790.483 134.881 789.997 135.222L770.368 148.97C770.184 149.099 769.968 149.165 769.751 149.165Z\",\n    fill: \"#283034\"\n  })), _path154 || (_path154 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M782.695 109.246H766.135V125.806H782.695V109.246Z\",\n    fill: \"#D2DADE\"\n  })), _path155 || (_path155 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M769.751 124.342C769.586 124.342 769.42 124.304 769.268 124.228C768.914 124.05 768.687 123.693 768.676 123.297L768.319 110.888C768.302 110.294 768.769 109.799 769.363 109.782C769.959 109.762 770.452 110.232 770.469 110.826L770.768 121.24L788.763 108.637C789.25 108.297 789.92 108.415 790.261 108.901C790.602 109.388 790.483 110.059 789.997 110.399L770.368 124.148C770.184 124.277 769.968 124.342 769.751 124.342Z\",\n    fill: \"#283034\"\n  })), _path156 || (_path156 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M782.695 85.2298H766.135V101.79H782.695V85.2298Z\",\n    fill: \"#D2DADE\"\n  })), _path157 || (_path157 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M769.751 100.326C769.586 100.326 769.42 100.288 769.268 100.211C768.914 100.034 768.687 99.6767 768.676 99.2813L768.319 86.8715C768.302 86.2778 768.769 85.7826 769.363 85.7656C769.959 85.7459 770.452 86.2163 770.469 86.8096L770.768 97.2244L788.763 84.6214C789.25 84.2808 789.92 84.3989 790.261 84.8852C790.602 85.3719 790.483 86.0426 789.997 86.3832L770.368 100.131C770.184 100.26 769.968 100.326 769.751 100.326Z\",\n    fill: \"#283034\"\n  })), _path158 || (_path158 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1223 166.095H1123.15V219.43H1223V166.095Z\",\n    fill: \"#D2DADE\"\n  })), _path159 || (_path159 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1196.87 112.846H1148.26V184.982H1196.87V112.846Z\",\n    fill: \"white\"\n  })), _path160 || (_path160 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1196.87 185.82H1148.26C1147.8 185.82 1147.42 185.445 1147.42 184.982V112.846C1147.42 112.384 1147.8 112.009 1148.26 112.009H1196.87C1197.33 112.009 1197.71 112.384 1197.71 112.846V184.982C1197.71 185.445 1197.33 185.82 1196.87 185.82ZM1149.1 184.144H1196.03V113.684H1149.1V184.144Z\",\n    fill: \"#283034\"\n  })), _path161 || (_path161 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1139.44 124.198H1174.88V120.666H1139.44V124.198Z\",\n    fill: \"#D2DADE\"\n  })), _path162 || (_path162 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1139.44 130.567H1174.88V127.035H1139.44V130.567Z\",\n    fill: \"#D2DADE\"\n  })), _path163 || (_path163 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1139.44 137.134H1174.88V133.602H1139.44V137.134Z\",\n    fill: \"#D2DADE\"\n  })), _path164 || (_path164 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1139.44 144.733H1174.88V141.201H1139.44V144.733Z\",\n    fill: \"#D2DADE\"\n  })), _path165 || (_path165 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1139.44 151.102H1174.88V147.57H1139.44V151.102Z\",\n    fill: \"#D2DADE\"\n  })), _path166 || (_path166 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1139.44 157.669H1174.88V154.138H1139.44V157.669Z\",\n    fill: \"#D2DADE\"\n  })), _path167 || (_path167 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1215.05 241.668H1131.1V295.003H1215.05V241.668Z\",\n    fill: \"white\"\n  })), _path168 || (_path168 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1215.05 295.841H1131.1C1130.64 295.841 1130.26 295.466 1130.26 295.003V241.668C1130.26 241.205 1130.64 240.83 1131.1 240.83H1215.05C1215.51 240.83 1215.88 241.205 1215.88 241.668V295.003C1215.88 295.466 1215.51 295.841 1215.05 295.841ZM1131.94 294.165H1214.21V242.506H1131.94V294.165Z\",\n    fill: \"#283034\"\n  })), _path169 || (_path169 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1141.63 253.002H1204.52V249.47H1141.63V253.002Z\",\n    fill: \"#D2DADE\"\n  })), _path170 || (_path170 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1141.63 259.371H1204.52V255.839H1141.63V259.371Z\",\n    fill: \"#D2DADE\"\n  })), _path171 || (_path171 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1141.63 265.938H1204.52V262.406H1141.63V265.938Z\",\n    fill: \"#D2DADE\"\n  })), _path172 || (_path172 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1141.63 273.537H1204.52V270.005H1141.63V273.537Z\",\n    fill: \"#D2DADE\"\n  })), _path173 || (_path173 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1141.63 279.906H1204.52V276.374H1141.63V279.906Z\",\n    fill: \"#D2DADE\"\n  })), _path174 || (_path174 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1141.63 286.473H1204.52V282.941H1141.63V286.473Z\",\n    fill: \"#D2DADE\"\n  })), _path175 || (_path175 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1021.23 446.731L1011.48 493.757L1053.45 493.731C1053.45 493.731 1055.46 491.111 1051.91 489.403C1049.37 488.185 1047.2 488.369 1044.76 487.127C1042.31 485.885 1047.4 451.333 1047.4 451.333L1021.23 446.731Z\",\n    fill: \"white\"\n  })), _path176 || (_path176 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1011.49 494.745C1011.19 494.745 1010.91 494.612 1010.72 494.381C1010.53 494.151 1010.46 493.848 1010.52 493.556L1020.26 446.53C1020.37 446.007 1020.88 445.665 1021.4 445.758L1047.58 450.359C1048.1 450.452 1048.46 450.947 1048.38 451.477C1048.37 451.558 1047.18 459.663 1046.24 468.048C1044.59 482.696 1045.09 485.705 1045.35 486.319C1046.43 486.842 1047.47 487.075 1048.57 487.322C1049.76 487.588 1050.99 487.864 1052.34 488.513C1053.77 489.204 1054.64 490.138 1054.91 491.287C1055.3 492.886 1054.34 494.19 1054.23 494.333C1054.05 494.577 1053.76 494.72 1053.45 494.72L1011.49 494.745C1011.49 494.745 1011.49 494.745 1011.49 494.745ZM1022 447.871L1012.7 492.768L1052.87 492.743C1052.98 492.478 1053.08 492.108 1052.99 491.733C1052.86 491.196 1052.35 490.712 1051.48 490.294C1050.33 489.744 1049.27 489.504 1048.14 489.251C1046.92 488.978 1045.66 488.695 1044.31 488.009C1043.42 487.557 1042.94 486.26 1043.15 480.972C1043.27 477.928 1043.62 473.785 1044.18 468.657C1044.95 461.631 1045.93 454.631 1046.29 452.141L1022 447.871Z\",\n    fill: \"#283034\"\n  })), _path177 || (_path177 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1055.13 494.449L1009.76 494.497L1012.29 478.305C1019.74 479.025 1024.55 487.244 1032.08 485.275C1036.4 484.17 1040.2 479.607 1044.35 479.799C1044.65 483.498 1045.08 486.044 1045.72 486.428C1048.37 487.917 1050.72 487.724 1053.46 489.166C1057.31 491.279 1055.13 494.449 1055.13 494.449Z\",\n    fill: \"#283034\"\n  })), _path178 || (_path178 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1065.39 446.731L1061.86 493.757L1103.83 493.731C1103.83 493.731 1105.84 491.111 1102.29 489.403C1099.75 488.185 1097.58 488.369 1095.14 487.127C1092.69 485.885 1091.56 451.333 1091.56 451.333L1065.39 446.731Z\",\n    fill: \"white\"\n  })), _path179 || (_path179 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1061.86 494.746C1061.59 494.746 1061.33 494.631 1061.14 494.43C1060.95 494.228 1060.86 493.957 1060.88 493.683L1064.4 446.657C1064.42 446.379 1064.56 446.122 1064.78 445.951C1065 445.779 1065.28 445.71 1065.56 445.758L1091.73 450.359C1092.19 450.441 1092.53 450.833 1092.55 451.301C1092.55 451.383 1092.82 459.595 1093.37 468.04C1094.35 483.064 1095.35 485.8 1095.68 486.294C1096.78 486.835 1097.83 487.072 1098.95 487.322C1100.14 487.589 1101.37 487.864 1102.71 488.513C1104.15 489.205 1105.02 490.138 1105.29 491.287C1105.67 492.886 1104.72 494.19 1104.61 494.333C1104.42 494.577 1104.13 494.72 1103.83 494.72L1061.86 494.746C1061.86 494.746 1061.86 494.746 1061.86 494.746ZM1066.29 447.894L1062.93 492.768L1103.25 492.743C1103.36 492.478 1103.46 492.108 1103.37 491.733C1103.23 491.196 1102.72 490.712 1101.86 490.294C1100.71 489.743 1099.65 489.504 1098.52 489.251C1097.3 488.978 1096.04 488.695 1094.69 488.008C1093.93 487.623 1092.66 486.978 1091.44 468.83C1090.96 461.66 1090.68 454.517 1090.6 452.168L1066.29 447.894Z\",\n    fill: \"#283034\"\n  })), _path180 || (_path180 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1105.51 494.449L1060.13 494.497L1062.67 478.305C1070.11 479.025 1074.93 487.244 1082.46 485.275C1086.78 484.17 1090.58 479.607 1094.73 479.799C1095.03 483.498 1095.46 486.044 1096.1 486.428C1098.75 487.917 1101.1 487.724 1103.84 489.166C1107.69 491.279 1105.51 494.449 1105.51 494.449Z\",\n    fill: \"#283034\"\n  })), _path181 || (_path181 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1045.03 206.155C1054.88 194.659 1093.93 211.089 1102.94 210.959C1109.6 210.864 1147.82 170.657 1156.77 187.702C1160.89 195.563 1131.93 226.579 1114.91 234.141C1089.46 245.45 1035.18 217.653 1045.03 206.155Z\",\n    fill: \"#F2AB68\"\n  })), _path182 || (_path182 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1094.28 464.391L1061.93 461.76C1061.93 461.76 1065.71 395.981 1065.71 390.334C1065.71 384.69 1049.02 462.246 1049.02 462.246L1013.86 459.8C1013.86 459.8 1028.85 401.959 1029.52 389.008C1030.18 376.056 1034.17 315.947 1034.17 315.947C1034.17 315.947 1030.18 306.98 1048.45 303.99C1066.71 301.003 1088.63 304.323 1088.63 304.323C1088.63 304.323 1098.26 356.128 1097.6 370.409C1096.93 384.69 1094.28 464.391 1094.28 464.391Z\",\n    fill: \"white\"\n  })), _path183 || (_path183 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1094.28 465.269C1094.25 465.269 1094.23 465.269 1094.21 465.267L1061.86 462.635C1061.38 462.597 1061.03 462.185 1061.05 461.709C1061.09 461.154 1063.76 414.619 1064.59 396.797C1061.35 409.891 1054.58 440.597 1049.88 462.43C1049.79 462.858 1049.4 463.153 1048.96 463.122L1013.8 460.676C1013.54 460.658 1013.3 460.524 1013.14 460.312C1012.99 460.1 1012.94 459.831 1013.01 459.578C1013.16 459.001 1027.99 401.677 1028.64 388.962C1029.28 376.516 1033.03 319.839 1033.28 316.08C1033.03 315.361 1032.41 313.032 1033.8 310.44C1035.75 306.841 1040.63 304.379 1048.3 303.122C1066.5 300.147 1088.54 303.42 1088.76 303.453C1089.13 303.509 1089.43 303.793 1089.49 304.161C1089.89 306.281 1099.14 356.23 1098.48 370.449C1097.82 384.561 1095.18 463.622 1095.16 464.419C1095.15 464.659 1095.04 464.886 1094.86 465.046C1094.7 465.191 1094.49 465.269 1094.28 465.269ZM1062.86 460.953L1093.43 463.44C1093.73 454.502 1096.1 383.663 1096.72 370.368C1097.33 357.19 1088.96 311.016 1087.88 305.104C1084.2 304.603 1064.81 302.204 1048.59 304.856C1039.77 306.301 1036.53 309.125 1035.37 311.24C1034.11 313.53 1034.94 315.512 1034.97 315.595C1035.03 315.723 1035.05 315.867 1035.05 316.005C1035.01 316.606 1031.05 376.255 1030.4 389.052C1029.78 401.149 1017.05 450.943 1014.97 458.996L1048.32 461.316C1049.1 457.722 1052.56 441.719 1056.08 425.909C1058.42 415.416 1060.33 407.059 1061.75 401.071C1062.6 397.509 1063.28 394.754 1063.79 392.882C1064.06 391.864 1064.29 391.082 1064.46 390.557C1064.69 389.865 1064.95 389.08 1065.75 389.166C1066 389.193 1066.59 389.361 1066.59 390.334C1066.59 395.658 1063.32 452.877 1062.86 460.953Z\",\n    fill: \"#283034\"\n  })), _path184 || (_path184 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1034.96 209.09C1034.96 209.09 1019.54 209.453 1017.07 220.431C1014.61 231.408 1025.11 252.322 1026.67 272.035C1028.24 291.748 1022.34 317.771 1036 314.633C1049.67 311.499 1053.11 308.326 1065.2 307.205C1077.3 306.085 1079.99 311.908 1088.95 306.085C1097.91 300.261 1084.13 239.265 1079.13 227.87C1071.2 209.771 1051.31 206.625 1051.31 206.625C1051.31 206.625 1050.86 209.315 1045.94 210.884C1041.01 212.449 1034.96 209.09 1034.96 209.09Z\",\n    fill: \"#F2AB68\"\n  })), _path185 || (_path185 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1026.66 214.497C1007.39 211.087 1003.77 277.172 1030.16 291C1056.56 304.83 1099.73 264.945 1099.73 264.945L1093.7 251.473C1093.7 251.473 1060.38 268.861 1049.58 263.47C1038.78 258.081 1045.93 217.909 1026.66 214.497Z\",\n    fill: \"#F2AB68\"\n  })), _path186 || (_path186 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1042.78 294.412C1038 294.412 1033.7 293.423 1029.93 291.447C1029.24 291.097 1028.62 290.725 1028.07 290.346C1027.84 290.19 1027.79 289.881 1027.94 289.656C1028.1 289.43 1028.41 289.374 1028.63 289.529C1029.15 289.885 1029.74 290.235 1030.38 290.568C1043.82 297.602 1061.84 290.195 1074.58 282.743C1087.26 275.325 1097.38 266.39 1099.12 264.825L1093.45 252.147C1089.2 254.325 1059.68 269.065 1049.37 263.907C1044.58 261.529 1043.24 253.197 1041.68 243.55C1039.66 231.059 1037.37 216.902 1026.58 214.99L1026.54 214.985C1026.29 214.95 1026.08 214.919 1025.85 214.919C1025.58 214.919 1025.36 214.697 1025.36 214.423C1025.36 214.149 1025.58 213.927 1025.85 213.927C1026.15 213.927 1026.42 213.966 1026.68 214.004L1026.73 214.012C1038.24 216.048 1040.58 230.575 1042.66 243.391C1044.11 252.379 1045.48 260.867 1049.81 263.02C1060.25 268.239 1093.13 251.199 1093.46 251.027C1093.58 250.964 1093.73 250.953 1093.85 250.998C1093.98 251.043 1094.09 251.139 1094.14 251.264L1100.17 264.749C1100.26 264.943 1100.21 265.171 1100.06 265.315C1099.95 265.415 1089.07 275.416 1075.09 283.591C1066.87 288.401 1059.19 291.652 1052.28 293.251C1048.93 294.025 1045.76 294.412 1042.78 294.412Z\",\n    fill: \"white\"\n  })), _path187 || (_path187 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1065.39 390.217C1065.35 390.217 1065.31 390.214 1065.27 390.209C1064.79 390.148 1064.45 389.708 1064.51 389.227L1073.15 321.48C1073.21 320.998 1073.65 320.657 1074.13 320.719C1074.61 320.781 1074.95 321.221 1074.89 321.702L1066.26 389.449C1066.2 389.892 1065.82 390.217 1065.39 390.217Z\",\n    fill: \"#283034\"\n  })), _path188 || (_path188 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1093.46 252.573C1093.46 252.573 1105.46 240.882 1108.32 239.84C1111.17 238.8 1104.89 248.413 1104.89 248.413C1104.89 248.413 1118.4 240.195 1119.5 240.816C1120.61 241.438 1110.36 250.038 1110.36 250.038C1110.36 250.038 1126.58 244.357 1127.3 245.152C1128.01 245.947 1112.18 254.084 1112.18 254.084C1112.18 254.084 1127.66 248.851 1127.97 249.944C1128.28 251.036 1113.43 258.455 1113.43 258.455C1113.43 258.455 1127.51 256.582 1123.94 258.216C1120.38 259.854 1099.17 264.997 1099.17 264.997L1093.46 252.573Z\",\n    fill: \"white\"\n  })), _path189 || (_path189 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1099.17 265.876C1098.83 265.876 1098.52 265.681 1098.37 265.364L1092.66 252.94C1092.51 252.602 1092.58 252.203 1092.85 251.944C1094.09 250.734 1105.07 240.09 1108.02 239.014C1108.99 238.66 1109.49 239.119 1109.66 239.333C1110.2 240.018 1110.11 241.198 1108 244.964C1107.84 245.257 1107.67 245.547 1107.51 245.828C1108.65 245.16 1109.99 244.38 1111.35 243.616C1118.81 239.419 1119.38 239.74 1119.93 240.049C1120.24 240.22 1120.43 240.517 1120.46 240.866C1120.51 241.409 1120.58 242.085 1115.61 246.612C1115.19 247 1114.76 247.383 1114.35 247.751C1115.56 247.345 1116.92 246.896 1118.29 246.459C1127.12 243.646 1127.48 244.05 1127.95 244.563C1128.15 244.789 1128.24 245.093 1128.18 245.398C1128.09 245.914 1127.98 246.497 1120.97 250.39C1127.3 248.549 1127.89 248.863 1128.3 249.076C1128.56 249.212 1128.74 249.434 1128.82 249.703C1129.04 250.486 1128.48 251.108 1126.3 252.478C1125.09 253.239 1123.39 254.216 1121.23 255.381C1120.19 255.949 1119.13 256.507 1118.16 257.016C1118.37 256.994 1118.59 256.972 1118.8 256.951C1120.42 256.794 1121.72 256.702 1122.67 256.676C1124.09 256.636 1125.12 256.674 1125.36 257.523C1125.62 258.414 1124.63 258.866 1124.31 259.015C1120.71 260.668 1100.25 265.64 1099.38 265.851C1099.31 265.868 1099.24 265.876 1099.17 265.876ZM1094.52 252.771L1099.67 263.972C1102.6 263.252 1114.01 260.436 1120.12 258.597C1118.16 258.764 1115.75 259.033 1113.54 259.326C1113.12 259.381 1112.71 259.123 1112.59 258.712C1112.46 258.302 1112.65 257.86 1113.03 257.668C1117.67 255.353 1122.63 252.695 1125.28 251.047C1122.33 251.75 1117.17 253.325 1112.46 254.916C1112.03 255.063 1111.55 254.849 1111.37 254.426C1111.19 254.002 1111.37 253.512 1111.78 253.302C1116.37 250.943 1121.26 248.282 1124.11 246.549C1120.88 247.428 1115.55 249.151 1110.66 250.867C1110.26 251.008 1109.81 250.841 1109.6 250.473C1109.39 250.104 1109.47 249.638 1109.8 249.365C1112.68 246.951 1115.82 244.112 1117.51 242.349C1114.82 243.615 1109.84 246.433 1105.35 249.164C1105 249.377 1104.55 249.319 1104.26 249.024C1103.97 248.729 1103.93 248.276 1104.16 247.932C1105.78 245.447 1107.47 242.454 1108.01 240.976C1105.45 242.514 1098.9 248.526 1094.52 252.771Z\",\n    fill: \"#283034\"\n  })), _path190 || (_path190 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1160.09 173.851C1160.09 173.851 1167.87 167.305 1166.19 166.191C1165.05 165.439 1157.43 172.996 1157.43 172.996L1148.43 181.673C1148.43 181.673 1147.31 182.706 1145.62 184.23C1148.98 188.073 1152.38 191.983 1153.16 197.003C1156.43 194.054 1158.7 191.922 1158.7 191.922C1158.7 191.922 1171.94 183.812 1170.77 182.639C1169.73 181.587 1160.23 185.768 1160.23 185.768C1160.23 185.768 1173.73 176.027 1174.22 174.719C1174.96 172.741 1163.95 179.005 1163.95 179.005C1163.95 179.005 1175.38 171.015 1174.6 169.64C1173.62 167.915 1166.13 173.285 1162.34 176.057C1165.89 173.281 1172.5 167.576 1171.13 166.501C1170.5 166.006 1160.09 173.851 1160.09 173.851Z\",\n    fill: \"white\"\n  })), _path191 || (_path191 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1153.16 197.931C1153.06 197.931 1152.95 197.913 1152.85 197.877C1152.53 197.763 1152.3 197.482 1152.25 197.146C1151.5 192.35 1148.15 188.533 1144.92 184.842C1144.59 184.46 1144.62 183.88 1145 183.541C1146.67 182.039 1147.79 181.002 1147.8 180.992L1156.78 172.328C1156.79 172.317 1158.72 170.407 1160.77 168.613C1164.66 165.203 1165.86 164.859 1166.7 165.417C1167.09 165.676 1167.33 166.083 1167.35 166.563C1167.37 166.834 1167.33 167.176 1167.11 167.658C1167.69 167.267 1168.21 166.932 1168.65 166.654C1170.37 165.58 1171.09 165.285 1171.71 165.772C1172.05 166.045 1172.24 166.449 1172.24 166.909C1172.24 167.389 1172.07 168.042 1171.13 169.233C1172.6 168.52 1173.64 168.271 1174.35 168.424C1174.82 168.525 1175.18 168.787 1175.41 169.182C1175.9 170.043 1175.52 171.073 1172.35 173.772C1173.95 173.194 1174.42 173.375 1174.79 173.696C1174.93 173.817 1175.38 174.273 1175.09 175.045C1174.94 175.444 1174.68 176.114 1167.6 181.474C1167.2 181.779 1166.79 182.082 1166.4 182.38C1170.15 181.151 1170.95 181.501 1171.43 181.984C1171.69 182.246 1171.81 182.599 1171.77 182.978C1171.7 183.542 1171.59 184.487 1165.22 188.815C1162.5 190.663 1159.77 192.354 1159.27 192.662C1158.86 193.041 1156.71 195.051 1153.78 197.691C1153.61 197.848 1153.39 197.931 1153.16 197.931ZM1146.92 184.307C1149.77 187.579 1152.59 190.992 1153.73 195.233C1156.31 192.89 1158.05 191.263 1158.07 191.245C1158.11 191.202 1158.16 191.163 1158.22 191.131C1162.57 188.467 1167.39 185.182 1169.22 183.508C1167.36 183.908 1163.71 185.253 1160.61 186.618C1160.17 186.809 1159.66 186.642 1159.43 186.23C1159.19 185.818 1159.3 185.295 1159.69 185.017C1164.07 181.857 1168.72 178.354 1171.32 176.209C1169.39 177.098 1166.74 178.485 1164.41 179.812C1163.98 180.057 1163.43 179.921 1163.16 179.501C1162.9 179.082 1163.01 178.529 1163.42 178.245C1167.43 175.438 1171.88 171.954 1173.29 170.34C1172.65 170.532 1171.46 171.043 1169.33 172.364C1167.14 173.722 1164.74 175.451 1162.88 176.806C1162.48 177.105 1161.9 177.021 1161.6 176.617C1161.29 176.213 1161.37 175.638 1161.77 175.326C1165.43 172.463 1168.16 169.893 1169.49 168.313C1167.41 169.637 1163.85 172.18 1160.64 174.593C1160.24 174.895 1159.67 174.823 1159.36 174.43C1159.05 174.036 1159.1 173.465 1159.49 173.142C1161.94 171.083 1164.12 168.867 1165.04 167.569C1163.44 168.646 1160.5 171.253 1158.08 173.655L1149.07 182.341C1149.05 182.361 1148.22 183.133 1146.92 184.307Z\",\n    fill: \"#283034\"\n  })), _path192 || (_path192 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1041.54 199.005C1043.69 198.648 1047.36 197.779 1047.36 197.779C1047.77 198.439 1050.6 206.351 1050.6 206.351C1050.6 206.351 1058.48 214.742 1051.96 215.549C1048.14 216.02 1039.48 214.621 1035.97 212.511C1033.48 211.018 1035.39 208.645 1035.39 208.645L1033.85 198.093C1033.85 198.093 1039.4 199.357 1041.54 199.005Z\",\n    fill: \"white\"\n  })), _path193 || (_path193 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1050.26 216.517C1045.81 216.517 1038.67 215.159 1035.52 213.265C1034.35 212.562 1033.97 211.675 1033.86 211.055C1033.66 209.937 1034.15 208.935 1034.47 208.429L1032.98 198.22C1032.94 197.933 1033.04 197.644 1033.25 197.447C1033.47 197.251 1033.76 197.171 1034.05 197.236C1035.54 197.577 1039.78 198.404 1041.4 198.137C1043.49 197.79 1047.13 196.932 1047.16 196.924C1047.53 196.836 1047.91 196.996 1048.11 197.319C1048.52 197.984 1050.63 203.832 1051.36 205.885C1052.44 207.058 1056.28 211.499 1055.24 214.364C1054.83 215.52 1053.76 216.212 1052.07 216.422C1051.54 216.486 1050.93 216.517 1050.26 216.517ZM1034.9 199.214L1036.26 208.518C1036.3 208.76 1036.23 209.005 1036.08 209.196C1035.91 209.415 1035.48 210.131 1035.59 210.754C1035.66 211.136 1035.93 211.464 1036.42 211.758C1039.73 213.743 1048.18 215.129 1051.85 214.677C1052.83 214.556 1053.42 214.25 1053.59 213.767C1054.12 212.302 1051.78 208.901 1049.96 206.952C1049.87 206.864 1049.81 206.76 1049.77 206.646C1048.67 203.569 1047.42 200.158 1046.86 198.798C1045.68 199.069 1043.29 199.605 1041.69 199.871C1041.69 199.871 1041.69 199.872 1041.69 199.872C1040.02 200.146 1036.73 199.58 1034.9 199.214Z\",\n    fill: \"#283034\"\n  })), _path194 || (_path194 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1030.9 196.678C1026.98 191.459 1028.49 183.714 1034.26 179.38C1040.04 175.05 1047.89 175.769 1051.81 180.988C1055.73 186.207 1054.22 193.949 1048.45 198.282C1042.67 202.616 1034.82 201.897 1030.9 196.678Z\",\n    fill: \"white\"\n  })), _path195 || (_path195 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1040.16 201.995C1039.74 201.995 1039.32 201.976 1038.9 201.938C1035.33 201.612 1032.24 199.931 1030.2 197.206C1028.15 194.48 1027.4 191.044 1028.09 187.529C1028.76 184.048 1030.77 180.904 1033.74 178.678C1039.89 174.065 1048.31 174.864 1052.51 180.461C1056.71 186.06 1055.13 194.37 1048.98 198.985C1046.36 200.948 1043.27 201.995 1040.16 201.995ZM1042.57 177.434C1039.92 177.434 1037.17 178.303 1034.79 180.084C1032.17 182.048 1030.4 184.811 1029.81 187.865C1029.22 190.885 1029.86 193.828 1031.6 196.15L1031.6 196.151C1033.35 198.474 1035.99 199.907 1039.06 200.187C1042.15 200.47 1045.3 199.545 1047.92 197.58C1053.3 193.546 1054.73 186.339 1051.11 181.516C1049.09 178.823 1045.91 177.434 1042.57 177.434Z\",\n    fill: \"#283034\"\n  })), _path196 || (_path196 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1027.29 194.071C1026.25 192.652 1026.53 190.636 1027.91 189.567C1029.29 188.498 1031.26 188.783 1032.3 190.2C1033.34 191.619 1033.06 193.636 1031.67 194.704C1030.29 195.773 1028.32 195.489 1027.29 194.071Z\",\n    fill: \"white\"\n  })), _path197 || (_path197 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1029.79 196.231C1029.61 196.231 1029.42 196.218 1029.23 196.191C1028.17 196.04 1027.22 195.471 1026.58 194.59C1025.26 192.794 1025.62 190.229 1027.37 188.872C1028.23 188.211 1029.28 187.93 1030.35 188.08C1031.41 188.23 1032.36 188.799 1033.01 189.681C1034.32 191.479 1033.96 194.045 1032.21 195.4C1031.5 195.944 1030.66 196.231 1029.79 196.231ZM1029.79 189.798C1029.31 189.798 1028.84 189.958 1028.45 190.262C1027.44 191.041 1027.24 192.517 1028 193.551C1028 193.551 1028 193.552 1028 193.552C1028.36 194.047 1028.89 194.367 1029.48 194.451C1030.07 194.534 1030.66 194.377 1031.13 194.009C1032.14 193.23 1032.35 191.755 1031.59 190.719C1031.22 190.223 1030.7 189.904 1030.1 189.819C1030 189.805 1029.89 189.798 1029.79 189.798Z\",\n    fill: \"#283034\"\n  })), _path198 || (_path198 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1033.22 191.253C1032.14 192.433 1034.05 189.988 1034.7 189.452C1036.9 187.658 1039.39 185.848 1041.75 184.224C1047.33 180.384 1060.16 168.583 1047.93 162.733C1041.32 159.573 1042.2 167.962 1037.8 169.04C1034.92 169.749 1032.3 166.987 1029.77 167.72C1022.71 169.762 1025.58 175.566 1021.91 179.903C1020.11 182.044 1016.17 182.671 1017.26 186.429C1018.35 190.21 1026.26 197.923 1030.12 198.149C1032.2 198.27 1026.32 193.305 1027.15 191.23C1028.67 187.423 1033.79 190.622 1033.22 191.253Z\",\n    fill: \"#283034\"\n  })), _path199 || (_path199 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1081.25 234.419C1081.04 234.419 1080.84 234.278 1080.78 234.061C1079.48 229.574 1076.33 219.68 1076.3 219.581C1076.21 219.32 1076.36 219.041 1076.62 218.958C1076.88 218.875 1077.16 219.019 1077.24 219.28C1077.27 219.379 1080.43 229.286 1081.73 233.786C1081.8 234.049 1081.65 234.324 1081.39 234.4C1081.34 234.413 1081.3 234.419 1081.25 234.419Z\",\n    fill: \"white\"\n  })), _path200 || (_path200 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M957.229 407.455C960.82 406.131 964.316 406.825 967.566 408.903C969.56 410.179 970.883 412.118 971.928 414.2C973.162 416.666 973.604 419.345 973.628 422.08C973.663 426.068 973.077 429.98 972.267 433.887C971.786 436.202 971.373 438.518 970.494 440.719C970.142 441.599 969.754 442.475 969.278 443.293C968.64 444.389 967.635 444.523 966.722 443.635C964.346 441.327 962.026 438.963 959.638 436.668C958.517 435.591 957.277 434.643 956.123 433.601C953.885 431.583 952.395 429.006 950.88 426.457C949.83 424.689 948.878 422.887 948.435 420.835C948.005 418.838 947.931 416.859 948.379 414.879C948.683 413.535 949.301 412.361 950.513 411.557C951.218 411.089 951.898 410.56 952.5 409.966C953.794 408.688 955.353 407.944 957.229 407.455ZM962.535 426.224C964.457 425.768 965.594 424.739 966.989 423.051C968.757 420.914 969.114 418.435 966.865 415.697C965.148 413.605 962.698 413.297 960.278 413.618C957.814 413.944 955.787 415.058 955.083 417.844C954.525 420.047 954.494 422.068 955.816 424.001C957.411 426.334 959.877 427.161 962.535 426.224Z\",\n    fill: \"white\"\n  })), _path201 || (_path201 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M962.384 423.925C960.636 424.577 959.35 423.943 958.301 422.843C957.771 422.285 957.374 421.513 957.143 420.769C956.327 418.141 958.358 415.72 961.125 415.917C962.828 416.038 964.397 416.405 965.475 417.902C966.307 419.053 966.406 420.383 965.548 421.528C964.7 422.66 963.689 423.64 962.384 423.925Z\",\n    fill: \"white\"\n  })), _path202 || (_path202 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M957.805 404.81C961.256 403.556 965.041 404.317 968.551 406.367C971.162 407.893 972.949 410.268 974.232 413.026C975.766 416.322 975.972 419.802 975.775 423.341C975.581 426.806 975.141 430.241 974.372 433.629C974.284 434.021 974.193 434.42 974.176 434.819C974.031 438.172 972.485 441.088 971.268 444.101C971.032 444.684 970.539 445.186 970.091 445.655C969.209 446.576 968.198 446.679 967.171 445.847C964.324 443.54 961.503 441.201 958.713 438.826C957.108 437.459 955.558 436.025 954.032 434.572C952.234 432.86 950.852 430.811 949.646 428.665C948.348 426.355 946.854 424.116 946.38 421.423C945.941 418.926 945.762 416.432 946.456 413.956C946.957 412.169 947.88 410.677 949.475 409.614C950.345 409.034 951.129 408.316 951.907 407.612C953.446 406.221 955.308 405.511 957.805 404.81ZM957.229 407.455C955.353 407.944 953.793 408.688 952.499 409.965C951.897 410.559 951.217 411.088 950.512 411.556C949.299 412.361 948.682 413.534 948.378 414.879C947.929 416.858 948.003 418.837 948.435 420.834C948.877 422.886 949.829 424.689 950.879 426.456C952.394 429.005 953.884 431.582 956.122 433.6C957.276 434.642 958.517 435.59 959.637 436.667C962.025 438.962 964.345 441.327 966.721 443.635C967.634 444.522 968.639 444.388 969.278 443.292C969.753 442.475 970.142 441.599 970.494 440.718C971.373 438.517 971.786 436.201 972.266 433.886C973.076 429.979 973.663 426.067 973.627 422.079C973.603 419.344 973.162 416.665 971.927 414.199C970.883 412.117 969.559 410.178 967.565 408.902C964.317 406.825 960.82 406.131 957.229 407.455Z\",\n    fill: \"#283034\"\n  })), _path203 || (_path203 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M962.535 426.224C959.877 427.161 957.411 426.334 955.816 424.001C954.494 422.067 954.526 420.046 955.084 417.844C955.788 415.058 957.815 413.944 960.279 413.617C962.698 413.297 965.148 413.605 966.865 415.696C969.114 418.435 968.757 420.914 966.99 423.051C965.595 424.738 964.457 425.768 962.535 426.224ZM962.384 423.925C963.689 423.64 964.7 422.66 965.548 421.528C966.406 420.383 966.307 419.053 965.475 417.902C964.397 416.406 962.828 416.038 961.125 415.917C958.358 415.72 956.327 418.141 957.143 420.769C957.374 421.513 957.77 422.285 958.301 422.843C959.35 423.943 960.636 424.577 962.384 423.925Z\",\n    fill: \"#283034\"\n  })), _path204 || (_path204 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M401.505 340.483C401.019 338.853 400.555 337.543 400.244 336.198C399.831 334.407 400.451 333.222 402.188 332.545C403.412 332.068 404.687 331.598 405.977 331.443C408.599 331.129 411.242 330.931 413.881 330.87C416.629 330.806 419.085 331.772 421.099 333.666C424.536 336.9 427.012 342.649 424.125 348.089C423.138 349.948 421.607 351.109 419.736 351.901C418.52 352.416 417.263 352.84 416.059 353.381C414.716 353.985 414.023 355.081 414.118 356.559C414.238 358.39 414.398 360.221 414.626 362.042C414.799 363.424 415.105 364.791 415.407 366.472C413.493 366.931 411.624 367.38 409.62 367.859C409.377 366.963 409.158 366.35 409.048 365.716C408.454 362.305 407.867 358.891 407.33 355.469C407.217 354.756 407.286 354.004 407.352 353.278C407.439 352.297 408.008 351.655 408.959 351.393C409.88 351.138 410.831 350.971 411.742 350.679C414.146 349.906 416.271 348.669 417.588 346.441C419.125 343.837 418.281 341.486 416.511 339.36C414.059 336.408 410.498 335.963 406.913 337.687C405.798 338.222 404.815 339.02 403.724 339.616C403.071 339.971 402.333 340.167 401.505 340.483Z\",\n    fill: \"white\"\n  })), _path205 || (_path205 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M386.309 351.079C385.264 351.631 384.497 352.036 383.752 352.43C381.246 349.677 379.609 346.622 378.391 343.287C377.259 340.19 375.831 337.198 374.738 334.088C373.938 331.814 373.406 329.437 372.895 327.075C372.756 326.437 372.982 325.622 373.281 325.003C374.437 322.599 376.723 321.901 379.088 321.65C380.369 321.514 381.547 322.226 382.013 323.581C382.491 324.966 383.036 326.361 383.245 327.796C384.067 333.464 384.769 339.148 385.512 344.826C385.778 346.858 386.03 348.891 386.309 351.079Z\",\n    fill: \"white\"\n  })), _path206 || (_path206 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M415.12 380.999C412.932 381.211 411.107 380.234 410.483 378.4C409.988 376.952 410.447 375.75 411.821 374.931C412.509 374.519 413.192 374.094 413.904 373.728C415.723 372.787 417.626 373.432 418.78 375.323C419.696 376.825 418.952 378.915 417.174 379.975C416.518 380.367 415.806 380.661 415.12 380.999Z\",\n    fill: \"white\"\n  })), _path207 || (_path207 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M391.709 361.373C392.126 363.502 390.888 365.066 388.468 365.469C386.87 365.735 384.974 364.419 384.688 362.846C384.358 361.047 385.786 359.241 387.862 358.828C389.901 358.421 391.312 359.356 391.709 361.373Z\",\n    fill: \"white\"\n  })), _path208 || (_path208 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M406.459 361.717C406.12 359.833 405.773 357.95 405.449 356.063C405.351 355.485 405.277 354.896 405.265 354.311C405.198 350.997 405.985 349.929 409.198 349.226C411.239 348.778 413.161 348.163 414.793 346.784C416.643 345.22 416.861 343.661 415.414 341.625C413.293 338.639 411.335 338.062 408.065 339.639C406.682 340.305 405.381 341.165 404.123 342.052C402.809 342.98 401.49 342.853 400.155 342.276C399.726 342.09 399.181 341.662 399.101 341.262C398.629 338.902 398.289 336.513 397.882 334.14C397.636 332.698 398.444 332.075 399.604 331.452C404.829 328.645 410.384 328.351 416.119 328.964C419.901 329.368 422.525 331.655 424.607 334.423C428.187 339.182 428.629 344.301 425.584 349.682C424.318 351.919 422.254 353.144 419.965 354.069C419.626 354.205 419.25 354.245 418.9 354.357C416.409 355.151 415.906 355.821 416.268 358.355C416.599 360.67 417.072 362.966 417.538 365.259C417.904 367.064 417.304 368.037 415.521 368.477C413.744 368.914 411.989 369.441 410.212 369.878C408.493 370.302 407.888 369.961 407.529 368.251C407.077 366.093 406.733 363.912 406.343 361.741C406.381 361.731 406.421 361.724 406.459 361.717ZM401.505 340.483C402.333 340.167 403.071 339.971 403.723 339.616C404.814 339.02 405.797 338.222 406.911 337.687C410.497 335.963 414.058 336.408 416.51 339.36C418.28 341.486 419.124 343.838 417.586 346.441C416.27 348.67 414.145 349.907 411.741 350.679C410.83 350.972 409.879 351.138 408.958 351.393C408.007 351.655 407.438 352.297 407.35 353.278C407.285 354.004 407.217 354.756 407.329 355.469C407.867 358.891 408.453 362.305 409.046 365.716C409.156 366.35 409.376 366.964 409.619 367.859C411.622 367.379 413.492 366.931 415.406 366.472C415.104 364.791 414.798 363.424 414.625 362.043C414.396 360.221 414.236 358.391 414.117 356.559C414.022 355.081 414.715 353.985 416.057 353.382C417.262 352.84 418.518 352.416 419.735 351.901C421.606 351.109 423.136 349.948 424.124 348.089C427.011 342.649 424.535 336.901 421.098 333.666C419.084 331.773 416.628 330.806 413.88 330.87C411.241 330.931 408.598 331.129 405.976 331.443C404.686 331.598 403.41 332.068 402.187 332.545C400.449 333.222 399.831 334.407 400.243 336.198C400.555 337.543 401.019 338.853 401.505 340.483Z\",\n    fill: \"#283034\"\n  })), _path209 || (_path209 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M386.081 331.646C386.404 334.568 386.704 337.494 387.059 340.41C387.465 343.768 387.904 347.121 388.365 350.472C388.519 351.593 388.367 352.447 387.213 353.018C386.241 353.498 385.411 354.259 384.459 354.786C383.492 355.32 382.467 354.994 381.782 354.028C379.342 350.598 377.373 346.963 376.099 342.898C374.871 338.976 373.169 335.206 371.764 331.337C371.266 329.964 370.784 328.504 370.739 327.071C370.7 325.815 371.082 324.443 371.638 323.296C372.719 321.051 377.849 318.679 380.725 319.677C381.899 320.085 382.758 320.642 383.446 321.723C384.923 324.042 385.16 326.673 385.622 329.257C385.765 330.052 385.844 330.86 385.951 331.662C385.995 331.657 386.038 331.651 386.081 331.646ZM386.309 351.079C386.03 348.891 385.778 346.858 385.512 344.826C384.769 339.148 384.067 333.464 383.245 327.796C383.036 326.361 382.491 324.966 382.013 323.581C381.546 322.226 380.368 321.514 379.088 321.65C376.723 321.901 374.438 322.599 373.281 325.003C372.982 325.622 372.756 326.437 372.895 327.075C373.406 329.437 373.938 331.813 374.738 334.088C375.831 337.198 377.259 340.19 378.391 343.287C379.609 346.622 381.246 349.677 383.752 352.43C384.497 352.036 385.264 351.631 386.309 351.079Z\",\n    fill: \"#283034\"\n  })), _path210 || (_path210 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M415.636 383.26C410.211 383.931 407.137 380.021 408.47 375.606C408.676 374.922 409.055 374.266 409.464 373.675C410.682 371.915 415.343 370.317 418.173 371.677C420.963 373.018 421.736 376.724 420.966 378.879C420.038 381.474 418.349 382.763 415.636 383.26ZM415.12 380.999C415.806 380.661 416.518 380.367 417.174 379.975C418.952 378.915 419.695 376.826 418.78 375.323C417.626 373.432 415.723 372.788 413.904 373.728C413.192 374.095 412.51 374.52 411.821 374.931C410.447 375.751 409.989 376.952 410.483 378.4C411.107 380.234 412.931 381.21 415.12 380.999Z\",\n    fill: \"#283034\"\n  })), _path211 || (_path211 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M387.69 356.66C391.174 355.768 393.33 358.145 393.856 360.751C394.209 362.517 393.71 364.102 392.622 365.504C391.361 367.128 387.905 368.243 386.026 367.66C384.447 367.17 382.541 364.629 382.371 362.787C382.103 359.905 384.72 356.892 387.69 356.66ZM391.709 361.373C391.312 359.356 389.901 358.421 387.862 358.827C385.786 359.24 384.359 361.046 384.688 362.846C384.973 364.419 386.87 365.734 388.467 365.469C390.888 365.066 392.126 363.502 391.709 361.373Z\",\n    fill: \"#283034\"\n  })), _path212 || (_path212 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M988.991 101.044C991.641 90.0658 992.201 79.0013 995.564 68.4933C999.187 69.0131 1002.63 69.4872 1006.07 70.0057C1012.3 70.9468 1018.52 71.9299 1024.76 72.8647C1030.81 73.7725 1036.87 74.6934 1042.94 75.507C1046.86 76.0324 1050.81 76.3071 1054.74 76.8144C1059.68 77.4537 1064.62 78.2144 1069.92 78.9755C1068.8 89.749 1066.34 100.031 1063.99 110.511C1062.82 110.525 1061.88 110.646 1060.98 110.531C1057.15 110.038 1053.33 109.476 1049.51 108.94C1046.52 108.522 1043.54 108.069 1040.54 107.695C1035.03 107.006 1029.52 106.345 1024 105.705C1014.08 104.551 1004.15 103.448 994.228 102.255C992.574 102.057 990.961 101.51 988.991 101.044ZM1044.8 89.3801C1044.82 88.6102 1045.07 87.5276 1044.83 86.5662C1043.9 82.8785 1041.75 80.0125 1038.55 77.9449C1034.61 75.3941 1030.15 74.6739 1025.61 74.5289C1023.41 74.4577 1021.16 74.6322 1019.09 75.8877C1008.76 82.1468 1010.05 95.5698 1018.54 100.722C1019.5 101.305 1020.46 101.9 1021.44 102.457C1026.27 105.21 1031.23 105.049 1035.95 102.479C1040.96 99.7537 1043.46 95.0719 1044.8 89.3801Z\",\n    fill: \"white\"\n  })), _path213 || (_path213 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M996.059 65.3686C996.394 63.0282 996.644 61.0694 996.962 59.1195C997.577 55.3113 998.128 54.918 1002.04 55.4596C1005.97 56.0004 1009.88 56.6535 1013.81 57.1042C1021.77 58.0151 1029.76 58.689 1037.7 59.7081C1045.18 60.668 1052.63 61.8988 1060.07 63.1078C1063.6 63.6799 1067.09 64.4706 1070.6 65.1858C1071.04 65.2752 1071.45 65.5086 1072.03 65.7387C1071.52 69.3129 1071.02 72.811 1070.46 76.6653C1069.27 76.4942 1068.25 76.439 1067.28 76.1948C1059.94 74.3437 1052.42 73.8469 1044.92 73.146C1039.24 72.6147 1033.61 71.6031 1027.96 70.7748C1023.11 70.0631 1018.27 69.3059 1013.42 68.5759C1009.65 68.0096 1005.86 67.5232 1002.1 66.8682C1000.08 66.5194 998.118 65.891 996.059 65.3686ZM1046.93 71.6242C1048.58 71.8611 1049.95 72.1062 1051.34 72.2457C1054.86 72.6047 1058.39 72.9044 1061.91 73.2544C1063.05 73.3682 1064.04 73.2739 1064.25 71.893C1064.57 69.8885 1064.84 67.877 1065.12 65.8995C1064.28 65.5126 1063.8 65.1478 1063.27 65.0643C1059.29 64.4332 1055.3 63.8956 1051.33 63.2421C1050.07 63.0339 1048.93 62.934 1048.04 63.8999C1047.67 66.465 1047.32 68.9376 1046.93 71.6242Z\",\n    fill: \"white\"\n  })), _path214 || (_path214 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1008.29 53.6214C1007.97 51.2458 1008.4 49.4849 1009.8 48.0153C1011.15 46.5936 1012.82 46.8988 1013.59 48.7152C1013.81 49.2317 1013.95 49.7916 1014.05 50.3451C1014.64 53.627 1013.88 54.4206 1010.63 53.9545C1009.9 53.8518 1009.16 53.7462 1008.29 53.6214Z\",\n    fill: \"white\"\n  })), _path215 || (_path215 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1027.37 101.736C1022.37 100.299 1018.29 98.2685 1015.86 93.8138C1013.16 88.8515 1014.81 81.882 1019.5 78.7158C1021.37 77.4549 1023.54 77.1201 1025.73 77.5439C1027.28 77.845 1028.78 78.0717 1030.41 78.047C1033.97 77.9929 1036.94 79.6613 1039.31 82.2747C1043.05 86.3943 1043.22 89.6123 1040.41 94.5135C1038.53 97.7974 1035.93 100.113 1032.33 101.121C1030.65 101.589 1028.83 101.567 1027.37 101.736ZM1029.2 79.9667C1024.65 79.092 1019.71 82.7344 1019.18 86.9764C1018.66 91.0138 1022.26 95.3199 1026.84 95.9582C1031.24 96.5722 1035.59 93.5619 1035.96 89.0918C1036.37 84.1809 1034.46 81.2457 1029.2 79.9667Z\",\n    fill: \"white\"\n  })), _path216 || (_path216 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1061.98 67.4779C1061.81 68.6778 1061.71 69.4058 1061.57 70.343C1057.7 70.0497 1053.91 69.7641 1050.17 69.481C1049.71 66.2249 1050.26 65.7105 1053.14 66.1942C1055.99 66.6734 1058.87 67.0315 1061.98 67.4779Z\",\n    fill: \"white\"\n  })), _path217 || (_path217 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1033.35 88.9592C1032.94 91.8676 1031.02 93.655 1027.58 93.3368C1024.21 93.0256 1021.5 89.9126 1022.13 87.0641C1023 83.1661 1025.03 82.4955 1029.14 83.0143C1032.04 83.3789 1033.83 86.0936 1033.35 88.9592Z\",\n    fill: \"white\"\n  })), _path218 || (_path218 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1004.89 53.4509C1005.49 51.434 1005.88 49.683 1006.54 48.0443C1007.63 45.3132 1009.36 44.1723 1011.62 44.4136C1014.42 44.7129 1016.13 46.3165 1016.6 49.3304C1016.87 50.9962 1016.91 52.6963 1017.08 54.7686C1017.92 54.9817 1018.95 55.3691 1020.01 55.4949C1024.5 56.0271 1029.01 56.467 1033.5 56.9693C1037.71 57.4416 1041.94 57.8703 1046.13 58.4651C1049.85 58.9933 1053.54 59.7506 1057.24 60.3584C1059.65 60.7522 1062.08 60.9821 1064.47 61.4233C1067.33 61.9493 1070.16 62.585 1072.99 63.2578C1073.77 63.4422 1074.48 63.924 1075.3 64.3011C1074.49 68.5686 1073.67 72.6258 1072.98 76.7051C1071.96 82.7465 1071.11 88.8189 1070.04 94.8517C1069.26 99.299 1068.33 103.726 1067.3 108.126C1066.63 111.008 1066.51 110.979 1064.28 113.558C1055.88 112.374 1047.23 111.086 1038.56 109.959C1029.78 108.817 1020.95 108.015 1012.19 106.726C1003.57 105.459 994.782 105.298 986.035 103.343C986.651 100.402 987.209 97.9526 987.664 95.4826C988.142 92.8919 988.462 90.2727 988.961 87.6866C989.817 83.2542 990.802 78.8478 991.652 74.4145C992.681 69.0455 993.628 63.6604 994.605 58.2812C994.807 57.1665 994.929 56.0353 995.177 54.9322C995.565 53.2024 996.852 52.3295 998.639 52.5606C1000.74 52.8335 1002.83 53.1559 1004.89 53.4509ZM988.991 101.044C990.961 101.51 992.575 102.057 994.228 102.256C1004.15 103.449 1014.08 104.553 1024 105.706C1029.52 106.346 1035.03 107.007 1040.54 107.696C1043.54 108.07 1046.52 108.523 1049.51 108.941C1053.33 109.476 1057.15 110.039 1060.98 110.531C1061.88 110.646 1062.82 110.526 1063.99 110.512C1066.34 100.032 1068.8 89.7491 1069.92 78.9764C1064.62 78.2153 1059.68 77.4537 1054.74 76.8152C1050.81 76.3079 1046.86 76.0332 1042.94 75.5078C1036.87 74.6943 1030.81 73.7733 1024.76 72.8655C1018.52 71.9308 1012.3 70.9476 1006.07 70.0065C1002.63 69.488 999.187 69.014 995.564 68.4942C992.2 79.0012 991.641 90.0658 988.991 101.044ZM996.059 65.3686C998.118 65.891 1000.08 66.5194 1002.1 66.869C1005.85 67.5239 1009.65 68.0097 1013.42 68.5768C1018.27 69.3068 1023.11 70.0639 1027.96 70.7756C1033.61 71.6039 1039.24 72.6155 1044.92 73.1468C1052.42 73.8479 1059.94 74.3437 1067.28 76.1957C1068.25 76.4397 1069.27 76.495 1070.46 76.6662C1071.01 72.8127 1071.52 69.3137 1072.03 65.7395C1071.45 65.5094 1071.04 65.276 1070.6 65.1866C1067.09 64.4715 1063.6 63.6808 1060.07 63.1087C1052.63 61.8998 1045.18 60.6697 1037.7 59.709C1029.76 58.6905 1021.77 58.0158 1013.81 57.105C1009.88 56.6544 1005.97 56.0006 1002.04 55.4604C998.128 54.9188 997.577 55.3121 996.962 59.1204C996.644 61.0695 996.394 63.0283 996.059 65.3686ZM1008.29 53.6214C1009.16 53.7463 1009.9 53.8518 1010.63 53.9545C1013.88 54.4206 1014.64 53.627 1014.05 50.3451C1013.95 49.7908 1013.8 49.2316 1013.59 48.7152C1012.82 46.8987 1011.15 46.5936 1009.8 48.0153C1008.4 49.4849 1007.97 51.2466 1008.29 53.6214Z\",\n    fill: \"#283034\"\n  })), _path219 || (_path219 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1044.8 89.3801C1043.46 95.0727 1040.96 99.7537 1035.95 102.479C1031.23 105.049 1026.27 105.21 1021.43 102.457C1020.46 101.9 1019.5 101.305 1018.54 100.721C1010.05 95.5697 1008.76 82.1467 1019.08 75.8876C1021.16 74.632 1023.41 74.4575 1025.61 74.5288C1030.15 74.6729 1034.61 75.3931 1038.55 77.9447C1041.75 80.0125 1043.9 82.8785 1044.83 86.5661C1045.07 87.5276 1044.82 88.6102 1044.8 89.3801ZM1027.37 101.736C1028.83 101.567 1030.65 101.589 1032.33 101.121C1035.93 100.112 1038.53 97.7973 1040.41 94.5133C1043.22 89.6122 1043.05 86.3941 1039.31 82.2746C1036.94 79.661 1033.97 77.9926 1030.41 78.0469C1028.78 78.0723 1027.28 77.845 1025.72 77.5438C1023.53 77.1199 1021.37 77.4556 1019.5 78.7156C1014.8 81.8826 1013.16 88.8522 1015.86 93.8136C1018.28 98.2684 1022.37 100.299 1027.37 101.736Z\",\n    fill: \"#283034\"\n  })), _path220 || (_path220 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1046.93 71.6242C1047.32 68.9376 1047.67 66.465 1048.04 63.8999C1048.93 62.9341 1050.07 63.0339 1051.33 63.2422C1055.3 63.8956 1059.29 64.4332 1063.27 65.0643C1063.8 65.1479 1064.28 65.5117 1065.12 65.8995C1064.84 67.8762 1064.57 69.8885 1064.25 71.893C1064.04 73.2739 1063.05 73.3682 1061.91 73.2544C1058.39 72.9044 1054.86 72.6056 1051.34 72.2457C1049.96 72.1054 1048.58 71.8611 1046.93 71.6242ZM1061.98 67.4779C1058.87 67.0315 1056 66.6735 1053.14 66.1942C1050.26 65.7105 1049.71 66.225 1050.17 69.4811C1053.91 69.7641 1057.7 70.0497 1061.57 70.343C1061.71 69.4059 1061.81 68.6778 1061.98 67.4779Z\",\n    fill: \"#283034\"\n  })), _path221 || (_path221 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1029.2 79.9667C1034.46 81.2456 1036.37 84.181 1035.96 89.091C1035.59 93.5609 1031.24 96.5722 1026.84 95.9573C1022.26 95.3191 1018.66 91.013 1019.18 86.9756C1019.71 82.7353 1024.65 79.0921 1029.2 79.9667ZM1033.35 88.9593C1033.83 86.0936 1032.04 83.379 1029.14 83.0144C1025.03 82.4956 1023 83.1662 1022.13 87.0641C1021.5 89.9127 1024.21 93.0257 1027.58 93.3368C1031.02 93.6551 1032.94 91.8675 1033.35 88.9593Z\",\n    fill: \"#283034\"\n  })), _path222 || (_path222 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M308.378 69.8222C307.732 70.9757 307.017 72.0957 306.454 73.2881C305.158 76.0327 303.963 78.8254 302.674 81.5715C301.352 84.3893 299.927 87.1606 298.612 89.983C295.011 97.7061 291.443 105.446 287.811 113.29C286.197 113.116 284.593 113.427 283.066 112.606C282.432 112.266 281.638 112.23 280.922 112.037C279.006 111.523 277.108 110.925 275.172 110.5C273.293 110.087 271.376 109.847 269.474 109.531C269.188 109.484 268.901 109.435 268.534 109.373C268.398 108.371 269.066 107.886 269.618 107.323C272.624 104.265 275.593 101.169 278.633 98.1445C280.258 96.529 282.033 95.0675 283.684 93.4771C287.146 90.1378 290.576 86.7627 294.013 83.3959C296.98 80.4897 299.956 77.5941 302.892 74.6611C304.6 72.9564 306.242 71.1861 307.913 69.4448C308.069 69.5706 308.223 69.6964 308.378 69.8222Z\",\n    fill: \"white\"\n  })), _path223 || (_path223 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M258.136 122.218C257.346 120.049 256.501 118.094 255.931 116.062C255.253 113.647 254.846 111.156 254.254 108.716C253.697 106.413 253.889 105.565 255.784 104.207C260.892 100.545 266.088 97.0039 271.151 93.2834C276.026 89.7032 281.158 86.4645 285.666 82.3865C286.756 81.3999 288.092 80.6856 289.317 79.8485C293.04 77.3089 296.792 74.8105 300.473 72.2115C302.083 71.0748 303.543 69.7261 305.085 68.491C305.464 68.1868 305.896 67.9497 306.522 67.8887C306.112 68.4529 305.782 69.1048 305.279 69.5683C299.137 75.236 293.425 81.3351 287.513 87.2308C284.632 90.1019 281.467 92.6842 278.507 95.4791C276.246 97.6146 274.123 99.8934 271.909 102.078C270.328 103.64 268.836 105.343 267.051 106.632C265.123 108.024 264.228 109.899 263.361 111.965C262.247 114.615 260.904 117.169 259.624 119.748C259.24 120.521 258.733 121.235 258.136 122.218Z\",\n    fill: \"white\"\n  })), _path224 || (_path224 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M302.474 67.8407C285.745 80.0672 269.257 92.6254 251.663 104.479C248.191 103.201 244.327 101.777 240.464 100.355C240.441 100.177 240.419 99.9978 240.396 99.8186C250.313 93.8132 260.652 88.5596 270.917 83.1839C281.244 77.7755 291.674 72.5652 302.058 67.2673C302.196 67.4579 302.335 67.6485 302.474 67.8407Z\",\n    fill: \"white\"\n  })), _path225 || (_path225 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M267.067 111.59C269.591 111.909 271.977 112.213 274.366 112.516C274.416 112.677 274.467 112.84 274.517 113.002C270.368 115.813 266.247 118.664 261.705 121.102C263.452 118.003 265.198 114.906 267.067 111.59Z\",\n    fill: \"white\"\n  })), _path226 || (_path226 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M256.696 125.842C255.454 121.286 253.905 116.482 252.89 111.566C252.162 108.047 250.245 106.164 247.039 104.95C244.081 103.829 240.877 103.272 238.227 101.382C237.927 101.17 237.633 100.95 237.37 100.757C237.221 98.4372 237.288 98.5798 239.073 97.7267C242.011 96.3246 244.863 94.7388 247.731 93.1935C252.102 90.8384 256.444 88.4285 260.823 86.0879C264.028 84.3733 267.272 82.7311 270.501 81.0614C276.499 77.96 282.457 74.7755 288.507 71.7831C296.214 67.9726 304.002 64.3245 311.743 60.5842C312.738 60.1039 313.584 60.1222 314.381 60.9181C315.205 61.7423 315.133 62.661 314.595 63.5637C312.778 66.6171 310.832 69.598 309.122 72.7109C307.695 75.3091 306.523 78.0469 305.254 80.7306C304.307 82.7311 303.373 84.7385 302.459 86.7542C300.926 90.1279 299.454 93.5282 297.882 96.8827C296.435 99.9712 294.852 102.996 293.402 106.082C292.176 108.691 291.105 111.371 289.865 113.973C288.921 115.957 288.631 116.023 286.614 115.54C284.451 115.02 282.281 114.52 280.12 113.992C278.54 113.607 277.172 113.756 275.728 114.75C271.087 117.949 266.329 120.978 261.631 124.095C260.954 124.544 260.261 125.039 259.75 125.657C258.921 126.661 258.067 126.722 256.696 125.842ZM308.378 69.8222C308.223 69.6964 308.069 69.5706 307.914 69.4448C306.242 71.1861 304.601 72.9556 302.893 74.6611C299.956 77.594 296.98 80.4904 294.013 83.3959C290.577 86.7626 287.147 90.1378 283.685 93.4771C282.034 95.0674 280.258 96.5289 278.634 98.1445C275.594 101.169 272.625 104.265 269.619 107.323C269.066 107.886 268.398 108.371 268.535 109.373C268.902 109.435 269.188 109.484 269.475 109.531C271.376 109.847 273.294 110.087 275.173 110.5C277.109 110.925 279.006 111.523 280.923 112.037C281.639 112.23 282.433 112.266 283.067 112.606C284.593 113.427 286.197 113.116 287.812 113.29C291.444 105.446 295.011 97.7061 298.612 89.983C299.929 87.1606 301.352 84.3893 302.675 81.5715C303.964 78.8246 305.159 76.0319 306.455 73.288C307.017 72.0956 307.733 70.9757 308.378 69.8222ZM258.136 122.218C258.733 121.235 259.24 120.521 259.624 119.748C260.905 117.169 262.247 114.615 263.361 111.965C264.228 109.899 265.122 108.024 267.051 106.632C268.836 105.344 270.328 103.64 271.909 102.078C274.123 99.8934 276.246 97.6146 278.507 95.4791C281.467 92.6842 284.631 90.1012 287.513 87.2307C293.425 81.3351 299.137 75.2367 305.279 69.5683C305.782 69.1048 306.112 68.4529 306.522 67.8887C305.896 67.9497 305.464 68.1868 305.085 68.491C303.543 69.7261 302.083 71.0748 300.473 72.2115C296.792 74.8105 293.04 77.3089 289.317 79.8485C288.092 80.6856 286.756 81.3999 285.666 82.3865C281.158 86.4645 276.025 89.7032 271.151 93.2834C266.087 97.0039 260.892 100.545 255.784 104.207C253.889 105.565 253.697 106.413 254.254 108.716C254.846 111.156 255.254 113.647 255.931 116.062C256.501 118.094 257.346 120.049 258.136 122.218ZM302.474 67.8407C302.334 67.6486 302.196 67.458 302.058 67.2666C291.674 72.5645 281.244 77.7747 270.917 83.1832C260.652 88.5596 250.313 93.8125 240.396 99.8179C240.418 99.9971 240.441 100.176 240.464 100.355C244.327 101.777 248.192 103.2 251.663 104.478C269.257 92.6255 285.745 80.068 302.474 67.8407ZM267.067 111.59C265.198 114.906 263.452 118.003 261.706 121.102C266.248 118.664 270.368 115.812 274.517 113.002C274.467 112.84 274.417 112.677 274.367 112.516C271.977 112.214 269.59 111.91 267.067 111.59Z\",\n    fill: \"#283034\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIllustration);\nexport default __webpack_public_path__ + \"static/media/Illustration.a56100fe06d8436595b0a4d9a1e45cef.svg\";\nexport { ForwardRef as ReactComponent };","import './banner.scss';\nimport banner from './images/Illustration.svg';\n\nconst Banner = () => {\n    return ( \n        <section className=\"section banner\">\n            <div className=\"container\">\n                <img src={banner} alt=\"banner\" width={1312} height={495} />\n            </div>\n        </section>\n     );\n}\n \nexport default Banner;","import React, { useRef, useEffect, useState } from 'react';\nimport './services.scss';\nimport logo1 from './services/photo-camera 1.png';\nimport logo2 from './services/photo-camera 2.png';\nimport logo3 from './services/photo-camera 3.png';\nimport logo4 from './services/photo-camera 4.png';\n\nconst Services = () => {\n    const containerRef = useRef(null);\n    const thumbRef = useRef(null);\n    const [thumbPosition, setThumbPosition] = useState(0);\n\n    useEffect(() => {\n        const container = containerRef.current;\n        const thumb = thumbRef.current;\n\n        // Проверяем, существует ли контейнер\n        if (!container || !thumb) return;\n\n        const updateThumbPosition = () => {\n            const scrollWidth = container.scrollWidth - container.clientWidth;\n            const scrollLeft = container.scrollLeft;\n            const thumbMaxPosition = container.clientWidth - thumb.clientWidth;\n\n            if (scrollWidth > 0) {\n                const newPosition = (scrollLeft / scrollWidth) * thumbMaxPosition;\n                setThumbPosition(newPosition);\n            }\n        };\n\n        // Добавляем обработчики событий\n        container.addEventListener('scroll', updateThumbPosition);\n        window.addEventListener('resize', updateThumbPosition);\n\n        // Очистка\n        return () => {\n            container.removeEventListener('scroll', updateThumbPosition);\n            window.removeEventListener('resize', updateThumbPosition);\n        };\n    }, []);\n\n    return (\n        <section className=\"section services\">\n            <div className=\"container\">\n                <h2 className=\"project_title\">Наши услуги</h2>\n                <div className=\"services_container\" ref={containerRef}>\n                    <ul className=\"services_list list-reset\">\n                        <li>\n                            <div className=\"img-wrap\">\n                                <img src={logo1} alt=\"logo1\" width={64} height={64} />\n                            </div>\n                            <h3 className=\"services_list_title\">Тайный покупатель</h3>\n                            <ul className=\"services_list_items list-reset\">\n                                <li>Аудит мерчандайзинга</li>\n                                <li>Торговый аудит</li>\n                                <li>Аудит промоутеров</li>\n                            </ul>\n                            <a href=\"#!\" className=\"services_inner_more accent_button project_link\">Подробнее</a>\n                        </li>\n                        <li>\n                            <div className=\"img-wrap\">\n                                <img src={logo2} alt=\"logo2\" width={64} height={64} />\n                            </div>\n                            <h3 className=\"services_list_title\">Мониторинг цен</h3>\n                            <ul className=\"services_list_items list-reset\">\n                                <li>Аудит мерчандайзинга</li>\n                                <li>Торговый аудит</li>\n                                <li>Аудит промоутеров</li>\n                            </ul>\n                            <a href=\"#!\" className=\"services_inner_more accent_button project_link\">Подробнее</a>\n                        </li>\n                        <li>\n                            <div className=\"img-wrap\">\n                                <img src={logo3} alt=\"logo3\" width={64} height={64} />\n                            </div>\n                            <h3 className=\"services_list_title\">Тайный покупатель</h3>\n                            <ul className=\"services_list_items list-reset\">\n                                <li>Аудит мерчандайзинга</li>\n                                <li>Торговый аудит</li>\n                                <li>Торговый аудит</li>\n                                <li>Аудит промоутеров</li>\n                            </ul>\n                            <a href=\"#!\" className=\"services_inner_more accent_button project_link\">Подробнее</a>\n                        </li>\n                        <li>\n                            <div className=\"img-wrap\">\n                                <img src={logo4} alt=\"logo4\" width={64} height={64} />\n                            </div>\n                            <h3 className=\"services_list_title\">Тайный покупатель</h3>\n                            <ul className=\"services_list_items list-reset\">\n                                <li>Аудит мерчандайзинга</li>\n                                <li>Торговый аудит</li>\n                                {/* <li>Аудит промоутеров</li> */}\n                            </ul>\n                            <a href=\"#!\" className=\"services_inner_more accent_button project_link\">Подробнее</a>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"custom_scrollbar\">\n                    <div\n                        className=\"custom_scrollbar_thumb\"\n                        ref={thumbRef}\n                        style={{ transform: `translateX(${thumbPosition}px)` }}\n                    />\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Services;","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVector(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 367,\n    height: 504,\n    viewBox: \"0 0 367 504\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.6971 259.684C29.6971 259.684 11.7274 263.507 6.37197 274.595C1.02153 285.682 30.0792 374.386 30.0792 374.386L108.842 373.241C108.842 373.241 107.253 320.288 100.813 297.533C90.1692 259.92 60.0512 240.262 60.0512 240.262L29.6971 259.684Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.079 375.619C30.0852 375.619 30.0911 375.619 30.0973 375.619L108.86 374.473C109.19 374.469 109.504 374.331 109.733 374.093C109.961 373.855 110.084 373.534 110.074 373.204C110.009 371.036 108.407 319.839 101.999 297.197C96.4349 277.534 85.522 262.83 77.3472 253.958C68.4847 244.339 61.0375 239.434 60.7248 239.23C60.3189 238.965 59.7951 238.963 59.387 239.224L29.2174 258.528C26.9991 259.033 10.5502 263.11 5.26223 274.059C4.39534 275.855 3.59255 279.991 6.61026 295.106C8.36074 303.874 11.1943 315.271 15.0325 328.981C21.5602 352.299 28.8356 374.548 28.9083 374.77C29.0741 375.277 29.5475 375.619 30.079 375.619ZM107.567 372.027L30.9704 373.141C29.5716 368.826 23.1922 348.988 17.4039 328.309C6.03758 287.703 6.30858 277.562 7.48176 275.131C12.5083 264.723 29.7801 260.927 29.954 260.89C30.0988 260.859 30.2371 260.802 30.3615 260.722L60.0268 241.741C62.0288 243.15 68.3999 247.874 75.5878 255.686C83.5608 264.352 94.2039 278.704 99.6274 297.868C105.405 318.284 107.275 363.889 107.567 372.027Z\",\n    fill: \"#283034\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.3768 246.696C39.4952 246.696 44.7949 244.658 48.9412 240.627C56.8787 232.906 57.6194 220.746 50.5918 213.521C43.5669 206.299 31.3906 206.707 23.45 214.43C15.5125 222.152 14.7722 234.312 21.7995 241.536C25.1563 244.988 29.6906 246.696 34.3768 246.696ZM38.0129 210.82C42.055 210.82 45.9477 212.281 48.8249 215.239C54.9046 221.49 54.1859 232.086 47.2226 238.86C40.255 245.634 29.6423 246.064 23.566 239.818C17.4864 233.568 18.2051 222.971 25.1686 216.197C28.837 212.629 33.5176 210.82 38.0129 210.82Z\",\n    fill: \"#283034\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.0312 237.613C15.282 235.774 15.3151 232.838 17.0968 231.055C18.8789 229.268 21.7403 229.316 23.4892 231.154C25.2335 232.993 25.2048 235.93 23.4234 237.712C21.6367 239.494 18.7755 239.452 17.0312 237.613Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.2812 240.253C21.7913 240.253 23.2135 239.662 24.2942 238.584C26.5425 236.336 26.5824 232.623 24.3839 230.307C23.3008 229.168 21.8513 228.531 20.3025 228.513C18.7714 228.504 17.3183 229.089 16.2246 230.186C13.976 232.434 13.9367 236.147 16.1377 238.462C17.2134 239.596 18.6567 240.232 20.2017 240.253C20.228 240.253 20.2546 240.253 20.2812 240.253ZM20.2348 230.977C20.2478 230.977 20.2605 230.977 20.2732 230.977C21.1515 230.988 21.9769 231.352 22.5969 232.004C23.8824 233.359 23.8632 235.529 22.552 236.84C21.9274 237.463 21.0942 237.797 20.2351 237.788C19.3602 237.776 18.54 237.412 17.9256 236.764C17.925 236.764 17.9246 236.763 17.924 236.763C16.6361 235.409 16.6559 233.24 17.9686 231.927C18.5805 231.313 19.3837 230.977 20.2348 230.977Z\",\n    fill: \"#283034\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.0139 244.881C41.0211 243.981 46.1172 242.058 46.1172 242.058C46.8198 242.93 52.316 253.725 52.316 253.725C52.316 253.725 53.1083 260.198 43.9252 262.55C34.7468 264.902 30.9896 259.806 30.9896 259.806L26.8412 244.994C26.8412 244.994 35.0061 245.782 38.0139 244.881Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.2966 264.408C40.7519 264.408 42.3922 264.215 44.2309 263.744C54.3452 261.153 53.5479 253.651 53.5386 253.576C53.521 253.433 53.4789 253.295 53.4136 253.166C52.1105 250.607 47.8027 242.187 47.0766 241.285C46.7425 240.87 46.18 240.716 45.6813 240.905C45.6308 240.924 40.591 242.824 37.6602 243.7H37.6596C35.3848 244.382 29.164 243.98 26.9591 243.768C26.5535 243.728 26.1562 243.892 25.8954 244.203C25.6343 244.515 25.544 244.935 25.6538 245.327L29.8023 260.139C29.8425 260.282 29.9087 260.417 29.9972 260.538C30.1385 260.73 32.9403 264.408 39.2966 264.408ZM51.1026 254.06C51.1251 255.037 50.8238 259.511 43.6192 261.356C36.2232 263.252 32.7782 259.974 32.1057 259.223L28.505 246.368C31.1728 246.554 36.0183 246.766 38.3665 246.062C40.6235 245.387 43.9726 244.169 45.6008 243.566C46.6138 245.356 48.9808 249.896 51.1026 254.06Z\",\n    fill: \"#283034\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.9926 232.493C23.6728 234.379 25.9496 230.527 26.7936 229.641C29.6123 226.667 32.837 223.621 35.9153 220.861C43.1846 214.342 59.3723 195.095 40.7989 188.977C30.7675 185.671 33.5584 197.516 27.463 199.869C23.4748 201.409 19.2227 197.944 15.7344 199.457C6.00464 203.678 11.1806 211.453 6.73973 218.33C4.54807 221.727 -0.96756 223.349 1.27638 228.524C3.5392 233.733 16.2718 243.317 21.8391 242.926C24.8277 242.714 15.5082 236.698 16.3142 233.573C17.7843 227.845 25.6996 231.485 24.9926 232.493Z\",\n    fill: \"#283034\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.1421 227.002C28.3067 226.917 28.7404 231.022 29.3109 231.965C31.2248 235.162 33.2045 236.241 36.6698 237.109C40.3747 238.032 48.7326 229.449 53.145 228.345C56.4263 227.525 67.608 238.556 65.7601 242.247C57.2274 259.316 23.2343 260.255 18.2094 240.144C17.7475 238.306 23.9979 239.895 24.7522 236.873C26.3928 230.316 20.9858 230.665 28.1421 227.002Z\",\n    fill: \"#283034\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M126.633 289.722L105.071 277.357C105.071 277.357 79.3885 316.041 65.1239 314.136C49.0676 311.996 44.8674 251.406 13.4439 264.361C-22.7037 279.262 29.6127 364.865 65.1239 364.232C100.635 363.596 126.633 289.722 126.633 289.722Z\",\n    fill: \"#283034\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80.6557 258.652L100.314 178.12L104.754 83.6375L81.6083 81.1006L67.6592 160.682L50.538 215.532C54.2054 225.21 53.9038 229.604 53.9038 229.604L56.0252 237.938L80.6557 258.652Z\",\n    fill: \"#283034\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M85.125 82.8257C85.125 82.8257 77.8888 61.9613 78.0914 57.4047C78.2898 52.8485 86.2845 67.4123 86.2845 67.4123C86.2845 67.4123 83.3571 41.1161 86.0868 40.6177C88.8115 40.1177 91.0084 60.3206 91.0084 60.3206C91.0084 60.3206 92.0687 36.2257 95.1993 37.2596C98.3294 38.2939 96.3165 60.2829 96.3165 60.2829C96.3165 60.2829 100.701 40.6743 103.34 41.3379C105.98 42.0006 100.955 61.8818 100.955 61.8818C100.955 61.8818 106.348 48.5493 108.691 49.4753C111.034 50.4012 105.268 68.4373 105.268 68.4373L102.554 83.3058L85.125 82.8257Z\",\n    fill: \"white\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M102.554 84.5378C103.147 84.5378 103.659 84.1137 103.766 83.5265L106.467 68.7349C106.663 68.1162 107.991 63.882 109.055 59.5998C111.193 50.9885 110.707 48.9459 109.144 48.3284C107.72 47.7663 106.267 48.8485 104.363 52.0085C105.811 44.093 105.367 41.9836 104.805 41.0431C104.451 40.4513 103.977 40.2267 103.64 40.1422C103.298 40.0565 102.766 40.0308 102.172 40.3965C101.32 40.9215 100.114 42.3589 98.1757 48.51C98.3202 38.4128 97.0195 36.5629 95.5861 36.0893C95.0209 35.903 94.431 35.9928 93.9239 36.3424C92.872 37.0682 91.6577 39.1608 90.6116 49.1291C89.2853 42.0557 88.1743 40.3996 87.3381 39.7762C86.7679 39.3511 86.2224 39.34 85.8645 39.4055C84.2839 39.6942 83.8699 41.8354 83.735 44.9617C83.6363 47.2465 83.7025 50.3796 83.9318 54.2744C84.0905 56.9738 84.3071 59.6772 84.5081 61.9332C84.3516 61.6801 84.1926 61.4252 84.0323 61.1712C80.6984 55.8944 79.4083 55.0482 78.1961 55.3313C77.7252 55.4411 76.9258 55.8498 76.8602 57.3512C76.6533 62.008 83.2121 81.0715 83.9605 83.2298C84.1285 83.7139 84.5787 84.0437 85.091 84.058L102.519 84.5375C102.531 84.5378 102.543 84.5378 102.554 84.5378ZM108.046 51.0432C108.149 53.6244 106.213 61.4351 104.095 68.0614C104.079 68.1118 104.066 68.1632 104.056 68.2155L101.531 82.0442L86.0127 81.6173C84.0821 75.9816 80.1066 63.731 79.4213 58.8295C80.9113 60.7052 83.3053 64.5462 85.2046 68.0057C85.488 68.5218 86.0962 68.7656 86.6568 68.5877C87.2177 68.4101 87.575 67.8609 87.51 67.2762C86.4219 57.5013 85.7828 46.2862 86.3898 42.6534C86.87 43.7669 87.6348 46.2092 88.5329 51.5116C89.3017 56.0518 89.7791 60.4104 89.7837 60.454C89.8536 61.0947 90.4086 61.5721 91.0484 61.5526C91.6926 61.5319 92.2117 61.0186 92.2402 60.3751C92.2424 60.3238 92.4719 55.197 93.0146 49.862C93.7422 42.7085 94.542 39.9742 94.9915 38.948C95.348 39.9677 95.863 42.6853 95.6855 49.7714C95.553 55.0606 95.0939 60.1202 95.0893 60.1706C95.0302 60.8179 95.4835 61.3998 96.1257 61.5007C96.7683 61.6015 97.3775 61.1863 97.5195 60.5521C97.5291 60.5097 98.4838 56.2548 99.7467 51.852C101.236 46.6599 102.268 44.3343 102.863 43.3004C102.928 44.5116 102.795 47.116 101.746 52.597C100.862 57.2083 99.7715 61.5369 99.7607 61.5799C99.602 62.2079 99.9568 62.8517 100.573 63.0531C101.189 63.2542 101.855 62.9445 102.098 62.344C104.186 57.1842 106.701 52.4525 108.046 51.0432Z\",\n    fill: \"#283034\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M181.532 247.018L173.9 246.315C173.9 246.315 159.984 272.803 135.179 270.097C111.142 267.476 105.33 241.314 105.33 241.314L97.4807 240.639C97.4807 240.639 106.173 275.565 133.604 277.611C167.249 280.119 181.532 247.018 181.532 247.018Z\",\n    fill: \"white\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M137.167 278.977C153.074 278.977 164.296 271.049 171.067 264.116C178.912 256.083 182.514 247.852 182.664 247.506C182.82 247.144 182.794 246.728 182.592 246.388C182.391 246.049 182.038 245.827 181.645 245.79L174.014 245.088C173.516 245.043 173.042 245.301 172.81 245.742C172.776 245.806 169.315 252.307 162.939 258.379C154.496 266.42 145.201 269.949 135.313 268.872C125.756 267.83 118.019 262.866 112.318 254.118C108.012 247.51 106.547 241.109 106.533 241.045C106.416 240.521 105.972 240.131 105.436 240.085L97.5868 239.411C97.1914 239.377 96.8016 239.536 96.5436 239.839C96.2856 240.142 96.189 240.55 96.2852 240.936C96.3758 241.301 98.5703 249.961 104.21 259.01C111.756 271.116 121.889 277.973 133.513 278.84C134.756 278.933 135.976 278.977 137.167 278.977ZM179.646 248.082C178.236 250.819 174.829 256.753 169.245 262.453C159.202 272.706 147.243 277.391 133.696 276.382C122.752 275.566 113.547 269.301 106.336 257.761C102.318 251.329 100.072 244.958 99.1618 242.021L104.351 242.467C104.913 244.52 106.593 249.826 110.207 255.394C116.247 264.702 124.837 270.21 135.045 271.323C145.562 272.468 155.813 268.593 164.693 260.112C170.144 254.907 173.481 249.536 174.587 247.616L179.646 248.082Z\",\n    fill: \"#283034\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M125.553 290.25C125.553 290.25 142.867 276.579 141.84 270.461C140.817 264.342 123.384 251.934 117.798 253.367C112.212 254.805 112.004 261.452 112.004 261.452L103.91 253.259C103.166 253.173 101.756 259.703 101.756 264.766C101.756 271.215 104.735 278.404 104.735 278.404L125.553 290.25Z\",\n    fill: \"white\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M125.552 291.482C125.824 291.482 126.094 291.393 126.316 291.218C126.495 291.076 130.749 287.708 134.951 283.523C140.907 277.592 143.558 273.252 143.055 270.257C142.382 266.227 136.189 260.589 130.351 256.788C127.729 255.082 121.225 251.215 117.492 252.173C113.733 253.141 111.918 256.247 111.186 258.869L104.787 252.392C104.59 252.192 104.33 252.066 104.051 252.034C103.651 251.988 103.256 252.119 102.939 252.402C101.561 253.631 100.524 260.749 100.524 264.765C100.524 271.384 103.471 278.572 103.597 278.875C103.702 279.128 103.888 279.339 104.126 279.475L124.943 291.321C125.133 291.429 125.343 291.482 125.552 291.482ZM118.833 254.479C120.956 254.479 124.798 256.115 129.006 258.854C135.175 262.87 140.17 267.947 140.624 270.664C141.263 274.467 131.907 283.549 125.436 288.766L105.723 277.548C105.128 275.999 102.989 270.061 102.989 264.766C102.989 261.153 103.678 257.276 104.225 255.331L111.128 262.318C111.475 262.668 111.996 262.779 112.456 262.599C112.914 262.419 113.222 261.983 113.237 261.49C113.245 261.259 113.501 255.746 118.106 254.561C118.318 254.506 118.562 254.479 118.833 254.479Z\",\n    fill: \"#283034\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M107.649 374.066C107.649 374.066 121.994 466.027 124.101 489.65C126.213 513.277 123.894 599.558 123.894 599.558L78.8787 600.058L72.1426 493.19L54.7429 599.44L4.30266 599.134L28.3444 374.91L107.649 374.066Z\",\n    fill: \"#283034\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M73.1766 496.015C73.8009 496.015 74.3362 495.543 74.4011 494.908L80.3227 437.21L89.5976 421.591C89.9454 421.005 89.7523 420.249 89.1673 419.902C88.5816 419.554 87.8258 419.747 87.4784 420.332L78.0648 436.185C77.9736 436.339 77.9166 436.511 77.8984 436.689L71.949 494.657C71.8794 495.334 72.3722 495.939 73.0491 496.009C73.0921 496.013 73.1348 496.015 73.1766 496.015Z\",\n    fill: \"white\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M194.755 44.8333L281.513 253.132L97.7968 240.889L79.0257 192.304L194.755 44.8333Z\",\n    fill: \"white\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M281.513 254.364C281.909 254.364 282.283 254.174 282.515 253.849C282.763 253.502 282.814 253.051 282.65 252.658L195.893 44.3591C195.725 43.9554 195.355 43.6707 194.922 43.6116C194.488 43.5535 194.056 43.7276 193.786 44.072L78.0561 191.543C77.7879 191.885 77.7195 192.343 77.8761 192.748L96.6472 241.333C96.8201 241.781 97.2365 242.087 97.7149 242.119L281.431 254.361C281.458 254.363 281.486 254.364 281.513 254.364ZM194.426 47.2487L279.61 251.77L98.6628 239.712L80.4276 192.514L194.426 47.2487Z\",\n    fill: \"#283034\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M79.1097 194.092L61.4883 203.706L77.7469 245.423L97.4941 241.879L79.1097 194.092Z\",\n    fill: \"white\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.7471 246.656C77.8192 246.656 77.8922 246.65 77.9656 246.637L97.7127 243.092C98.0744 243.027 98.3884 242.804 98.5688 242.484C98.7492 242.164 98.7773 241.78 98.6455 241.437L80.2608 193.65C80.1334 193.318 79.8689 193.058 79.5356 192.936C79.2021 192.813 78.8327 192.84 78.5203 193.011L60.8988 202.625C60.3546 202.922 60.1158 203.577 60.3407 204.155L76.5996 245.872C76.7862 246.351 77.2468 246.656 77.7471 246.656ZM95.8091 240.93L78.528 244.032L63.0311 204.27L78.4655 195.848L95.8091 240.93Z\",\n    fill: \"#283034\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M219.447 72.695C219.779 72.695 220.11 72.562 220.353 72.299L285.27 2.0691C285.732 1.56914 285.702 0.78949 285.202 0.327583C284.702 -0.134633 283.922 -0.104002 283.46 0.395959L218.543 70.6259C218.08 71.1259 218.111 71.9055 218.611 72.3674C218.848 72.5867 219.148 72.695 219.447 72.695Z\",\n    fill: \"#283034\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M248.746 112.107C248.982 112.107 249.219 112.04 249.43 111.9L321.72 63.5937C322.286 63.2156 322.438 62.4502 322.06 61.8843C321.682 61.3185 320.917 61.166 320.351 61.5443L248.061 109.85C247.495 110.228 247.342 110.994 247.721 111.56C247.958 111.915 248.348 112.107 248.746 112.107Z\",\n    fill: \"#283034\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M269.578 155.484C269.742 155.484 269.908 155.452 270.068 155.382L345.092 122.82C345.717 122.549 346.003 121.823 345.732 121.199C345.461 120.574 344.735 120.288 344.111 120.559L269.087 153.121C268.462 153.392 268.176 154.118 268.447 154.742C268.648 155.207 269.102 155.484 269.578 155.484Z\",\n    fill: \"#283034\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M288.964 214.497C289.053 214.497 289.144 214.488 289.235 214.467L365.532 197.403C366.196 197.255 366.614 196.596 366.465 195.932C366.317 195.268 365.658 194.849 364.994 194.998L288.697 212.062C288.032 212.21 287.614 212.869 287.763 213.534C287.891 214.107 288.4 214.497 288.964 214.497Z\",\n    fill: \"#283034\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.025 247.963C263.183 247.963 263.343 247.932 263.498 247.868C264.127 247.606 264.424 246.884 264.162 246.256L187.398 61.9284C187.136 61.2997 186.414 61.0024 185.786 61.2644C185.158 61.5262 184.861 62.2476 185.123 62.876L261.886 247.204C262.084 247.677 262.542 247.963 263.025 247.963Z\",\n    fill: \"#283034\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.338 100.868C166.706 100.868 167.071 100.703 167.314 100.389L177.911 86.6744C178.327 86.1357 178.228 85.3616 177.689 84.9455C177.15 84.5294 176.377 84.6284 175.96 85.1673L165.363 98.8819C164.947 99.4206 165.046 100.195 165.585 100.611C165.809 100.784 166.075 100.868 166.338 100.868Z\",\n    fill: \"#283034\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M99.0121 182.656C99.3735 182.656 99.7314 182.498 99.9749 182.193L156.86 111.161C157.285 110.63 157.199 109.854 156.668 109.428C156.137 109.003 155.361 109.088 154.936 109.62L98.0508 180.652C97.6254 181.184 97.7112 181.96 98.2424 182.385C98.4698 182.567 98.7417 182.656 99.0121 182.656Z\",\n    fill: \"#283034\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVector);\nexport default __webpack_public_path__ + \"static/media/Vector.955dc4fa10b12e602d0c039d899df987.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from 'react';\nimport './benefits.scss';\nimport vector from './images/Vector.svg';\n\nconst Benefits = () => {\n\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 576);\n\n    useEffect(() => {\n        const handleResize = () => {\n            setIsMobile(window.innerWidth <= 576);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return (\n        <section className=\"section benefits\">\n            <div className=\"container\">\n                <div className=\"benefits_inner\">\n                    {isMobile && (\n                        <div className=\"benefits_inner_item --mobile\">\n                            <h2 className=\"project_title\">Наши преимущества</h2>\n                        </div>\n                    )}\n                    <div className=\"benefits_inner_item --desktop\">\n                        <h2 className=\"project_title --desktop\">Наши преимущества</h2>\n                        <img src={vector} className='benefits_inner_item_img' alt=\"vektor\" width={365} height={633} />\n                    </div>\n                    <div className=\"benefits_inner_item\">\n                        <ul className=\"beneefits_item_list list-reset\">\n                            <li>\n                                <div className=\"content_wrapper\">\n                                    <h3 className='beneefits_item_list_title'>Обучаем исполнителя проводить проверку</h3>\n                                    <p>в соответствии с вашими требованиями</p>\n                                </div>\n                            </li>\n\n                            <li>\n                                <div className=\"content_wrapper\">\n                                    <h3 className='beneefits_item_list_title'>Работаем не только из офиса,</h3>\n                                    <p>но и удалённо</p>\n                                </div>\n                            </li>\n\n                            <li>\n                                <div className=\"content_wrapper\">\n                                    <h3 className='beneefits_item_list_title'>Точно подбираем каждого исполнителя</h3>\n                                    <p>под ваш запрос</p>\n                                </div>\n                            </li>\n\n                        </ul>\n                        <ul className=\"beneefits_item_list list-reset\">\n                            <li>\n                                <div className=\"content_wrapper\">\n                                    <h3 className='beneefits_item_list_title'>Предоставляем отчёты о проверках</h3>\n                                    <p>и рекомендации по улучшению</p>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"content_wrapper\">\n                                    <h3 className='beneefits_item_list_title'>Используем искусственный интеллект</h3>\n                                    <p>для оптимизации проверок</p>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"content_wrapper\">\n                                    <h3 className='beneefits_item_list_title'>Проводим проверки в различных часовых</h3>\n                                    <p>поясах и регионах России и СНГ</p>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Benefits;","import './worksItem.scss';\n\nconst WorksItem = (props) => {\n    return (\n        <div className=\"works_item\">\n            <div className=\"img-wrap\">\n                <img src={props.img} alt={props.title} width={64} height={64} loading=\"lazy\" />\n            </div>\n            <h3 className=\"works_item_title\">{props.title}</h3>\n            <p className=\"work_item_desc\">{props.description}</p>\n        </div>\n    );\n}\n\nexport default WorksItem;","import photo1 from '../works/images/photo-camera1.png';\nimport photo2 from '../works/images/photo-camera2.png';\nimport photo3 from '../works/images/photo-camera3.png';\nimport photo4 from '../works/images/photo-camera4.png';\nimport photo5 from '../works/images/photo-camera5.png';\nimport photo6 from '../works/images/photo-camera6.png';\n\nconst workList = [\n    {\n        title:'Разрабатываем ’’легенду тайного покупателя’’',\n        description: 'в зависимости от требований по проверкам или используем вашу «легенду тайного покупателя',\n        img: photo1\n    },\n    {\n        title:'Посещаем точки проверок',\n        description: 'по графику в соответствии с вашим запросом',\n        img: photo2\n    },\n    {\n        title:'Предоставляем отчёты о результатах проверок',\n        description: 'в соответствии с графиком',\n        img: photo3\n    },\n    {\n        title:'Фиксируем посещение',\n        description: 'записываем аудио, проводим фото и видеофиксацию, готовим транскрибации звонка, в зависимости от вашего запроса',\n        img: photo4\n    },\n    {\n        title:'Предоставляем итоговые материалы',\n        description: 'отчёт, аналитику и рекомендации по итогам проверок',\n        img: photo5\n    },\n    {\n        title:'Выполняем дополнительные задачи',\n        description: 'для переоценки или улучшению показателей по вашему запросу',\n        img: photo6\n    }\n];\n\nexport {workList};","import React, { useRef, useEffect, useState } from 'react';\nimport { motion, useMotionValue, useTransform, animate } from 'framer-motion';\n\nconst AnimatedPathSecond = ({ path, duration = 8 }) => {\n  const pathRef = useRef(null);\n  const progress = useMotionValue(0);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 576);\n\n  // Преобразуем прогресс в координаты x и y\n  const x = useTransform(progress, (value) => {\n    if (!pathRef.current) return 0;\n    const point = pathRef.current.getPointAtLength(value);\n    return point.x;\n  });\n\n  const y = useTransform(progress, (value) => {\n    if (!pathRef.current) return 0;\n    const point = pathRef.current.getPointAtLength(value);\n    return point.y;\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 576);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (isMobile) {\n      // Если мобильный, не запускаем анимацию\n      return;\n    }\n\n    if (!pathRef.current) return;\n\n    const pathElement = pathRef.current;\n    const pathLength = pathElement.getTotalLength();\n\n    // Анимация прогресса\n    const animation = animate(progress, pathLength, {\n      duration,\n      repeat: Infinity,\n      ease: 'linear',\n    });\n\n    return () => animation.stop();\n  }, [progress, duration, isMobile]);\n\n  return (\n    <>\n      <path\n        ref={pathRef}\n        d={path}\n        stroke=\"#D2DADE\"\n        fill=\"none\"\n        strokeWidth=\"2\"\n      />\n      {!isMobile && (\n        <motion.circle\n          cx={x}\n          cy={y}\n          r=\"8\"\n          fill=\"#F2AB68\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default AnimatedPathSecond;","import React, { useRef, useEffect, useState } from 'react';\nimport WorksItem from '../worksItem/WorksItem';\nimport './works.scss';\nimport { workList } from '../helpers/workList';\nimport AnimatedPathSecond from '../animatedPath2/AnamatedPath2';\n\n\nconst Works = (props) => {\n    const containerRef = useRef(null);\n    const thumbRef = useRef(null);\n    const [thumbPosition, setThumbPosition] = useState(0);\n\n    useEffect(() => {\n        const container = containerRef.current;\n        const thumb = thumbRef.current;\n\n        if (!container || !thumb) return;\n\n        const updateThumbPosition = () => {\n            const scrollWidth = container.scrollWidth - container.clientWidth;\n            const scrollLeft = container.scrollLeft;\n            const thumbMaxPosition = container.clientWidth - thumb.clientWidth;\n\n            if (scrollWidth > 0) {\n                const newPosition = (scrollLeft / scrollWidth) * thumbMaxPosition;\n                setThumbPosition(newPosition);\n            }\n        };\n\n        container.addEventListener('scroll', updateThumbPosition);\n        window.addEventListener('resize', updateThumbPosition);\n\n        return () => {\n            container.removeEventListener('scroll', updateThumbPosition);\n            window.removeEventListener('resize', updateThumbPosition);\n        };\n    }, []);\n\n    const path = \"M209 0.5V89.8862C209 98.7228 216.163 105.886 225 105.886H1119C1127.84 105.886 1135 113.05 1135 121.886V273.867V341.857C1135 350.693 1142.16 357.857 1151 357.857H1246C1254.84 357.857 1262 365.02 1262 373.857V425.847C1262 434.684 1254.84 441.847 1246 441.847H1135H143C134.163 441.847 127 449.011 127 457.847V609.7V677.627C127 686.463 119.837 693.627 111 693.627H16.5C7.66344 693.627 0.5 700.79 0.5 709.627V761.553C0.5 770.39 7.66344 777.553 16.5 777.553H127H681C689.837 777.553 697 784.716 697 793.553V890\";\n    return (\n        <section className=\"section works\">\n            <div className=\"container\">\n                <h2 className=\"project_title mb80\">Как мы работаем</h2>\n                <div className=\"services_container\" ref={containerRef}>\n\n                    <div className=\"grid-row\">\n                        {workList.map((list, index) => {\n                            return <WorksItem key={index} title={list.title} img={list.img} description={list.description} />\n                        })}\n                        <svg width=\"1263\" height=\"890\" viewBox=\"0 0 1263 890\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <AnimatedPathSecond path={path} />\n                        </svg>\n                    </div>\n                </div>\n                <div className=\"custom_scrollbar\">\n                    <div\n                        className=\"custom_scrollbar_thumb\"\n                        ref={thumbRef}\n                        style={{ transform: `translateX(${thumbPosition}px)` }}\n                    />\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Works;","import photo1 from '../sfera/images/photo-camera1.png';\nimport photo2 from '../sfera/images/photo-camera2.png';\nimport photo3 from '../sfera/images/photo-camera3.png';\nimport photo4 from '../sfera/images/photo-camera4.png';\nimport photo5 from '../sfera/images/photo-camera5.png';\nimport photo6 from '../sfera/images/photo-camera6.png';\nimport photo7 from '../sfera/images/photo-camera7.png';\n\nconst sferaList = [\n    {\n        title: 'Розничная <br /> торговля',\n        link: '#!',\n        img: photo1,\n    }, \n    {\n        title: 'Автомобильный <br /> сектор',\n        link: '#!',\n        img: photo2,\n    },\n    {\n        title: 'Интернет-<br />магазины',\n        link: '#!',\n        img: photo3,\n    }, \n    {\n        title: 'Call<br />-центры',\n        link: '#!',\n        img: photo4,\n    }, \n    {\n        title: 'Сервисы для общения<br /> пользователей',\n        link: '#!',\n        img: photo5,\n    }, \n    {\n        title: 'Агентства<br /> недвижимости',\n        link: '#!',\n        img: photo6\n    }, \n    {\n        title: 'Компании в сфере<br /> обслуживания клиентов',\n        link: '#!',\n        img: photo7\n    }\n];\n\nexport {sferaList};","import react from 'react';\nimport './sferaItem.scss';\n\nconst SferaItem = (props) => {\n    return (\n        <div className=\"sfera_item\">\n            <div className=\"img-wrap\">\n                <img src={props.img} alt={props.title} width={56} height={56} loading=\"lazy\" />\n            </div>\n            <h3 className=\"sfera_item_title\" dangerouslySetInnerHTML={{ __html: props.title }} />\n            <a href={props.link} className=\"sfera_item_link\">\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M4.82087 15.1789C4.74128 15.0994 4.67814 15.0049 4.63507 14.901C4.59199 14.797 4.56982 14.6856 4.56982 14.5731C4.56982 14.4606 4.59199 14.3492 4.63507 14.2452C4.67814 14.1413 4.74128 14.0469 4.82087 13.9673L14.5272 4.26098C14.6062 4.17915 14.7007 4.11386 14.8052 4.06893C14.9096 4.02399 15.022 4.00031 15.1357 3.99927C15.2494 3.99823 15.3622 4.01985 15.4675 4.06286C15.5728 4.10587 15.6684 4.16942 15.7489 4.2498C15.8293 4.33017 15.893 4.42576 15.9361 4.531C15.9792 4.63623 16.0009 4.749 16 4.86271C15.999 4.97643 15.9755 5.08882 15.9306 5.19333C15.8858 5.29784 15.8206 5.39238 15.7388 5.47142L6.03245 15.1778C5.87187 15.3381 5.65419 15.4282 5.42723 15.4282C5.20027 15.4282 4.98259 15.3381 4.82201 15.1778L4.82087 15.1789Z\" fill=\"white\" />\n                    <path d=\"M4 4.86627C4 4.63912 4.09023 4.42128 4.25085 4.26067C4.41146 4.10006 4.6293 4.00983 4.85645 4.00983L15.1338 4.00982C15.3609 4.00982 15.5788 4.10006 15.7394 4.26067C15.9 4.42128 15.9902 4.63912 15.9902 4.86626V15.1436C15.9902 15.3707 15.9 15.5885 15.7394 15.7492C15.5788 15.9098 15.3609 16 15.1338 16C14.9066 16 14.6888 15.9098 14.5282 15.7492C14.3676 15.5885 14.2773 15.3707 14.2773 15.1436V5.72271L4.85645 5.72271C4.6293 5.72271 4.41146 5.63247 4.25085 5.47186C4.09023 5.31125 4 5.09341 4 4.86627Z\" fill=\"white\" />\n                </svg>\n            </a>\n        </div>\n    );\n}\n\nexport default SferaItem;","import {sferaList} from '../helpers/sferaList';\nimport SferaItem from '../sferaItem/SferaItem';\nimport './sfera.scss';\n\nconst Sfera = () => {\n    return ( \n        <section className=\"section sfera\">\n            <div className=\"container\">\n                <h2 className=\"project_title\">Отрасли, в которых <br /> мы работаем</h2>\n                <div className=\"grid-row\">\n            {sferaList.map((list,index)=>{\n                return <SferaItem key={index} title={list.title} img={list.img} link={list.link} />\n            })}\n                </div>\n            </div>\n        </section>\n     );\n}\n \nexport default Sfera;","import { EmblaPluginType } from 'embla-carousel'\n\nexport function isObject(subject: unknown): subject is Record<string, unknown> {\n  return Object.prototype.toString.call(subject) === '[object Object]'\n}\n\nexport function isRecord(\n  subject: unknown\n): subject is Record<string | number, unknown> {\n  return isObject(subject) || Array.isArray(subject)\n}\n\nexport function canUseDOM(): boolean {\n  return !!(\n    typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement\n  )\n}\n\nexport function areOptionsEqual(\n  optionsA: Record<string, unknown>,\n  optionsB: Record<string, unknown>\n): boolean {\n  const optionsAKeys = Object.keys(optionsA)\n  const optionsBKeys = Object.keys(optionsB)\n\n  if (optionsAKeys.length !== optionsBKeys.length) return false\n\n  const breakpointsA = JSON.stringify(Object.keys(optionsA.breakpoints || {}))\n  const breakpointsB = JSON.stringify(Object.keys(optionsB.breakpoints || {}))\n\n  if (breakpointsA !== breakpointsB) return false\n\n  return optionsAKeys.every((key) => {\n    const valueA = optionsA[key]\n    const valueB = optionsB[key]\n    if (typeof valueA === 'function') return `${valueA}` === `${valueB}`\n    if (!isRecord(valueA) || !isRecord(valueB)) return valueA === valueB\n    return areOptionsEqual(valueA, valueB)\n  })\n}\n\nexport function sortAndMapPluginToOptions(\n  plugins: EmblaPluginType[]\n): EmblaPluginType['options'][] {\n  return plugins\n    .concat()\n    .sort((a, b) => (a.name > b.name ? 1 : -1))\n    .map((plugin) => plugin.options)\n}\n\nexport function arePluginsEqual(\n  pluginsA: EmblaPluginType[],\n  pluginsB: EmblaPluginType[]\n): boolean {\n  if (pluginsA.length !== pluginsB.length) return false\n\n  const optionsA = sortAndMapPluginToOptions(pluginsA)\n  const optionsB = sortAndMapPluginToOptions(pluginsB)\n\n  return optionsA.every((optionA, index) => {\n    const optionB = optionsB[index]\n    return areOptionsEqual(optionA, optionB)\n  })\n}\n","import { PointerEventType } from './DragTracker'\n\nexport type WindowType = Window & typeof globalThis\n\nexport function isNumber(subject: unknown): subject is number {\n  return typeof subject === 'number'\n}\n\nexport function isString(subject: unknown): subject is string {\n  return typeof subject === 'string'\n}\n\nexport function isBoolean(subject: unknown): subject is boolean {\n  return typeof subject === 'boolean'\n}\n\nexport function isObject(subject: unknown): subject is Record<string, unknown> {\n  return Object.prototype.toString.call(subject) === '[object Object]'\n}\n\nexport function mathAbs(n: number): number {\n  return Math.abs(n)\n}\n\nexport function mathSign(n: number): number {\n  return Math.sign(n)\n}\n\nexport function deltaAbs(valueB: number, valueA: number): number {\n  return mathAbs(valueB - valueA)\n}\n\nexport function factorAbs(valueB: number, valueA: number): number {\n  if (valueB === 0 || valueA === 0) return 0\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA))\n  return mathAbs(diff / valueB)\n}\n\nexport function roundToTwoDecimals(num: number): number {\n  return Math.round(num * 100) / 100\n}\n\nexport function arrayKeys<Type>(array: Type[]): number[] {\n  return objectKeys(array).map(Number)\n}\n\nexport function arrayLast<Type>(array: Type[]): Type {\n  return array[arrayLastIndex(array)]\n}\n\nexport function arrayLastIndex<Type>(array: Type[]): number {\n  return Math.max(0, array.length - 1)\n}\n\nexport function arrayIsLastIndex<Type>(array: Type[], index: number): boolean {\n  return index === arrayLastIndex(array)\n}\n\nexport function arrayFromNumber(n: number, startAt: number = 0): number[] {\n  return Array.from(Array(n), (_, i) => startAt + i)\n}\n\nexport function objectKeys<Type extends object>(object: Type): string[] {\n  return Object.keys(object)\n}\n\nexport function objectsMergeDeep(\n  objectA: Record<string, unknown>,\n  objectB: Record<string, unknown>\n): Record<string, unknown> {\n  return [objectA, objectB].reduce((mergedObjects, currentObject) => {\n    objectKeys(currentObject).forEach((key) => {\n      const valueA = mergedObjects[key]\n      const valueB = currentObject[key]\n      const areObjects = isObject(valueA) && isObject(valueB)\n\n      mergedObjects[key] = areObjects\n        ? objectsMergeDeep(valueA, valueB)\n        : valueB\n    })\n    return mergedObjects\n  }, {})\n}\n\nexport function isMouseEvent(\n  evt: PointerEventType,\n  ownerWindow: WindowType\n): evt is MouseEvent {\n  return (\n    typeof ownerWindow.MouseEvent !== 'undefined' &&\n    evt instanceof ownerWindow.MouseEvent\n  )\n}\n","type EventNameType = keyof DocumentEventMap | keyof WindowEventMap\ntype EventHandlerType = (evt: any) => void\ntype EventOptionsType = boolean | AddEventListenerOptions | undefined\ntype EventRemoverType = () => void\n\nexport type EventStoreType = {\n  add: (\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options?: EventOptionsType\n  ) => EventStoreType\n  clear: () => void\n}\n\nexport function EventStore(): EventStoreType {\n  let listeners: EventRemoverType[] = []\n\n  function add(\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options: EventOptionsType = { passive: true }\n  ): EventStoreType {\n    let removeListener: EventRemoverType\n\n    if ('addEventListener' in node) {\n      node.addEventListener(type, handler, options)\n      removeListener = () => node.removeEventListener(type, handler, options)\n    } else {\n      const legacyMediaQueryList = <MediaQueryList>node\n      legacyMediaQueryList.addListener(handler)\n      removeListener = () => legacyMediaQueryList.removeListener(handler)\n    }\n\n    listeners.push(removeListener)\n    return self\n  }\n\n  function clear(): void {\n    listeners = listeners.filter((remove) => remove())\n  }\n\n  const self: EventStoreType = {\n    add,\n    clear\n  }\n  return self\n}\n","import { EngineType } from './Engine'\nimport { EventStore } from './EventStore'\nimport { WindowType } from './utils'\n\nexport type AnimationsUpdateType = (engine: EngineType) => void\nexport type AnimationsRenderType = (engine: EngineType, alpha: number) => void\n\nexport type AnimationsType = {\n  init: () => void\n  destroy: () => void\n  start: () => void\n  stop: () => void\n  update: () => void\n  render: (alpha: number) => void\n}\n\nexport function Animations(\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  update: () => void,\n  render: (alpha: number) => void\n): AnimationsType {\n  const documentVisibleHandler = EventStore()\n  const fixedTimeStep = 1000 / 60\n\n  let lastTimeStamp: number | null = null\n  let accumulatedTime = 0\n  let animationId = 0\n\n  function init(): void {\n    documentVisibleHandler.add(ownerDocument, 'visibilitychange', () => {\n      if (ownerDocument.hidden) reset()\n    })\n  }\n\n  function destroy(): void {\n    stop()\n    documentVisibleHandler.clear()\n  }\n\n  function animate(timeStamp: DOMHighResTimeStamp): void {\n    if (!animationId) return\n    if (!lastTimeStamp) {\n      lastTimeStamp = timeStamp\n      update()\n      update()\n    }\n\n    const timeElapsed = timeStamp - lastTimeStamp\n    lastTimeStamp = timeStamp\n    accumulatedTime += timeElapsed\n\n    while (accumulatedTime >= fixedTimeStep) {\n      update()\n      accumulatedTime -= fixedTimeStep\n    }\n\n    const alpha = accumulatedTime / fixedTimeStep\n    render(alpha)\n\n    if (animationId) {\n      animationId = ownerWindow.requestAnimationFrame(animate)\n    }\n  }\n\n  function start(): void {\n    if (animationId) return\n    animationId = ownerWindow.requestAnimationFrame(animate)\n  }\n\n  function stop(): void {\n    ownerWindow.cancelAnimationFrame(animationId)\n    lastTimeStamp = null\n    accumulatedTime = 0\n    animationId = 0\n  }\n\n  function reset(): void {\n    lastTimeStamp = null\n    accumulatedTime = 0\n  }\n\n  const self: AnimationsType = {\n    init,\n    destroy,\n    start,\n    stop,\n    update,\n    render\n  }\n  return self\n}\n","import { mathAbs } from './utils'\n\nexport type LimitType = {\n  min: number\n  max: number\n  length: number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(min: number = 0, max: number = 0): LimitType {\n  const length = mathAbs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  function removeOffset(n: number): number {\n    if (!length) return n\n    return n - length * Math.ceil((n - max) / length)\n  }\n\n  const self: LimitType = {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset\n  }\n  return self\n}\n","import { Limit } from './Limit'\nimport { mathAbs } from './utils'\n\nexport type CounterType = {\n  get: () => number\n  set: (n: number) => CounterType\n  add: (n: number) => CounterType\n  clone: () => CounterType\n}\n\nexport function Counter(\n  max: number,\n  start: number,\n  loop: boolean\n): CounterType {\n  const { constrain } = Limit(0, max)\n  const loopEnd = max + 1\n  let counter = withinLimit(start)\n\n  function withinLimit(n: number): number {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd)\n  }\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): CounterType {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): CounterType {\n    return clone().set(get() + n)\n  }\n\n  function clone(): CounterType {\n    return Counter(max, get(), loop)\n  }\n\n  const self: CounterType = {\n    get,\n    set,\n    add,\n    clone\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { AnimationsType } from './Animations'\nimport { CounterType } from './Counter'\nimport { DragTrackerType, PointerEventType } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { AxisType } from './Axis'\nimport { EventStore } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType } from './ScrollTarget'\nimport { ScrollToType } from './ScrollTo'\nimport { Vector1DType } from './Vector1d'\nimport { PercentOfViewType } from './PercentOfView'\nimport { Limit } from './Limit'\nimport {\n  deltaAbs,\n  factorAbs,\n  isBoolean,\n  isMouseEvent,\n  mathAbs,\n  mathSign,\n  WindowType\n} from './utils'\n\ntype DragHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  evt: PointerEventType\n) => boolean | void\n\nexport type DragHandlerOptionType = boolean | DragHandlerCallbackType\n\nexport type DragHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n  pointerDown: () => boolean\n}\n\nexport function DragHandler(\n  axis: AxisType,\n  rootNode: HTMLElement,\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  target: Vector1DType,\n  dragTracker: DragTrackerType,\n  location: Vector1DType,\n  animation: AnimationsType,\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  index: CounterType,\n  eventHandler: EventHandlerType,\n  percentOfView: PercentOfViewType,\n  dragFree: boolean,\n  dragThreshold: number,\n  skipSnaps: boolean,\n  baseFriction: number,\n  watchDrag: DragHandlerOptionType\n): DragHandlerType {\n  const { cross: crossAxis, direction } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const nonPassiveEvent = { passive: false }\n  const initEvents = EventStore()\n  const dragEvents = EventStore()\n  const goToNextThreshold = Limit(50, 225).constrain(percentOfView.measure(20))\n  const snapForceBoost = { mouse: 300, touch: 400 }\n  const freeForceBoost = { mouse: 500, touch: 600 }\n  const baseSpeed = dragFree ? 43 : 25\n\n  let isMoving = false\n  let startScroll = 0\n  let startCross = 0\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchDrag) return\n\n    function downIfAllowed(evt: PointerEventType): void {\n      if (isBoolean(watchDrag) || watchDrag(emblaApi, evt)) down(evt)\n    }\n\n    const node = rootNode\n    initEvents\n      .add(node, 'dragstart', (evt) => evt.preventDefault(), nonPassiveEvent)\n      .add(node, 'touchmove', () => undefined, nonPassiveEvent)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', downIfAllowed)\n      .add(node, 'mousedown', downIfAllowed)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click, true)\n  }\n\n  function destroy(): void {\n    initEvents.clear()\n    dragEvents.clear()\n  }\n\n  function addDragEvents(): void {\n    const node = isMouse ? ownerDocument : rootNode\n    dragEvents\n      .add(node, 'touchmove', move, nonPassiveEvent)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move, nonPassiveEvent)\n      .add(node, 'mouseup', up)\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const nodeName = node.nodeName || ''\n    return focusNodes.includes(nodeName)\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function allowedForce(force: number, targetChanged: boolean): number {\n    const next = index.add(mathSign(force) * -1)\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance\n\n    if (dragFree || mathAbs(force) < goToNextThreshold) return baseForce\n    if (skipSnaps && targetChanged) return baseForce * 0.5\n\n    return scrollTarget.byIndex(next.get(), 0).distance\n  }\n\n  function down(evt: PointerEventType): void {\n    const isMouseEvt = isMouseEvent(evt, ownerWindow)\n    isMouse = isMouseEvt\n    preventClick = dragFree && isMouseEvt && !evt.buttons && isMoving\n    isMoving = deltaAbs(target.get(), location.get()) >= 2\n\n    if (isMouseEvt && evt.button !== 0) return\n    if (isFocusNode(evt.target as Element)) return\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    scrollBody.useFriction(0).useDuration(0)\n    target.set(location)\n    addDragEvents()\n    startScroll = dragTracker.readPoint(evt)\n    startCross = dragTracker.readPoint(evt, crossAxis)\n    eventHandler.emit('pointerDown')\n  }\n\n  function move(evt: PointerEventType): void {\n    const isTouchEvt = !isMouseEvent(evt, ownerWindow)\n    if (isTouchEvt && evt.touches.length >= 2) return up(evt)\n\n    const lastScroll = dragTracker.readPoint(evt)\n    const lastCross = dragTracker.readPoint(evt, crossAxis)\n    const diffScroll = deltaAbs(lastScroll, startScroll)\n    const diffCross = deltaAbs(lastCross, startCross)\n\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt)\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll) return up(evt)\n    }\n    const diff = dragTracker.pointerMove(evt)\n    if (diffScroll > dragThreshold) preventClick = true\n\n    scrollBody.useFriction(0.3).useDuration(0.75)\n    animation.start()\n    target.add(direction(diff))\n    evt.preventDefault()\n  }\n\n  function up(evt: PointerEventType): void {\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost()\n    const force = allowedForce(direction(rawForce), targetChanged)\n    const forceFactor = factorAbs(rawForce, force)\n    const speed = baseSpeed - 10 * forceFactor\n    const friction = baseFriction + forceFactor / 50\n\n    preventScroll = false\n    pointerIsDown = false\n    dragEvents.clear()\n    scrollBody.useDuration(speed).useFriction(friction)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    eventHandler.emit('pointerUp')\n  }\n\n  function click(evt: MouseEvent): void {\n    if (preventClick) {\n      evt.stopPropagation()\n      evt.preventDefault()\n      preventClick = false\n    }\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandlerType = {\n    init,\n    destroy,\n    pointerDown\n  }\n  return self\n}\n","import { AxisOptionType, AxisType } from './Axis'\nimport { isMouseEvent, mathAbs, WindowType } from './utils'\n\ntype PointerCoordType = keyof Touch | keyof MouseEvent\nexport type PointerEventType = TouchEvent | MouseEvent\n\nexport type DragTrackerType = {\n  pointerDown: (evt: PointerEventType) => number\n  pointerMove: (evt: PointerEventType) => number\n  pointerUp: (evt: PointerEventType) => number\n  readPoint: (evt: PointerEventType, evtAxis?: AxisOptionType) => number\n}\n\nexport function DragTracker(\n  axis: AxisType,\n  ownerWindow: WindowType\n): DragTrackerType {\n  const logInterval = 170\n\n  let startEvent: PointerEventType\n  let lastEvent: PointerEventType\n\n  function readTime(evt: PointerEventType): number {\n    return evt.timeStamp\n  }\n\n  function readPoint(evt: PointerEventType, evtAxis?: AxisOptionType): number {\n    const property = evtAxis || axis.scroll\n    const coord: PointerCoordType = `client${property === 'x' ? 'X' : 'Y'}`\n    return (isMouseEvent(evt, ownerWindow) ? evt : evt.touches[0])[coord]\n  }\n\n  function pointerDown(evt: PointerEventType): number {\n    startEvent = evt\n    lastEvent = evt\n    return readPoint(evt)\n  }\n\n  function pointerMove(evt: PointerEventType): number {\n    const diff = readPoint(evt) - readPoint(lastEvent)\n    const expired = readTime(evt) - readTime(startEvent) > logInterval\n\n    lastEvent = evt\n    if (expired) startEvent = evt\n    return diff\n  }\n\n  function pointerUp(evt: PointerEventType): number {\n    if (!startEvent || !lastEvent) return 0\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent)\n    const diffTime = readTime(evt) - readTime(startEvent)\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval\n    const force = diffDrag / diffTime\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1\n\n    return isFlick ? force : 0\n  }\n\n  const self: DragTrackerType = {\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { EmblaCarouselType } from './EmblaCarousel'\nimport { EventHandlerType } from './EventHandler'\nimport { NodeRectsType } from './NodeRects'\nimport { isBoolean, mathAbs, WindowType } from './utils'\n\ntype ResizeHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  entries: ResizeObserverEntry[]\n) => boolean | void\n\nexport type ResizeHandlerOptionType = boolean | ResizeHandlerCallbackType\n\nexport type ResizeHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n}\n\nexport function ResizeHandler(\n  container: HTMLElement,\n  eventHandler: EventHandlerType,\n  ownerWindow: WindowType,\n  slides: HTMLElement[],\n  axis: AxisType,\n  watchResize: ResizeHandlerOptionType,\n  nodeRects: NodeRectsType\n): ResizeHandlerType {\n  const observeNodes = [container].concat(slides)\n  let resizeObserver: ResizeObserver\n  let containerSize: number\n  let slideSizes: number[] = []\n  let destroyed = false\n\n  function readSize(node: HTMLElement): number {\n    return axis.measureSize(nodeRects.measure(node))\n  }\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchResize) return\n\n    containerSize = readSize(container)\n    slideSizes = slides.map(readSize)\n\n    function defaultCallback(entries: ResizeObserverEntry[]): void {\n      for (const entry of entries) {\n        if (destroyed) return\n\n        const isContainer = entry.target === container\n        const slideIndex = slides.indexOf(<HTMLElement>entry.target)\n        const lastSize = isContainer ? containerSize : slideSizes[slideIndex]\n        const newSize = readSize(isContainer ? container : slides[slideIndex])\n        const diffSize = mathAbs(newSize - lastSize)\n\n        if (diffSize >= 0.5) {\n          emblaApi.reInit()\n          eventHandler.emit('resize')\n\n          break\n        }\n      }\n    }\n\n    resizeObserver = new ResizeObserver((entries) => {\n      if (isBoolean(watchResize) || watchResize(emblaApi, entries)) {\n        defaultCallback(entries)\n      }\n    })\n\n    ownerWindow.requestAnimationFrame(() => {\n      observeNodes.forEach((node) => resizeObserver.observe(node))\n    })\n  }\n\n  function destroy(): void {\n    destroyed = true\n    if (resizeObserver) resizeObserver.disconnect()\n  }\n\n  const self: ResizeHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { ScrollBodyType } from './ScrollBody'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs } from './utils'\nimport { PercentOfViewType } from './PercentOfView'\n\nexport type ScrollBoundsType = {\n  shouldConstrain: () => boolean\n  constrain: (pointerDown: boolean) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(\n  limit: LimitType,\n  location: Vector1DType,\n  target: Vector1DType,\n  scrollBody: ScrollBodyType,\n  percentOfView: PercentOfViewType\n): ScrollBoundsType {\n  const pullBackThreshold = percentOfView.measure(10)\n  const edgeOffsetTolerance = percentOfView.measure(50)\n  const frictionLimit = Limit(0.1, 0.99)\n  let disabled = false\n\n  function shouldConstrain(): boolean {\n    if (disabled) return false\n    if (!limit.reachedAny(target.get())) return false\n    if (!limit.reachedAny(location.get())) return false\n    return true\n  }\n\n  function constrain(pointerDown: boolean): void {\n    if (!shouldConstrain()) return\n    const edge = limit.reachedMin(location.get()) ? 'min' : 'max'\n    const diffToEdge = mathAbs(limit[edge] - location.get())\n    const diffToTarget = target.get() - location.get()\n    const friction = frictionLimit.constrain(diffToEdge / edgeOffsetTolerance)\n\n    target.subtract(diffToTarget * friction)\n\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()))\n      scrollBody.useDuration(25).useBaseFriction()\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBoundsType = {\n    shouldConstrain,\n    constrain,\n    toggleActive\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollLooperType = {\n  loop: (direction: number) => void\n}\n\nexport function ScrollLooper(\n  contentSize: number,\n  limit: LimitType,\n  location: Vector1DType,\n  vectors: Vector1DType[]\n): ScrollLooperType {\n  const jointSafety = 0.1\n  const min = limit.min + jointSafety\n  const max = limit.max + jointSafety\n  const { reachedMin, reachedMax } = Limit(min, max)\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(location.get())\n    if (direction === -1) return reachedMin(location.get())\n    return false\n  }\n\n  function loop(direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach((v) => v.add(loopDistance))\n  }\n\n  const self: ScrollLooperType = {\n    loop\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\nimport { arrayLast, mathAbs, mathSign } from './utils'\n\nexport type TargetType = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTargetType = {\n  byIndex: (target: number, direction: number) => TargetType\n  byDistance: (force: number, snap: boolean) => TargetType\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(\n  loop: boolean,\n  scrollSnaps: number[],\n  contentSize: number,\n  limit: LimitType,\n  targetVector: Vector1DType\n): ScrollTargetType {\n  const { reachedAny, removeOffset, constrain } = limit\n\n  function minDistance(distances: number[]): number {\n    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0]\n  }\n\n  function findTargetSnap(target: number): TargetType {\n    const distance = loop ? removeOffset(target) : constrain(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map((snap, index) => ({ diff: shortcut(snap - distance, 0), index }))\n      .sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const targets = [target, target + contentSize, target - contentSize]\n\n    if (!loop) return target\n    if (!direction) return minDistance(targets)\n\n    const matchingTargets = targets.filter((t) => mathSign(t) === direction)\n    if (matchingTargets.length) return minDistance(matchingTargets)\n    return arrayLast(targets) - contentSize\n  }\n\n  function byIndex(index: number, direction: number): TargetType {\n    const diffToSnap = scrollSnaps[index] - targetVector.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): TargetType {\n    const target = targetVector.get() + distance\n    const { index, distance: targetSnapDistance } = findTargetSnap(target)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTargetType = {\n    byDistance,\n    byIndex,\n    shortcut\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { EventHandlerType } from './EventHandler'\nimport { EventStoreType } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollToType } from './ScrollTo'\nimport { SlideRegistryType } from './SlideRegistry'\nimport { isBoolean, isNumber } from './utils'\n\ntype FocusHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  evt: FocusEvent\n) => boolean | void\n\nexport type FocusHandlerOptionType = boolean | FocusHandlerCallbackType\n\nexport type SlideFocusType = {\n  init: (emblaApi: EmblaCarouselType) => void\n}\n\nexport function SlideFocus(\n  root: HTMLElement,\n  slides: HTMLElement[],\n  slideRegistry: SlideRegistryType['slideRegistry'],\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  eventStore: EventStoreType,\n  eventHandler: EventHandlerType,\n  watchFocus: FocusHandlerOptionType\n): SlideFocusType {\n  const focusListenerOptions = { passive: true, capture: true }\n  let lastTabPressTime = 0\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchFocus) return\n\n    function defaultCallback(index: number): void {\n      const nowTime = new Date().getTime()\n      const diffTime = nowTime - lastTabPressTime\n\n      if (diffTime > 10) return\n\n      eventHandler.emit('slideFocusStart')\n      root.scrollLeft = 0\n\n      const group = slideRegistry.findIndex((group) => group.includes(index))\n\n      if (!isNumber(group)) return\n\n      scrollBody.useDuration(0)\n      scrollTo.index(group, 0)\n\n      eventHandler.emit('slideFocus')\n    }\n\n    eventStore.add(document, 'keydown', registerTabPress, false)\n\n    slides.forEach((slide, slideIndex) => {\n      eventStore.add(\n        slide,\n        'focus',\n        (evt: FocusEvent) => {\n          if (isBoolean(watchFocus) || watchFocus(emblaApi, evt)) {\n            defaultCallback(slideIndex)\n          }\n        },\n        focusListenerOptions\n      )\n    })\n  }\n\n  function registerTabPress(event: KeyboardEvent): void {\n    if (event.code === 'Tab') lastTabPressTime = new Date().getTime()\n  }\n\n  const self: SlideFocusType = {\n    init\n  }\n  return self\n}\n","import { isNumber } from './utils'\n\nexport type Vector1DType = {\n  get: () => number\n  set: (n: Vector1DType | number) => void\n  add: (n: Vector1DType | number) => void\n  subtract: (n: Vector1DType | number) => void\n}\n\nexport function Vector1D(initialValue: number): Vector1DType {\n  let value = initialValue\n\n  function get(): number {\n    return value\n  }\n\n  function set(n: Vector1DType | number): void {\n    value = normalizeInput(n)\n  }\n\n  function add(n: Vector1DType | number): void {\n    value += normalizeInput(n)\n  }\n\n  function subtract(n: Vector1DType | number): void {\n    value -= normalizeInput(n)\n  }\n\n  function normalizeInput(n: Vector1DType | number): number {\n    return isNumber(n) ? n : n.get()\n  }\n\n  const self: Vector1DType = {\n    get,\n    set,\n    add,\n    subtract\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { roundToTwoDecimals } from './utils'\n\nexport type TranslateType = {\n  clear: () => void\n  to: (target: number) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(\n  axis: AxisType,\n  container: HTMLElement\n): TranslateType {\n  const translate = axis.scroll === 'x' ? x : y\n  const containerStyle = container.style\n  let previousTarget: number | null = null\n  let disabled = false\n\n  function x(n: number): string {\n    return `translate3d(${n}px,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}px,0px)`\n  }\n\n  function to(target: number): void {\n    if (disabled) return\n\n    const newTarget = roundToTwoDecimals(axis.direction(target))\n    if (newTarget === previousTarget) return\n\n    containerStyle.transform = translate(newTarget)\n    previousTarget = newTarget\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    if (disabled) return\n    containerStyle.transform = ''\n    if (!container.getAttribute('style')) container.removeAttribute('style')\n  }\n\n  const self: TranslateType = {\n    clear,\n    to,\n    toggleActive\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayKeys } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { Translate, TranslateType } from './Translate'\n\ntype SlideBoundType = {\n  start: number\n  end: number\n}\n\ntype LoopPointType = {\n  loopPoint: number\n  index: number\n  translate: TranslateType\n  slideLocation: Vector1DType\n  target: () => number\n}\n\nexport type SlideLooperType = {\n  canLoop: () => boolean\n  clear: () => void\n  loop: () => void\n  loopPoints: LoopPointType[]\n}\n\nexport function SlideLooper(\n  axis: AxisType,\n  viewSize: number,\n  contentSize: number,\n  slideSizes: number[],\n  slideSizesWithGaps: number[],\n  snaps: number[],\n  scrollSnaps: number[],\n  location: Vector1DType,\n  slides: HTMLElement[]\n): SlideLooperType {\n  const roundingSafety = 0.5\n  const ascItems = arrayKeys(slideSizesWithGaps)\n  const descItems = arrayKeys(slideSizesWithGaps).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n\n  function removeSlideSizes(indexes: number[], from: number): number {\n    return indexes.reduce((a: number, i) => {\n      return a - slideSizesWithGaps[i]\n    }, from)\n  }\n\n  function slidesInGap(indexes: number[], gap: number): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const remainingGap = removeSlideSizes(a, gap)\n      return remainingGap > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function findSlideBounds(offset: number): SlideBoundType[] {\n    return snaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + roundingSafety + offset,\n      end: snap + viewSize - roundingSafety + offset\n    }))\n  }\n\n  function findLoopPoints(\n    indexes: number[],\n    offset: number,\n    isEndEdge: boolean\n  ): LoopPointType[] {\n    const slideBounds = findSlideBounds(offset)\n\n    return indexes.map((index) => {\n      const initial = isEndEdge ? 0 : -contentSize\n      const altered = isEndEdge ? contentSize : 0\n      const boundEdge = isEndEdge ? 'end' : 'start'\n      const loopPoint = slideBounds[index][boundEdge]\n\n      return {\n        index,\n        loopPoint,\n        slideLocation: Vector1D(-1),\n        translate: Translate(axis, slides[index]),\n        target: () => (location.get() > loopPoint ? initial : altered)\n      }\n    })\n  }\n\n  function startPoints(): LoopPointType[] {\n    const gap = scrollSnaps[0]\n    const indexes = slidesInGap(descItems, gap)\n    return findLoopPoints(indexes, contentSize, false)\n  }\n\n  function endPoints(): LoopPointType[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = slidesInGap(ascItems, gap)\n    return findLoopPoints(indexes, -contentSize, true)\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter((i) => i !== index)\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1\n    })\n  }\n\n  function loop(): void {\n    loopPoints.forEach((loopPoint) => {\n      const { target, translate, slideLocation } = loopPoint\n      const shiftLocation = target()\n      if (shiftLocation === slideLocation.get()) return\n      translate.to(shiftLocation)\n      slideLocation.set(shiftLocation)\n    })\n  }\n\n  function clear(): void {\n    loopPoints.forEach((loopPoint) => loopPoint.translate.clear())\n  }\n\n  const self: SlideLooperType = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { EventHandlerType } from './EventHandler'\nimport { isBoolean } from './utils'\n\ntype SlidesHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  mutations: MutationRecord[]\n) => boolean | void\n\nexport type SlidesHandlerOptionType = boolean | SlidesHandlerCallbackType\n\nexport type SlidesHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n}\n\nexport function SlidesHandler(\n  container: HTMLElement,\n  eventHandler: EventHandlerType,\n  watchSlides: SlidesHandlerOptionType\n): SlidesHandlerType {\n  let mutationObserver: MutationObserver\n  let destroyed = false\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchSlides) return\n\n    function defaultCallback(mutations: MutationRecord[]): void {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          emblaApi.reInit()\n          eventHandler.emit('slidesChanged')\n          break\n        }\n      }\n    }\n\n    mutationObserver = new MutationObserver((mutations) => {\n      if (destroyed) return\n      if (isBoolean(watchSlides) || watchSlides(emblaApi, mutations)) {\n        defaultCallback(mutations)\n      }\n    })\n\n    mutationObserver.observe(container, { childList: true })\n  }\n\n  function destroy(): void {\n    if (mutationObserver) mutationObserver.disconnect()\n    destroyed = true\n  }\n\n  const self: SlidesHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { EventHandlerType } from './EventHandler'\nimport { objectKeys } from './utils'\n\ntype IntersectionEntryMapType = {\n  [key: number]: IntersectionObserverEntry\n}\n\nexport type SlidesInViewOptionsType = IntersectionObserverInit['threshold']\n\nexport type SlidesInViewType = {\n  init: () => void\n  destroy: () => void\n  get: (inView?: boolean) => number[]\n}\n\nexport function SlidesInView(\n  container: HTMLElement,\n  slides: HTMLElement[],\n  eventHandler: EventHandlerType,\n  threshold: SlidesInViewOptionsType\n): SlidesInViewType {\n  const intersectionEntryMap: IntersectionEntryMapType = {}\n  let inViewCache: number[] | null = null\n  let notInViewCache: number[] | null = null\n  let intersectionObserver: IntersectionObserver\n  let destroyed = false\n\n  function init(): void {\n    intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        if (destroyed) return\n\n        entries.forEach((entry) => {\n          const index = slides.indexOf(<HTMLElement>entry.target)\n          intersectionEntryMap[index] = entry\n        })\n\n        inViewCache = null\n        notInViewCache = null\n        eventHandler.emit('slidesInView')\n      },\n      {\n        root: container.parentElement,\n        threshold\n      }\n    )\n\n    slides.forEach((slide) => intersectionObserver.observe(slide))\n  }\n\n  function destroy(): void {\n    if (intersectionObserver) intersectionObserver.disconnect()\n    destroyed = true\n  }\n\n  function createInViewList(inView: boolean): number[] {\n    return objectKeys(intersectionEntryMap).reduce(\n      (list: number[], slideIndex) => {\n        const index = parseInt(slideIndex)\n        const { isIntersecting } = intersectionEntryMap[index]\n        const inViewMatch = inView && isIntersecting\n        const notInViewMatch = !inView && !isIntersecting\n\n        if (inViewMatch || notInViewMatch) list.push(index)\n        return list\n      },\n      []\n    )\n  }\n\n  function get(inView: boolean = true): number[] {\n    if (inView && inViewCache) return inViewCache\n    if (!inView && notInViewCache) return notInViewCache\n\n    const slideIndexes = createInViewList(inView)\n\n    if (inView) inViewCache = slideIndexes\n    if (!inView) notInViewCache = slideIndexes\n\n    return slideIndexes\n  }\n\n  const self: SlidesInViewType = {\n    init,\n    destroy,\n    get\n  }\n\n  return self\n}\n","import { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport {\n  arrayKeys,\n  arrayLast,\n  arrayLastIndex,\n  isNumber,\n  mathAbs\n} from './utils'\n\nexport type SlidesToScrollOptionType = 'auto' | number\n\nexport type SlidesToScrollType = {\n  groupSlides: <Type>(array: Type[]) => Type[][]\n}\n\nexport function SlidesToScroll(\n  axis: AxisType,\n  viewSize: number,\n  slidesToScroll: SlidesToScrollOptionType,\n  loop: boolean,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  startGap: number,\n  endGap: number,\n  pixelTolerance: number\n): SlidesToScrollType {\n  const { startEdge, endEdge, direction } = axis\n  const groupByNumber = isNumber(slidesToScroll)\n\n  function byNumber<Type>(array: Type[], groupSize: number): Type[][] {\n    return arrayKeys(array)\n      .filter((i) => i % groupSize === 0)\n      .map((i) => array.slice(i, i + groupSize))\n  }\n\n  function bySize<Type>(array: Type[]): Type[][] {\n    if (!array.length) return []\n\n    return arrayKeys(array)\n      .reduce((groups: number[], rectB, index) => {\n        const rectA = arrayLast(groups) || 0\n        const isFirst = rectA === 0\n        const isLast = rectB === arrayLastIndex(array)\n\n        const edgeA = containerRect[startEdge] - slideRects[rectA][startEdge]\n        const edgeB = containerRect[startEdge] - slideRects[rectB][endEdge]\n        const gapA = !loop && isFirst ? direction(startGap) : 0\n        const gapB = !loop && isLast ? direction(endGap) : 0\n        const chunkSize = mathAbs(edgeB - gapB - (edgeA + gapA))\n\n        if (index && chunkSize > viewSize + pixelTolerance) groups.push(rectB)\n        if (isLast) groups.push(array.length)\n        return groups\n      }, [])\n      .map((currentSize, index, groups) => {\n        const previousSize = Math.max(groups[index - 1] || 0)\n        return array.slice(previousSize, currentSize)\n      })\n  }\n\n  function groupSlides<Type>(array: Type[]): Type[][] {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array)\n  }\n\n  const self: SlidesToScrollType = {\n    groupSlides\n  }\n  return self\n}\n","import { Alignment } from './Alignment'\nimport {\n  Animations,\n  AnimationsType,\n  AnimationsUpdateType,\n  AnimationsRenderType\n} from './Animations'\nimport { Axis, AxisType } from './Axis'\nimport { Counter, CounterType } from './Counter'\nimport { DragHandler, DragHandlerType } from './DragHandler'\nimport { DragTracker } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { EventStore, EventStoreType } from './EventStore'\nimport { LimitType } from './Limit'\nimport { NodeRectType, NodeRects } from './NodeRects'\nimport { OptionsType } from './Options'\nimport { PercentOfView, PercentOfViewType } from './PercentOfView'\nimport { ResizeHandler, ResizeHandlerType } from './ResizeHandler'\nimport { ScrollBody, ScrollBodyType } from './ScrollBody'\nimport { ScrollBounds, ScrollBoundsType } from './ScrollBounds'\nimport { ScrollContain } from './ScrollContain'\nimport { ScrollLimit } from './ScrollLimit'\nimport { ScrollLooper, ScrollLooperType } from './ScrollLooper'\nimport { ScrollProgress, ScrollProgressType } from './ScrollProgress'\nimport { ScrollSnaps } from './ScrollSnaps'\nimport { SlideRegistry, SlideRegistryType } from './SlideRegistry'\nimport { ScrollTarget, ScrollTargetType } from './ScrollTarget'\nimport { ScrollTo, ScrollToType } from './ScrollTo'\nimport { SlideFocus, SlideFocusType } from './SlideFocus'\nimport { SlideLooper, SlideLooperType } from './SlideLooper'\nimport { SlidesHandler, SlidesHandlerType } from './SlidesHandler'\nimport { SlidesInView, SlidesInViewType } from './SlidesInView'\nimport { SlideSizes } from './SlideSizes'\nimport { SlidesToScroll, SlidesToScrollType } from './SlidesToScroll'\nimport { Translate, TranslateType } from './Translate'\nimport { arrayKeys, arrayLast, arrayLastIndex, WindowType } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type EngineType = {\n  ownerDocument: Document\n  ownerWindow: WindowType\n  eventHandler: EventHandlerType\n  axis: AxisType\n  animation: AnimationsType\n  scrollBounds: ScrollBoundsType\n  scrollLooper: ScrollLooperType\n  scrollProgress: ScrollProgressType\n  index: CounterType\n  indexPrevious: CounterType\n  limit: LimitType\n  location: Vector1DType\n  offsetLocation: Vector1DType\n  previousLocation: Vector1DType\n  options: OptionsType\n  percentOfView: PercentOfViewType\n  scrollBody: ScrollBodyType\n  dragHandler: DragHandlerType\n  eventStore: EventStoreType\n  slideLooper: SlideLooperType\n  slidesInView: SlidesInViewType\n  slidesToScroll: SlidesToScrollType\n  target: Vector1DType\n  translate: TranslateType\n  resizeHandler: ResizeHandlerType\n  slidesHandler: SlidesHandlerType\n  scrollTo: ScrollToType\n  scrollTarget: ScrollTargetType\n  scrollSnapList: number[]\n  scrollSnaps: number[]\n  slideIndexes: number[]\n  slideFocus: SlideFocusType\n  slideRegistry: SlideRegistryType['slideRegistry']\n  containerRect: NodeRectType\n  slideRects: NodeRectType[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  options: OptionsType,\n  eventHandler: EventHandlerType\n): EngineType {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction,\n    startIndex,\n    loop,\n    duration,\n    dragFree,\n    dragThreshold,\n    inViewThreshold,\n    slidesToScroll: groupSlides,\n    skipSnaps,\n    containScroll,\n    watchResize,\n    watchSlides,\n    watchDrag,\n    watchFocus\n  } = options\n\n  // Measurements\n  const pixelTolerance = 2\n  const nodeRects = NodeRects()\n  const containerRect = nodeRects.measure(container)\n  const slideRects = slides.map(nodeRects.measure)\n  const axis = Axis(scrollAxis, direction)\n  const viewSize = axis.measureSize(containerRect)\n  const percentOfView = PercentOfView(viewSize)\n  const alignment = Alignment(align, viewSize)\n  const containSnaps = !loop && !!containScroll\n  const readEdgeGap = loop || !!containScroll\n  const { slideSizes, slideSizesWithGaps, startGap, endGap } = SlideSizes(\n    axis,\n    containerRect,\n    slideRects,\n    slides,\n    readEdgeGap,\n    ownerWindow\n  )\n  const slidesToScroll = SlidesToScroll(\n    axis,\n    viewSize,\n    groupSlides,\n    loop,\n    containerRect,\n    slideRects,\n    startGap,\n    endGap,\n    pixelTolerance\n  )\n  const { snaps, snapsAligned } = ScrollSnaps(\n    axis,\n    alignment,\n    containerRect,\n    slideRects,\n    slidesToScroll\n  )\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps)\n  const { snapsContained, scrollContainLimit } = ScrollContain(\n    viewSize,\n    contentSize,\n    snapsAligned,\n    containScroll,\n    pixelTolerance\n  )\n  const scrollSnaps = containSnaps ? snapsContained : snapsAligned\n  const { limit } = ScrollLimit(contentSize, scrollSnaps, loop)\n\n  // Indexes\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop)\n  const indexPrevious = index.clone()\n  const slideIndexes = arrayKeys(slides)\n\n  // Animation\n  const update: AnimationsUpdateType = ({\n    dragHandler,\n    scrollBody,\n    scrollBounds,\n    options: { loop }\n  }) => {\n    if (!loop) scrollBounds.constrain(dragHandler.pointerDown())\n    scrollBody.seek()\n  }\n\n  const render: AnimationsRenderType = (\n    {\n      scrollBody,\n      translate,\n      location,\n      offsetLocation,\n      previousLocation,\n      scrollLooper,\n      slideLooper,\n      dragHandler,\n      animation,\n      eventHandler,\n      scrollBounds,\n      options: { loop }\n    },\n    alpha\n  ) => {\n    const shouldSettle = scrollBody.settled()\n    const withinBounds = !scrollBounds.shouldConstrain()\n    const hasSettled = loop ? shouldSettle : shouldSettle && withinBounds\n\n    if (hasSettled && !dragHandler.pointerDown()) {\n      animation.stop()\n      eventHandler.emit('settle')\n    }\n    if (!hasSettled) eventHandler.emit('scroll')\n\n    const interpolatedLocation =\n      location.get() * alpha + previousLocation.get() * (1 - alpha)\n\n    offsetLocation.set(interpolatedLocation)\n\n    if (loop) {\n      scrollLooper.loop(scrollBody.direction())\n      slideLooper.loop()\n    }\n\n    translate.to(offsetLocation.get())\n  }\n\n  const animation = Animations(\n    ownerDocument,\n    ownerWindow,\n    () => update(engine),\n    (alpha: number) => render(engine, alpha)\n  )\n\n  // Shared\n  const friction = 0.68\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const previousLocation = Vector1D(startLocation)\n  const offsetLocation = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const scrollBody = ScrollBody(\n    location,\n    offsetLocation,\n    previousLocation,\n    target,\n    duration,\n    friction\n  )\n  const scrollTarget = ScrollTarget(\n    loop,\n    scrollSnaps,\n    contentSize,\n    limit,\n    target\n  )\n  const scrollTo = ScrollTo(\n    animation,\n    index,\n    indexPrevious,\n    scrollBody,\n    scrollTarget,\n    target,\n    eventHandler\n  )\n  const scrollProgress = ScrollProgress(limit)\n  const eventStore = EventStore()\n  const slidesInView = SlidesInView(\n    container,\n    slides,\n    eventHandler,\n    inViewThreshold\n  )\n  const { slideRegistry } = SlideRegistry(\n    containSnaps,\n    containScroll,\n    scrollSnaps,\n    scrollContainLimit,\n    slidesToScroll,\n    slideIndexes\n  )\n  const slideFocus = SlideFocus(\n    root,\n    slides,\n    slideRegistry,\n    scrollTo,\n    scrollBody,\n    eventStore,\n    eventHandler,\n    watchFocus\n  )\n\n  // Engine\n  const engine: EngineType = {\n    ownerDocument,\n    ownerWindow,\n    eventHandler,\n    containerRect,\n    slideRects,\n    animation,\n    axis,\n    dragHandler: DragHandler(\n      axis,\n      root,\n      ownerDocument,\n      ownerWindow,\n      target,\n      DragTracker(axis, ownerWindow),\n      location,\n      animation,\n      scrollTo,\n      scrollBody,\n      scrollTarget,\n      index,\n      eventHandler,\n      percentOfView,\n      dragFree,\n      dragThreshold,\n      skipSnaps,\n      friction,\n      watchDrag\n    ),\n    eventStore,\n    percentOfView,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    offsetLocation,\n    previousLocation,\n    options,\n    resizeHandler: ResizeHandler(\n      container,\n      eventHandler,\n      ownerWindow,\n      slides,\n      axis,\n      watchResize,\n      nodeRects\n    ),\n    scrollBody,\n    scrollBounds: ScrollBounds(\n      limit,\n      offsetLocation,\n      target,\n      scrollBody,\n      percentOfView\n    ),\n    scrollLooper: ScrollLooper(contentSize, limit, offsetLocation, [\n      location,\n      offsetLocation,\n      previousLocation,\n      target\n    ]),\n    scrollProgress,\n    scrollSnapList: scrollSnaps.map(scrollProgress.get),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper(\n      axis,\n      viewSize,\n      contentSize,\n      slideSizes,\n      slideSizesWithGaps,\n      snaps,\n      scrollSnaps,\n      offsetLocation,\n      slides\n    ),\n    slideFocus,\n    slidesHandler: SlidesHandler(container, eventHandler, watchSlides),\n    slidesInView,\n    slideIndexes,\n    slideRegistry,\n    slidesToScroll,\n    target,\n    translate: Translate(axis, container)\n  }\n\n  return engine\n}\n","export type NodeRectType = {\n  top: number\n  right: number\n  bottom: number\n  left: number\n  width: number\n  height: number\n}\n\nexport type NodeRectsType = {\n  measure: (node: HTMLElement) => NodeRectType\n}\n\nexport function NodeRects(): NodeRectsType {\n  function measure(node: HTMLElement): NodeRectType {\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = node\n    const offset: NodeRectType = {\n      top: offsetTop,\n      right: offsetLeft + offsetWidth,\n      bottom: offsetTop + offsetHeight,\n      left: offsetLeft,\n      width: offsetWidth,\n      height: offsetHeight\n    }\n\n    return offset\n  }\n\n  const self: NodeRectsType = {\n    measure\n  }\n  return self\n}\n","import { NodeRectType } from './NodeRects'\n\nexport type AxisOptionType = 'x' | 'y'\nexport type AxisDirectionOptionType = 'ltr' | 'rtl'\ntype AxisEdgeType = 'top' | 'right' | 'bottom' | 'left'\n\nexport type AxisType = {\n  scroll: AxisOptionType\n  cross: AxisOptionType\n  startEdge: AxisEdgeType\n  endEdge: AxisEdgeType\n  measureSize: (nodeRect: NodeRectType) => number\n  direction: (n: number) => number\n}\n\nexport function Axis(\n  axis: AxisOptionType,\n  contentDirection: AxisDirectionOptionType\n): AxisType {\n  const isRightToLeft = contentDirection === 'rtl'\n  const isVertical = axis === 'y'\n  const scroll = isVertical ? 'y' : 'x'\n  const cross = isVertical ? 'x' : 'y'\n  const sign = !isVertical && isRightToLeft ? -1 : 1\n  const startEdge = getStartEdge()\n  const endEdge = getEndEdge()\n\n  function measureSize(nodeRect: NodeRectType): number {\n    const { height, width } = nodeRect\n    return isVertical ? height : width\n  }\n\n  function getStartEdge(): AxisEdgeType {\n    if (isVertical) return 'top'\n    return isRightToLeft ? 'right' : 'left'\n  }\n\n  function getEndEdge(): AxisEdgeType {\n    if (isVertical) return 'bottom'\n    return isRightToLeft ? 'left' : 'right'\n  }\n\n  function direction(n: number): number {\n    return n * sign\n  }\n\n  const self: AxisType = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize,\n    direction\n  }\n  return self\n}\n","export type PercentOfViewType = {\n  measure: (n: number) => number\n}\n\nexport function PercentOfView(viewSize: number): PercentOfViewType {\n  function measure(n: number): number {\n    return viewSize * (n / 100)\n  }\n\n  const self: PercentOfViewType = {\n    measure\n  }\n  return self\n}\n","import { isString } from './utils'\n\nexport type AlignmentOptionType =\n  | 'start'\n  | 'center'\n  | 'end'\n  | ((viewSize: number, snapSize: number, index: number) => number)\n\nexport type AlignmentType = {\n  measure: (n: number, index: number) => number\n}\n\nexport function Alignment(\n  align: AlignmentOptionType,\n  viewSize: number\n): AlignmentType {\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function measure(n: number, index: number): number {\n    if (isString(align)) return predefined[align](n)\n    return align(viewSize, n, index)\n  }\n\n  const self: AlignmentType = {\n    measure\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport { arrayIsLastIndex, arrayLast, mathAbs, WindowType } from './utils'\n\nexport type SlideSizesType = {\n  slideSizes: number[]\n  slideSizesWithGaps: number[]\n  startGap: number\n  endGap: number\n}\n\nexport function SlideSizes(\n  axis: AxisType,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  slides: HTMLElement[],\n  readEdgeGap: boolean,\n  ownerWindow: WindowType\n): SlideSizesType {\n  const { measureSize, startEdge, endEdge } = axis\n  const withEdgeGap = slideRects[0] && readEdgeGap\n  const startGap = measureStartGap()\n  const endGap = measureEndGap()\n  const slideSizes = slideRects.map(measureSize)\n  const slideSizesWithGaps = measureWithGaps()\n\n  function measureStartGap(): number {\n    if (!withEdgeGap) return 0\n    const slideRect = slideRects[0]\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge])\n  }\n\n  function measureEndGap(): number {\n    if (!withEdgeGap) return 0\n    const style = ownerWindow.getComputedStyle(arrayLast(slides))\n    return parseFloat(style.getPropertyValue(`margin-${endEdge}`))\n  }\n\n  function measureWithGaps(): number[] {\n    return slideRects\n      .map((rect, index, rects) => {\n        const isFirst = !index\n        const isLast = arrayIsLastIndex(rects, index)\n        if (isFirst) return slideSizes[index] + startGap\n        if (isLast) return slideSizes[index] + endGap\n        return rects[index + 1][startEdge] - rect[startEdge]\n      })\n      .map(mathAbs)\n  }\n\n  const self: SlideSizesType = {\n    slideSizes,\n    slideSizesWithGaps,\n    startGap,\n    endGap\n  }\n  return self\n}\n","import { AlignmentType } from './Alignment'\nimport { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport { arrayLast, mathAbs } from './utils'\n\nexport type ScrollSnapsType = {\n  snaps: number[]\n  snapsAligned: number[]\n}\n\nexport function ScrollSnaps(\n  axis: AxisType,\n  alignment: AlignmentType,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  slidesToScroll: SlidesToScrollType\n): ScrollSnapsType {\n  const { startEdge, endEdge } = axis\n  const { groupSlides } = slidesToScroll\n  const alignments = measureSizes().map(alignment.measure)\n  const snaps = measureUnaligned()\n  const snapsAligned = measureAligned()\n\n  function measureSizes(): number[] {\n    return groupSlides(slideRects)\n      .map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge])\n      .map(mathAbs)\n  }\n\n  function measureUnaligned(): number[] {\n    return slideRects\n      .map((rect) => containerRect[startEdge] - rect[startEdge])\n      .map((snap) => -mathAbs(snap))\n  }\n\n  function measureAligned(): number[] {\n    return groupSlides(snaps)\n      .map((g) => g[0])\n      .map((snap, index) => snap + alignments[index])\n  }\n\n  const self: ScrollSnapsType = {\n    snaps,\n    snapsAligned\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayIsLastIndex, arrayLast, deltaAbs } from './utils'\n\nexport type ScrollContainOptionType = false | 'trimSnaps' | 'keepSnaps'\n\nexport type ScrollContainType = {\n  snapsContained: number[]\n  scrollContainLimit: LimitType\n}\n\nexport function ScrollContain(\n  viewSize: number,\n  contentSize: number,\n  snapsAligned: number[],\n  containScroll: ScrollContainOptionType,\n  pixelTolerance: number\n): ScrollContainType {\n  const scrollBounds = Limit(-contentSize + viewSize, 0)\n  const snapsBounded = measureBounded()\n  const scrollContainLimit = findScrollContainLimit()\n  const snapsContained = measureContained()\n\n  function usePixelTolerance(bound: number, snap: number): boolean {\n    return deltaAbs(bound, snap) <= 1\n  }\n\n  function findScrollContainLimit(): LimitType {\n    const startSnap = snapsBounded[0]\n    const endSnap = arrayLast(snapsBounded)\n    const min = snapsBounded.lastIndexOf(startSnap)\n    const max = snapsBounded.indexOf(endSnap) + 1\n    return Limit(min, max)\n  }\n\n  function measureBounded(): number[] {\n    return snapsAligned\n      .map((snapAligned, index) => {\n        const { min, max } = scrollBounds\n        const snap = scrollBounds.constrain(snapAligned)\n        const isFirst = !index\n        const isLast = arrayIsLastIndex(snapsAligned, index)\n        if (isFirst) return max\n        if (isLast) return min\n        if (usePixelTolerance(min, snap)) return min\n        if (usePixelTolerance(max, snap)) return max\n        return snap\n      })\n      .map((scrollBound) => parseFloat(scrollBound.toFixed(3)))\n  }\n\n  function measureContained(): number[] {\n    if (contentSize <= viewSize + pixelTolerance) return [scrollBounds.max]\n    if (containScroll === 'keepSnaps') return snapsBounded\n    const { min, max } = scrollContainLimit\n    return snapsBounded.slice(min, max)\n  }\n\n  const self: ScrollContainType = {\n    snapsContained,\n    scrollContainLimit\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollLimitType = {\n  limit: LimitType\n}\n\nexport function ScrollLimit(\n  contentSize: number,\n  scrollSnaps: number[],\n  loop: boolean\n): ScrollLimitType {\n  const max = scrollSnaps[0]\n  const min = loop ? max - contentSize : arrayLast(scrollSnaps)\n  const limit = Limit(min, max)\n\n  const self: ScrollLimitType = {\n    limit\n  }\n  return self\n}\n","import { mathSign, mathAbs } from './utils'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollBodyType = {\n  direction: () => number\n  duration: () => number\n  velocity: () => number\n  seek: () => ScrollBodyType\n  settled: () => boolean\n  useBaseFriction: () => ScrollBodyType\n  useBaseDuration: () => ScrollBodyType\n  useFriction: (n: number) => ScrollBodyType\n  useDuration: (n: number) => ScrollBodyType\n}\n\nexport function ScrollBody(\n  location: Vector1DType,\n  offsetLocation: Vector1DType,\n  previousLocation: Vector1DType,\n  target: Vector1DType,\n  baseDuration: number,\n  baseFriction: number\n): ScrollBodyType {\n  let scrollVelocity = 0\n  let scrollDirection = 0\n  let scrollDuration = baseDuration\n  let scrollFriction = baseFriction\n  let rawLocation = location.get()\n  let rawLocationPrevious = 0\n\n  function seek(): ScrollBodyType {\n    const displacement = target.get() - location.get()\n    const isInstant = !scrollDuration\n    let scrollDistance = 0\n\n    if (isInstant) {\n      scrollVelocity = 0\n      previousLocation.set(target)\n      location.set(target)\n\n      scrollDistance = displacement\n    } else {\n      previousLocation.set(location)\n\n      scrollVelocity += displacement / scrollDuration\n      scrollVelocity *= scrollFriction\n      rawLocation += scrollVelocity\n      location.add(scrollVelocity)\n\n      scrollDistance = rawLocation - rawLocationPrevious\n    }\n\n    scrollDirection = mathSign(scrollDistance)\n    rawLocationPrevious = rawLocation\n    return self\n  }\n\n  function settled(): boolean {\n    const diff = target.get() - offsetLocation.get()\n    return mathAbs(diff) < 0.001\n  }\n\n  function duration(): number {\n    return scrollDuration\n  }\n\n  function direction(): number {\n    return scrollDirection\n  }\n\n  function velocity(): number {\n    return scrollVelocity\n  }\n\n  function useBaseDuration(): ScrollBodyType {\n    return useDuration(baseDuration)\n  }\n\n  function useBaseFriction(): ScrollBodyType {\n    return useFriction(baseFriction)\n  }\n\n  function useDuration(n: number): ScrollBodyType {\n    scrollDuration = n\n    return self\n  }\n\n  function useFriction(n: number): ScrollBodyType {\n    scrollFriction = n\n    return self\n  }\n\n  const self: ScrollBodyType = {\n    direction,\n    duration,\n    velocity,\n    seek,\n    settled,\n    useBaseFriction,\n    useBaseDuration,\n    useFriction,\n    useDuration\n  }\n  return self\n}\n","import { AnimationsType } from './Animations'\nimport { CounterType } from './Counter'\nimport { EventHandlerType } from './EventHandler'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType, TargetType } from './ScrollTarget'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollToType = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(\n  animation: AnimationsType,\n  indexCurrent: CounterType,\n  indexPrevious: CounterType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  targetVector: Vector1DType,\n  eventHandler: EventHandlerType\n): ScrollToType {\n  function scrollTo(target: TargetType): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    targetVector.add(distanceDiff)\n\n    if (distanceDiff) {\n      if (scrollBody.duration()) {\n        animation.start()\n      } else {\n        animation.update()\n        animation.render(1)\n        animation.update()\n      }\n    }\n\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      eventHandler.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollToType = {\n    distance,\n    index\n  }\n  return self\n}\n","import { LimitType } from './Limit'\n\nexport type ScrollProgressType = {\n  get: (n: number) => number\n}\n\nexport function ScrollProgress(limit: LimitType): ScrollProgressType {\n  const { max, length } = limit\n\n  function get(n: number): number {\n    const currentLocation = n - max\n    return length ? currentLocation / -length : 0\n  }\n\n  const self: ScrollProgressType = {\n    get\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { ScrollContainOptionType } from './ScrollContain'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport {\n  arrayFromNumber,\n  arrayIsLastIndex,\n  arrayLast,\n  arrayLastIndex\n} from './utils'\n\nexport type SlideRegistryType = {\n  slideRegistry: number[][]\n}\n\nexport function SlideRegistry(\n  containSnaps: boolean,\n  containScroll: ScrollContainOptionType,\n  scrollSnaps: number[],\n  scrollContainLimit: LimitType,\n  slidesToScroll: SlidesToScrollType,\n  slideIndexes: number[]\n): SlideRegistryType {\n  const { groupSlides } = slidesToScroll\n  const { min, max } = scrollContainLimit\n  const slideRegistry = createSlideRegistry()\n\n  function createSlideRegistry(): number[][] {\n    const groupedSlideIndexes = groupSlides(slideIndexes)\n    const doNotContain = !containSnaps || containScroll === 'keepSnaps'\n\n    if (scrollSnaps.length === 1) return [slideIndexes]\n    if (doNotContain) return groupedSlideIndexes\n\n    return groupedSlideIndexes.slice(min, max).map((group, index, groups) => {\n      const isFirst = !index\n      const isLast = arrayIsLastIndex(groups, index)\n\n      if (isFirst) {\n        const range = arrayLast(groups[0]) + 1\n        return arrayFromNumber(range)\n      }\n      if (isLast) {\n        const range = arrayLastIndex(slideIndexes) - arrayLast(groups)[0] + 1\n        return arrayFromNumber(range, arrayLast(groups)[0])\n      }\n      return group\n    })\n  }\n\n  const self: SlideRegistryType = {\n    slideRegistry\n  }\n  return self\n}\n","import { AlignmentOptionType } from './Alignment'\nimport { AxisDirectionOptionType, AxisOptionType } from './Axis'\nimport { SlidesToScrollOptionType } from './SlidesToScroll'\nimport { ScrollContainOptionType } from './ScrollContain'\nimport { DragHandlerOptionType } from './DragHandler'\nimport { ResizeHandlerOptionType } from './ResizeHandler'\nimport { SlidesHandlerOptionType } from './SlidesHandler'\nimport { SlidesInViewOptionsType } from './SlidesInView'\nimport { FocusHandlerOptionType } from './SlideFocus'\n\nexport type LooseOptionsType = {\n  [key: string]: unknown\n}\n\nexport type CreateOptionsType<Type extends LooseOptionsType> = Type & {\n  active: boolean\n  breakpoints: {\n    [key: string]: Omit<Partial<CreateOptionsType<Type>>, 'breakpoints'>\n  }\n}\n\nexport type OptionsType = CreateOptionsType<{\n  align: AlignmentOptionType\n  axis: AxisOptionType\n  container: string | HTMLElement | null\n  slides: string | HTMLElement[] | NodeListOf<HTMLElement> | null\n  containScroll: ScrollContainOptionType\n  direction: AxisDirectionOptionType\n  slidesToScroll: SlidesToScrollOptionType\n  dragFree: boolean\n  dragThreshold: number\n  inViewThreshold: SlidesInViewOptionsType\n  loop: boolean\n  skipSnaps: boolean\n  duration: number\n  startIndex: number\n  watchDrag: DragHandlerOptionType\n  watchResize: ResizeHandlerOptionType\n  watchSlides: SlidesHandlerOptionType\n  watchFocus: FocusHandlerOptionType\n}>\n\nexport const defaultOptions: OptionsType = {\n  align: 'center',\n  axis: 'x',\n  container: null,\n  slides: null,\n  containScroll: 'trimSnaps',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  inViewThreshold: 0,\n  breakpoints: {},\n  dragFree: false,\n  dragThreshold: 10,\n  loop: false,\n  skipSnaps: false,\n  duration: 25,\n  startIndex: 0,\n  active: true,\n  watchDrag: true,\n  watchResize: true,\n  watchSlides: true,\n  watchFocus: true\n}\n\nexport type EmblaOptionsType = Partial<OptionsType>\n","import { LooseOptionsType, CreateOptionsType } from './Options'\nimport { objectKeys, objectsMergeDeep, WindowType } from './utils'\n\ntype OptionsType = Partial<CreateOptionsType<LooseOptionsType>>\n\nexport type OptionsHandlerType = {\n  mergeOptions: <TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB\n  ) => TypeA\n  optionsAtMedia: <Type extends OptionsType>(options: Type) => Type\n  optionsMediaQueries: (optionsList: OptionsType[]) => MediaQueryList[]\n}\n\nexport function OptionsHandler(ownerWindow: WindowType): OptionsHandlerType {\n  function mergeOptions<TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB\n  ): TypeA {\n    return <TypeA>objectsMergeDeep(optionsA, optionsB || {})\n  }\n\n  function optionsAtMedia<Type extends OptionsType>(options: Type): Type {\n    const optionsAtMedia = options.breakpoints || {}\n    const matchedMediaOptions = objectKeys(optionsAtMedia)\n      .filter((media) => ownerWindow.matchMedia(media).matches)\n      .map((media) => optionsAtMedia[media])\n      .reduce((a, mediaOption) => mergeOptions(a, mediaOption), {})\n\n    return mergeOptions(options, matchedMediaOptions)\n  }\n\n  function optionsMediaQueries(optionsList: OptionsType[]): MediaQueryList[] {\n    return optionsList\n      .map((options) => objectKeys(options.breakpoints || {}))\n      .reduce((acc, mediaQueries) => acc.concat(mediaQueries), [])\n      .map(ownerWindow.matchMedia)\n  }\n\n  const self: OptionsHandlerType = {\n    mergeOptions,\n    optionsAtMedia,\n    optionsMediaQueries\n  }\n  return self\n}\n","import { Engine, EngineType } from './Engine'\nimport { EventStore } from './EventStore'\nimport { EventHandler, EventHandlerType } from './EventHandler'\nimport { defaultOptions, EmblaOptionsType, OptionsType } from './Options'\nimport { OptionsHandler } from './OptionsHandler'\nimport { PluginsHandler } from './PluginsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\nimport { isString, WindowType } from './utils'\n\nexport type EmblaCarouselType = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  containerNode: () => HTMLElement\n  internalEngine: () => EngineType\n  destroy: () => void\n  off: EventHandlerType['off']\n  on: EventHandlerType['on']\n  emit: EventHandlerType['emit']\n  plugins: () => EmblaPluginsType\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptionsType, plugins?: EmblaPluginType[]) => void\n  rootNode: () => HTMLElement\n  scrollNext: (jump?: boolean) => void\n  scrollPrev: (jump?: boolean) => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number, jump?: boolean) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: () => number[]\n  slidesNotInView: () => number[]\n}\n\nfunction EmblaCarousel(\n  root: HTMLElement,\n  userOptions?: EmblaOptionsType,\n  userPlugins?: EmblaPluginType[]\n): EmblaCarouselType {\n  const ownerDocument = root.ownerDocument\n  const ownerWindow = <WindowType>ownerDocument.defaultView\n  const optionsHandler = OptionsHandler(ownerWindow)\n  const pluginsHandler = PluginsHandler(optionsHandler)\n  const mediaHandlers = EventStore()\n  const eventHandler = EventHandler()\n  const { mergeOptions, optionsAtMedia, optionsMediaQueries } = optionsHandler\n  const { on, off, emit } = eventHandler\n  const reInit = reActivate\n\n  let destroyed = false\n  let engine: EngineType\n  let optionsBase = mergeOptions(defaultOptions, EmblaCarousel.globalOptions)\n  let options = mergeOptions(optionsBase)\n  let pluginList: EmblaPluginType[] = []\n  let pluginApis: EmblaPluginsType\n\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  function storeElements(): void {\n    const { container: userContainer, slides: userSlides } = options\n\n    const customContainer = isString(userContainer)\n      ? root.querySelector(userContainer)\n      : userContainer\n    container = <HTMLElement>(customContainer || root.children[0])\n\n    const customSlides = isString(userSlides)\n      ? container.querySelectorAll(userSlides)\n      : userSlides\n    slides = <HTMLElement[]>[].slice.call(customSlides || container.children)\n  }\n\n  function createEngine(options: OptionsType): EngineType {\n    const engine = Engine(\n      root,\n      container,\n      slides,\n      ownerDocument,\n      ownerWindow,\n      options,\n      eventHandler\n    )\n\n    if (options.loop && !engine.slideLooper.canLoop()) {\n      const optionsWithoutLoop = Object.assign({}, options, { loop: false })\n      return createEngine(optionsWithoutLoop)\n    }\n    return engine\n  }\n\n  function activate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[]\n  ): void {\n    if (destroyed) return\n\n    optionsBase = mergeOptions(optionsBase, withOptions)\n    options = optionsAtMedia(optionsBase)\n    pluginList = withPlugins || pluginList\n\n    storeElements()\n\n    engine = createEngine(options)\n\n    optionsMediaQueries([\n      optionsBase,\n      ...pluginList.map(({ options }) => options)\n    ]).forEach((query) => mediaHandlers.add(query, 'change', reActivate))\n\n    if (!options.active) return\n\n    engine.translate.to(engine.location.get())\n    engine.animation.init()\n    engine.slidesInView.init()\n    engine.slideFocus.init(self)\n    engine.eventHandler.init(self)\n    engine.resizeHandler.init(self)\n    engine.slidesHandler.init(self)\n\n    if (engine.options.loop) engine.slideLooper.loop()\n    if (container.offsetParent && slides.length) engine.dragHandler.init(self)\n\n    pluginApis = pluginsHandler.init(self, pluginList)\n  }\n\n  function reActivate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[]\n  ): void {\n    const startIndex = selectedScrollSnap()\n    deActivate()\n    activate(mergeOptions({ startIndex }, withOptions), withPlugins)\n    eventHandler.emit('reInit')\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.destroy()\n    engine.eventStore.clear()\n    engine.translate.clear()\n    engine.slideLooper.clear()\n    engine.resizeHandler.destroy()\n    engine.slidesHandler.destroy()\n    engine.slidesInView.destroy()\n    engine.animation.destroy()\n    pluginsHandler.destroy()\n    mediaHandlers.clear()\n  }\n\n  function destroy(): void {\n    if (destroyed) return\n    destroyed = true\n    mediaHandlers.clear()\n    deActivate()\n    eventHandler.emit('destroy')\n    eventHandler.clear()\n  }\n\n  function scrollTo(index: number, jump?: boolean, direction?: number): void {\n    if (!options.active || destroyed) return\n    engine.scrollBody\n      .useBaseFriction()\n      .useDuration(jump === true ? 0 : options.duration)\n    engine.scrollTo.index(index, direction || 0)\n  }\n\n  function scrollNext(jump?: boolean): void {\n    const next = engine.index.add(1).get()\n    scrollTo(next, jump, -1)\n  }\n\n  function scrollPrev(jump?: boolean): void {\n    const prev = engine.index.add(-1).get()\n    scrollTo(prev, jump, 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.add(1).get()\n    return next !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.add(-1).get()\n    return prev !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnapList\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function slidesInView(): number[] {\n    return engine.slidesInView.get()\n  }\n\n  function slidesNotInView(): number[] {\n    return engine.slidesInView.get(false)\n  }\n\n  function plugins(): EmblaPluginsType {\n    return pluginApis\n  }\n\n  function internalEngine(): EngineType {\n    return engine\n  }\n\n  function rootNode(): HTMLElement {\n    return root\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarouselType = {\n    canScrollNext,\n    canScrollPrev,\n    containerNode,\n    internalEngine,\n    destroy,\n    off,\n    on,\n    emit,\n    plugins,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView\n  }\n\n  activate(userOptions, userPlugins)\n  setTimeout(() => eventHandler.emit('init'), 0)\n  return self\n}\n\ndeclare namespace EmblaCarousel {\n  let globalOptions: EmblaOptionsType | undefined\n}\n\nEmblaCarousel.globalOptions = undefined\n\nexport default EmblaCarousel\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { OptionsHandlerType } from './OptionsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\n\nexport type PluginsHandlerType = {\n  init: (\n    emblaApi: EmblaCarouselType,\n    plugins: EmblaPluginType[]\n  ) => EmblaPluginsType\n  destroy: () => void\n}\n\nexport function PluginsHandler(\n  optionsHandler: OptionsHandlerType\n): PluginsHandlerType {\n  let activePlugins: EmblaPluginType[] = []\n\n  function init(\n    emblaApi: EmblaCarouselType,\n    plugins: EmblaPluginType[]\n  ): EmblaPluginsType {\n    activePlugins = plugins.filter(\n      ({ options }) => optionsHandler.optionsAtMedia(options).active !== false\n    )\n    activePlugins.forEach((plugin) => plugin.init(emblaApi, optionsHandler))\n\n    return plugins.reduce(\n      (map, plugin) => Object.assign(map, { [plugin.name]: plugin }),\n      {}\n    )\n  }\n\n  function destroy(): void {\n    activePlugins = activePlugins.filter((plugin) => plugin.destroy())\n  }\n\n  const self: PluginsHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\n\ntype CallbackType = (emblaApi: EmblaCarouselType, evt: EmblaEventType) => void\ntype ListenersType = Partial<{ [key in EmblaEventType]: CallbackType[] }>\n\nexport type EmblaEventType = EmblaEventListType[keyof EmblaEventListType]\n\nexport interface EmblaEventListType {\n  init: 'init'\n  pointerDown: 'pointerDown'\n  pointerUp: 'pointerUp'\n  slidesChanged: 'slidesChanged'\n  slidesInView: 'slidesInView'\n  scroll: 'scroll'\n  select: 'select'\n  settle: 'settle'\n  destroy: 'destroy'\n  reInit: 'reInit'\n  resize: 'resize'\n  slideFocusStart: 'slideFocusStart'\n  slideFocus: 'slideFocus'\n}\n\nexport type EventHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  emit: (evt: EmblaEventType) => EventHandlerType\n  on: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n  off: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n  clear: () => void\n}\n\nexport function EventHandler(): EventHandlerType {\n  let listeners: ListenersType = {}\n  let api: EmblaCarouselType\n\n  function init(emblaApi: EmblaCarouselType): void {\n    api = emblaApi\n  }\n\n  function getListeners(evt: EmblaEventType): CallbackType[] {\n    return listeners[evt] || []\n  }\n\n  function emit(evt: EmblaEventType): EventHandlerType {\n    getListeners(evt).forEach((e) => e(api, evt))\n    return self\n  }\n\n  function on(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).filter((e) => e !== cb)\n    return self\n  }\n\n  function clear(): void {\n    listeners = {}\n  }\n\n  const self: EventHandlerType = {\n    init,\n    emit,\n    off,\n    on,\n    clear\n  }\n  return self\n}\n","import { useRef, useEffect, useState, useCallback } from 'react'\nimport {\n  areOptionsEqual,\n  arePluginsEqual,\n  canUseDOM\n} from 'embla-carousel-reactive-utils'\nimport EmblaCarousel, {\n  EmblaCarouselType,\n  EmblaOptionsType,\n  EmblaPluginType\n} from 'embla-carousel'\n\nexport type EmblaViewportRefType = <ViewportElement extends HTMLElement>(\n  instance: ViewportElement | null\n) => void\n\nexport type UseEmblaCarouselType = [\n  EmblaViewportRefType,\n  EmblaCarouselType | undefined\n]\n\nfunction useEmblaCarousel(\n  options: EmblaOptionsType = {},\n  plugins: EmblaPluginType[] = []\n): UseEmblaCarouselType {\n  const storedOptions = useRef(options)\n  const storedPlugins = useRef(plugins)\n  const [emblaApi, setEmblaApi] = useState<EmblaCarouselType>()\n  const [viewport, setViewport] = useState<HTMLElement>()\n\n  const reInit = useCallback(() => {\n    if (emblaApi) emblaApi.reInit(storedOptions.current, storedPlugins.current)\n  }, [emblaApi])\n\n  useEffect(() => {\n    if (areOptionsEqual(storedOptions.current, options)) return\n    storedOptions.current = options\n    reInit()\n  }, [options, reInit])\n\n  useEffect(() => {\n    if (arePluginsEqual(storedPlugins.current, plugins)) return\n    storedPlugins.current = plugins\n    reInit()\n  }, [plugins, reInit])\n\n  useEffect(() => {\n    if (canUseDOM() && viewport) {\n      EmblaCarousel.globalOptions = useEmblaCarousel.globalOptions\n      const newEmblaApi = EmblaCarousel(\n        viewport,\n        storedOptions.current,\n        storedPlugins.current\n      )\n      setEmblaApi(newEmblaApi)\n      return () => newEmblaApi.destroy()\n    } else {\n      setEmblaApi(undefined)\n    }\n  }, [viewport, setEmblaApi])\n\n  return [<EmblaViewportRefType>setViewport, emblaApi]\n}\n\ndeclare namespace useEmblaCarousel {\n  let globalOptions: EmblaOptionsType | undefined\n}\n\nuseEmblaCarousel.globalOptions = undefined\n\nexport default useEmblaCarousel\n","import './casesSlides.scss';\n\nconst CasesSlides = (props) => {\n    return ( \n        <div className=\"slide grid-row cases_slide\">\n            <div className=\"case_slide_item\">\n                <h3 className=\"case_slide_item_title\">{props.title}</h3>\n                <div className=\"case_slide_item_desc\" dangerouslySetInnerHTML={{ __html: props.description }} />\n            </div>\n            <div className=\"case_slide_item\">\n                <img src={props.img} alt={props.title} width={313} height={338} loading=\"lazy\" />\n            </div>\n            <ul className=\"case_slide_item list-reset\">\n                <li>\n                    <span className=\"case_slide_item_weight\">Объём:</span>\n                    <dl className=\"h-reset\">\n                        <dt>{props.weightNumeric}</dt>\n                        <dd className=\"h-reset\">{props.weightText}</dd>\n                    </dl>\n                </li>\n                <li>\n                    <span className=\"case_slide_item_industry\">Индустрия</span>\n                    <small>{props.industry}</small>\n                </li>\n            </ul>\n        </div>\n     );\n}\n \nexport default CasesSlides;","import image1 from '../cases/images/Frame102.png';\n\nconst casesSlides = [\n    {\n        title: 'Тайные проверки для сайта знакомств',\n        description: '<p>Для приложения мы, выявили 5% и определили типы нарушений.</p><ul><li>Создали виртуальные профили</li><li>Анализировали взаимодействия на платформе и в мессенджерах</li><li>Фиксировали нарушения и проводили аналитику</li>',\n        img: image1,\n        weightNumeric: '3500',\n        weightText: 'переписок',\n        industry: 'Онлайн-знакомства'\n    },   \n     {\n        title: 'Тайные проверки для сайта знакомств',\n        description: '<p>Для приложения мы провели анализ безопасности, выявили 5% случаев мошенничества и определили типы нарушений.</p><ul><li>Создали виртуальные профили</li><li>Анализировали взаимодействия на платформе и в мессенджерах</li><li>Фиксировали нарушения и проводили аналитику</li>',\n        img: image1,\n        weightNumeric: '3500',\n        weightText: 'переписок',\n        industry: 'Онлайн-знакомства'\n    },\n];\n\n\nexport {casesSlides};","import React, { useCallback, useEffect, useState } from 'react';\nimport useEmblaCarousel from \"embla-carousel-react\";\nimport CasesSlides from \"../casesSlides/CasesSlides\";\nimport { casesSlides } from \"../helpers/casesSlides\";\nimport './cases.scss';\n\n\nconst Cases = ({ props }) => {\n\n    const [emblaRef, emblaApi] = useEmblaCarousel({ loop: false });\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const [scrollSnaps, setScrollSnaps] = useState([]);\n\n    useEffect(() => {\n        if (!emblaApi) return;\n        setScrollSnaps(emblaApi.scrollSnapList());\n        emblaApi.on(\"select\", () => setSelectedIndex(emblaApi.selectedScrollSnap()));\n    }, [emblaApi]);\n\n    const scrollPrev = useCallback(() => emblaApi && emblaApi.scrollPrev(), [emblaApi]);\n    const scrollNext = useCallback(() => emblaApi && emblaApi.scrollNext(), [emblaApi]);\n\n    return (\n        <section className=\"section cases\">\n            <div className=\"container\">\n                <div className=\"cases_inner\">\n                    <h2 className=\"project_title\">Наши кейсы</h2>\n                    <svg className=\"cases_eye\" width=\"79\" height=\"60\" viewBox=\"0 0 79 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.2348 44.2145C12.2315 40.0326 14.8836 36.975 17.5721 33.9753C21.4117 29.6932 26.1854 26.5363 31.0699 23.6339C38.1052 19.4525 45.8148 18.3912 53.8842 19.376C60.0971 20.1364 65.7569 22.2723 71.0467 25.8265C69.1086 30.7469 65.9727 34.7591 62.2626 38.4431C56.9253 43.747 50.0104 45.8244 43.1738 48.041C38.2083 49.65 33.049 50.2501 27.8362 49.786C23.524 49.3993 19.4512 47.9778 15.4488 46.3773C13.769 45.7046 12.1053 44.9922 10.2348 44.2145ZM51.9779 31.4318C50.6617 27.3457 48.2088 24.4905 43.8242 23.419C40.5096 22.6104 37.3664 23.0663 34.3007 24.2379C28.8444 26.3221 26.7979 31.6248 27.7895 36.5569C28.7536 41.3475 34.3627 47.139 40.3758 46.2224C44.0684 45.6604 46.9199 43.8878 49.7501 41.8972C50.9863 41.0291 51.7961 39.6145 52.1133 37.9657C52.5353 35.7648 52.5993 33.6187 51.9779 31.4318Z\" fill=\"white\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M39.1836 32.2205C40.4805 31.8279 42.1239 32.5603 42.3685 33.6384C42.6125 34.7111 41.6862 36.2375 40.6241 36.506C39.0445 36.9067 37.7344 36.2049 37.3312 34.7451C36.9721 33.4409 37.4927 32.7315 39.1836 32.2205Z\" fill=\"white\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15.1344 32.5042C17.4353 30.4099 19.4909 28.5384 21.6966 26.5332C20.0182 24.6311 18.4712 22.8644 16.905 21.1134C16.6131 20.79 16.0929 20.5937 15.9508 20.2318C15.7562 19.731 15.5824 18.9469 15.8335 18.6197C16.098 18.2792 17.0257 18.0676 17.402 18.2734C18.2246 18.7243 18.9299 19.4279 19.5979 20.1125C21.1729 21.7252 22.3021 23.8187 24.5924 24.7576C26.7587 23.2902 28.9158 21.8277 31.2135 20.2711C30.8207 16.979 29.0015 13.8422 29.0836 10.1685C31.7092 10.5805 31.8016 12.5051 32.3099 14.1018C32.8126 15.6775 33.2943 17.2619 33.8473 19.0406C36.9525 18.2086 39.8474 17.4329 43.0652 16.5707C42.5045 13.763 41.9774 11.117 41.393 8.18535C41.9152 7.93518 42.5546 7.63023 43.5461 7.15529C44.4397 10.4903 45.2458 13.4986 46.0237 16.4017C48.9768 16.462 51.5803 16.5153 54.4016 16.5731C54.4507 14.2604 54.475 12.092 54.5509 9.92433C54.5895 8.82178 54.7423 7.74579 56.4801 8.11881C57.5642 10.9963 56.8226 14.1158 57.2207 17.1876C59.6091 17.7597 61.879 18.3041 64.3674 18.901C64.6697 17.6143 64.9569 16.3582 65.2642 15.108C65.4321 14.428 65.5205 13.6912 65.8532 13.1006C66.1112 12.6459 66.6985 12.3807 67.1385 12.031C67.4562 12.5769 68.0896 13.1565 68.0363 13.6634C67.8006 15.9109 67.3704 18.1382 66.9923 20.473C68.3869 21.2318 69.6454 21.8467 70.8259 22.5847C71.6354 23.0914 72.3304 23.7809 73.0895 24.3703C74.0019 25.0779 74.0694 25.8374 73.5809 26.9011C71.2024 32.0698 67.9705 36.5472 63.8309 40.5024C59.6242 44.5199 54.4751 46.5491 49.2658 48.6661C44.5805 50.5694 39.7481 51.7081 34.7439 52.2023C27.7418 52.8913 21.149 51.2927 14.745 48.6173C12.8821 47.8407 10.9886 47.1392 9.09954 46.43C7.01195 45.6469 6.54477 44.2758 7.84268 42.4423C9.35757 40.3011 10.9303 38.2015 12.4704 36.0793C12.6732 35.8028 12.8338 35.4982 13.1683 34.9562C11.3735 33.788 9.63854 32.6657 7.90955 31.5297C6.47289 30.5866 6.4552 30.3644 7.65507 28.5885C10.4974 29.2265 12.1258 32.3091 15.1344 32.5042ZM10.2347 44.2143C12.1051 44.992 13.7689 45.7044 15.4484 46.3764C19.4501 47.9771 23.5237 49.3984 27.8359 49.785C33.0477 50.2486 38.2078 49.6483 43.1735 48.0401C50.0099 45.8227 56.9255 43.7451 62.2623 38.4421C65.9723 34.7582 69.1083 30.7459 71.0464 25.8256C65.7566 22.2713 60.0967 20.1354 53.8839 19.3751C45.8152 18.3901 38.1051 19.4523 31.0696 23.633C26.1851 26.5354 21.4114 29.6922 17.5718 33.9743C14.8835 36.9748 12.2314 40.0324 10.2347 44.2143Z\" fill=\"#283034\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M51.9778 31.4316C52.5992 33.6185 52.5351 35.7645 52.1124 37.9656C51.795 39.6137 50.9855 41.0291 49.7492 41.8972C46.919 43.8877 44.0682 45.6601 40.3749 46.2224C34.3618 47.139 28.7525 41.3467 27.7886 36.5568C26.797 31.6247 28.8442 26.3218 34.2998 24.2378C37.3657 23.067 40.5095 22.6102 43.8233 23.4189C48.2087 24.4902 50.6623 27.3452 51.9778 31.4316ZM49.9487 32.7592C49.0846 29.2191 46.9943 26.9751 43.3788 26.0106C41.4655 25.4994 39.7619 25.9841 37.9511 26.252C31.9705 27.1365 29.481 30.3172 30.3273 36.1462C30.8814 39.9682 35.1163 43.4847 38.9693 43.6202C42.0875 43.7288 44.5421 42.259 46.995 40.7501C49.5909 39.1556 50.7693 35.7467 49.9487 32.7592Z\" fill=\"#283034\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M44.4911 32.2611C45.3044 35.612 44.0104 38.3612 41.296 39.0386C38.5056 39.7356 35.3567 37.9386 34.7112 35.28C34.0517 32.5697 35.6196 30.2388 38.705 29.5731C42.3939 28.7778 44.0008 29.8636 44.4911 32.2611Z\" fill=\"#283034\" />\n                    </svg>\n                    <div id=\"cases_wrapper\" className=\"grid-row\">\n                        <div className=\"button-wrapper\">\n                            <button className=\"slider-arrow prev project_arrow\" onClick={scrollPrev}>\n                                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M21.7664 12.0003C21.7665 12.1504 21.7369 12.2989 21.6796 12.4375C21.6222 12.5761 21.538 12.7021 21.4319 12.8082C21.3259 12.9142 21.1999 12.9984 21.0613 13.0558C20.9227 13.1132 20.7741 13.1427 20.6241 13.1426L2.32164 13.1426C2.17003 13.1453 2.01941 13.1178 1.87855 13.0616C1.73769 13.0055 1.60942 12.9219 1.50123 12.8157C1.39303 12.7094 1.30708 12.5827 1.24838 12.4429C1.18967 12.3031 1.15941 12.153 1.15933 12.0014C1.15926 11.8497 1.18939 11.6996 1.24796 11.5598C1.30652 11.4199 1.39236 11.2931 1.50046 11.1868C1.60855 11.0804 1.73674 10.9967 1.87754 10.9404C2.01835 10.8842 2.16895 10.8565 2.32055 10.8591L20.623 10.8591C20.9256 10.8593 21.2158 10.9796 21.4298 11.1936C21.6438 11.4076 21.7641 11.6977 21.7643 12.0003L21.7664 12.0003Z\" fill=\"white\" />\n                                    <path d=\"M12.8175 22.497C12.6033 22.7111 12.3129 22.8314 12.01 22.8314C11.7071 22.8314 11.4167 22.7111 11.2025 22.497L1.51297 12.8074C1.29882 12.5933 1.1785 12.3028 1.1785 11.9999C1.1785 11.6971 1.29881 11.4066 1.51296 11.1925L11.2025 1.50296C11.4166 1.28881 11.7071 1.1685 12.01 1.1685C12.3128 1.1685 12.6033 1.28881 12.8174 1.50296C13.0316 1.71712 13.1519 2.00757 13.1519 2.31043C13.1519 2.61328 13.0316 2.90374 12.8174 3.11789L3.93535 12L12.8175 20.8821C13.0316 21.0962 13.1519 21.3867 13.1519 21.6895C13.1519 21.9924 13.0316 22.2828 12.8175 22.497Z\" fill=\"white\" />\n                                </svg>\n                            </button>\n                        </div>\n                        <div className=\"swiper-cases embla\" ref={emblaRef}>\n                            <div className=\"embla__container\">\n                                {casesSlides.map((slide, index) => {\n                                    return (\n                                        <div className=\"embla__slide\" key={index}>\n                                            <CasesSlides {...slide} />\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                        <div className=\"button-wrapper\">\n                            <button className=\"slider-arrow next project_arrow\" onClick={scrollNext}>\n                                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M2.23353 12.0003C2.23348 12.1504 2.263 12.2989 2.32038 12.4375C2.37777 12.5761 2.46191 12.7021 2.56799 12.8082C2.67407 12.9142 2.80002 12.9984 2.93863 13.0558C3.07724 13.1132 3.2258 13.1427 3.37582 13.1426L21.6783 13.1426C21.8299 13.1453 21.9805 13.1178 22.1214 13.0616C22.2622 13.0055 22.3905 12.9219 22.4987 12.8157C22.6069 12.7094 22.6929 12.5827 22.7516 12.4429C22.8103 12.3031 22.8405 12.153 22.8406 12.0014C22.8407 11.8497 22.8106 11.6996 22.752 11.5598C22.6934 11.4199 22.6076 11.2931 22.4995 11.1868C22.3914 11.0804 22.2632 10.9967 22.1224 10.9404C21.9816 10.8842 21.831 10.8565 21.6794 10.8591L3.3769 10.8591C3.07429 10.8593 2.78413 10.9796 2.57015 11.1936C2.35617 11.4076 2.23587 11.6977 2.23568 12.0003L2.23353 12.0003Z\" fill=\"white\" />\n                                    <path d=\"M11.1825 22.497C11.3967 22.7111 11.6871 22.8314 11.99 22.8314C12.2929 22.8314 12.5833 22.7111 12.7975 22.497L22.487 12.8074C22.7012 12.5933 22.8215 12.3028 22.8215 11.9999C22.8215 11.6971 22.7012 11.4066 22.487 11.1925L12.7975 1.50296C12.5834 1.28881 12.2929 1.1685 11.99 1.1685C11.6872 1.1685 11.3967 1.28881 11.1826 1.50296C10.9684 1.71712 10.8481 2.00757 10.8481 2.31043C10.8481 2.61328 10.9684 2.90374 11.1826 3.11789L20.0646 12L11.1825 20.8821C10.9684 21.0962 10.8481 21.3867 10.8481 21.6895C10.8481 21.9924 10.9684 22.2828 11.1825 22.497Z\" fill=\"white\" />\n                                </svg>\n                            </button>\n                        </div>\n                        {/* Индикаторы (точки) */}\n                        <div className=\"slider_dots\">\n                            {scrollSnaps.map((_, index) => (\n                                <button\n                                    key={index}\n                                    className={`dot ${index === selectedIndex ? \"active\" : \"\"}`}\n                                    onClick={() => emblaApi && emblaApi.scrollTo(index)}\n                                />\n                            ))}\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Cases;","const questionsList = [\n    {\n        title : 'Вы предоставляете легенды, сценарии для исследования?',\n        description : 'Да. Легенды и сценарии будут входить в стоимость бюджета по желанию клиента. У нас имеется очень большой опыт по составлению и проведению проверок.'\n    },\n    {\n        title : 'Есть ли у вас анкета?',\n        description : 'Да. Легенды и сценарии будут входить в стоимость бюджета по желанию клиента. У нас имеется очень большой опыт по составлению и проведению проверок.'\n    }\n];\n\nexport {questionsList};","import React, { useState } from 'react';\nimport Collapse from 'react-collapse';\nimport './questions.scss';\nimport { questionsList } from '../helpers/questionsList';\n\nconst Questions = (props) => {\n    const [activeIndex, setActiveIndex] = useState(null);\n\n    const toggleAccordion = (index) => {\n        setActiveIndex(activeIndex === index ? null : index);\n    };\n\n    return (\n        <section className=\"section questions\">\n            <div className=\"container\">\n                <h2 className=\"project_title\">Часто задаваемые вопросы</h2>\n\n                {questionsList.map((question, index) => {\n                    return (\n                        <div className='questions_acc' key={index}>\n                            <div className=\"questions_acc_top\">\n                                <h3 className=\"question_acc_title\">{question.title}</h3>\n\n                                <button onClick={() => toggleAccordion(index)}\n                                    className={activeIndex === index ? 'active' : ''} >\n                                    <svg width=\"22\" height=\"13\" viewBox=\"0 0 22 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path d=\"M21.5056 12.1219C21.7199 11.9075 21.8403 11.6168 21.8403 11.3137C21.8403 11.0106 21.7199 10.7199 21.5056 10.5056L11.8081 0.808146C11.5938 0.593818 11.3031 0.473409 11 0.47341C10.6969 0.473409 10.4062 0.593819 10.1919 0.808146L0.494411 10.5056C0.280084 10.7199 0.159674 11.0106 0.159675 11.3137C0.159674 11.6168 0.280083 11.9075 0.494411 12.1219C0.708738 12.3362 0.999428 12.4566 1.30253 12.4566C1.60564 12.4566 1.89633 12.3362 2.11065 12.1219L11 3.23251L19.8893 12.1219C20.1037 12.3362 20.3944 12.4566 20.6975 12.4566C21.0006 12.4566 21.2913 12.3362 21.5056 12.1219Z\" fill=\"#283034\" />\n                                    </svg>\n                                </button>\n                            </div>\n                            <Collapse isOpened={activeIndex === index} springConfig={{ stiffness: 50, damping: 50 }} >\n                                <div className='questions_acc_desc'>\n                                    <p>{question.description}</p>\n                                </div>\n                            </Collapse>\n                        </div>\n                    );\n                })}\n            </div>\n        </section>\n    );\n}\n\nexport default Questions;","import { section } from \"framer-motion/client\";\nimport dmitrii from './images/dmitrii.png';\nimport ring from './images/photo-camera.png';\nimport './form.scss';\n\nconst Form = () => {\n    return (\n        <section className=\"section form\">\n            <div className=\"container\">\n                <h2 className=\"project_title\">Оставьте заявку</h2>\n                <p className=\"project_description\">Мы обязательно свяжемся с вами!</p>\n                <div className=\"form_inner\">\n                    <div className=\"form_inner_side\">\n                        <div className=\"form_inner_arrow\">\n                            <svg width=\"114\" height=\"84\" viewBox=\"0 0 114 84\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path  fillRule=\"evenodd\"  clipRule=\"evenodd\" d=\"M7.39949 42.3187C10.2415 43.1082 12.6459 43.7803 15.0543 44.4404C15.3781 44.531 15.728 44.5248 16.0548 44.6131C18.5469 45.2878 18.7014 45.5448 18.0424 48.1458C17.4837 50.3525 16.8864 52.5467 16.2142 55.0991C17.0448 54.6036 17.6976 54.3203 18.219 53.8823C23.5608 49.3825 29.5947 45.9978 35.8915 43.0853C40.4361 40.9819 45.2831 39.6566 50.2029 38.8502C55.0295 38.0584 59.9276 37.4486 64.8078 37.3225C68.0526 37.2397 71.3141 38.2028 74.5799 38.6003C77.9128 39.0079 80.9853 40.0832 83.8496 41.8083C84.2086 42.0255 84.6908 42.1415 84.9224 42.4493C85.2474 42.883 85.6273 43.4966 85.5424 43.9523C85.4705 44.351 84.8387 44.7989 84.3685 44.9474C80.1848 46.2713 75.9811 47.5309 71.7868 48.8248C71.3879 48.9474 71.0165 49.1588 70.5945 49.7467C72.0116 49.9768 73.4228 50.327 74.8505 50.4164C79.3112 50.692 83.7838 50.8196 88.2455 51.1032C90.8535 51.267 93.4457 51.6809 96.0531 51.8647C98.3859 52.0284 100.731 52.0316 103.106 52.1067C102.564 49.018 91.3178 29.1641 88.3214 25.9931C88.3072 26.6135 88.2438 27.0788 88.2958 27.5301C88.5964 30.1238 88.943 32.7111 89.2347 35.3063C89.3483 36.3207 89.0333 37.149 87.7965 37.5395C86.7069 36.6373 85.6631 35.4861 84.3797 34.7684C82.0373 33.46 79.631 32.1786 77.1096 31.2921C70.7802 29.0626 64.2141 27.7801 57.5055 27.5823C52.09 27.423 46.7214 28.0758 41.3836 29.0765C32.6691 30.71 24.4635 33.8012 16.4528 37.4789C13.9264 38.6397 11.4618 39.9403 8.98207 41.1989C8.55984 41.4146 8.19851 41.7473 7.39949 42.3187Z\" fill=\"white\" />\n                                <path  fillRule=\"evenodd\"  clipRule=\"evenodd\" d=\"M16.0484 47.2338C15.0584 50.4944 14.138 53.5417 13.2051 56.5865C12.7796 57.9776 12.2749 59.3691 13.9076 60.7162C14.4906 60.3086 15.3077 59.9763 15.7819 59.3729C19.3082 54.8828 24.1326 52.0883 28.8359 49.1001C33.0196 46.4425 37.4958 44.3975 42.2135 43.04C47.0711 41.6408 51.9965 40.3474 57.1165 40.1824C58.3807 40.1412 59.6473 39.9835 60.9006 39.7944C65.8695 39.0361 70.6547 40.043 75.4168 41.2632C76.9659 41.6604 78.5076 42.0906 80.0366 42.5514C80.4003 42.6613 80.708 42.9539 81.5527 43.4826C78.5801 44.3843 76.095 45.0552 73.6703 45.8943C71.377 46.6888 69.1427 47.6448 66.8949 48.5616C66.5271 48.7103 66.1515 48.9602 65.9036 49.266C64.8555 50.5616 65.2768 51.6228 67.0648 51.8894C69.1551 52.2029 71.2764 52.3138 73.3826 52.5215C76.7263 52.8537 80.0642 53.2627 83.4151 53.5046C86.0202 53.6939 88.6419 53.6419 91.2538 53.7594C95.044 53.9329 98.8319 54.1934 102.622 54.3607C105.788 54.4986 106.65 53.2989 105.267 50.3595C103.69 47.0051 101.96 43.712 100.125 40.491C96.4506 34.0435 92.6547 27.666 88.9168 21.252C87.5954 18.9834 87.6066 18.9763 84.9965 19.6448C84.2053 20.468 84.4019 21.3837 84.6236 22.417C85.3461 25.7689 85.9517 29.146 86.6514 32.7709C83.6396 31.4979 81.0708 30.363 78.4673 29.3172C72.8499 27.0668 67.0061 25.9507 60.9717 25.4186C54.0632 24.809 47.351 25.5421 40.6774 27.2131C37.1574 28.0945 33.5141 28.6024 30.0984 29.78C22.0252 32.5624 14.2324 36.0372 6.77394 40.2296C6.41591 40.4314 5.99976 40.5983 5.59646 40.6391C4.4159 40.7562 3.93202 41.6129 3.99368 42.5374C4.05426 43.44 4.63001 44.2285 5.70201 44.4731C8.22214 45.046 10.7361 45.6507 13.243 46.2875C14.1197 46.5084 14.9588 46.8612 16.0484 47.2338ZM7.39905 42.3186C8.19808 41.7472 8.56013 41.4146 8.98144 41.1995C11.4612 39.9409 13.9251 38.6401 16.4522 37.4795C24.4629 33.8018 32.6687 30.7099 41.383 29.077C46.72 28.0762 52.0887 27.4234 57.5049 27.5828C64.2142 27.7809 70.7805 29.0627 77.109 31.2927C79.6309 32.1801 82.0367 33.4606 84.3791 34.769C85.6624 35.4866 86.7063 36.6379 87.7959 37.5401C89.0327 37.1496 89.3476 36.3213 89.2341 35.3069C88.9422 32.7125 88.5958 30.1244 88.2952 27.5307C88.2424 27.0792 88.3066 26.6141 88.3208 25.9937C91.3172 29.1647 102.563 49.0186 103.105 52.1072C100.73 52.0322 98.3862 52.0284 96.0525 51.8652C93.4451 51.6815 90.8529 51.2676 88.2449 51.1038C83.7831 50.8202 79.3106 50.6926 74.8498 50.417C73.4222 50.3276 72.011 49.9774 70.5939 49.7473C71.0158 49.1594 71.3873 48.948 71.7862 48.8253C75.9805 47.5315 80.1842 46.2719 84.3679 44.948C84.8381 44.7995 85.4699 44.3516 85.5418 43.9529C85.626 43.497 85.2466 42.8843 84.9218 42.4499C84.6902 42.1421 84.208 42.026 83.849 41.8089C80.9854 40.084 77.9124 39.0077 74.5793 38.6008C71.3135 38.2034 68.052 37.2403 64.8072 37.3231C59.927 37.4492 55.0296 38.0592 50.2023 38.8508C45.2825 39.6572 40.4354 40.9825 35.8908 43.0858C29.5948 45.9986 23.5601 49.3831 18.2183 53.8829C17.697 54.3209 17.0436 54.6033 16.2135 55.0997C16.8858 52.5473 17.4833 50.3524 18.0418 48.1463C18.7005 45.5461 18.5463 45.2884 16.0542 44.6137C15.7281 44.5255 15.3782 44.5318 15.0536 44.441C12.6455 43.7802 10.2404 43.1078 7.39905 42.3186Z\" fill=\"#3C484F\" />\n                            </svg>\n                        </div>\n                        <div className=\"img-wrap form_inner_image\">\n                            <img src={dmitrii} alt=\"Дмитрий,менеджер по работе с клиентами\" width={514} height={696} loading=\"lazy\" />\n                        </div>\n                        <dl className=\"form_inner_info h-reset\">\n                            <dt>\n                                <img src={ring} alt=\"ring\" width={56} height={56} loading=\"lazy\" />\n                            </dt>\n                            <dd className=\"h-reset\">\n                                <strong>Дмитрий,</strong>\n                                <small>менеджер по работе с клиентами</small>\n                            </dd>\n                        </dl>\n                    </div>\n                    <div className=\"form_inner_side\">\n                        <div className=\"flex-row\">\n                            <span>\n                                <input type=\"text\" className=\"project_input\" name=\"\" id=\"\" placeholder=\"Имя\" />\n                            </span>\n                            <span>\n                                <input type=\"email\" className=\"project_input\" name=\"\" id=\"\" placeholder=\"Email\" />\n                            </span>\n                        </div>\n                        <div className=\"flex-row\">\n                            <span>\n                                <input type=\"tel\" className=\"project_input\" name=\"\" id=\"\" placeholder=\"+7 999 999-99-99\" />\n                            </span>\n                            <span>\n                                <input type=\"text\" className=\"project_input\" name=\"\" id=\"\" placeholder=\"Компания\" />\n                            </span>\n                        </div>\n                        <div className=\"flex-row\">\n                            <span>\n                                <select name=\"\" id=\"\" className=\"project_select\">\n                                    <option value=\"\">Услуга</option>\n                                </select>\n                            </span>\n                            <span>\n                                <input type=\"text\" className=\"project_input\" name=\"\" id=\"\" placeholder=\"Бюджет\" />\n                            </span>\n                        </div>\n                        <div className=\"content-wrapper\">\n                            <span>\n                                <textarea name=\"\" id=\"\" className=\"project_textarea\" placeholder=\"Расскажите о вашем проекте\"></textarea>\n                            </span>\n                        </div>\n                        <div className=\"submit_wrapper\">\n                            <input type=\"submit\" value=\"Отправить\" className=\"project_submit accent_button\" />\n                            <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M5.59455 18.9049C5.48843 18.7988 5.40425 18.6729 5.34682 18.5343C5.28939 18.3957 5.25983 18.2472 5.25983 18.0971C5.25983 17.9471 5.28939 17.7986 5.34682 17.66C5.40425 17.5214 5.48843 17.3955 5.59455 17.2894L18.5364 4.34765C18.6417 4.23854 18.7676 4.15149 18.9069 4.09157C19.0462 4.03166 19.1961 4.00009 19.3477 3.9987C19.4993 3.99731 19.6497 4.02614 19.79 4.08349C19.9304 4.14084 20.0579 4.22557 20.1652 4.33273C20.2725 4.4399 20.3573 4.56736 20.4148 4.70767C20.4723 4.84798 20.5013 4.99833 20.5 5.14996C20.4988 5.30158 20.4673 5.45144 20.4076 5.59078C20.3478 5.73013 20.2609 5.85618 20.1518 5.96157L7.20999 18.9033C6.99588 19.1172 6.70564 19.2373 6.40303 19.2373C6.10042 19.2373 5.81018 19.1172 5.59607 18.9033L5.59455 18.9049Z\" fill=\"white\" />\n                                <path d=\"M4.50006 5.15502C4.50006 4.85216 4.62037 4.56171 4.83452 4.34756C5.04868 4.13341 5.33913 4.0131 5.64199 4.0131L19.3451 4.0131C19.648 4.0131 19.9384 4.1334 20.1526 4.34756C20.3667 4.56171 20.487 4.85216 20.487 5.15502L20.487 18.8581C20.487 19.1609 20.3667 19.4514 20.1526 19.6655C19.9384 19.8797 19.648 20 19.3451 20C19.0423 20 18.7518 19.8797 18.5376 19.6655C18.3235 19.4514 18.2032 19.1609 18.2032 18.8581L18.2032 6.29694L5.64199 6.29694C5.33913 6.29694 5.04868 6.17663 4.83452 5.96248C4.62037 5.74833 4.50006 5.45788 4.50006 5.15502Z\" fill=\"white\" />\n                            </svg>\n                        </div>\n                        <small className=\"form_inner_accaptience\">Нажимая на кнопку, вы соглашаетесь с нашими правилами обработки данных</small>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Form;","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 296,\n    height: 38,\n    viewBox: \"0 0 296 38\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48 3.6C48 5.31208 46.5985 6.7 44.8696 6.7C43.1407 6.7 41.7391 5.31208 41.7391 3.6C41.7391 1.88792 43.1407 0.5 44.8696 0.5C46.5985 0.5 48 1.88792 48 3.6Z\",\n    fill: \"#69BFF3\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.26087 11.8667C6.26087 13.5787 4.85933 14.9667 3.13043 14.9667C1.40154 14.9667 0 13.5787 0 11.8667C0 10.1546 1.40154 8.76667 3.13043 8.76667C4.85933 8.76667 6.26087 10.1546 6.26087 11.8667Z\",\n    fill: \"#69BFF3\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.6522 11.8667C39.6522 13.5787 38.2506 14.9667 36.5217 14.9667C34.7928 14.9667 33.3913 13.5787 33.3913 11.8667C33.3913 10.1546 34.7928 8.76667 36.5217 8.76667C38.2506 8.76667 39.6522 10.1546 39.6522 11.8667Z\",\n    fill: \"#69BFF3\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.4783 11.8667C47.4783 13.2934 46.3103 14.45 44.8696 14.45C43.4288 14.45 42.2609 13.2934 42.2609 11.8667C42.2609 10.4399 43.4288 9.28333 44.8696 9.28333C46.3103 9.28333 47.4783 10.4399 47.4783 11.8667Z\",\n    fill: \"#69BFF3\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.73913 20.1333C5.73913 21.5601 4.57118 22.7167 3.13043 22.7167C1.68969 22.7167 0.521739 21.5601 0.521739 20.1333C0.521739 18.7066 1.68969 17.55 3.13043 17.55C4.57118 17.55 5.73913 18.7066 5.73913 20.1333Z\",\n    fill: \"#69BFF3\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.6087 20.1333C14.6087 21.8454 13.2072 23.2333 11.4783 23.2333C9.74937 23.2333 8.34783 21.8454 8.34783 20.1333C8.34783 18.4213 9.74937 17.0333 11.4783 17.0333C13.2072 17.0333 14.6087 18.4213 14.6087 20.1333Z\",\n    fill: \"#69BFF3\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.3043 20.1333C31.3043 21.8454 29.9028 23.2333 28.1739 23.2333C26.445 23.2333 25.0435 21.8454 25.0435 20.1333C25.0435 18.4213 26.445 17.0333 28.1739 17.0333C29.9028 17.0333 31.3043 18.4213 31.3043 20.1333Z\",\n    fill: \"#69BFF3\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.1304 20.1333C39.1304 21.5601 37.9625 22.7167 36.5217 22.7167C35.081 22.7167 33.913 21.5601 33.913 20.1333C33.913 18.7066 35.081 17.55 36.5217 17.55C37.9625 17.55 39.1304 18.7066 39.1304 20.1333Z\",\n    fill: \"#69BFF3\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.9565 20.1333C46.9565 21.2747 46.0222 22.2 44.8696 22.2C43.717 22.2 42.7826 21.2747 42.7826 20.1333C42.7826 18.9919 43.717 18.0667 44.8696 18.0667C46.0222 18.0667 46.9565 18.9919 46.9565 20.1333Z\",\n    fill: \"#69BFF3\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.21739 28.4C5.21739 29.5414 4.28303 30.4667 3.13043 30.4667C1.97784 30.4667 1.04348 29.5414 1.04348 28.4C1.04348 27.2586 1.97784 26.3333 3.13043 26.3333C4.28303 26.3333 5.21739 27.2586 5.21739 28.4Z\",\n    fill: \"#69BFF3\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.087 28.4C14.087 29.8267 12.919 30.9833 11.4783 30.9833C10.0375 30.9833 8.86957 29.8267 8.86957 28.4C8.86957 26.9733 10.0375 25.8167 11.4783 25.8167C12.919 25.8167 14.087 26.9733 14.087 28.4Z\",\n    fill: \"#69BFF3\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.9565 28.4C22.9565 30.1121 21.555 31.5 19.8261 31.5C18.0972 31.5 16.6957 30.1121 16.6957 28.4C16.6957 26.6879 18.0972 25.3 19.8261 25.3C21.555 25.3 22.9565 26.6879 22.9565 28.4Z\",\n    fill: \"#69BFF3\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.7826 28.4C30.7826 29.8267 29.6147 30.9833 28.1739 30.9833C26.7332 30.9833 25.5652 29.8267 25.5652 28.4C25.5652 26.9733 26.7332 25.8167 28.1739 25.8167C29.6147 25.8167 30.7826 26.9733 30.7826 28.4Z\",\n    fill: \"#69BFF3\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.6087 28.4C38.6087 29.5414 37.6743 30.4667 36.5217 30.4667C35.3691 30.4667 34.4348 29.5414 34.4348 28.4C34.4348 27.2586 35.3691 26.3333 36.5217 26.3333C37.6743 26.3333 38.6087 27.2586 38.6087 28.4Z\",\n    fill: \"#69BFF3\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.9565 28.4C46.9565 29.5414 46.0222 30.4667 44.8696 30.4667C43.717 30.4667 42.7826 29.5414 42.7826 28.4C42.7826 27.2586 43.717 26.3333 44.8696 26.3333C46.0222 26.3333 46.9565 27.2586 46.9565 28.4Z\",\n    fill: \"#69BFF3\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.496 29V5.48H72.16C74.272 5.48 76.064 5.71467 77.536 6.184C79.0293 6.65333 80.256 7.28267 81.216 8.072C82.176 8.84 82.9227 9.72533 83.456 10.728C84.0107 11.7093 84.3947 12.7333 84.608 13.8C84.8213 14.8453 84.928 15.8587 84.928 16.84C84.928 18.312 84.7147 19.7733 84.288 21.224C83.8827 22.6533 83.2 23.9547 82.24 25.128C81.28 26.3013 79.9893 27.24 78.368 27.944C76.768 28.648 74.7627 29 72.352 29H66.496ZM70.08 25.832H72.736C74.3147 25.832 75.6373 25.5867 76.704 25.096C77.792 24.6053 78.656 23.944 79.296 23.112C79.9573 22.2587 80.4267 21.3093 80.704 20.264C81.0027 19.1973 81.152 18.1093 81.152 17C81.152 15.4853 80.8853 14.0987 80.352 12.84C79.8187 11.56 78.9333 10.536 77.696 9.768C76.48 9 74.8267 8.616 72.736 8.616H70.08V25.832ZM93.8393 29.32C92.5379 29.32 91.3219 29.0107 90.1913 28.392C89.0819 27.7733 88.1859 26.888 87.5033 25.736C86.8206 24.584 86.4793 23.208 86.4793 21.608C86.4793 20.072 86.7673 18.728 87.3433 17.576C87.9406 16.424 88.7726 15.528 89.8393 14.888C90.9273 14.248 92.2179 13.928 93.7113 13.928C94.6073 13.928 95.4179 14.088 96.1433 14.408C96.8899 14.7067 97.5086 15.08 97.9993 15.528C98.5113 15.9547 98.8526 16.3707 99.0233 16.776L99.0873 14.312H102.383V29H99.1193L99.0553 26.408C98.8419 26.8773 98.4793 27.336 97.9673 27.784C97.4766 28.232 96.8793 28.6053 96.1753 28.904C95.4713 29.1813 94.6926 29.32 93.8393 29.32ZM94.4153 26.44C95.2046 26.44 95.9193 26.2587 96.5593 25.896C97.2206 25.512 97.7433 24.9787 98.1273 24.296C98.5326 23.6133 98.7353 22.8027 98.7353 21.864V21.64C98.7353 20.68 98.5326 19.848 98.1273 19.144C97.7433 18.4187 97.2206 17.864 96.5593 17.48C95.9193 17.0747 95.2046 16.872 94.4153 16.872C92.9859 16.872 91.9086 17.3307 91.1833 18.248C90.4793 19.1653 90.1273 20.296 90.1273 21.64C90.1273 23.0053 90.4793 24.1467 91.1833 25.064C91.9086 25.9813 92.9859 26.44 94.4153 26.44ZM107.038 29V17.128H104.446V14.312H107.038V8.328L110.526 7.56V14.312H113.918V17.128H110.526V29H107.038ZM121.982 29.32C120.68 29.32 119.464 29.0107 118.334 28.392C117.224 27.7733 116.328 26.888 115.646 25.736C114.963 24.584 114.622 23.208 114.622 21.608C114.622 20.072 114.91 18.728 115.486 17.576C116.083 16.424 116.915 15.528 117.982 14.888C119.07 14.248 120.36 13.928 121.854 13.928C122.75 13.928 123.56 14.088 124.286 14.408C125.032 14.7067 125.651 15.08 126.142 15.528C126.654 15.9547 126.995 16.3707 127.166 16.776L127.23 14.312H130.526V29H127.262L127.198 26.408C126.984 26.8773 126.622 27.336 126.11 27.784C125.619 28.232 125.022 28.6053 124.318 28.904C123.614 29.1813 122.835 29.32 121.982 29.32ZM122.558 26.44C123.347 26.44 124.062 26.2587 124.702 25.896C125.363 25.512 125.886 24.9787 126.27 24.296C126.675 23.6133 126.878 22.8027 126.878 21.864V21.64C126.878 20.68 126.675 19.848 126.27 19.144C125.886 18.4187 125.363 17.864 124.702 17.48C124.062 17.0747 123.347 16.872 122.558 16.872C121.128 16.872 120.051 17.3307 119.326 18.248C118.622 19.1653 118.27 20.296 118.27 21.64C118.27 23.0053 118.622 24.1467 119.326 25.064C120.051 25.9813 121.128 26.44 122.558 26.44ZM152.137 29.32C150.537 29.32 149.022 29.0427 147.593 28.488C146.185 27.9333 144.937 27.1333 143.849 26.088C142.761 25.0213 141.897 23.7413 141.257 22.248C140.638 20.7547 140.329 19.0693 140.329 17.192C140.329 15.2933 140.638 13.5973 141.257 12.104C141.897 10.6107 142.761 9.34133 143.849 8.296C144.958 7.25067 146.217 6.46133 147.625 5.928C149.054 5.37333 150.558 5.096 152.137 5.096C153.716 5.096 155.209 5.37333 156.617 5.928C158.046 6.46133 159.305 7.25067 160.393 8.296C161.502 9.34133 162.366 10.6107 162.985 12.104C163.625 13.5973 163.945 15.2933 163.945 17.192C163.945 19.56 163.454 21.6187 162.473 23.368C161.492 25.1173 160.201 26.4933 158.601 27.496L161.513 32.008H157.961L155.849 28.776C154.654 29.1387 153.417 29.32 152.137 29.32ZM152.137 26.088C152.777 26.088 153.396 26.024 153.993 25.896L151.849 22.408H155.433L156.809 24.648C157.812 23.9227 158.612 22.9413 159.209 21.704C159.828 20.4453 160.137 18.952 160.137 17.224C160.137 15.2827 159.774 13.6613 159.049 12.36C158.324 11.0373 157.353 10.0453 156.137 9.384C154.942 8.70133 153.609 8.36 152.137 8.36C150.665 8.36 149.321 8.70133 148.105 9.384C146.91 10.0453 145.95 11.0373 145.225 12.36C144.5 13.6613 144.137 15.2827 144.137 17.224C144.137 19.144 144.51 20.7653 145.257 22.088C146.004 23.3893 146.985 24.3813 148.201 25.064C149.417 25.7467 150.729 26.088 152.137 26.088ZM171.694 29.32C170.222 29.32 169.102 29.0107 168.334 28.392C167.566 27.7733 167.043 26.952 166.766 25.928C166.51 24.904 166.382 23.7733 166.382 22.536V14.312H169.838V21.672C169.838 22.8027 169.902 23.72 170.03 24.424C170.179 25.128 170.456 25.6507 170.862 25.992C171.288 26.312 171.918 26.472 172.75 26.472C173.347 26.472 173.912 26.312 174.446 25.992C175 25.6507 175.459 25.192 175.822 24.616C176.184 24.0187 176.366 23.3573 176.366 22.632V14.312H179.79V29H176.974L176.59 26.856C176.056 27.6667 175.395 28.2853 174.606 28.712C173.816 29.1173 172.846 29.32 171.694 29.32ZM189.642 29.32C188.34 29.32 187.124 29.0107 185.994 28.392C184.884 27.7733 183.988 26.888 183.306 25.736C182.623 24.584 182.282 23.208 182.282 21.608C182.282 20.072 182.57 18.728 183.146 17.576C183.743 16.424 184.575 15.528 185.642 14.888C186.73 14.248 188.02 13.928 189.514 13.928C190.41 13.928 191.22 14.088 191.946 14.408C192.692 14.7067 193.311 15.08 193.802 15.528C194.314 15.9547 194.655 16.3707 194.826 16.776L194.89 14.312H198.186V29H194.922L194.858 26.408C194.644 26.8773 194.282 27.336 193.77 27.784C193.279 28.232 192.682 28.6053 191.978 28.904C191.274 29.1813 190.495 29.32 189.642 29.32ZM190.218 26.44C191.007 26.44 191.722 26.2587 192.362 25.896C193.023 25.512 193.546 24.9787 193.93 24.296C194.335 23.6133 194.538 22.8027 194.538 21.864V21.64C194.538 20.68 194.335 19.848 193.93 19.144C193.546 18.4187 193.023 17.864 192.362 17.48C191.722 17.0747 191.007 16.872 190.218 16.872C188.788 16.872 187.711 17.3307 186.986 18.248C186.282 19.1653 185.93 20.296 185.93 21.64C185.93 23.0053 186.282 24.1467 186.986 25.064C187.711 25.9813 188.788 26.44 190.218 26.44ZM201.411 29V5.48H204.835V29H201.411ZM208.294 29V14.312H211.878V29H208.294ZM210.086 11.56C209.425 11.56 208.87 11.336 208.422 10.888C207.996 10.44 207.782 9.88533 207.782 9.224C207.782 8.62667 207.996 8.11467 208.422 7.688C208.87 7.26133 209.425 7.048 210.086 7.048C210.748 7.048 211.292 7.26133 211.718 7.688C212.166 8.11467 212.39 8.62667 212.39 9.224C212.39 9.88533 212.166 10.44 211.718 10.888C211.292 11.336 210.748 11.56 210.086 11.56ZM216.577 29V17.128H213.985V14.312H216.577V8.328L220.065 7.56V14.312H223.457V17.128H220.065V29H216.577ZM226.581 37.064L229.749 29.448L223.669 14.312H227.573L230.709 23.656L231.413 25.928L232.117 23.656L235.413 14.312H239.189L230.165 37.064H226.581Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/Logo.9d12bf55d29e44584710d9ac3894ba9d.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgDataQuality(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 1312,\n    height: 281,\n    viewBox: \"0 0 1312 281\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.03,\n    d: \"M-58.16 210V4.2H-8.59999C9.88 4.2 25.56 6.25333 38.44 10.36C51.5067 14.4667 62.24 19.9733 70.64 26.88C79.04 33.6 85.5733 41.3467 90.24 50.12C95.0933 58.7067 98.4533 67.6667 100.32 77C102.187 86.1467 103.12 95.0133 103.12 103.6C103.12 116.48 101.253 129.267 97.52 141.96C93.9733 154.467 88 165.853 79.6 176.12C71.2 186.387 59.9067 194.6 45.72 200.76C31.72 206.92 14.1733 210 -6.92 210H-58.16ZM-26.8 182.28H-3.56C10.2533 182.28 21.8267 180.133 31.16 175.84C40.68 171.547 48.24 165.76 53.84 158.48C59.6267 151.013 63.7333 142.707 66.16 133.56C68.7733 124.227 70.08 114.707 70.08 105C70.08 91.7467 67.7467 79.6133 63.08 68.6C58.4133 57.4 50.6667 48.44 39.84 41.72C29.2 35 14.7333 31.64 -3.56 31.64H-26.8V182.28ZM175.493 212.8C164.107 212.8 153.467 210.093 143.573 204.68C133.867 199.267 126.027 191.52 120.053 181.44C114.08 171.36 111.093 159.32 111.093 145.32C111.093 131.88 113.613 120.12 118.653 110.04C123.88 99.96 131.16 92.12 140.493 86.52C150.013 80.92 161.307 78.12 174.373 78.12C182.213 78.12 189.307 79.52 195.653 82.32C202.187 84.9333 207.6 88.2 211.893 92.12C216.373 95.8533 219.36 99.4933 220.853 103.04L221.413 81.48H250.253V210H221.693L221.133 187.32C219.267 191.427 216.093 195.44 211.613 199.36C207.32 203.28 202.093 206.547 195.933 209.16C189.773 211.587 182.96 212.8 175.493 212.8ZM180.533 187.6C187.44 187.6 193.693 186.013 199.293 182.84C205.08 179.48 209.653 174.813 213.013 168.84C216.56 162.867 218.333 155.773 218.333 147.56V145.6C218.333 137.2 216.56 129.92 213.013 123.76C209.653 117.413 205.08 112.56 199.293 109.2C193.693 105.653 187.44 103.88 180.533 103.88C168.027 103.88 158.6 107.893 152.253 115.92C146.093 123.947 143.013 133.84 143.013 145.6C143.013 157.547 146.093 167.533 152.253 175.56C158.6 183.587 168.027 187.6 180.533 187.6ZM285.385 210V106.12H262.705V81.48H285.385V29.12L315.905 22.4V81.48H345.585V106.12H315.905V210H285.385ZM410.54 212.8C399.154 212.8 388.514 210.093 378.62 204.68C368.914 199.267 361.074 191.52 355.1 181.44C349.127 171.36 346.14 159.32 346.14 145.32C346.14 131.88 348.66 120.12 353.7 110.04C358.927 99.96 366.207 92.12 375.54 86.52C385.06 80.92 396.354 78.12 409.42 78.12C417.26 78.12 424.354 79.52 430.7 82.32C437.234 84.9333 442.647 88.2 446.94 92.12C451.42 95.8533 454.407 99.4933 455.9 103.04L456.46 81.48H485.3V210H456.74L456.18 187.32C454.314 191.427 451.14 195.44 446.66 199.36C442.367 203.28 437.14 206.547 430.98 209.16C424.82 211.587 418.007 212.8 410.54 212.8ZM415.58 187.6C422.487 187.6 428.74 186.013 434.34 182.84C440.127 179.48 444.7 174.813 448.06 168.84C451.607 162.867 453.38 155.773 453.38 147.56V145.6C453.38 137.2 451.607 129.92 448.06 123.76C444.7 117.413 440.127 112.56 434.34 109.2C428.74 105.653 422.487 103.88 415.58 103.88C403.074 103.88 393.647 107.893 387.3 115.92C381.14 123.947 378.06 133.84 378.06 145.6C378.06 157.547 381.14 167.533 387.3 175.56C393.647 183.587 403.074 187.6 415.58 187.6ZM663.199 212.8C649.199 212.8 635.945 210.373 623.439 205.52C611.119 200.667 600.199 193.667 590.679 184.52C581.159 175.187 573.599 163.987 567.999 150.92C562.585 137.853 559.879 123.107 559.879 106.68C559.879 90.0667 562.585 75.2267 567.999 62.16C573.599 49.0933 581.159 37.9867 590.679 28.84C600.385 19.6933 611.399 12.7867 623.719 8.12C636.225 3.26666 649.385 0.839989 663.199 0.839989C677.012 0.839989 690.079 3.26666 702.399 8.12C714.905 12.7867 725.919 19.6933 735.439 28.84C745.145 37.9867 752.705 49.0933 758.119 62.16C763.719 75.2267 766.519 90.0667 766.519 106.68C766.519 127.4 762.225 145.413 753.639 160.72C745.052 176.027 733.759 188.067 719.759 196.84L745.239 236.32H714.159L695.679 208.04C685.225 211.213 674.399 212.8 663.199 212.8ZM663.199 184.52C668.799 184.52 674.212 183.96 679.439 182.84L660.679 152.32H692.039L704.079 171.92C712.852 165.573 719.852 156.987 725.079 146.16C730.492 135.147 733.199 122.08 733.199 106.96C733.199 89.9733 730.025 75.7867 723.679 64.4C717.332 52.8267 708.839 44.1467 698.199 38.36C687.745 32.3867 676.079 29.4 663.199 29.4C650.319 29.4 638.559 32.3867 627.919 38.36C617.465 44.1467 609.065 52.8267 602.719 64.4C596.372 75.7867 593.199 89.9733 593.199 106.96C593.199 123.76 596.465 137.947 602.999 149.52C609.532 160.907 618.119 169.587 628.759 175.56C639.399 181.533 650.879 184.52 663.199 184.52ZM828.72 212.8C815.84 212.8 806.04 210.093 799.32 204.68C792.6 199.267 788.027 192.08 785.6 183.12C783.36 174.16 782.24 164.267 782.24 153.44V81.48H812.48V145.88C812.48 155.773 813.04 163.8 814.16 169.96C815.467 176.12 817.894 180.693 821.44 183.68C825.174 186.48 830.68 187.88 837.96 187.88C843.187 187.88 848.134 186.48 852.8 183.68C857.654 180.693 861.667 176.68 864.84 171.64C868.014 166.413 869.6 160.627 869.6 154.28V81.48H899.56V210H874.92L871.56 191.24C866.894 198.333 861.107 203.747 854.2 207.48C847.294 211.027 838.8 212.8 828.72 212.8ZM980.165 212.8C968.779 212.8 958.139 210.093 948.245 204.68C938.539 199.267 930.699 191.52 924.725 181.44C918.752 171.36 915.765 159.32 915.765 145.32C915.765 131.88 918.285 120.12 923.325 110.04C928.552 99.96 935.832 92.12 945.165 86.52C954.685 80.92 965.979 78.12 979.045 78.12C986.885 78.12 993.979 79.52 1000.33 82.32C1006.86 84.9333 1012.27 88.2 1016.57 92.12C1021.05 95.8533 1024.03 99.4933 1025.53 103.04L1026.09 81.48H1054.93V210H1026.37L1025.81 187.32C1023.94 191.427 1020.77 195.44 1016.29 199.36C1011.99 203.28 1006.77 206.547 1000.61 209.16C994.445 211.587 987.632 212.8 980.165 212.8ZM985.205 187.6C992.112 187.6 998.365 186.013 1003.97 182.84C1009.75 179.48 1014.33 174.813 1017.69 168.84C1021.23 162.867 1023.01 155.773 1023.01 147.56V145.6C1023.01 137.2 1021.23 129.92 1017.69 123.76C1014.33 117.413 1009.75 112.56 1003.97 109.2C998.365 105.653 992.112 103.88 985.205 103.88C972.699 103.88 963.272 107.893 956.925 115.92C950.765 123.947 947.685 133.84 947.685 145.6C947.685 157.547 950.765 167.533 956.925 175.56C963.272 183.587 972.699 187.6 985.205 187.6ZM1077.55 210V4.2H1107.51V210H1077.55ZM1132.17 210V81.48H1163.53V210H1132.17ZM1147.85 57.4C1142.07 57.4 1137.21 55.44 1133.29 51.52C1129.56 47.6 1127.69 42.7467 1127.69 36.96C1127.69 31.7333 1129.56 27.2533 1133.29 23.52C1137.21 19.7867 1142.07 17.92 1147.85 17.92C1153.64 17.92 1158.4 19.7867 1162.13 23.52C1166.05 27.2533 1168.01 31.7333 1168.01 36.96C1168.01 42.7467 1166.05 47.6 1162.13 51.52C1158.4 55.44 1153.64 57.4 1147.85 57.4ZM1199.05 210V106.12H1176.37V81.48H1199.05V29.12L1229.57 22.4V81.48H1259.25V106.12H1229.57V210H1199.05ZM1280.98 280.56L1308.7 213.92L1255.5 81.48H1289.66L1317.1 163.24L1323.26 183.12L1329.42 163.24L1358.26 81.48H1391.3L1312.34 280.56H1280.98Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDataQuality);\nexport default __webpack_public_path__ + \"static/media/Data-Quality.5a6c4d037528c899c119b50b9636d0a0.svg\";\nexport { ForwardRef as ReactComponent };","import logo from './images/Logo.svg';\nimport dataQuality from './images/Data-Quality.svg';\nimport './footer.scss';\n\nconst Footer = () => {\n\n        const scrollToTop = () => {\n          window.scrollTo({\n            top: 0,\n            behavior: 'smooth', // Добавляет плавность прокрутке\n          });\n        };\n\n    return (\n        <footer className=\"footer\">\n            <div className=\"container\">\n                <div className=\"footer_inner\">\n                    <div className=\"footer_inner_top\">\n                        <div className=\"footer_inner_item\">\n                            <a href=\"#!\" className=\"footer_logo\">\n                                <img src={logo} alt=\"logo\" width={296} height={32} loading='lazy' />\n                            </a>\n\n                        </div>\n                        <nav className=\"footer_menu\">\n                            <ul className=\"list-reset footer_menu_list\">\n                                <li className='footer_menu_title'><a href=\"#!\">Меню</a></li>\n                                <li><a href=\"#!\">Наши услуги</a></li>\n                                <li><a href=\"#!\">Отрасли</a></li>\n                                <li><a href=\"#!\">Кейсы</a></li>\n                                <li><a href=\"#!\">Карьера</a></li>\n                                <li><a href=\"#!\">О нас</a></li>\n                            </ul>\n                        </nav>\n                        <nav className=\"footer_menu\">\n                            <ul className=\"list-reset footer_menu_list\">\n                                <li className='footer_menu_title'><a href=\"#!\">Доп. информация</a></li>\n                                <li><a href=\"#!\">Документация</a></li>\n                                <li><a href=\"#!\">Документация</a></li>\n                                <li><a href=\"#!\">Документация</a></li>\n                                <li><a href=\"#!\">Документация</a></li>\n                                <li><a href=\"#!\">Документация</a></li>\n                            </ul>\n                        </nav>\n                    </div>\n                    <div className=\"footer_inner_medium\">\n                        <div className=\"flex-row\">\n                            <nav>\n                                <ul className=\"list-reset footer_menu_info\">\n                                    <li><a href=\"#!\">Юридический адрес</a></li>\n                                    <li><a href=\"#!\">ИНН 9714047836</a></li>\n                                    <li><a href=\"#!\">Политика конфиденциальности</a></li>\n                                </ul>\n                            </nav>\n                            <nav>\n                                <ul className=\"list-reset footer_menu_social\">\n                                    <li><a href=\"\">+7 999 999-99-99</a></li>\n                                    <li><a href=\"\">hello@data-quality.com</a></li>\n                                    <li><a href=\"\">Telegram</a></li>\n                                </ul>\n                            </nav>\n                        </div>\n                    </div>\n                    <div className=\"img-wrap\">\n                        <img src={dataQuality} alt=\"DataQuality\" width={1472} height={206} loading='lazy' />\n                    </div>\n                    <div className=\"footer_inner_bottom\">\n                        <small>© ООО «Дата Кволити», {new Date().getFullYear()}</small>\n                        <button type=\"button\" className='btn-reset button_to_top' onClick={scrollToTop}>\n                            Наверх\n                            <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M7.92874 13.1749C8.0225 13.1749 8.11535 13.1565 8.20198 13.1206C8.28862 13.0847 8.36733 13.0321 8.43363 12.9658C8.49993 12.8995 8.55252 12.8208 8.58839 12.7342C8.62425 12.6476 8.6427 12.5547 8.64267 12.461L8.64261 1.02186C8.6443 0.92711 8.6271 0.832968 8.59202 0.744932C8.55694 0.656895 8.50468 0.576727 8.43828 0.509104C8.37189 0.441481 8.29269 0.387759 8.20531 0.351072C8.11793 0.314384 8.02412 0.295466 7.92935 0.295421C7.83458 0.295375 7.74075 0.314204 7.65334 0.350808C7.56593 0.387413 7.48668 0.441061 7.42022 0.50862C7.35376 0.576179 7.30142 0.656297 7.26626 0.7443C7.2311 0.832303 7.21381 0.926427 7.21541 1.02118L7.21547 12.4603C7.21559 12.6494 7.29078 12.8308 7.42452 12.9645C7.55825 13.0982 7.73961 13.1734 7.92874 13.1735L7.92874 13.1749Z\" fill=\"white\" />\n                                <path d=\"M14.4891 7.58196C14.623 7.44811 14.6982 7.26658 14.6982 7.07729C14.6982 6.88801 14.623 6.70647 14.4891 6.57263L8.43312 0.516609C8.29928 0.382763 8.11774 0.307567 7.92846 0.307566C7.73917 0.307565 7.55764 0.382759 7.42379 0.516603L1.36784 6.57256C1.23399 6.7064 1.1588 6.88794 1.1588 7.07722C1.1588 7.26651 1.234 7.44805 1.36784 7.58189C1.50169 7.71574 1.68322 7.79093 1.87251 7.79093C2.06179 7.79093 2.24333 7.71574 2.37717 7.5819L7.92847 2.0306L13.4798 7.58195C13.6137 7.7158 13.7952 7.79099 13.9845 7.791C14.1738 7.791 14.3553 7.7158 14.4891 7.58196Z\" fill=\"white\" />\n                            </svg>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import './map.scss';\nconst Map = () => {\n\n    return (\n        <svg className=\"source_map\" width=\"1312\" height=\"664\" viewBox=\"0 0 1312 664\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g  clipPath=\"url(#clip0_10718_32869)\">\n                <path d=\"M100.708 630.094L101.841 631.665L103.042 631.003L102.997 629.601L102.504 629.612L102.122 628.905L101.561 628.928L101.146 628.502L101.437 627.604L100.988 626.124L101.628 625.518L101.606 624.688L102.661 623.993L101.909 623.454L102.324 623.017L102.144 622.389L101.449 622.153L101.707 621.514L100.349 621.424L99.6192 620.785L98.9008 623.017L97.5989 623.432L95.4776 622.994L94.2318 623.129L92.6941 622.49L91.9534 621.705L91.0106 621.548L90.7637 621.054L91.2575 620.415L91.8075 620.897L92.7054 620.74L93.8614 621.458L95.7133 621.346L97.9805 620.325L99.1926 619.36L100.517 619.585L101.258 620.269L102.504 620.718L103.413 620.269L104.692 620.347L106.308 621.693L108.834 627.358L108.104 627.638L107.072 624.789L106.522 624.273L105.736 624.352L105.141 626.079L106.297 628.647L105.624 630.565L106.151 632.629L105.725 634.042L104.602 634.996L101.774 633.257L100.113 633.369L99.4396 632.786L100.192 632.438L100.001 631.833L100.607 631.564L99.9559 630.431L100.708 630.094Z\" fill=\"#3C484F\" />\n                <path d=\"M102.806 623.789L102.288 623.418L102.505 623.189L102.604 623.085L102.564 622.948L102.385 622.32L102.349 622.194L102.225 622.152L101.78 622.001L101.939 621.608L102.068 621.287L101.723 621.264L100.45 621.18L99.7839 620.597L99.4977 620.346L99.3812 620.708L98.7023 622.818L97.5853 623.174L95.5281 622.75L95.4897 622.742L95.4508 622.746L94.2686 622.874L92.8394 622.279L92.1352 621.533L92.0775 621.472L91.9945 621.458L91.1772 621.322L91.0575 621.083L91.2927 620.778L91.6426 621.085L91.7326 621.164L91.8505 621.143L92.6545 621.003L93.7295 621.67L93.7971 621.712L93.8765 621.707L95.7284 621.595L95.7742 621.592L95.8159 621.574L98.0831 620.553L98.1117 620.54L98.1362 620.521L99.261 619.625L100.402 619.819L101.088 620.453L101.125 620.487L101.173 620.504L102.419 620.953L102.519 620.989L102.614 620.942L103.464 620.522L104.595 620.592L106.104 621.848L108.498 627.219L108.252 627.313L107.307 624.704L107.286 624.648L107.243 624.607L106.693 624.091L106.61 624.013L106.497 624.024L105.711 624.103L105.552 624.119L105.5 624.27L104.905 625.997L104.873 626.091L104.913 626.181L106.028 628.659L105.388 630.483L105.363 630.554L105.382 630.627L105.892 632.624L105.507 633.9L104.579 634.688L101.905 633.044L101.837 633.002L101.757 633.008L100.199 633.113L99.8959 632.851L100.296 632.665L100.496 632.573L100.43 632.363L100.306 631.971L100.708 631.792L100.962 631.68L100.824 631.439L100.31 630.546L100.624 630.406L101.639 631.811L101.768 631.99L101.962 631.884L103.163 631.222L103.297 631.148L103.292 630.995L103.247 629.593L103.239 629.345L102.992 629.351L102.651 629.359L102.342 628.787L102.268 628.649L102.112 628.656L101.662 628.674L101.43 628.435L101.675 627.682L101.699 627.607L101.677 627.532L101.273 626.199L101.8 625.7L101.881 625.623L101.878 625.511L101.859 624.82L102.798 624.201L103.102 624.001L102.806 623.789Z\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" strokeWidth=\"0.5\" />\n                <mask id=\"path-3-inside-1_10718_32869\" fill=\"white\">\n                    <path d=\"M465.117 504.282L465.566 504.114L465.959 504.416L467.564 507.164L468.586 506.974L470.561 508.062L470.954 508.936L471.683 509.239L471.784 509.643L473.356 510.395L473.973 512.313L474.658 512.649L475.342 514.814L476.128 515.453L476.611 516.653L479.753 517.046L479.742 518.134L479.293 519.166L477.71 519.917L477.531 520.343L478.092 521.185L480.584 523.26L480.741 524.684L480.101 525.323L480.079 526.221L480.438 527.443L481.19 527.387L481.448 527.757L481.459 528.688L480.539 528.049L479.798 528.172L477.666 529.787L478.047 530.842L477.767 532.547L478.193 532.883L478.272 534.835L475.971 534.88L475.32 536.113L472.828 535.564L470.909 535.9L471.279 537.987L470.482 538.379L470.213 539.579L468.148 541.25L468.327 542.047L466.296 542.888L464.646 543.067L463.602 543.785L462.312 543.886L459.977 545.692L457.946 545.972L457.508 547.969L457.115 547.543L456.183 547.947L456.318 548.732L457.216 548.631L457.968 549.382L460.404 549.831L460.19 550.863L461.245 551.491L460.392 552.164L460.482 552.758L459.898 553.151L459.494 552.971L456.789 553.88L456.06 552.859L455.925 552.074L454.713 550.773L451.413 549.393L450.224 549.27L449.864 549.55L449.079 548.934L448.933 549.528L448.013 550.459L446.071 550.122L445.858 551.468L444.544 552.388L442.389 552.13L441.424 552.601L440.178 551.827L439.18 551.682L438.63 551.794L438.383 552.31L435.869 552.444L436.082 551.536L435.566 550.672L435.386 549.461L432.737 549.932L433.399 547.33L433.242 546.589L432.647 546.982L431.469 546.129L429.684 545.468L429.202 546.769L427.743 546.78L427.967 549.741L425.801 550.605L425.745 551.547H424.925L424.824 552.5L417.439 537.179L411.67 526.624L407.057 519.244L407.417 518.369L407.753 518.504L407.922 518.145L407.776 517.528L408.595 517.315L407.764 516.822L407.742 515.857L408.898 515.79L409.482 515.15L409.527 516.149L410.436 516.866L412.849 516.261L413.242 514.847L413.668 514.533L415.554 514.163L416.115 514.5L416.373 513.995L416.856 514.343L417.608 514.231L418.27 513.692L419.089 514.152L419.864 513.827L420.818 513.143L420.975 512.481L422.748 511.92L422.95 511.079L424.723 509.991L424.499 509.43L424.993 509.06L425.363 508.903L425.689 509.509L426.16 509.363L427.496 508.286L428.45 508.185L428.281 507.557L428.843 507.019L430.784 506.435L430.481 505.504L431.087 504.854L431.536 504.899L431.828 506.166L432.872 507.198L433.13 508.275L433.927 508.151L434.488 508.712L435.835 508.667L436.766 509.609L436.8 510.877L438.91 510.933L438.832 511.651L438.001 512.189L438.551 513.614L441.368 514.219L441.795 514.444L441.548 515.128L443.13 516.283L443.927 516.451L444.769 516.149L444.522 515.823L445.532 514.825L445.375 514.287L446.082 513.322L445.936 512.559L448.899 509.654L449.595 509.284L450.65 509.396L450.964 510.383L451.604 510.641L452.345 509.823L452.233 508.656L454.792 508.264L456.004 508.477L458.305 507.288L459.416 507.591L459.753 508.006L461.335 506.009L463.658 504.887L465.073 504.607L465.117 504.282Z\" />\n                </mask>\n                <path d=\"M465.117 504.282L465.566 504.114L465.959 504.416L467.564 507.164L468.586 506.974L470.561 508.062L470.954 508.936L471.683 509.239L471.784 509.643L473.356 510.395L473.973 512.313L474.658 512.649L475.342 514.814L476.128 515.453L476.611 516.653L479.753 517.046L479.742 518.134L479.293 519.166L477.71 519.917L477.531 520.343L478.092 521.185L480.584 523.26L480.741 524.684L480.101 525.323L480.079 526.221L480.438 527.443L481.19 527.387L481.448 527.757L481.459 528.688L480.539 528.049L479.798 528.172L477.666 529.787L478.047 530.842L477.767 532.547L478.193 532.883L478.272 534.835L475.971 534.88L475.32 536.113L472.828 535.564L470.909 535.9L471.279 537.987L470.482 538.379L470.213 539.579L468.148 541.25L468.327 542.047L466.296 542.888L464.646 543.067L463.602 543.785L462.312 543.886L459.977 545.692L457.946 545.972L457.508 547.969L457.115 547.543L456.183 547.947L456.318 548.732L457.216 548.631L457.968 549.382L460.404 549.831L460.19 550.863L461.245 551.491L460.392 552.164L460.482 552.758L459.898 553.151L459.494 552.971L456.789 553.88L456.06 552.859L455.925 552.074L454.713 550.773L451.413 549.393L450.224 549.27L449.864 549.55L449.079 548.934L448.933 549.528L448.013 550.459L446.071 550.122L445.858 551.468L444.544 552.388L442.389 552.13L441.424 552.601L440.178 551.827L439.18 551.682L438.63 551.794L438.383 552.31L435.869 552.444L436.082 551.536L435.566 550.672L435.386 549.461L432.737 549.932L433.399 547.33L433.242 546.589L432.647 546.982L431.469 546.129L429.684 545.468L429.202 546.769L427.743 546.78L427.967 549.741L425.801 550.605L425.745 551.547H424.925L424.824 552.5L417.439 537.179L411.67 526.624L407.057 519.244L407.417 518.369L407.753 518.504L407.922 518.145L407.776 517.528L408.595 517.315L407.764 516.822L407.742 515.857L408.898 515.79L409.482 515.15L409.527 516.149L410.436 516.866L412.849 516.261L413.242 514.847L413.668 514.533L415.554 514.163L416.115 514.5L416.373 513.995L416.856 514.343L417.608 514.231L418.27 513.692L419.089 514.152L419.864 513.827L420.818 513.143L420.975 512.481L422.748 511.92L422.95 511.079L424.723 509.991L424.499 509.43L424.993 509.06L425.363 508.903L425.689 509.509L426.16 509.363L427.496 508.286L428.45 508.185L428.281 507.557L428.843 507.019L430.784 506.435L430.481 505.504L431.087 504.854L431.536 504.899L431.828 506.166L432.872 507.198L433.13 508.275L433.927 508.151L434.488 508.712L435.835 508.667L436.766 509.609L436.8 510.877L438.91 510.933L438.832 511.651L438.001 512.189L438.551 513.614L441.368 514.219L441.795 514.444L441.548 515.128L443.13 516.283L443.927 516.451L444.769 516.149L444.522 515.823L445.532 514.825L445.375 514.287L446.082 513.322L445.936 512.559L448.899 509.654L449.595 509.284L450.65 509.396L450.964 510.383L451.604 510.641L452.345 509.823L452.233 508.656L454.792 508.264L456.004 508.477L458.305 507.288L459.416 507.591L459.753 508.006L461.335 506.009L463.658 504.887L465.073 504.607L465.117 504.282Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-3-inside-1_10718_32869)\" />\n                <mask id=\"path-4-inside-2_10718_32869\" fill=\"white\">\n                    <path d=\"M744.352 468.715L746.877 468.48L749.2 466.921L751.535 466.495L752.018 466.73L753.667 466.551L758.078 467.403L758.516 467.852L758.808 469.142L759.302 469.422L759.347 470.678L761.232 471.048L762.119 470.701L763.634 470.802L767.652 474.559L768.404 474.615L769.044 474.211L769.493 473.112L771.064 474.795L772.591 475.501L773.926 475.883L777.215 475.759L778.259 476.421L780.492 480.1L781.727 480.907L782.097 482.579L782.681 482.994L784.14 482.926L784.196 483.341L786.25 484.037L787.406 483.476L789.527 483.622L791.244 485.181L792.569 484.811L794.308 485.394L794.87 485.764L795.015 487.256L795.723 487.424L796.643 487.267L798.158 487.615L799.673 486.594L799.943 487.032L801.536 487.402L802.098 486.415L803.04 486.089L805.083 486.145L805.801 487.581L807.26 487.245L807.956 485.966L808.619 485.865L809.393 486.673L810.235 486.302L811.144 486.504L811.627 486.101L812.435 486.302L814.253 487.424L814.803 488.164L815.903 488.198L816.868 488.905L817.642 488.669L818.428 488.983L819.685 487.85L818.821 486.448L819.786 485.944L820.471 486.022L820.953 485.551L821.694 485.719L822.267 485.282L823.12 485.461L823.625 485.158L825.129 485.562L825.6 485.214L826.127 485.304L826.666 486.011L827.452 485.674L828.406 485.977L829.046 485.372L832.413 485.114L834.523 486.134L835.499 486.583L836.79 486.617L840.752 485.966L840.898 486.516L843.805 486.157L845.488 485.394L846.79 485.596L847.419 487.009L848.137 487.536L847.8 488.4L848.115 488.905L850.146 490.082L849.888 490.531L848.507 490.71L847.486 492.64L845.915 493.043L845.892 494.3L845.5 494.916L843.378 495.455L842.469 497.149L841.661 497.362L841.178 498.158L839.663 498.719L839.461 499.291L838.013 499.526L837.677 500.345L836.577 500.917L836.565 502.162L835.6 505.168L835.163 505.392L834.209 505.135L832.536 505.931L831.953 506.918L831.1 507.434L830.628 509.688L829.629 510.821L830.437 511.259L831.616 511.113L832.222 511.831L833.154 511.887L833.973 512.795L835.084 512.246L836.352 512.874L837.329 512.672L838.103 513.255L838.664 516.082L838.406 516.71L839.27 518.56L838.204 520.377L838.754 520.579L840.426 519.884L841.571 519.996L841.751 520.4L841.291 520.848L841.661 521.566L842.413 521.791L843.187 521.409L843.345 520.691L845.286 520.175L846.094 520.501L848.384 520.276L849.147 520.546L849.843 520.31L850.27 519.502L850.932 519.256L851.347 519.581L851.931 519.144L851.807 517.921L853.289 516.956L854.333 516.945L854.782 516.16L855.567 516.339L856.185 517.214L857.296 517.035L857.969 517.663L858.676 517.584L860.842 516.317L862.077 516.339L862.75 515.498L866.028 518.067L865.814 518.504L864.67 518.459L864.479 518.818L865.208 519.368L865.624 520.31L865.208 521.207L865.399 522.149L863.502 524.92L863.895 526.423L863.671 527.331L864.176 527.567L864.355 528.24L863.323 529.507L863.682 530.046L863.457 530.999L859.293 530.427L858.643 529.911L857.688 529.81L852.952 527.78L852.413 528.52L853.053 530.012L852.514 530.595L852.672 531.291L853.895 532.715L853.76 533.444L852.234 534.51L849.529 534.342L848.71 534.79L845.982 537.314L845.769 538.615L845.253 539.198L842.177 540.297L841.627 540.174L840.258 540.881L838.541 540.768L838.148 542.159L838.855 543.931L838.619 544.795L837.564 544.75L836.768 546.119L835.533 546.5L834.467 549.282L833.041 550.067L833.524 551.244L832.301 553.364L832.357 553.947L832.705 554.228L833.659 553.544L834.186 553.532L834.86 554.587L834.893 555.282L834.107 556.202L834.018 556.785L834.545 557.155L835.129 556.796L835.858 556.92L836.408 557.368L836.913 557.099L837.116 558.288L838.002 558.568L838.664 559.892L837.924 560.958L838.507 561.384L838.518 562.438L838.99 563.111L838.687 564.165L838.911 564.513L837.879 565.938L838.72 567.396L838.732 569.583L838.26 571.108L837.755 571.265L836.42 571.176L835.825 571.501L834.68 573.239L834.31 574.439L832.929 574.641L831.492 575.505L831.156 576.055L830.74 576.167L830 575.572L828.383 575.999L825.959 573.912L825.881 573.183L825.319 572.903L825.342 572.32L824.523 571.95L824.287 570.962L822.974 570.805L822.727 569.314L822.334 569.067L821.627 569.078L821.279 570.065L820.201 569.471L819.225 570.043L818.495 568.843L816.531 568.495L816.733 567.171L816.352 567.104L816.195 567.441L814.803 566.97L813.568 567.149L812.513 568.237L812.345 567.945L811.02 567.71L810.1 566.812L809.73 567.272L809 567.16L808.046 566.207L807.676 564.794L806.957 564.625L806.587 564.076L806.767 562.943L806.363 561.799L807.171 560.06L807.227 559.197L805.644 558.512L805.128 557.918L805.319 556.695L804.758 556.034L805.33 554.699L804.702 553.387L804.814 552.624L804.32 552.243L803.343 550.257L801.817 548.676L801.626 547.005L802.232 545.322L801.424 545.446L801.66 546.298L801.166 546.141L800.986 545.289L801.761 545.019L801.772 544.47L800.751 543.931L801.099 542.664L799.83 541.778L800.313 541.296L800.223 540.252L799.684 540.073L798.113 537.269L797.978 536.237L798.551 536.091L798.876 534.947L796.8 533.826L797.934 532.805L797.036 532.513L797.159 531.347L796.475 530.382L795.913 530.427L795.958 529.507L794.959 528.655L794.443 528.902L794.185 528.554L794.162 527.903L794.881 527.645L794.735 526.815L795.307 526.49L794.791 526.053L794.14 526.524L793.051 524.74L791.761 525.256L791.637 524.561L792.165 524.224L792.288 523.619L791.278 522.419L791.009 522.273L790.436 522.722L790.077 521.992L787.338 520.703L785.689 521.028L785.341 522.082L785.004 521.577L784.117 521.353L783.971 520.815L781.772 520.445L780.279 518.448L779.224 518.74L777.147 516.833L775.711 516.788L774.97 516.003L774.544 516.71L774.566 516.048L774.184 515.958L774.072 516.698L773.814 516.227L772.22 515.835L771.356 516.597L770.559 516.485L768.909 517.27L765.531 517.427L764.756 516.665L764.128 517.125L763.32 517.08L762.624 517.708L762.242 516.194L761.816 515.924L761.76 512.313L760.57 510.215L760.222 510.025L760.009 510.473L759.189 509.251L759.268 508.174L760.042 507.131L759.459 504.742L759.796 504.114L760.525 503.643L760.817 504.361L761.356 504.372L762.837 503.665L762.949 503.127L762.074 502.644L761.636 501.927L761.097 500.637L761.367 499.549L761.109 498.943L760.155 499.145L759.638 499.683L759.56 499.055L759.874 497.799L761.827 495.724V493.997L762.545 493.301L761.513 493.055L762.096 490.531L761.928 489.443L761.445 488.4L760.2 487.402L759.638 487.447L759.212 488.748L758.595 489.207L757.147 488.882L756.653 488.198L756.922 487.469L756.35 485.517L756.586 484.328L756.148 483.768L756.17 482.119L755.8 481.592L752.803 481.502L752.298 482.13L751.658 482.152L751.041 482.848L750.3 482.837L749.672 483.341L748.965 483.442L748.415 482.848L746.978 483.431L746.698 483.151L746.574 479.618L747.551 478.664L749.806 478.316L750.053 477.89L748.965 477.318L748.976 476.544L748.168 476.242L748.37 475.266L745.665 474.705L745.53 474.066L744.273 473.101L744.352 472.45L744.812 472.125L744.666 471.755L743.162 470.947L743.072 470.476L744.43 469.153L744.352 468.715Z\" />\n                </mask>\n                <path d=\"M744.352 468.715L746.877 468.48L749.2 466.921L751.535 466.495L752.018 466.73L753.667 466.551L758.078 467.403L758.516 467.852L758.808 469.142L759.302 469.422L759.347 470.678L761.232 471.048L762.119 470.701L763.634 470.802L767.652 474.559L768.404 474.615L769.044 474.211L769.493 473.112L771.064 474.795L772.591 475.501L773.926 475.883L777.215 475.759L778.259 476.421L780.492 480.1L781.727 480.907L782.097 482.579L782.681 482.994L784.14 482.926L784.196 483.341L786.25 484.037L787.406 483.476L789.527 483.622L791.244 485.181L792.569 484.811L794.308 485.394L794.87 485.764L795.015 487.256L795.723 487.424L796.643 487.267L798.158 487.615L799.673 486.594L799.943 487.032L801.536 487.402L802.098 486.415L803.04 486.089L805.083 486.145L805.801 487.581L807.26 487.245L807.956 485.966L808.619 485.865L809.393 486.673L810.235 486.302L811.144 486.504L811.627 486.101L812.435 486.302L814.253 487.424L814.803 488.164L815.903 488.198L816.868 488.905L817.642 488.669L818.428 488.983L819.685 487.85L818.821 486.448L819.786 485.944L820.471 486.022L820.953 485.551L821.694 485.719L822.267 485.282L823.12 485.461L823.625 485.158L825.129 485.562L825.6 485.214L826.127 485.304L826.666 486.011L827.452 485.674L828.406 485.977L829.046 485.372L832.413 485.114L834.523 486.134L835.499 486.583L836.79 486.617L840.752 485.966L840.898 486.516L843.805 486.157L845.488 485.394L846.79 485.596L847.419 487.009L848.137 487.536L847.8 488.4L848.115 488.905L850.146 490.082L849.888 490.531L848.507 490.71L847.486 492.64L845.915 493.043L845.892 494.3L845.5 494.916L843.378 495.455L842.469 497.149L841.661 497.362L841.178 498.158L839.663 498.719L839.461 499.291L838.013 499.526L837.677 500.345L836.577 500.917L836.565 502.162L835.6 505.168L835.163 505.392L834.209 505.135L832.536 505.931L831.953 506.918L831.1 507.434L830.628 509.688L829.629 510.821L830.437 511.259L831.616 511.113L832.222 511.831L833.154 511.887L833.973 512.795L835.084 512.246L836.352 512.874L837.329 512.672L838.103 513.255L838.664 516.082L838.406 516.71L839.27 518.56L838.204 520.377L838.754 520.579L840.426 519.884L841.571 519.996L841.751 520.4L841.291 520.848L841.661 521.566L842.413 521.791L843.187 521.409L843.345 520.691L845.286 520.175L846.094 520.501L848.384 520.276L849.147 520.546L849.843 520.31L850.27 519.502L850.932 519.256L851.347 519.581L851.931 519.144L851.807 517.921L853.289 516.956L854.333 516.945L854.782 516.16L855.567 516.339L856.185 517.214L857.296 517.035L857.969 517.663L858.676 517.584L860.842 516.317L862.077 516.339L862.75 515.498L866.028 518.067L865.814 518.504L864.67 518.459L864.479 518.818L865.208 519.368L865.624 520.31L865.208 521.207L865.399 522.149L863.502 524.92L863.895 526.423L863.671 527.331L864.176 527.567L864.355 528.24L863.323 529.507L863.682 530.046L863.457 530.999L859.293 530.427L858.643 529.911L857.688 529.81L852.952 527.78L852.413 528.52L853.053 530.012L852.514 530.595L852.672 531.291L853.895 532.715L853.76 533.444L852.234 534.51L849.529 534.342L848.71 534.79L845.982 537.314L845.769 538.615L845.253 539.198L842.177 540.297L841.627 540.174L840.258 540.881L838.541 540.768L838.148 542.159L838.855 543.931L838.619 544.795L837.564 544.75L836.768 546.119L835.533 546.5L834.467 549.282L833.041 550.067L833.524 551.244L832.301 553.364L832.357 553.947L832.705 554.228L833.659 553.544L834.186 553.532L834.86 554.587L834.893 555.282L834.107 556.202L834.018 556.785L834.545 557.155L835.129 556.796L835.858 556.92L836.408 557.368L836.913 557.099L837.116 558.288L838.002 558.568L838.664 559.892L837.924 560.958L838.507 561.384L838.518 562.438L838.99 563.111L838.687 564.165L838.911 564.513L837.879 565.938L838.72 567.396L838.732 569.583L838.26 571.108L837.755 571.265L836.42 571.176L835.825 571.501L834.68 573.239L834.31 574.439L832.929 574.641L831.492 575.505L831.156 576.055L830.74 576.167L830 575.572L828.383 575.999L825.959 573.912L825.881 573.183L825.319 572.903L825.342 572.32L824.523 571.95L824.287 570.962L822.974 570.805L822.727 569.314L822.334 569.067L821.627 569.078L821.279 570.065L820.201 569.471L819.225 570.043L818.495 568.843L816.531 568.495L816.733 567.171L816.352 567.104L816.195 567.441L814.803 566.97L813.568 567.149L812.513 568.237L812.345 567.945L811.02 567.71L810.1 566.812L809.73 567.272L809 567.16L808.046 566.207L807.676 564.794L806.957 564.625L806.587 564.076L806.767 562.943L806.363 561.799L807.171 560.06L807.227 559.197L805.644 558.512L805.128 557.918L805.319 556.695L804.758 556.034L805.33 554.699L804.702 553.387L804.814 552.624L804.32 552.243L803.343 550.257L801.817 548.676L801.626 547.005L802.232 545.322L801.424 545.446L801.66 546.298L801.166 546.141L800.986 545.289L801.761 545.019L801.772 544.47L800.751 543.931L801.099 542.664L799.83 541.778L800.313 541.296L800.223 540.252L799.684 540.073L798.113 537.269L797.978 536.237L798.551 536.091L798.876 534.947L796.8 533.826L797.934 532.805L797.036 532.513L797.159 531.347L796.475 530.382L795.913 530.427L795.958 529.507L794.959 528.655L794.443 528.902L794.185 528.554L794.162 527.903L794.881 527.645L794.735 526.815L795.307 526.49L794.791 526.053L794.14 526.524L793.051 524.74L791.761 525.256L791.637 524.561L792.165 524.224L792.288 523.619L791.278 522.419L791.009 522.273L790.436 522.722L790.077 521.992L787.338 520.703L785.689 521.028L785.341 522.082L785.004 521.577L784.117 521.353L783.971 520.815L781.772 520.445L780.279 518.448L779.224 518.74L777.147 516.833L775.711 516.788L774.97 516.003L774.544 516.71L774.566 516.048L774.184 515.958L774.072 516.698L773.814 516.227L772.22 515.835L771.356 516.597L770.559 516.485L768.909 517.27L765.531 517.427L764.756 516.665L764.128 517.125L763.32 517.08L762.624 517.708L762.242 516.194L761.816 515.924L761.76 512.313L760.57 510.215L760.222 510.025L760.009 510.473L759.189 509.251L759.268 508.174L760.042 507.131L759.459 504.742L759.796 504.114L760.525 503.643L760.817 504.361L761.356 504.372L762.837 503.665L762.949 503.127L762.074 502.644L761.636 501.927L761.097 500.637L761.367 499.549L761.109 498.943L760.155 499.145L759.638 499.683L759.56 499.055L759.874 497.799L761.827 495.724V493.997L762.545 493.301L761.513 493.055L762.096 490.531L761.928 489.443L761.445 488.4L760.2 487.402L759.638 487.447L759.212 488.748L758.595 489.207L757.147 488.882L756.653 488.198L756.922 487.469L756.35 485.517L756.586 484.328L756.148 483.768L756.17 482.119L755.8 481.592L752.803 481.502L752.298 482.13L751.658 482.152L751.041 482.848L750.3 482.837L749.672 483.341L748.965 483.442L748.415 482.848L746.978 483.431L746.698 483.151L746.574 479.618L747.551 478.664L749.806 478.316L750.053 477.89L748.965 477.318L748.976 476.544L748.168 476.242L748.37 475.266L745.665 474.705L745.53 474.066L744.273 473.101L744.352 472.45L744.812 472.125L744.666 471.755L743.162 470.947L743.072 470.476L744.43 469.153L744.352 468.715Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-4-inside-2_10718_32869)\" />\n                <mask id=\"path-5-inside-3_10718_32869\" fill=\"white\">\n                    <path d=\"M98.8329 342.6L99.843 342.488L100.73 341.277L100.763 340.267L101.493 340.895L102.952 341.389L103.513 342.477L104.86 342.409L105.623 342.981L106.656 342.937L105.679 340.357L105.702 338.843L106.083 338.484L105.758 338.091L105.477 335.601L104.725 334.569L104.781 333.93L103.468 333.178L102.638 332.034L102.413 331.003L100.011 327.514L99.9328 324.979L100.505 322.837L101.302 321.783L103.738 320.583L106.072 318.463L108.182 314.963L112.122 313.808L114.299 312.428L116.476 309.759L117.184 308.267L117.936 308.02L119.159 304.981L120.427 304.353L123.323 306.046L123.39 306.607L125.063 306.888L128.587 306.551L129.26 308.166L131.112 308.772L131.864 309.905L128.912 312.799L129.182 313.853L130.136 312.002L132.122 310.78L132.313 311.139L132.504 310.847L133.2 310.948L134.21 312.821L135.052 313.359L134.591 314.503L135.489 316.87L135.736 316.085L135.119 314.885L135.759 312.967L135.097 311.464L134.928 310.062L136.174 306.641L138.104 307.134L139.564 309.176L144.031 310.443L147.353 312.855L147.959 312.944L149.373 312.327L151.719 314.044L153.84 313.146L159.688 317.868L161.932 317.554L164.615 317.801L165.03 317.42L164.042 315.76L164.839 314.335L167.499 311.957L169.318 311.812L170.462 312.193L171.978 312.047L174.121 312.473L174.682 314.145L174.492 318.665L174.941 321.547L175.109 328.77L179.632 327.884L180.328 330.128L182.629 334.782L183.572 335.96L185.12 336.689L186.187 336.768L184.851 342.97L181.664 341.804L179.194 341.366L177.904 343.879L176.018 343.307L173.998 343.497L173.212 345.931L170.114 346.032L170.204 347.311L169.834 348.197L167.488 347.636L167.365 345.741L165.053 345.337L162.191 345.729L160.294 345.494L154.929 345.92L153.447 347.277L152.359 347.311L150.002 346.638L148.105 347.109L145.894 348.477L147.072 351.147L148.06 352.224L149.227 352.829L150.776 352.784L152.123 353.682L153.571 353.928L156.343 356.104L158.352 358.191L158.767 359.088L158.633 360.737L157.409 362.374L158.734 365.436L162.348 367.623L162.965 368.465L162.101 370.08L160.754 371.448L158.823 372.671L160.193 376.664L159.912 382.104L161.382 382.092L161.596 384.313L163.369 384.358L163.773 382.328L166.096 382.126L168.846 382.395L168.857 380.758L168.173 379.748L169.306 375.486L171.562 375.396L172.449 373.546L179.363 374.712L177.096 385.547L176.557 385.693L175.03 393.578L178.779 394.677L176.635 401.911L175.143 401.631L174.031 402.394L172.786 402.383L170.754 403.829L169.643 405.018L169.284 407.25L166.287 406.723L166.186 404.951L165.76 404.547L162.437 403.639L161.663 404.143L160.058 403.886L160.148 404.536L159.643 405.164L159.115 407.172L157.039 407.093L156.455 406.577L156.893 405.568L156.466 405.31L155.4 405.422L154.177 404.267L153.021 405.321L150.552 405.489L148.374 404.256L148.924 402.08L144.726 401.508L144.087 406.375L136.264 405.579L135.647 404.828L135.849 404.525L135.579 404.11L134.468 404.054L132.324 404.929L132.19 405.871L131.303 406.106L130.282 407.284L130.147 408.136L129.058 408.428L127.42 407.721L126.387 409.202L125.13 407.553L124.041 406.791L123.289 406.992L122.739 407.957L122.268 407.935L121.46 408.652L119.541 407.564L119.069 406.656L118.474 407.329L116.869 406.05L116.398 407.396L115.343 406.858L115.04 406.106L113.334 407.318L113.704 408.439L113.008 409.415L111.718 410.178L110.146 410.077L108.036 408.394L107.105 408.843L105.702 408.181L105.242 408.26L104.703 409.449L103.468 409.247L102.099 409.953L101.01 409.583L100.202 408.585L99.1471 408.551L98.1931 409.617L95.9259 409.281L95.4882 409.998L93.7149 409.617L92.8506 408.978L91.5487 409.067L90.7069 407.531L89.2591 407.049L89.4162 405.4L89.1468 404.873L88.4397 405.848L87.2613 405.209L87.7102 403.325L87.2837 402.282L86.3634 402.091L85.8695 401.541L86.0491 400.835L84.2196 397.593L84.388 395.619L84.4666 393.253L85.544 391.985L85.5889 391.626L84.9492 390.964L85.7348 388.979L85.6899 387.757L84.8706 387.106L84.9492 386.22L84.04 383.988L83.6921 383.629L82.6034 383.808L81.8851 382.922L81.8065 382.227L82.379 382.193L82.9963 380.208L82.884 377.236L81.9637 375.789L81.1668 375.486L78.8884 375.89L75.308 373.703L72.8276 370.147L72.6031 368.139L73.6133 366.816L73.7143 366.165L72.7266 366.625L72.4572 366.345L73.1194 365.47L72.996 364.887L72.143 364.012L72.0419 362.565L69.7411 359.323L71.2563 359.559L71.896 359.144L73.2878 359.537L75.3417 356.598L74.7132 354.332L74.9264 353.637L75.5998 354.321L76.1274 354.411L76.3406 354.13L77.0477 354.669L77.6426 354.31L77.9119 354.725L79.6853 354.837L80.2577 356.138L81.6382 356.508L82.9514 355.992L83.1646 354.758L83.6809 354.4L84.3543 354.669L85.241 354.5L86.7225 352.605L86.1277 350.059L85.241 348.892L85.8471 347.636L86.498 347.288L85.5216 347.042L85.4206 346.705L86.4307 346.593L85.7573 346.088L84.3992 345.774L84.8482 344.35L83.434 344.641L82.8616 345.595L83.0075 346.021L82.6259 345.572L81.9188 345.539L80.7179 346.301L78.8996 345.023L75.7009 339.605L74.3204 339.359L74.0398 337.418L74.4999 337.508L73.6806 336.768L73.4786 335.556L73.95 335.287L74.5112 335.96L74.9489 335.926L75.2295 335.377L76.5202 334.704L76.6998 331.115L78.114 330.767L81.1556 332.057L83.5911 333.358L83.7482 334.524L84.2084 335.141L86.599 336.812L88.9897 336.857L88.7316 337.777L88.0469 337.844L87.8 338.315L87.3174 337.934L86.2287 338.517L86.1613 339.213L87.0817 340.099L86.0828 341.198L86.2399 341.815L86.5429 341.68L86.5878 340.805L87.3623 340.626L87.4857 339.403L88.0581 339.392L88.754 338.82L90.1233 338.932L89.3489 337.856L89.6407 337.553L90.8192 338.271L93.4567 338.932L95.0954 340.245L96.633 340.648L98.8329 342.6ZM205.009 194.927L205.413 194.86L206.187 195.522L207.489 197.675L207.523 198.46L208.151 198.629L208.14 198.236L208.499 198.214L208.488 199.347L209.004 199.829L208.578 200.031L208.802 200.984L208.129 201.859L208.331 202.554L207.366 203.721L207.624 204.955L208.331 205.751L207.388 206.043L206.502 203.586L205.312 202.79L205.289 201.556L204.605 200.793L204.414 199.582L203.718 198.909L202.787 199.212L202.124 198.898L201.956 199.19L200.744 197.316L201.361 195.982H202.046L202.495 195.455L203.168 195.623L203.561 195.129L204.425 195.6L205.009 194.927ZM224.605 142.032L224.886 142.884L226.199 143.602L228.5 143.378L229.387 143.781L229.667 144.937L230.644 144.993L230.408 146.462L230.846 145.565L233.831 146.126L234.527 146.574L235.537 148.302L235.403 149.569L232.619 150.634L230.071 150.881L229.589 151.274L233.427 151.15L234.415 151.734L233.573 152.665L232.013 152.642L228.96 153.955L228.365 153.64L227.164 154.1L228.758 154.392L229.364 154.067L230.038 154.493L232.473 153.539L232.967 153.91L232.597 154.841L232.72 156.445L231.833 158.396L231.081 158.587L230.341 157.869L230.217 158.475L229.914 157.936L229.499 157.891L229.263 158.071L229.791 158.362L228.478 158.934L226.626 157.734L227.355 158.385L226.581 158.968L227.58 158.867L229.634 159.518L230.285 161.94L228.747 161.884L228.096 161.077L228.433 163.399L228.253 162.916L227.972 163.073L228.13 164.845L227.703 164.902L227.726 165.384L226.974 165.103L227.063 164.61L226.502 164.206L224.459 163.567L223.651 163.791L224.74 163.713L226.525 164.677L226.738 165.036L226.323 165.115L227.277 165.631L227.423 166.808L225.919 167.492L225.627 167.246L225.211 167.537L223.988 167.38L225.223 167.75L225.537 167.515L226.21 168.121L226.626 167.638L226.772 169.635L225.649 171.609L226.031 172.035L225.357 171.912L226.626 172.192L226.468 172.865L227.052 173.235L227.625 174.693L226.569 175.658L226.098 177.217L225.616 177.52L226.558 177.767L225.975 178.664L226.02 179.673L225.649 179.662L226.334 180.941L225.2 180.548L225.234 181.131L224.156 181.558L224.549 181.76L225.369 181.288L226.502 181.333L227.075 182.118L227.378 185.73L227.636 185.988L227.378 186.392L227.961 187.289L228.096 188.826L228.747 189.925L228.691 190.542L229.678 191.753L229.892 193.178L230.509 193.985L232.664 199.896L234.112 201.332L236.065 204.226L238.096 206.267L238.927 207.759L241.351 209.396L242.395 209.464L243.764 211.438L243.787 211.74L243.326 211.617L243.113 212.526L242.619 212.851L242.855 213.221L242.081 214.006L242.339 214.623L238.893 212.806L238.77 213.412L237.76 213.199L237.546 212.615L237.052 212.447L237.591 213.468L238.467 213.916L239.477 214.275L240.184 214.006L241.351 215.117L241.407 215.61L239.813 215.33L238.714 214.589L238.175 214.702L237.861 214.219L236.783 213.86L235.885 212.828L235.526 212.985L236.345 213.849L235.784 213.86L235.201 212.941L235.088 211.516L235.807 211.471L235.156 210.922L233.73 211.819L232.731 210.843L232.462 211.281L233.495 212.099L232.518 211.909L232.327 212.234L233.45 213.019L232.855 213.434L234.033 213.67L234.46 213.423L233.708 213.199L233.674 212.727L234.381 212.784L235.111 213.591L234.617 213.771L234.662 214.107L235.201 214.096L236.087 215.083L235.548 215.094L235.582 214.735L235.144 214.545L234.089 215.049L231.744 212.974L231.16 212.795L231.474 213.221L230.98 213.412L229.398 212.458L229.88 213.12L229.712 213.367L231.138 214.522V215.161L230.531 214.69L230.049 214.96L229.589 214.118L229.353 214.421L228.668 214.174L227.557 212.47L226.704 211.931L226.345 210.944L225.694 211.662L226.906 213.457L226.536 213.793L226.334 213.154L225.211 212.301L225.167 212.873L224.774 212.952L225.582 214.242L225.256 214.287L225.189 214.892L224.56 215.004L224.516 215.599L223.573 214.971L222.787 213.703L222.192 213.636L221.9 213.142L221.463 213.356L220.52 211.942L220.419 211.494L220.767 211.191L219.465 210.249L218.634 210.024L219.005 210.854L218.365 211.359L217.142 210.17L216.883 210.507L217.501 211.213L217.041 211.067L216.715 211.393L215.727 210.888L215.806 211.303L214.919 211.09L214.212 209.946L213.977 210.406L213.629 209.89L212.955 210.013L211.395 208.936L211.025 209.004L211.474 209.475L211.272 209.766L209.622 207.826L210.071 207.994L211.474 207.366L212.338 207.49L213.09 206.065L211.148 203.205L212.304 203.003L212.63 202.521L214.605 204.158L214.179 202.734L213.427 201.68L213.954 201.949L214.145 201.511L214.717 201.455L215.57 200.266L215.301 199.29L214.661 200.749L213.965 200.356L213.842 199.885L213.483 199.919L213.505 201.208L212.72 200.737L212.753 200.031L212.372 200.21L211.507 199.851L211.092 199.201L209.611 196.352L209.644 195.017L209.083 193.402L209.869 192.942L209.981 191.989L210.52 191.136L210.127 190.744L209.476 191.114L208.129 193.424L208.208 194.31L207.714 193.615L207.074 193.862L206.973 193.155L206.401 192.74L206.311 193.301L207.119 194.411L206.49 195.23L204.964 193.716L203.561 189.925L203.842 189.566L203.224 187.917L202.843 187.962L203.078 190.374L202.73 191.125L202.035 190.766L202.495 192.953L201.428 191.663L200.98 189.465L200.946 190.396L200.688 190.867L200.385 190.811L200.239 191.394L201.17 192.852L200.194 192.594L199.565 193.065L198.364 192.785L198.028 193.009L196.928 191.585L195.794 191.047L195.368 189.97L195.424 188.904L194.257 184.451L195.435 177.576L197.163 176.185L197.747 175.209L198.432 176.477L199.408 176.791L199.88 176.69L200.598 175.792L201.339 177.666L201.855 177.823L202.338 177.284L202.102 175.355L202.427 174.828L202.944 175.041L202.259 173.549L202.809 173.594L203.28 173.123L202.775 173.045L202.472 172.001L204.032 172.899L203.684 171.665L203.976 171.934L204.537 171.609L204.683 170.925L203.516 170.173L203.471 169.68L204.234 169.87L204.941 170.712L204.582 169.792L204.908 168.973L204.403 168.334L205.289 167.425L204.975 167.19L204.425 167.56L204.549 166.763L205.952 166.135L205.761 165.653L206.591 164.913L206.075 164.464L206.659 164.049L207.815 163.881L208.903 164.576L209.184 164.273L208.107 163.623L206.76 163.612L205.177 164.879L204.717 164.745L205.705 163.085L205.48 162.782L204.919 163.208L204.515 162.759L205.155 162.299L205.637 162.524L206.199 161.974L205.716 161.346L205.447 162.019L203.449 161.694L202.573 160.325L202.079 160.157L203.46 156.579L206.333 154.964L208.87 156.041L210.565 156.074L209.274 155.244L209.251 154.908L208.455 154.863L207.602 154.313L207.433 153.797L207.77 152.295L208.32 152.339L208.544 152.014L209.206 152.631L209.745 152.642L209.947 152.104L209.229 151.846L208.275 150.511L208.443 150.051L208.14 149.793L208.466 149.289L208.331 148.717L210.329 146.103L210.688 145.946L211.384 146.305L212.439 145.116L214.055 144.353L214.549 144.914L215.121 144.499L214.964 145.206L215.2 145.352L216.625 145.453L217.108 144.679L218.006 144.421L218.803 145.139L219.027 144.937L218.208 144.039L218.545 142.974L219.566 142.065L220.295 142.177L221.059 141.202L222.293 140.574L224.605 142.032ZM269.096 62.3405L269.478 62.3741L269.579 60.9272L270.016 60.2879L272.003 59.9514L272.744 58.426L272.542 57.4614L271.161 57.6521L270.735 57.1698L271.464 55.5883L271.139 54.018L272.519 52.8515L272.845 52.9973L272.631 53.4348L274.629 52.7281L276.021 52.8291L276.65 51.9318L277.682 52.8964L278.591 52.3019L278.883 53.2217L281.375 53.6479L281.835 53.3338L282.52 53.4348L282.441 55.8799L283.092 55.779L283.552 56.3846L284.001 54.7134L284.607 55.3079L285 54.6349L284.82 54.1302L285.269 54.2087L285.112 53.7152L285.438 53.1544L286.089 53.76L285.92 54.6349L286.425 54.4779L286.829 54.8368L286.695 55.2181L287.514 55.5658L288.154 54.6125L288.715 54.5227L289.736 53.3338L291.846 52.4029L291.498 51.9879L292.946 51.1018L293.496 51.3373L294.551 50.9784L295.472 51.9991L295.988 52.1337L296.83 51.4383L297.043 50.8102L297.986 50.1933L298.771 50.5858L299.209 49.038L299.961 49.8231L300.724 49.868L301.375 50.4064L300.556 48.9819L301.095 47.3892L301.791 47.6136L302.015 47.2659L301.712 46.8508L301.858 46.234L302.812 45.5722L303.99 45.6507L304.383 46.6938L305.304 46.234L305.337 45.5498L306.213 45.2694L306.505 43.4636L307.223 42.8354L307.896 42.7681L308.435 43.5533L311.05 44.8992L311.51 44.8319L311.982 44.3496L311.241 43.0934L311.14 41.7811L309.883 39.9417L310.365 38.091L311.207 36.9133L311.869 36.5544L312.476 36.8684L313.564 35.2308L314.26 35.1411L315.046 33.5148L316 32.8081L316.774 32.7072L317.178 31.7875L318.974 31.1818L319.03 30.3294L319.883 29.533L321.073 30.1162L323.856 27.8394L326.943 27.458L328.514 27.7721L329.221 28.7367L330.018 28.5235L330.49 28.9834L331.32 28.9273L331.87 30.5088L332.532 30.1162L332.846 31.0135L334.294 32.1913L333.812 33.941L334.384 34.9168L335.304 35.0626L335.147 36.9806L336.18 37.934L334.429 40.4015L334.014 43.0149L334.822 43.6991L333.554 45.2021L332.252 48.208L331.028 48.8025L331.264 49.4082L330.243 51.2139L329.21 51.9318L329.277 52.5263L330.097 53.0534L329.917 53.5357L329.053 53.8386L328.402 53.5918L327.021 54.2087L323.957 56.5192L323.015 56.8894L319.984 59.7046L319.142 59.7495L317.1 60.6692L315.192 62.5087L314.485 62.6545L313.811 62.2283L313.8 62.8676L312.408 63.9332L311.016 64.1463L307.896 65.481L307.705 66.0194L305.102 67.556L304.776 68.543L304.293 68.4533L303.44 69.0141L302.419 68.8122L302.352 69.1936L301.117 69.4291L300.186 70.2815L297.941 71.2685L296.134 71.4368L294.922 72.7379L294.001 72.8613L293.283 74.3979L292.958 73.9492L293.474 73.0632L292.733 72.6594L292.823 71.8294L292.351 71.4144L292.127 72.9061L291.24 73.7586L290.904 74.6671L290.096 74.9811L289.748 75.598L288.928 75.6541L288.906 75.9457L287.649 75.2279L287.301 76.3607L285.808 77.9871L283.833 78.5254L282.037 79.8938L281.61 80.5892L281.049 80.7126L281.42 80.264L281.128 79.8826L280.511 80.1967L279.343 80.1518L277.884 82.8325L277.626 83.9317L277.536 82.2829L277.031 82.3726L276.582 83.9317L276.795 84.8626L276.29 85.1879L276.347 85.8496L275.83 85.9169L275.415 87.0049L274.798 87.4423L274.36 86.7806L274.551 84.2008L273.889 84.0326L273.619 84.6832L274.023 85.0084L273.282 85.8721L272.665 87.8237L271.969 88.5415L271.116 88.8332L271.038 89.3828L270.005 89.6744L269.702 90.2352L269.949 90.9418L269.511 91.2783L269.938 91.6821L269.309 93.6337L268.524 93.4879L268.164 92.3214L268.344 91.1886L267.592 91.1325L267.39 91.9625L266.964 91.9737L267.222 92.2765L266.447 92.5457L266.896 92.9831L266.705 94.0711L265.145 94.9572L265.347 94.6992L264.898 94.0375L264.651 94.8787L263.518 94.2842L263.136 94.6095L264.034 95.5404L265.011 95.933L267.962 95.6975L268.501 96.7742L267.749 98.7147L267.334 98.9614L265.022 98.8268L264.55 98.3109L265.112 100.431L265.864 100.756L265.684 102.023L264.472 102.775L263.114 102.932L261.228 102.281L260.577 102.584L260.083 101.362L259.264 100.442L258.882 100.431L259.96 101.99L259.836 102.64L261.071 102.999L261.307 103.93L261.879 104.211L262.149 106.106L261.554 106.499L261.352 107.127L260.061 107.104L257.839 103.93L257.075 103.807L256.66 103.347L256.436 102.113L255.83 102.405L256.178 103.919L257.435 105.758L256.548 105.568L256.357 105.871L256.559 106.79L255.931 108.439L256.245 109.314L255.785 110.458L256.211 110.795L256.357 111.658L255.83 111.737L253.776 110.918L252.822 109.549L251.789 109.269L249.241 107.418L248.916 108.383L250.162 109.303L250.858 109.348L252.294 112.365L251.957 113.161L252.597 114.597L252.159 115.404L252.911 116.717L252.159 117.064L252.979 117.648L251.767 117.883L251.52 117.569L251.419 118.096L252.182 118.085L252.373 118.601L251.172 118.343L250.813 118.702L251.441 118.937L251.318 120.014L250.274 118.803L249.14 118.59L249.69 120.115L251.273 120.452L251.306 121.08L250.914 120.642L250.005 120.575L249.746 120.822L249.993 121.349L249.803 121.999L249.365 121.764L249.657 121.136L249.466 120.698L248.04 119.924L247.973 120.609L248.759 121.439L248.613 122.796L249.387 124.209L248.545 124.265L248.489 124.86L246.593 124.175L245.481 123.054L244.875 122.908L244.325 120.799L242.956 118.601L242.372 119.139L243.36 121.82L242.922 122.067L241.991 121.674L240.61 121.887L241.127 122.257L242.081 122.078L243.136 122.504L243.427 122.291L246.233 126.957L245.998 127.361L245.807 127.103L245.077 127.518L246.054 128.011L246.267 130.793L245.571 131.746L244.483 132.408L243.899 130.423L243.057 129.369L238.781 128.247L237.311 128.382L236.626 127.305L235.75 127.54L237.131 128.684L238.399 128.651L240.767 129.806L241.62 129.761L242.339 130.557L242.182 130.995L243.124 131.41L243.977 134.651L243.888 135.65L243.124 136.323L241.879 136.569L241.834 137.444L240.296 136.962L238.691 136.053L237.412 133.44L235.941 132.251L234.291 131.724L236.469 133.014L237.243 133.9L237.075 134.584L238.242 135.795L236.862 136.222L238.265 136.244L240.902 139.037L240.947 140.035L240.24 140.641L240.128 141.392L238.265 144.41L237.524 142.66L236.839 142.918L237.232 143.983L237.546 143.927L236.85 145.453L237.019 145.98L236.525 146.114L233.921 145.206L232.058 145.183L231.631 144.421L231.609 142.29L229.903 139.979L229.51 138.442L229.117 138.072L229.69 140.013L230.61 141.213L230.543 144.185L228.904 143.019L226.188 143.299L225.324 142.727L224.729 141.516L223.562 140.652L222.192 140.17L220.599 140.775L219.622 141.74L219.005 141.639L217.591 143.333L216.412 143.759L216.199 143.12L215.335 143.019L215.133 142.357L215.929 141.28L217.074 141.303L217.669 140.035L218.937 139.172L218.982 138.656L217.445 139.732L216.603 138.891L218.006 136.67L220.475 135.223L220.812 134.461L222.293 134.292L223.966 133.081L225.077 133.092L225.211 132.655L225.672 132.565L225.526 132.285L224.897 132.789L222.866 132.868L222.058 133.676L221.642 133.16L222.204 132.307L220.89 133.182L219.734 132.902L216.962 135.594L216.008 135.01L215.469 135.481L214.706 135.01L214.785 134.461L214.313 134.248L213.864 133.227L212.428 132.128L212.057 131.365L212.405 130.131L212.697 130.815L214.28 130.883L215.469 129.425L215.211 129.055L215.492 128.539L216.928 126.935L217.939 126.307L219.746 126.037L220.419 125.308L221.755 125.802L222.08 126.766L223.382 126.89L222.013 126.206L222.394 125.869L221.968 124.949L219.734 124.22L219.813 123.536L223.27 119.566L223.651 119.924L224.437 119.42L225.941 120.553L227.703 120.62L228.152 121.024L227.95 121.338L228.837 121.158L229.398 121.562L229.443 122.078L230.094 122.089L231.081 123.031L232.956 122.83L233.102 122.583L232.417 122.459L231.441 122.762L230.049 121.786L229.937 121.416L230.823 121.024L231.306 119.79L230.677 120.799L230.071 120.934L229.51 120.429L228.152 120.104L228.332 119.723L227.815 118.724L227.041 118.668L226.76 118.22L225.728 117.816L224.302 117.648L223.898 116.986L224.37 116.077L225.099 115.595L225.268 116.705L228.073 115.797L228.567 116.717L229.039 116.369L229.151 115.775L228.444 114.731L227.804 115.057L227.467 113.89L226.917 114.148L225.312 113.778L225.818 111.961L226.772 112.118L228.017 111.266L230.127 111.31L231.867 110.637L232.181 110.166L230.992 109.841L231.407 109.348L231.182 108.63L229.6 108.405L228.545 109L228.421 108.226L227.299 107.789L227.726 106.544L227.647 105.388L229.555 103.672L230.004 104.121L230.419 103.997L230.228 104.491L230.621 104.783L231.283 104.715L231.429 104.166L233.461 103.504L234.404 102.764V103.212L236.098 104.626L237.557 104.592L237.771 104.042L238.579 104.143L238.815 103.874L238.175 103.044L237.277 103.739L236.087 103.717L235.537 102.315L235.088 102.023L234.651 102.293L234.707 101.586L235.571 101.171L235.313 100.745L234.168 101.014L233.697 100.588L232.642 100.711L232.047 101.092L231.665 100.924L231.351 101.339L230.756 101.294L230.083 100.577L230.116 99.926L231.171 98.7707L233.921 97.0995L234.684 97.436L235.728 96.3929L236.581 96.3592L236.895 95.9667L235.863 95.4171L235.122 95.4507L234.538 96.3032L233.854 96.606L234.247 95.7311L233.562 95.8881L233.573 95.5853L234.74 94.5422L234.089 93.3533L231.878 94.1609L231.216 95.0918L230.251 95.1703L230.408 93.4206L230.891 92.3438L229.847 91.5363L229.319 91.8279L229.735 89.8202L230.397 88.6873L231.553 87.9358L231.631 88.7434L232.72 88.3508L232.451 88.979L232.821 89.3828L233.82 88.6873L234.998 92.4335L235.492 91.8279L236.244 91.6148L236.143 90.0221L237.019 89.3042L237.479 87.9583L238.231 87.7788L238.747 86.4441L238.063 85.6253L237.187 85.5805L237.019 84.7392L238.949 82.5969L239.555 82.2717L241.362 82.8998L242.361 82.5633L242.227 83.2699L243.764 84.3242L246.256 84.156L246.099 83.1129L245.066 83.1241L244.853 82.3053L245.089 81.1613L244.505 80.0733L243.933 80.0957L243.775 78.6937L244.168 78.0544L246.211 77.1795L246.94 76.4504L247.973 76.1925L248.175 76.4056L249.185 75.5419L249.006 74.2184L247.614 74.7007L247.064 74.2633L246.839 74.4652L246.75 74.0277L247.591 72.9061L247.793 73.2314L248.523 72.7715L249.051 72.9173L252.451 71.0779L252.406 69.9114L251.699 70.0123L252.395 69.1936L253.158 69.0029L252.945 68.285L254.146 66.8494L254.73 66.625L256.357 67.1073L256.862 66.1091L258.209 65.9969L258.018 64.5837L259.242 64.3818L260.993 65.1782L261.812 64.3145L263.114 64.1238V63.3948L263.439 63.0919L264.82 63.2153L265.785 62.8227L266.155 62.2171L265.909 61.8806L265.179 61.174L264.101 61.0281L263.899 60.3888L265.437 58.7737L267.446 57.8203L268.366 58.1904L269.803 58.1792L268.613 59.4803L267.637 61.3085L266.806 61.903L267.154 62.0376L267.323 62.7779L267.929 62.3853L268.726 62.7106L269.096 62.3405Z\" />\n                </mask>\n                <path d=\"M98.8329 342.6L99.843 342.488L100.73 341.277L100.763 340.267L101.493 340.895L102.952 341.389L103.513 342.477L104.86 342.409L105.623 342.981L106.656 342.937L105.679 340.357L105.702 338.843L106.083 338.484L105.758 338.091L105.477 335.601L104.725 334.569L104.781 333.93L103.468 333.178L102.638 332.034L102.413 331.003L100.011 327.514L99.9328 324.979L100.505 322.837L101.302 321.783L103.738 320.583L106.072 318.463L108.182 314.963L112.122 313.808L114.299 312.428L116.476 309.759L117.184 308.267L117.936 308.02L119.159 304.981L120.427 304.353L123.323 306.046L123.39 306.607L125.063 306.888L128.587 306.551L129.26 308.166L131.112 308.772L131.864 309.905L128.912 312.799L129.182 313.853L130.136 312.002L132.122 310.78L132.313 311.139L132.504 310.847L133.2 310.948L134.21 312.821L135.052 313.359L134.591 314.503L135.489 316.87L135.736 316.085L135.119 314.885L135.759 312.967L135.097 311.464L134.928 310.062L136.174 306.641L138.104 307.134L139.564 309.176L144.031 310.443L147.353 312.855L147.959 312.944L149.373 312.327L151.719 314.044L153.84 313.146L159.688 317.868L161.932 317.554L164.615 317.801L165.03 317.42L164.042 315.76L164.839 314.335L167.499 311.957L169.318 311.812L170.462 312.193L171.978 312.047L174.121 312.473L174.682 314.145L174.492 318.665L174.941 321.547L175.109 328.77L179.632 327.884L180.328 330.128L182.629 334.782L183.572 335.96L185.12 336.689L186.187 336.768L184.851 342.97L181.664 341.804L179.194 341.366L177.904 343.879L176.018 343.307L173.998 343.497L173.212 345.931L170.114 346.032L170.204 347.311L169.834 348.197L167.488 347.636L167.365 345.741L165.053 345.337L162.191 345.729L160.294 345.494L154.929 345.92L153.447 347.277L152.359 347.311L150.002 346.638L148.105 347.109L145.894 348.477L147.072 351.147L148.06 352.224L149.227 352.829L150.776 352.784L152.123 353.682L153.571 353.928L156.343 356.104L158.352 358.191L158.767 359.088L158.633 360.737L157.409 362.374L158.734 365.436L162.348 367.623L162.965 368.465L162.101 370.08L160.754 371.448L158.823 372.671L160.193 376.664L159.912 382.104L161.382 382.092L161.596 384.313L163.369 384.358L163.773 382.328L166.096 382.126L168.846 382.395L168.857 380.758L168.173 379.748L169.306 375.486L171.562 375.396L172.449 373.546L179.363 374.712L177.096 385.547L176.557 385.693L175.03 393.578L178.779 394.677L176.635 401.911L175.143 401.631L174.031 402.394L172.786 402.383L170.754 403.829L169.643 405.018L169.284 407.25L166.287 406.723L166.186 404.951L165.76 404.547L162.437 403.639L161.663 404.143L160.058 403.886L160.148 404.536L159.643 405.164L159.115 407.172L157.039 407.093L156.455 406.577L156.893 405.568L156.466 405.31L155.4 405.422L154.177 404.267L153.021 405.321L150.552 405.489L148.374 404.256L148.924 402.08L144.726 401.508L144.087 406.375L136.264 405.579L135.647 404.828L135.849 404.525L135.579 404.11L134.468 404.054L132.324 404.929L132.19 405.871L131.303 406.106L130.282 407.284L130.147 408.136L129.058 408.428L127.42 407.721L126.387 409.202L125.13 407.553L124.041 406.791L123.289 406.992L122.739 407.957L122.268 407.935L121.46 408.652L119.541 407.564L119.069 406.656L118.474 407.329L116.869 406.05L116.398 407.396L115.343 406.858L115.04 406.106L113.334 407.318L113.704 408.439L113.008 409.415L111.718 410.178L110.146 410.077L108.036 408.394L107.105 408.843L105.702 408.181L105.242 408.26L104.703 409.449L103.468 409.247L102.099 409.953L101.01 409.583L100.202 408.585L99.1471 408.551L98.1931 409.617L95.9259 409.281L95.4882 409.998L93.7149 409.617L92.8506 408.978L91.5487 409.067L90.7069 407.531L89.2591 407.049L89.4162 405.4L89.1468 404.873L88.4397 405.848L87.2613 405.209L87.7102 403.325L87.2837 402.282L86.3634 402.091L85.8695 401.541L86.0491 400.835L84.2196 397.593L84.388 395.619L84.4666 393.253L85.544 391.985L85.5889 391.626L84.9492 390.964L85.7348 388.979L85.6899 387.757L84.8706 387.106L84.9492 386.22L84.04 383.988L83.6921 383.629L82.6034 383.808L81.8851 382.922L81.8065 382.227L82.379 382.193L82.9963 380.208L82.884 377.236L81.9637 375.789L81.1668 375.486L78.8884 375.89L75.308 373.703L72.8276 370.147L72.6031 368.139L73.6133 366.816L73.7143 366.165L72.7266 366.625L72.4572 366.345L73.1194 365.47L72.996 364.887L72.143 364.012L72.0419 362.565L69.7411 359.323L71.2563 359.559L71.896 359.144L73.2878 359.537L75.3417 356.598L74.7132 354.332L74.9264 353.637L75.5998 354.321L76.1274 354.411L76.3406 354.13L77.0477 354.669L77.6426 354.31L77.9119 354.725L79.6853 354.837L80.2577 356.138L81.6382 356.508L82.9514 355.992L83.1646 354.758L83.6809 354.4L84.3543 354.669L85.241 354.5L86.7225 352.605L86.1277 350.059L85.241 348.892L85.8471 347.636L86.498 347.288L85.5216 347.042L85.4206 346.705L86.4307 346.593L85.7573 346.088L84.3992 345.774L84.8482 344.35L83.434 344.641L82.8616 345.595L83.0075 346.021L82.6259 345.572L81.9188 345.539L80.7179 346.301L78.8996 345.023L75.7009 339.605L74.3204 339.359L74.0398 337.418L74.4999 337.508L73.6806 336.768L73.4786 335.556L73.95 335.287L74.5112 335.96L74.9489 335.926L75.2295 335.377L76.5202 334.704L76.6998 331.115L78.114 330.767L81.1556 332.057L83.5911 333.358L83.7482 334.524L84.2084 335.141L86.599 336.812L88.9897 336.857L88.7316 337.777L88.0469 337.844L87.8 338.315L87.3174 337.934L86.2287 338.517L86.1613 339.213L87.0817 340.099L86.0828 341.198L86.2399 341.815L86.5429 341.68L86.5878 340.805L87.3623 340.626L87.4857 339.403L88.0581 339.392L88.754 338.82L90.1233 338.932L89.3489 337.856L89.6407 337.553L90.8192 338.271L93.4567 338.932L95.0954 340.245L96.633 340.648L98.8329 342.6ZM205.009 194.927L205.413 194.86L206.187 195.522L207.489 197.675L207.523 198.46L208.151 198.629L208.14 198.236L208.499 198.214L208.488 199.347L209.004 199.829L208.578 200.031L208.802 200.984L208.129 201.859L208.331 202.554L207.366 203.721L207.624 204.955L208.331 205.751L207.388 206.043L206.502 203.586L205.312 202.79L205.289 201.556L204.605 200.793L204.414 199.582L203.718 198.909L202.787 199.212L202.124 198.898L201.956 199.19L200.744 197.316L201.361 195.982H202.046L202.495 195.455L203.168 195.623L203.561 195.129L204.425 195.6L205.009 194.927ZM224.605 142.032L224.886 142.884L226.199 143.602L228.5 143.378L229.387 143.781L229.667 144.937L230.644 144.993L230.408 146.462L230.846 145.565L233.831 146.126L234.527 146.574L235.537 148.302L235.403 149.569L232.619 150.634L230.071 150.881L229.589 151.274L233.427 151.15L234.415 151.734L233.573 152.665L232.013 152.642L228.96 153.955L228.365 153.64L227.164 154.1L228.758 154.392L229.364 154.067L230.038 154.493L232.473 153.539L232.967 153.91L232.597 154.841L232.72 156.445L231.833 158.396L231.081 158.587L230.341 157.869L230.217 158.475L229.914 157.936L229.499 157.891L229.263 158.071L229.791 158.362L228.478 158.934L226.626 157.734L227.355 158.385L226.581 158.968L227.58 158.867L229.634 159.518L230.285 161.94L228.747 161.884L228.096 161.077L228.433 163.399L228.253 162.916L227.972 163.073L228.13 164.845L227.703 164.902L227.726 165.384L226.974 165.103L227.063 164.61L226.502 164.206L224.459 163.567L223.651 163.791L224.74 163.713L226.525 164.677L226.738 165.036L226.323 165.115L227.277 165.631L227.423 166.808L225.919 167.492L225.627 167.246L225.211 167.537L223.988 167.38L225.223 167.75L225.537 167.515L226.21 168.121L226.626 167.638L226.772 169.635L225.649 171.609L226.031 172.035L225.357 171.912L226.626 172.192L226.468 172.865L227.052 173.235L227.625 174.693L226.569 175.658L226.098 177.217L225.616 177.52L226.558 177.767L225.975 178.664L226.02 179.673L225.649 179.662L226.334 180.941L225.2 180.548L225.234 181.131L224.156 181.558L224.549 181.76L225.369 181.288L226.502 181.333L227.075 182.118L227.378 185.73L227.636 185.988L227.378 186.392L227.961 187.289L228.096 188.826L228.747 189.925L228.691 190.542L229.678 191.753L229.892 193.178L230.509 193.985L232.664 199.896L234.112 201.332L236.065 204.226L238.096 206.267L238.927 207.759L241.351 209.396L242.395 209.464L243.764 211.438L243.787 211.74L243.326 211.617L243.113 212.526L242.619 212.851L242.855 213.221L242.081 214.006L242.339 214.623L238.893 212.806L238.77 213.412L237.76 213.199L237.546 212.615L237.052 212.447L237.591 213.468L238.467 213.916L239.477 214.275L240.184 214.006L241.351 215.117L241.407 215.61L239.813 215.33L238.714 214.589L238.175 214.702L237.861 214.219L236.783 213.86L235.885 212.828L235.526 212.985L236.345 213.849L235.784 213.86L235.201 212.941L235.088 211.516L235.807 211.471L235.156 210.922L233.73 211.819L232.731 210.843L232.462 211.281L233.495 212.099L232.518 211.909L232.327 212.234L233.45 213.019L232.855 213.434L234.033 213.67L234.46 213.423L233.708 213.199L233.674 212.727L234.381 212.784L235.111 213.591L234.617 213.771L234.662 214.107L235.201 214.096L236.087 215.083L235.548 215.094L235.582 214.735L235.144 214.545L234.089 215.049L231.744 212.974L231.16 212.795L231.474 213.221L230.98 213.412L229.398 212.458L229.88 213.12L229.712 213.367L231.138 214.522V215.161L230.531 214.69L230.049 214.96L229.589 214.118L229.353 214.421L228.668 214.174L227.557 212.47L226.704 211.931L226.345 210.944L225.694 211.662L226.906 213.457L226.536 213.793L226.334 213.154L225.211 212.301L225.167 212.873L224.774 212.952L225.582 214.242L225.256 214.287L225.189 214.892L224.56 215.004L224.516 215.599L223.573 214.971L222.787 213.703L222.192 213.636L221.9 213.142L221.463 213.356L220.52 211.942L220.419 211.494L220.767 211.191L219.465 210.249L218.634 210.024L219.005 210.854L218.365 211.359L217.142 210.17L216.883 210.507L217.501 211.213L217.041 211.067L216.715 211.393L215.727 210.888L215.806 211.303L214.919 211.09L214.212 209.946L213.977 210.406L213.629 209.89L212.955 210.013L211.395 208.936L211.025 209.004L211.474 209.475L211.272 209.766L209.622 207.826L210.071 207.994L211.474 207.366L212.338 207.49L213.09 206.065L211.148 203.205L212.304 203.003L212.63 202.521L214.605 204.158L214.179 202.734L213.427 201.68L213.954 201.949L214.145 201.511L214.717 201.455L215.57 200.266L215.301 199.29L214.661 200.749L213.965 200.356L213.842 199.885L213.483 199.919L213.505 201.208L212.72 200.737L212.753 200.031L212.372 200.21L211.507 199.851L211.092 199.201L209.611 196.352L209.644 195.017L209.083 193.402L209.869 192.942L209.981 191.989L210.52 191.136L210.127 190.744L209.476 191.114L208.129 193.424L208.208 194.31L207.714 193.615L207.074 193.862L206.973 193.155L206.401 192.74L206.311 193.301L207.119 194.411L206.49 195.23L204.964 193.716L203.561 189.925L203.842 189.566L203.224 187.917L202.843 187.962L203.078 190.374L202.73 191.125L202.035 190.766L202.495 192.953L201.428 191.663L200.98 189.465L200.946 190.396L200.688 190.867L200.385 190.811L200.239 191.394L201.17 192.852L200.194 192.594L199.565 193.065L198.364 192.785L198.028 193.009L196.928 191.585L195.794 191.047L195.368 189.97L195.424 188.904L194.257 184.451L195.435 177.576L197.163 176.185L197.747 175.209L198.432 176.477L199.408 176.791L199.88 176.69L200.598 175.792L201.339 177.666L201.855 177.823L202.338 177.284L202.102 175.355L202.427 174.828L202.944 175.041L202.259 173.549L202.809 173.594L203.28 173.123L202.775 173.045L202.472 172.001L204.032 172.899L203.684 171.665L203.976 171.934L204.537 171.609L204.683 170.925L203.516 170.173L203.471 169.68L204.234 169.87L204.941 170.712L204.582 169.792L204.908 168.973L204.403 168.334L205.289 167.425L204.975 167.19L204.425 167.56L204.549 166.763L205.952 166.135L205.761 165.653L206.591 164.913L206.075 164.464L206.659 164.049L207.815 163.881L208.903 164.576L209.184 164.273L208.107 163.623L206.76 163.612L205.177 164.879L204.717 164.745L205.705 163.085L205.48 162.782L204.919 163.208L204.515 162.759L205.155 162.299L205.637 162.524L206.199 161.974L205.716 161.346L205.447 162.019L203.449 161.694L202.573 160.325L202.079 160.157L203.46 156.579L206.333 154.964L208.87 156.041L210.565 156.074L209.274 155.244L209.251 154.908L208.455 154.863L207.602 154.313L207.433 153.797L207.77 152.295L208.32 152.339L208.544 152.014L209.206 152.631L209.745 152.642L209.947 152.104L209.229 151.846L208.275 150.511L208.443 150.051L208.14 149.793L208.466 149.289L208.331 148.717L210.329 146.103L210.688 145.946L211.384 146.305L212.439 145.116L214.055 144.353L214.549 144.914L215.121 144.499L214.964 145.206L215.2 145.352L216.625 145.453L217.108 144.679L218.006 144.421L218.803 145.139L219.027 144.937L218.208 144.039L218.545 142.974L219.566 142.065L220.295 142.177L221.059 141.202L222.293 140.574L224.605 142.032ZM269.096 62.3405L269.478 62.3741L269.579 60.9272L270.016 60.2879L272.003 59.9514L272.744 58.426L272.542 57.4614L271.161 57.6521L270.735 57.1698L271.464 55.5883L271.139 54.018L272.519 52.8515L272.845 52.9973L272.631 53.4348L274.629 52.7281L276.021 52.8291L276.65 51.9318L277.682 52.8964L278.591 52.3019L278.883 53.2217L281.375 53.6479L281.835 53.3338L282.52 53.4348L282.441 55.8799L283.092 55.779L283.552 56.3846L284.001 54.7134L284.607 55.3079L285 54.6349L284.82 54.1302L285.269 54.2087L285.112 53.7152L285.438 53.1544L286.089 53.76L285.92 54.6349L286.425 54.4779L286.829 54.8368L286.695 55.2181L287.514 55.5658L288.154 54.6125L288.715 54.5227L289.736 53.3338L291.846 52.4029L291.498 51.9879L292.946 51.1018L293.496 51.3373L294.551 50.9784L295.472 51.9991L295.988 52.1337L296.83 51.4383L297.043 50.8102L297.986 50.1933L298.771 50.5858L299.209 49.038L299.961 49.8231L300.724 49.868L301.375 50.4064L300.556 48.9819L301.095 47.3892L301.791 47.6136L302.015 47.2659L301.712 46.8508L301.858 46.234L302.812 45.5722L303.99 45.6507L304.383 46.6938L305.304 46.234L305.337 45.5498L306.213 45.2694L306.505 43.4636L307.223 42.8354L307.896 42.7681L308.435 43.5533L311.05 44.8992L311.51 44.8319L311.982 44.3496L311.241 43.0934L311.14 41.7811L309.883 39.9417L310.365 38.091L311.207 36.9133L311.869 36.5544L312.476 36.8684L313.564 35.2308L314.26 35.1411L315.046 33.5148L316 32.8081L316.774 32.7072L317.178 31.7875L318.974 31.1818L319.03 30.3294L319.883 29.533L321.073 30.1162L323.856 27.8394L326.943 27.458L328.514 27.7721L329.221 28.7367L330.018 28.5235L330.49 28.9834L331.32 28.9273L331.87 30.5088L332.532 30.1162L332.846 31.0135L334.294 32.1913L333.812 33.941L334.384 34.9168L335.304 35.0626L335.147 36.9806L336.18 37.934L334.429 40.4015L334.014 43.0149L334.822 43.6991L333.554 45.2021L332.252 48.208L331.028 48.8025L331.264 49.4082L330.243 51.2139L329.21 51.9318L329.277 52.5263L330.097 53.0534L329.917 53.5357L329.053 53.8386L328.402 53.5918L327.021 54.2087L323.957 56.5192L323.015 56.8894L319.984 59.7046L319.142 59.7495L317.1 60.6692L315.192 62.5087L314.485 62.6545L313.811 62.2283L313.8 62.8676L312.408 63.9332L311.016 64.1463L307.896 65.481L307.705 66.0194L305.102 67.556L304.776 68.543L304.293 68.4533L303.44 69.0141L302.419 68.8122L302.352 69.1936L301.117 69.4291L300.186 70.2815L297.941 71.2685L296.134 71.4368L294.922 72.7379L294.001 72.8613L293.283 74.3979L292.958 73.9492L293.474 73.0632L292.733 72.6594L292.823 71.8294L292.351 71.4144L292.127 72.9061L291.24 73.7586L290.904 74.6671L290.096 74.9811L289.748 75.598L288.928 75.6541L288.906 75.9457L287.649 75.2279L287.301 76.3607L285.808 77.9871L283.833 78.5254L282.037 79.8938L281.61 80.5892L281.049 80.7126L281.42 80.264L281.128 79.8826L280.511 80.1967L279.343 80.1518L277.884 82.8325L277.626 83.9317L277.536 82.2829L277.031 82.3726L276.582 83.9317L276.795 84.8626L276.29 85.1879L276.347 85.8496L275.83 85.9169L275.415 87.0049L274.798 87.4423L274.36 86.7806L274.551 84.2008L273.889 84.0326L273.619 84.6832L274.023 85.0084L273.282 85.8721L272.665 87.8237L271.969 88.5415L271.116 88.8332L271.038 89.3828L270.005 89.6744L269.702 90.2352L269.949 90.9418L269.511 91.2783L269.938 91.6821L269.309 93.6337L268.524 93.4879L268.164 92.3214L268.344 91.1886L267.592 91.1325L267.39 91.9625L266.964 91.9737L267.222 92.2765L266.447 92.5457L266.896 92.9831L266.705 94.0711L265.145 94.9572L265.347 94.6992L264.898 94.0375L264.651 94.8787L263.518 94.2842L263.136 94.6095L264.034 95.5404L265.011 95.933L267.962 95.6975L268.501 96.7742L267.749 98.7147L267.334 98.9614L265.022 98.8268L264.55 98.3109L265.112 100.431L265.864 100.756L265.684 102.023L264.472 102.775L263.114 102.932L261.228 102.281L260.577 102.584L260.083 101.362L259.264 100.442L258.882 100.431L259.96 101.99L259.836 102.64L261.071 102.999L261.307 103.93L261.879 104.211L262.149 106.106L261.554 106.499L261.352 107.127L260.061 107.104L257.839 103.93L257.075 103.807L256.66 103.347L256.436 102.113L255.83 102.405L256.178 103.919L257.435 105.758L256.548 105.568L256.357 105.871L256.559 106.79L255.931 108.439L256.245 109.314L255.785 110.458L256.211 110.795L256.357 111.658L255.83 111.737L253.776 110.918L252.822 109.549L251.789 109.269L249.241 107.418L248.916 108.383L250.162 109.303L250.858 109.348L252.294 112.365L251.957 113.161L252.597 114.597L252.159 115.404L252.911 116.717L252.159 117.064L252.979 117.648L251.767 117.883L251.52 117.569L251.419 118.096L252.182 118.085L252.373 118.601L251.172 118.343L250.813 118.702L251.441 118.937L251.318 120.014L250.274 118.803L249.14 118.59L249.69 120.115L251.273 120.452L251.306 121.08L250.914 120.642L250.005 120.575L249.746 120.822L249.993 121.349L249.803 121.999L249.365 121.764L249.657 121.136L249.466 120.698L248.04 119.924L247.973 120.609L248.759 121.439L248.613 122.796L249.387 124.209L248.545 124.265L248.489 124.86L246.593 124.175L245.481 123.054L244.875 122.908L244.325 120.799L242.956 118.601L242.372 119.139L243.36 121.82L242.922 122.067L241.991 121.674L240.61 121.887L241.127 122.257L242.081 122.078L243.136 122.504L243.427 122.291L246.233 126.957L245.998 127.361L245.807 127.103L245.077 127.518L246.054 128.011L246.267 130.793L245.571 131.746L244.483 132.408L243.899 130.423L243.057 129.369L238.781 128.247L237.311 128.382L236.626 127.305L235.75 127.54L237.131 128.684L238.399 128.651L240.767 129.806L241.62 129.761L242.339 130.557L242.182 130.995L243.124 131.41L243.977 134.651L243.888 135.65L243.124 136.323L241.879 136.569L241.834 137.444L240.296 136.962L238.691 136.053L237.412 133.44L235.941 132.251L234.291 131.724L236.469 133.014L237.243 133.9L237.075 134.584L238.242 135.795L236.862 136.222L238.265 136.244L240.902 139.037L240.947 140.035L240.24 140.641L240.128 141.392L238.265 144.41L237.524 142.66L236.839 142.918L237.232 143.983L237.546 143.927L236.85 145.453L237.019 145.98L236.525 146.114L233.921 145.206L232.058 145.183L231.631 144.421L231.609 142.29L229.903 139.979L229.51 138.442L229.117 138.072L229.69 140.013L230.61 141.213L230.543 144.185L228.904 143.019L226.188 143.299L225.324 142.727L224.729 141.516L223.562 140.652L222.192 140.17L220.599 140.775L219.622 141.74L219.005 141.639L217.591 143.333L216.412 143.759L216.199 143.12L215.335 143.019L215.133 142.357L215.929 141.28L217.074 141.303L217.669 140.035L218.937 139.172L218.982 138.656L217.445 139.732L216.603 138.891L218.006 136.67L220.475 135.223L220.812 134.461L222.293 134.292L223.966 133.081L225.077 133.092L225.211 132.655L225.672 132.565L225.526 132.285L224.897 132.789L222.866 132.868L222.058 133.676L221.642 133.16L222.204 132.307L220.89 133.182L219.734 132.902L216.962 135.594L216.008 135.01L215.469 135.481L214.706 135.01L214.785 134.461L214.313 134.248L213.864 133.227L212.428 132.128L212.057 131.365L212.405 130.131L212.697 130.815L214.28 130.883L215.469 129.425L215.211 129.055L215.492 128.539L216.928 126.935L217.939 126.307L219.746 126.037L220.419 125.308L221.755 125.802L222.08 126.766L223.382 126.89L222.013 126.206L222.394 125.869L221.968 124.949L219.734 124.22L219.813 123.536L223.27 119.566L223.651 119.924L224.437 119.42L225.941 120.553L227.703 120.62L228.152 121.024L227.95 121.338L228.837 121.158L229.398 121.562L229.443 122.078L230.094 122.089L231.081 123.031L232.956 122.83L233.102 122.583L232.417 122.459L231.441 122.762L230.049 121.786L229.937 121.416L230.823 121.024L231.306 119.79L230.677 120.799L230.071 120.934L229.51 120.429L228.152 120.104L228.332 119.723L227.815 118.724L227.041 118.668L226.76 118.22L225.728 117.816L224.302 117.648L223.898 116.986L224.37 116.077L225.099 115.595L225.268 116.705L228.073 115.797L228.567 116.717L229.039 116.369L229.151 115.775L228.444 114.731L227.804 115.057L227.467 113.89L226.917 114.148L225.312 113.778L225.818 111.961L226.772 112.118L228.017 111.266L230.127 111.31L231.867 110.637L232.181 110.166L230.992 109.841L231.407 109.348L231.182 108.63L229.6 108.405L228.545 109L228.421 108.226L227.299 107.789L227.726 106.544L227.647 105.388L229.555 103.672L230.004 104.121L230.419 103.997L230.228 104.491L230.621 104.783L231.283 104.715L231.429 104.166L233.461 103.504L234.404 102.764V103.212L236.098 104.626L237.557 104.592L237.771 104.042L238.579 104.143L238.815 103.874L238.175 103.044L237.277 103.739L236.087 103.717L235.537 102.315L235.088 102.023L234.651 102.293L234.707 101.586L235.571 101.171L235.313 100.745L234.168 101.014L233.697 100.588L232.642 100.711L232.047 101.092L231.665 100.924L231.351 101.339L230.756 101.294L230.083 100.577L230.116 99.926L231.171 98.7707L233.921 97.0995L234.684 97.436L235.728 96.3929L236.581 96.3592L236.895 95.9667L235.863 95.4171L235.122 95.4507L234.538 96.3032L233.854 96.606L234.247 95.7311L233.562 95.8881L233.573 95.5853L234.74 94.5422L234.089 93.3533L231.878 94.1609L231.216 95.0918L230.251 95.1703L230.408 93.4206L230.891 92.3438L229.847 91.5363L229.319 91.8279L229.735 89.8202L230.397 88.6873L231.553 87.9358L231.631 88.7434L232.72 88.3508L232.451 88.979L232.821 89.3828L233.82 88.6873L234.998 92.4335L235.492 91.8279L236.244 91.6148L236.143 90.0221L237.019 89.3042L237.479 87.9583L238.231 87.7788L238.747 86.4441L238.063 85.6253L237.187 85.5805L237.019 84.7392L238.949 82.5969L239.555 82.2717L241.362 82.8998L242.361 82.5633L242.227 83.2699L243.764 84.3242L246.256 84.156L246.099 83.1129L245.066 83.1241L244.853 82.3053L245.089 81.1613L244.505 80.0733L243.933 80.0957L243.775 78.6937L244.168 78.0544L246.211 77.1795L246.94 76.4504L247.973 76.1925L248.175 76.4056L249.185 75.5419L249.006 74.2184L247.614 74.7007L247.064 74.2633L246.839 74.4652L246.75 74.0277L247.591 72.9061L247.793 73.2314L248.523 72.7715L249.051 72.9173L252.451 71.0779L252.406 69.9114L251.699 70.0123L252.395 69.1936L253.158 69.0029L252.945 68.285L254.146 66.8494L254.73 66.625L256.357 67.1073L256.862 66.1091L258.209 65.9969L258.018 64.5837L259.242 64.3818L260.993 65.1782L261.812 64.3145L263.114 64.1238V63.3948L263.439 63.0919L264.82 63.2153L265.785 62.8227L266.155 62.2171L265.909 61.8806L265.179 61.174L264.101 61.0281L263.899 60.3888L265.437 58.7737L267.446 57.8203L268.366 58.1904L269.803 58.1792L268.613 59.4803L267.637 61.3085L266.806 61.903L267.154 62.0376L267.323 62.7779L267.929 62.3853L268.726 62.7106L269.096 62.3405Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-5-inside-3_10718_32869)\" />\n                <mask id=\"path-6-inside-4_10718_32869\" fill=\"white\">\n                    <path d=\"M155.255 579.049L154.514 581.147L158.061 582.459L159.463 584.041L159.385 585.218L160.283 585.533L158.745 586.475L159.912 588.426L159.542 588.684L160.013 589.335L161.641 590.344L161.888 588.684L164.144 589.525L167.073 589.312L168.128 590.322L169.722 593.227L171.551 593.451L172.562 597.321L174.75 601.078L174.009 601.942L173.1 602.043L172.707 601.998L171.944 601.022L171.338 600.988L170.777 601.471L170.519 602.357L171.035 602.503L171.147 602.929L171.798 602.918L173.291 604.477L175.917 605.71L176.557 606.563L176.097 607.079L176.333 607.572L175.143 608.907L175.367 609.311L174.829 610.074L174.627 609.872L174.211 610.332L173.482 610.343L173.661 611.7L172.449 609.098L172.068 609.131L172.842 610.735L172.73 611.498L173.291 612.003L173.168 612.474L172.719 612.44L171.237 610.848L171.45 611.767L170.53 611.924L170.631 612.732L169.8 612.44L168.577 614.549L167.163 613.966L166.276 614.257L165.446 615.054L164.166 613.293L163.459 613.506L163.223 614.179L164.189 615.312L163.942 615.603L163.425 615.087L163.908 616.332L163.392 616.422L162.64 615.749L163.223 614.706L161.618 614.425L160.182 614.975L157.757 614.919L158.801 613.472L160.732 609.367L160.474 608.896L158.229 609.389L157.881 609.143L157.836 607.931L157.488 607.438L156.568 607.37L155.434 606.709L156.938 605.273L158.509 605.172L158.588 603.927L159.048 603.198L160.406 602.604L160.721 601.594L159.587 599.979L158.711 599.889L158.139 598.712L157.511 598.476L154.851 593.563L155.782 592.374L156.815 591.903L157.107 591.41L155.861 591.04L153.638 593.485L150.743 591.152L148.565 588.426L148.678 586.475L147.926 586.217L147.185 586.508L145.176 584.904L144.166 583.861L143.133 583.536L142.695 582.818L144.008 580.721L145.647 581.024L145.58 580.53L144.648 580.306V579.879L147.241 579.61L149.497 578.119L151.091 576.156L152.617 576.223L153.627 576.761L155.232 577.872L155.445 578.567L155.255 579.049Z\" />\n                </mask>\n                <path d=\"M155.255 579.049L154.514 581.147L158.061 582.459L159.463 584.041L159.385 585.218L160.283 585.533L158.745 586.475L159.912 588.426L159.542 588.684L160.013 589.335L161.641 590.344L161.888 588.684L164.144 589.525L167.073 589.312L168.128 590.322L169.722 593.227L171.551 593.451L172.562 597.321L174.75 601.078L174.009 601.942L173.1 602.043L172.707 601.998L171.944 601.022L171.338 600.988L170.777 601.471L170.519 602.357L171.035 602.503L171.147 602.929L171.798 602.918L173.291 604.477L175.917 605.71L176.557 606.563L176.097 607.079L176.333 607.572L175.143 608.907L175.367 609.311L174.829 610.074L174.627 609.872L174.211 610.332L173.482 610.343L173.661 611.7L172.449 609.098L172.068 609.131L172.842 610.735L172.73 611.498L173.291 612.003L173.168 612.474L172.719 612.44L171.237 610.848L171.45 611.767L170.53 611.924L170.631 612.732L169.8 612.44L168.577 614.549L167.163 613.966L166.276 614.257L165.446 615.054L164.166 613.293L163.459 613.506L163.223 614.179L164.189 615.312L163.942 615.603L163.425 615.087L163.908 616.332L163.392 616.422L162.64 615.749L163.223 614.706L161.618 614.425L160.182 614.975L157.757 614.919L158.801 613.472L160.732 609.367L160.474 608.896L158.229 609.389L157.881 609.143L157.836 607.931L157.488 607.438L156.568 607.37L155.434 606.709L156.938 605.273L158.509 605.172L158.588 603.927L159.048 603.198L160.406 602.604L160.721 601.594L159.587 599.979L158.711 599.889L158.139 598.712L157.511 598.476L154.851 593.563L155.782 592.374L156.815 591.903L157.107 591.41L155.861 591.04L153.638 593.485L150.743 591.152L148.565 588.426L148.678 586.475L147.926 586.217L147.185 586.508L145.176 584.904L144.166 583.861L143.133 583.536L142.695 582.818L144.008 580.721L145.647 581.024L145.58 580.53L144.648 580.306V579.879L147.241 579.61L149.497 578.119L151.091 576.156L152.617 576.223L153.627 576.761L155.232 577.872L155.445 578.567L155.255 579.049Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-6-inside-4_10718_32869)\" />\n                <mask id=\"path-7-inside-5_10718_32869\" fill=\"white\">\n                    <path d=\"M218.185 476.499L219.936 473.796L220.666 474.032L221.059 475.053L221.889 475.266L222.686 476.028L224.493 475.434L225.874 476.275L226.614 476.04L227.613 475.086L229.375 474.537L229.925 474.649L231.407 477.419L231.89 477.711L233.18 477.329L234.303 476.376L235.055 476.331L238.029 480.223H238.736L240.745 479.158L240.891 478.552L242.44 476.937L242.608 477.7L243.405 478.653L243.091 479.382L243.596 479.909L244.808 479.371L245.549 479.416L246.738 480.279L247.244 480.369L248.209 479.752L249.342 479.909L249.679 480.302L251.654 479.203L253.708 480.549L254.573 480.706L255.426 479.64L256.065 479.27L256.57 479.55L257.76 479.259L258.142 479.819L258.086 480.223L256.885 481.143L257.098 482.489L256.267 484.216L257.783 485.181L257.547 485.764L257.771 487.032L258.535 486.762L259.287 487.435L260.431 487.48L259.208 489.264L256.728 489.622L256.413 490.071L256.627 490.845L255.616 491.821L255.134 492.023L253.899 491.395L253.046 492.034L253.091 492.55L252.26 493.425L253.473 493.941L253.944 495.085L252.956 496.061L252.047 496.431L251.396 495.219L250.959 495.399L250.521 495.029L249.275 493.133L248.501 493.907L248.31 495.017L247.187 496.711L246.839 496.588L247.468 495.533L247.109 493.952L247.838 492.774L247.558 492.112L243.517 491.238L241.239 492.539L240.116 494.827L241.317 496.24L240.521 497.911L244.92 501.388L245.212 502.409L246.424 503.867L246.974 504.035L247.648 503.867L249.017 502.499L250.465 502.117L252.204 503.048L252.9 503.003L253.529 501.792L255.953 500.895L256.638 501.276L257.21 501.142L258.849 499.515L259.545 498.023L260.229 497.765L260.824 496.924L261.318 497.765L262.553 497.564L262.205 498.461L262.642 499.381L261.666 501.814L260.689 502.701L261.094 503.575L260.42 504.551L261.43 505.336L261.026 507.512L259.825 507.052L257.648 507.288L256.75 509.509L255.931 510.238L254.775 510.473L254.427 513.95L253.708 515.218L254.169 515.981L254.225 517.259L254.169 519.211L253.72 519.581L254.337 520.299L254.505 521.734L254.954 522.452L253.888 523.72L253.686 527.017L253.36 527.724L254.157 529.014L253.753 529.776L254.135 530.405L254.011 530.786L254.606 532.222L254.112 532.917L253.45 532.715L252.945 533.074L252.642 534.768L253.349 535.519L252.451 538.806L251.8 539.501L250.689 539.636L249.432 540.353L248.972 540.275L248.175 539.243L246.435 538.749L245.706 538.862L245.358 538.458L244.864 538.57L243.91 540.589L242.597 540.219L242.485 541.329L241.115 542.215L239.847 540.566L238.747 539.871L238.309 540.14L238.714 541.464L238.276 542.047L237.546 541.924L237.861 540.712L236.446 538.435L237.187 537.325L236.3 535.43L234.808 533.915L234.46 533.927L233.854 534.936L233.068 534.117L234.392 532.816L234.707 531.908L234.538 530.573L233.887 529.709L234.348 528.823L234.101 528.576L233.528 529.003L231.654 527.713L231.306 529.137L229.488 531.605L227.232 530.932L226.659 528.554L225.818 527.847L225.211 528.004L224.852 527.612L225.133 526.961L225.795 527.129L226.199 526.703L225.885 526.457L225.683 525.088L224.314 525.514L223.685 525.088L223.651 524.258L222.731 522.845L222.17 520.052L221.788 519.738L219.959 520.131L219.027 518.538L217.557 517.865L216.659 517.966L215.346 516.855L213.46 513.939L211.99 512.403L210.845 509.969L210.048 509.06L210.329 508.14L209.891 506.178L210.329 503.631L210.654 502.353L211.979 500.143L211.709 498.752L212.394 497.507L212.057 497.003L211.025 497.048L210.239 495.836L209.027 494.827L208.062 494.524L208.387 493.795L210.318 493.021L211.193 493.043L212.383 491.507L214.167 490.531L214.594 489.174L215.099 488.647L215.02 487.727L216.558 486.325L216.513 485.181L215.503 484.654L215.683 484.396L215.088 484.026L214.504 482.713L213.314 482.152L213.741 481.345L215.761 479.943L216.558 478.249L218.062 477.453L218.185 476.499Z\" />\n                </mask>\n                <path d=\"M218.185 476.499L219.936 473.796L220.666 474.032L221.059 475.053L221.889 475.266L222.686 476.028L224.493 475.434L225.874 476.275L226.614 476.04L227.613 475.086L229.375 474.537L229.925 474.649L231.407 477.419L231.89 477.711L233.18 477.329L234.303 476.376L235.055 476.331L238.029 480.223H238.736L240.745 479.158L240.891 478.552L242.44 476.937L242.608 477.7L243.405 478.653L243.091 479.382L243.596 479.909L244.808 479.371L245.549 479.416L246.738 480.279L247.244 480.369L248.209 479.752L249.342 479.909L249.679 480.302L251.654 479.203L253.708 480.549L254.573 480.706L255.426 479.64L256.065 479.27L256.57 479.55L257.76 479.259L258.142 479.819L258.086 480.223L256.885 481.143L257.098 482.489L256.267 484.216L257.783 485.181L257.547 485.764L257.771 487.032L258.535 486.762L259.287 487.435L260.431 487.48L259.208 489.264L256.728 489.622L256.413 490.071L256.627 490.845L255.616 491.821L255.134 492.023L253.899 491.395L253.046 492.034L253.091 492.55L252.26 493.425L253.473 493.941L253.944 495.085L252.956 496.061L252.047 496.431L251.396 495.219L250.959 495.399L250.521 495.029L249.275 493.133L248.501 493.907L248.31 495.017L247.187 496.711L246.839 496.588L247.468 495.533L247.109 493.952L247.838 492.774L247.558 492.112L243.517 491.238L241.239 492.539L240.116 494.827L241.317 496.24L240.521 497.911L244.92 501.388L245.212 502.409L246.424 503.867L246.974 504.035L247.648 503.867L249.017 502.499L250.465 502.117L252.204 503.048L252.9 503.003L253.529 501.792L255.953 500.895L256.638 501.276L257.21 501.142L258.849 499.515L259.545 498.023L260.229 497.765L260.824 496.924L261.318 497.765L262.553 497.564L262.205 498.461L262.642 499.381L261.666 501.814L260.689 502.701L261.094 503.575L260.42 504.551L261.43 505.336L261.026 507.512L259.825 507.052L257.648 507.288L256.75 509.509L255.931 510.238L254.775 510.473L254.427 513.95L253.708 515.218L254.169 515.981L254.225 517.259L254.169 519.211L253.72 519.581L254.337 520.299L254.505 521.734L254.954 522.452L253.888 523.72L253.686 527.017L253.36 527.724L254.157 529.014L253.753 529.776L254.135 530.405L254.011 530.786L254.606 532.222L254.112 532.917L253.45 532.715L252.945 533.074L252.642 534.768L253.349 535.519L252.451 538.806L251.8 539.501L250.689 539.636L249.432 540.353L248.972 540.275L248.175 539.243L246.435 538.749L245.706 538.862L245.358 538.458L244.864 538.57L243.91 540.589L242.597 540.219L242.485 541.329L241.115 542.215L239.847 540.566L238.747 539.871L238.309 540.14L238.714 541.464L238.276 542.047L237.546 541.924L237.861 540.712L236.446 538.435L237.187 537.325L236.3 535.43L234.808 533.915L234.46 533.927L233.854 534.936L233.068 534.117L234.392 532.816L234.707 531.908L234.538 530.573L233.887 529.709L234.348 528.823L234.101 528.576L233.528 529.003L231.654 527.713L231.306 529.137L229.488 531.605L227.232 530.932L226.659 528.554L225.818 527.847L225.211 528.004L224.852 527.612L225.133 526.961L225.795 527.129L226.199 526.703L225.885 526.457L225.683 525.088L224.314 525.514L223.685 525.088L223.651 524.258L222.731 522.845L222.17 520.052L221.788 519.738L219.959 520.131L219.027 518.538L217.557 517.865L216.659 517.966L215.346 516.855L213.46 513.939L211.99 512.403L210.845 509.969L210.048 509.06L210.329 508.14L209.891 506.178L210.329 503.631L210.654 502.353L211.979 500.143L211.709 498.752L212.394 497.507L212.057 497.003L211.025 497.048L210.239 495.836L209.027 494.827L208.062 494.524L208.387 493.795L210.318 493.021L211.193 493.043L212.383 491.507L214.167 490.531L214.594 489.174L215.099 488.647L215.02 487.727L216.558 486.325L216.513 485.181L215.503 484.654L215.683 484.396L215.088 484.026L214.504 482.713L213.314 482.152L213.741 481.345L215.761 479.943L216.558 478.249L218.062 477.453L218.185 476.499Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-7-inside-5_10718_32869)\" />\n                <mask id=\"path-8-inside-6_10718_32869\" fill=\"white\">\n                    <path d=\"M65.1842 549.158L65.9474 549.326L66.3403 550.089L67.4626 549.898L68.136 549.382L68.8319 549.708L69.3706 548.788L69.9879 548.631L70.1787 548.048L69.6849 547.778L70.392 546.982L71.0654 547.722L72.1317 547.33L72.8724 547.857L74.9937 548.317L76.565 546.993L78.5965 546.646L79.4046 545.356L81.0769 544.985L81.6045 544.57L83.288 544.458L84.5114 544.761L85.6001 544.021L86.4531 543.954L89.1468 545.838L90.5722 546.23L90.7966 546.713L90.7518 547.341L90.0334 547.778L90.1345 548.664L91.9078 549.259L92.9628 548.339L93.7036 549.001L93.5128 549.909L94.1076 550.538L93.827 550.885L93.0077 550.605L92.7832 551.659L93.625 552.119L93.5016 552.702L94.1525 553.543L94.7474 553.51L95.2637 554.295L96.4871 554.755L96.3524 555.159L95.6004 555.125L95.9259 555.899L95.331 556.673L95.982 557.794L95.7238 558.411L96.2177 560.576L97.1605 561.451L97.239 562.101L96.5656 563.885L96.0606 564.233L95.6116 563.515L95.2076 564.053L93.928 564.468L93.6587 563.694L92.1996 563.167L91.717 562.045L91.5262 562.539L90.2355 562.427L90.0222 562.034L89.4386 562.18L88.9111 560.946L87.7887 561.07L87.7101 561.989L88.0019 562.337L86.4531 562.987L86.5653 562.573L85.5103 561.271L84.242 560.823L83.3778 559.813L83.3329 558.198L82.8166 558.277L82.0085 557.593L82.031 556.549L81.4249 556.875L80.83 556.751L79.472 557.649L76.9915 557.828L75.3978 559.163L74.6907 558.804L74.8702 558.254L74.5672 558.434L73.7703 557.828L72.6143 558.344L72.3337 557.525L71.3236 556.392L70.6726 556.202L68.7421 556.381L67.9789 557.514L67.1147 557.503L66.7219 556.168L66.1495 555.977L65.3526 554.62L65.3975 553.768L66.0821 553.521L65.9811 552.321L65.2179 550.953L65.2964 550.268L64.8026 550.066L64.8251 549.203L65.1842 549.158Z\" />\n                </mask>\n                <path d=\"M65.1842 549.158L65.9474 549.326L66.3403 550.089L67.4626 549.898L68.136 549.382L68.8319 549.708L69.3706 548.788L69.9879 548.631L70.1787 548.048L69.6849 547.778L70.392 546.982L71.0654 547.722L72.1317 547.33L72.8724 547.857L74.9937 548.317L76.565 546.993L78.5965 546.646L79.4046 545.356L81.0769 544.985L81.6045 544.57L83.288 544.458L84.5114 544.761L85.6001 544.021L86.4531 543.954L89.1468 545.838L90.5722 546.23L90.7966 546.713L90.7518 547.341L90.0334 547.778L90.1345 548.664L91.9078 549.259L92.9628 548.339L93.7036 549.001L93.5128 549.909L94.1076 550.538L93.827 550.885L93.0077 550.605L92.7832 551.659L93.625 552.119L93.5016 552.702L94.1525 553.543L94.7474 553.51L95.2637 554.295L96.4871 554.755L96.3524 555.159L95.6004 555.125L95.9259 555.899L95.331 556.673L95.982 557.794L95.7238 558.411L96.2177 560.576L97.1605 561.451L97.239 562.101L96.5656 563.885L96.0606 564.233L95.6116 563.515L95.2076 564.053L93.928 564.468L93.6587 563.694L92.1996 563.167L91.717 562.045L91.5262 562.539L90.2355 562.427L90.0222 562.034L89.4386 562.18L88.9111 560.946L87.7887 561.07L87.7101 561.989L88.0019 562.337L86.4531 562.987L86.5653 562.573L85.5103 561.271L84.242 560.823L83.3778 559.813L83.3329 558.198L82.8166 558.277L82.0085 557.593L82.031 556.549L81.4249 556.875L80.83 556.751L79.472 557.649L76.9915 557.828L75.3978 559.163L74.6907 558.804L74.8702 558.254L74.5672 558.434L73.7703 557.828L72.6143 558.344L72.3337 557.525L71.3236 556.392L70.6726 556.202L68.7421 556.381L67.9789 557.514L67.1147 557.503L66.7219 556.168L66.1495 555.977L65.3526 554.62L65.3975 553.768L66.0821 553.521L65.9811 552.321L65.2179 550.953L65.2964 550.268L64.8026 550.066L64.8251 549.203L65.1842 549.158Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-8-inside-6_10718_32869)\" />\n                <mask id=\"path-9-inside-7_10718_32869\" fill=\"white\">\n                    <path d=\"M50.3126 509.756L51.5808 509.576L52.6695 510.238L53.6011 511.876L54.0052 511.707L54.3194 512.1L55.8346 511.629L56.0591 512.223L57.2488 513.098V513.648L58.0793 514.164L58.2589 517.416L59.0221 518H59.7741L61.0985 518.628L62.176 518.482L63.0514 519.536L63.1525 521.05L62.7596 521.331L64.1514 522.082L64.0167 522.991L63.1525 523.002L63.1749 523.731L62.2433 524.023L61.8393 523.361L61.7158 523.989L60.9302 523.866L61.0312 524.55L60.1894 524.83L60.8628 526.064L61.2108 525.66L61.7383 526.255L62.3219 526.176L62.0638 526.748L62.4341 527.354L62.1648 527.746L61.6597 527.578L61.9964 528.274L61.6934 528.711L62.2433 529.193L60.7394 530.405L60.7057 531.167L61.1546 531.055L61.6709 531.605L60.5149 533.523L60.2231 533.691L59.5833 533.321L59.168 533.613L59.5048 534.364L59.2017 535.228L57.5855 535.172L56.5866 535.934L56.3846 537.022L57.3161 537.336L56.6203 538.189L56.407 537.998L56.0254 538.357L56.1152 537.718L55.8009 537.751L55.1163 536.708L54.6225 536.562L54.5439 535.474L54.9031 534.779L54.499 534.005L53.5225 533.298L53.3654 532.581L52.7257 532.558L52.6246 531.852L51.7716 531.885L50.0432 532.693L50.2003 531.953L49.2126 531.818L48.7076 532.098L47.5066 531.616L47.3607 532.098L46.5863 532.547L46.3618 532.379L45.2058 533.343L44.9701 532.951L43.4212 533.209L42.3999 532.244L40.9969 531.997L40.7724 532.368L41.0755 533.22L40.5367 533.444L40.7949 534.633L40.2898 535.329L39.5827 535.777L39.1787 535.62L38.4716 536.226L37.3492 536.136L37.4839 535.43L36.3391 535.273L36.1258 534.162L35.3177 534.028L35.531 532.996L34.6219 532.569L34.8688 531.235L34.5545 530.741L34.7678 530.158L34.4647 529.99L34.7117 529.418L34.9361 529.653L35.1943 529.272L34.4535 528.767L33.9821 527.477L34.4311 527.287L34.6892 526.333L34.1056 525.638L34.1841 525.212L33.174 524.684L32.8036 523.675L31.8496 522.879L32.4108 522.957L32.6353 522.239L33.0618 522.116L32.8934 521.656L33.2862 520.736L34.4086 520.781L34.9249 520.243L35.9014 520.591L36.5074 521.757L37.1921 521.802L37.338 522.194L39.7174 522.06L39.8296 521.645L40.5143 521.533L40.7388 520.961L41.4908 520.748L42.1417 519.693L41.9846 519.402L42.7029 519.48L43.4549 518.83L43.8589 518.897L43.9151 518.134L44.2854 518.022L44.0049 517.82L44.7905 517.383L45.2507 517.686L45.2844 516.71L45.6772 516.183L45.5088 515.667L46.7322 514.657L47.3158 513.603L47.8097 513.737L47.978 512.492L48.427 512.806L48.8086 512.369L48.2137 511.618L48.8198 510.283L49.4483 510.844L49.8299 510.462L49.6055 510.081L50.3126 509.756Z\" />\n                </mask>\n                <path d=\"M50.3126 509.756L51.5808 509.576L52.6695 510.238L53.6011 511.876L54.0052 511.707L54.3194 512.1L55.8346 511.629L56.0591 512.223L57.2488 513.098V513.648L58.0793 514.164L58.2589 517.416L59.0221 518H59.7741L61.0985 518.628L62.176 518.482L63.0514 519.536L63.1525 521.05L62.7596 521.331L64.1514 522.082L64.0167 522.991L63.1525 523.002L63.1749 523.731L62.2433 524.023L61.8393 523.361L61.7158 523.989L60.9302 523.866L61.0312 524.55L60.1894 524.83L60.8628 526.064L61.2108 525.66L61.7383 526.255L62.3219 526.176L62.0638 526.748L62.4341 527.354L62.1648 527.746L61.6597 527.578L61.9964 528.274L61.6934 528.711L62.2433 529.193L60.7394 530.405L60.7057 531.167L61.1546 531.055L61.6709 531.605L60.5149 533.523L60.2231 533.691L59.5833 533.321L59.168 533.613L59.5048 534.364L59.2017 535.228L57.5855 535.172L56.5866 535.934L56.3846 537.022L57.3161 537.336L56.6203 538.189L56.407 537.998L56.0254 538.357L56.1152 537.718L55.8009 537.751L55.1163 536.708L54.6225 536.562L54.5439 535.474L54.9031 534.779L54.499 534.005L53.5225 533.298L53.3654 532.581L52.7257 532.558L52.6246 531.852L51.7716 531.885L50.0432 532.693L50.2003 531.953L49.2126 531.818L48.7076 532.098L47.5066 531.616L47.3607 532.098L46.5863 532.547L46.3618 532.379L45.2058 533.343L44.9701 532.951L43.4212 533.209L42.3999 532.244L40.9969 531.997L40.7724 532.368L41.0755 533.22L40.5367 533.444L40.7949 534.633L40.2898 535.329L39.5827 535.777L39.1787 535.62L38.4716 536.226L37.3492 536.136L37.4839 535.43L36.3391 535.273L36.1258 534.162L35.3177 534.028L35.531 532.996L34.6219 532.569L34.8688 531.235L34.5545 530.741L34.7678 530.158L34.4647 529.99L34.7117 529.418L34.9361 529.653L35.1943 529.272L34.4535 528.767L33.9821 527.477L34.4311 527.287L34.6892 526.333L34.1056 525.638L34.1841 525.212L33.174 524.684L32.8036 523.675L31.8496 522.879L32.4108 522.957L32.6353 522.239L33.0618 522.116L32.8934 521.656L33.2862 520.736L34.4086 520.781L34.9249 520.243L35.9014 520.591L36.5074 521.757L37.1921 521.802L37.338 522.194L39.7174 522.06L39.8296 521.645L40.5143 521.533L40.7388 520.961L41.4908 520.748L42.1417 519.693L41.9846 519.402L42.7029 519.48L43.4549 518.83L43.8589 518.897L43.9151 518.134L44.2854 518.022L44.0049 517.82L44.7905 517.383L45.2507 517.686L45.2844 516.71L45.6772 516.183L45.5088 515.667L46.7322 514.657L47.3158 513.603L47.8097 513.737L47.978 512.492L48.427 512.806L48.8086 512.369L48.2137 511.618L48.8198 510.283L49.4483 510.844L49.8299 510.462L49.6055 510.081L50.3126 509.756Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-9-inside-7_10718_32869)\" />\n                <mask id=\"path-10-inside-8_10718_32869\" fill=\"white\">\n                    <path d=\"M578.779 524.18L579.105 523.114L580.07 522.396L580.059 521.678L582.046 521.398L583.987 520.175L584.055 518.818L585.974 519.009L586.322 518.145L587.309 517.842L588.039 519.592L588.084 521.432L588.746 522.52L591.283 524.236L592.304 525.716L596.277 528.173L598.14 530.057L598.803 531.661L600.048 532.222L601.384 533.467L602.271 532.928L603.741 533.321L604.639 533.052L605.784 533.545L605.974 534.891L606.502 535.115L608.085 537.336L610.318 538.379L611.092 540.454L610.935 541.868L611.261 543.057L611.968 543.73H614.628L615.795 544.593V547.868L616.626 547.644L617.265 546.971L618.466 546.713L618.983 546.096L620.554 545.917L621.272 545.457L621.755 545.771L622.294 545.199L622.271 543.595L622.911 542.428L628.31 539.423L637.468 528.733L645.92 523.697L650.263 519.413L653.552 509.543L653.843 503.082L654.348 502.409L653.765 502.431L654.405 500.962L654.955 500.513L654.876 497.732L655.179 496.79L654.943 495.118L655.448 492.774L654.764 492.326L654.652 491.821L654.562 489.51L655.033 488.759L654.842 487.794L655.392 487.39L656.593 483.095L657.424 482.825L658.827 483.005L659.253 482.332L657.839 481.48L657.255 481.524L656.2 478.698L655.056 478.249L653.989 476.982L655.202 475.075L655.28 474.346L654.854 474.077L655.078 473.707L656.986 473.437L658.243 472.215L659.208 472.271L661.442 471.385L663.069 471.721L664.484 470.499L664.775 468.783L665.527 467.773L668.58 468.368L670.107 469.624L671.465 469.187L672.183 469.501L673.541 469.355L674.63 469.972L676.122 468.57L676.055 467.885L676.773 466.517L677.974 465.463L678.513 465.687L680.107 468.379L680.533 468.48L680.982 467.93L682.385 468.132L683.429 469.153L685.146 469.456L686.527 467.908L687.2 467.975L687.29 470.028L688.805 471.52L691.712 472.529L694.338 472.024L695.955 472.899L696.258 473.729L697.212 473.92L697.661 473.808L697.952 472.877L699.086 471.71L701.488 472.08L702.195 471.508L703.98 471.486L704.429 471.093L704.878 469.534L706.471 467.134L706.482 465.586L710.916 465.508L712.386 463.949L714.754 463.814L715.865 465.182L714.9 465.552L711.971 468.054L710.669 469.254L710.905 471.34L709.591 472.675L711.421 473.662L711.803 474.952L712.195 475.232L712.296 475.726L711.623 475.916L711.612 476.814L712.768 479.539L712.296 481.715L712.981 483.218L712.756 485.08L713.329 486.785L713.598 490.8L715.394 491.417L717.235 491.294L718.907 493.773L720.557 494.917L721.567 497.788L720.894 500.278L720.445 500.603L720.456 501.411L719.648 502.465L718.256 502.633L717.908 502.97L716.18 502.802L710.433 504.495L709.558 506.155L707.672 507.198L704.709 509.834L702.79 510.563L701.813 512.38H700.646L700.41 512.818L697.683 513.749L696.572 515.083L696.583 517.842L697.358 518.594L697.369 519.659L698.648 520.647L699.243 520.579L699.4 521.398L698.873 521.925L699.176 522.262L700.433 522.464L700.175 524.146L699.827 524.325L699.703 525.716L698.345 527.623L696 528.296L694.327 530.293L690.769 530.674L689.176 532.02L686.572 531.874L685.898 532.166L685 533.5L683.272 533.13L682.935 532.67L682.183 532.872L678.681 537.303L674.012 539.131L673.44 540.163L672.396 540.903L672.149 542.103L670.915 543.034L668.951 542.81L668.468 541.89L665.348 541.789L664.046 542.462L662.665 543.943L659.568 544.93L658.131 544.189L658.03 543.707L655.269 543.864L654.326 543.214L654.236 544.358L653.866 544.604L653.439 544.391L653.204 545.849L652.53 547.094L653.956 548.216L653.091 549.001L651.902 549.304L651.52 552.602L650.454 553.162L650.263 553.746L651.082 554.587L653.002 555.237L653.653 556.146L654.809 556.269L654.416 557.189L653.226 556.875L651.992 557.716L651.094 557.873L650.061 558.793L649.399 558.692L648.77 560.195L647.278 561.182L647.457 562.236L647.064 562.584L646.155 562.539L644.696 562.326L644.113 561.754L643.664 562.124L642.665 561.776L641.217 559.242L639.533 557.997L638.007 557.671L635.684 558.322L634.18 557.626L633.82 556.864L630.307 556.606L628.512 556.011L627.838 556.067L626.345 557.099L625.043 557.032L622.08 558.097L620.599 558.198L619.634 558.86L619.173 559.69L617.827 560.094L615.761 559.41L614.684 560.285L612.832 559.32L611.867 559.5L611.115 558.176L608.612 558.086L607.882 557.279L606.412 556.639L605.514 555.338L604.493 555.103L603.674 554.486L603.606 553.858L604.123 552.725L603.056 551.435L603.393 549.854L602.809 548.496L602.461 546.04L602.955 545.289L601.912 544.38L599.184 543.505L598.488 543.629L597.848 543L597.052 543.023L596.232 543.539L595.132 542.406L594.347 542.451L589.296 539.77L585.098 539.725L582.955 537.807L579.689 537.022L579.296 536.26L577.489 535.587L577.017 534.914L576.871 533.702L575.76 533.814L575.491 533.545L575.637 532.693L574.268 532.883V530.82L575.614 529.44L575.738 528.33L576.557 527.522L576.815 525.929L576.209 526.03L575.996 525.739L576.254 524.684L577.152 524.101L577.882 524.774L578.678 524.965L578.779 524.18Z\" />\n                </mask>\n                <path d=\"M578.779 524.18L579.105 523.114L580.07 522.396L580.059 521.678L582.046 521.398L583.987 520.175L584.055 518.818L585.974 519.009L586.322 518.145L587.309 517.842L588.039 519.592L588.084 521.432L588.746 522.52L591.283 524.236L592.304 525.716L596.277 528.173L598.14 530.057L598.803 531.661L600.048 532.222L601.384 533.467L602.271 532.928L603.741 533.321L604.639 533.052L605.784 533.545L605.974 534.891L606.502 535.115L608.085 537.336L610.318 538.379L611.092 540.454L610.935 541.868L611.261 543.057L611.968 543.73H614.628L615.795 544.593V547.868L616.626 547.644L617.265 546.971L618.466 546.713L618.983 546.096L620.554 545.917L621.272 545.457L621.755 545.771L622.294 545.199L622.271 543.595L622.911 542.428L628.31 539.423L637.468 528.733L645.92 523.697L650.263 519.413L653.552 509.543L653.843 503.082L654.348 502.409L653.765 502.431L654.405 500.962L654.955 500.513L654.876 497.732L655.179 496.79L654.943 495.118L655.448 492.774L654.764 492.326L654.652 491.821L654.562 489.51L655.033 488.759L654.842 487.794L655.392 487.39L656.593 483.095L657.424 482.825L658.827 483.005L659.253 482.332L657.839 481.48L657.255 481.524L656.2 478.698L655.056 478.249L653.989 476.982L655.202 475.075L655.28 474.346L654.854 474.077L655.078 473.707L656.986 473.437L658.243 472.215L659.208 472.271L661.442 471.385L663.069 471.721L664.484 470.499L664.775 468.783L665.527 467.773L668.58 468.368L670.107 469.624L671.465 469.187L672.183 469.501L673.541 469.355L674.63 469.972L676.122 468.57L676.055 467.885L676.773 466.517L677.974 465.463L678.513 465.687L680.107 468.379L680.533 468.48L680.982 467.93L682.385 468.132L683.429 469.153L685.146 469.456L686.527 467.908L687.2 467.975L687.29 470.028L688.805 471.52L691.712 472.529L694.338 472.024L695.955 472.899L696.258 473.729L697.212 473.92L697.661 473.808L697.952 472.877L699.086 471.71L701.488 472.08L702.195 471.508L703.98 471.486L704.429 471.093L704.878 469.534L706.471 467.134L706.482 465.586L710.916 465.508L712.386 463.949L714.754 463.814L715.865 465.182L714.9 465.552L711.971 468.054L710.669 469.254L710.905 471.34L709.591 472.675L711.421 473.662L711.803 474.952L712.195 475.232L712.296 475.726L711.623 475.916L711.612 476.814L712.768 479.539L712.296 481.715L712.981 483.218L712.756 485.08L713.329 486.785L713.598 490.8L715.394 491.417L717.235 491.294L718.907 493.773L720.557 494.917L721.567 497.788L720.894 500.278L720.445 500.603L720.456 501.411L719.648 502.465L718.256 502.633L717.908 502.97L716.18 502.802L710.433 504.495L709.558 506.155L707.672 507.198L704.709 509.834L702.79 510.563L701.813 512.38H700.646L700.41 512.818L697.683 513.749L696.572 515.083L696.583 517.842L697.358 518.594L697.369 519.659L698.648 520.647L699.243 520.579L699.4 521.398L698.873 521.925L699.176 522.262L700.433 522.464L700.175 524.146L699.827 524.325L699.703 525.716L698.345 527.623L696 528.296L694.327 530.293L690.769 530.674L689.176 532.02L686.572 531.874L685.898 532.166L685 533.5L683.272 533.13L682.935 532.67L682.183 532.872L678.681 537.303L674.012 539.131L673.44 540.163L672.396 540.903L672.149 542.103L670.915 543.034L668.951 542.81L668.468 541.89L665.348 541.789L664.046 542.462L662.665 543.943L659.568 544.93L658.131 544.189L658.03 543.707L655.269 543.864L654.326 543.214L654.236 544.358L653.866 544.604L653.439 544.391L653.204 545.849L652.53 547.094L653.956 548.216L653.091 549.001L651.902 549.304L651.52 552.602L650.454 553.162L650.263 553.746L651.082 554.587L653.002 555.237L653.653 556.146L654.809 556.269L654.416 557.189L653.226 556.875L651.992 557.716L651.094 557.873L650.061 558.793L649.399 558.692L648.77 560.195L647.278 561.182L647.457 562.236L647.064 562.584L646.155 562.539L644.696 562.326L644.113 561.754L643.664 562.124L642.665 561.776L641.217 559.242L639.533 557.997L638.007 557.671L635.684 558.322L634.18 557.626L633.82 556.864L630.307 556.606L628.512 556.011L627.838 556.067L626.345 557.099L625.043 557.032L622.08 558.097L620.599 558.198L619.634 558.86L619.173 559.69L617.827 560.094L615.761 559.41L614.684 560.285L612.832 559.32L611.867 559.5L611.115 558.176L608.612 558.086L607.882 557.279L606.412 556.639L605.514 555.338L604.493 555.103L603.674 554.486L603.606 553.858L604.123 552.725L603.056 551.435L603.393 549.854L602.809 548.496L602.461 546.04L602.955 545.289L601.912 544.38L599.184 543.505L598.488 543.629L597.848 543L597.052 543.023L596.232 543.539L595.132 542.406L594.347 542.451L589.296 539.77L585.098 539.725L582.955 537.807L579.689 537.022L579.296 536.26L577.489 535.587L577.017 534.914L576.871 533.702L575.76 533.814L575.491 533.545L575.637 532.693L574.268 532.883V530.82L575.614 529.44L575.738 528.33L576.557 527.522L576.815 525.929L576.209 526.03L575.996 525.739L576.254 524.684L577.152 524.101L577.882 524.774L578.678 524.965L578.779 524.18Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-10-inside-8_10718_32869)\" />\n                <path d=\"M147.095 632.943L148.834 633.762L149.777 633.392L151.27 633.773L151.236 635.13L151.831 634.558L152.864 634.401L152.751 633.74L153.975 632.719L154.626 633.594L154.615 634.099L155.423 634.525L155.535 634.996L155.355 635.938L153.515 639.123L154.401 641.4L154.244 642.903L154.839 643.206L154.716 644.126L155.019 644.563L154.166 645.427L153.818 645.382L153.582 644.855L152.561 645.191L151.73 645.876L152.437 646.851L150.956 647.266L150.709 648.321L150.091 648.231L149.788 648.971L148.733 649.577L147.095 648.646L145.175 648.814L143.851 647.02L143.222 647.042L143.795 646.324L143.694 645.618L144.188 644.911L143.862 643.677L144.94 641.647L145.007 640.324L144.109 639.897L144.266 638.899L141.932 637.811L142.19 636.622L142.56 636.779L143.481 636.174L143.66 634.054L144.614 633.818L144.928 634.738L146.107 634.772L146.702 634.357L146.657 633.313L147.095 632.943Z\" fill=\"#3C484F\" />\n                <path d=\"M151.409 635.311L151.947 634.794L152.901 634.649L153.153 634.61L153.11 634.36L153.022 633.84L153.932 633.08L154.374 633.674L154.365 634.093L154.361 634.248L154.498 634.32L155.206 634.693L155.279 635.002L155.118 635.85L153.298 638.998L153.238 639.102L153.282 639.214L154.146 641.435L153.995 642.877L153.978 643.048L154.131 643.126L154.568 643.349L154.468 644.093L154.455 644.189L154.51 644.268L154.695 644.535L154.075 645.163L153.989 645.152L153.81 644.753L153.718 644.547L153.504 644.618L152.482 644.954L152.438 644.969L152.402 644.998L151.571 645.683L151.39 645.832L151.528 646.022L152.024 646.707L150.888 647.026L150.746 647.066L150.712 647.209L150.518 648.04L150.127 647.984L149.934 647.955L149.86 648.136L149.589 648.797L148.733 649.289L147.218 648.429L147.15 648.39L147.073 648.397L145.293 648.553L144.052 646.871L143.974 646.765L143.842 646.77L143.757 646.773L143.99 646.48L144.058 646.396L144.042 646.289L143.955 645.68L144.393 645.054L144.459 644.959L144.429 644.847L144.129 643.708L145.161 641.764L145.187 641.715L145.189 641.66L145.257 640.336L145.265 640.169L145.114 640.098L144.385 639.752L144.513 638.938L144.543 638.752L144.372 638.673L142.218 637.669L142.37 636.97L142.463 637.009L142.586 637.062L142.698 636.988L143.618 636.382L143.719 636.316L143.73 636.195L143.894 634.253L144.452 634.116L144.692 634.819L144.748 634.983L144.921 634.988L146.1 635.021L146.182 635.024L146.25 634.977L146.845 634.562L146.957 634.483L146.952 634.346L146.912 633.425L147.133 633.238L148.728 633.988L148.825 634.034L148.926 633.995L149.793 633.654L151.015 633.966L150.986 635.124L150.971 635.732L151.409 635.311Z\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" strokeWidth=\"0.5\" />\n                <mask id=\"path-13-inside-9_10718_32869\" fill=\"white\">\n                    <path d=\"M255.425 479.64L255.594 478.473L256.054 478.597L256.637 478.148L256.458 476.757L257.356 476.286L258.265 476.802L260.229 477.004L260.992 478.238L262.945 477.767L264.247 478.227L266.537 477.61L267.872 478.417L268.815 478.137L269.489 478.507L272.407 478.204L271.846 476.825L272.923 475.972L273.888 476.41L274.809 476.096L275.594 476.959L276.986 476.892L277.087 477.453L277.962 477.767L278.4 478.787L279.579 479.292L280.948 481.132L281.262 482.646L282.272 482.702L281.913 483.397L283.687 485.113L283.395 485.551L283.821 487.222L283.193 487.973L283.967 488.187L283.72 489.118L282.991 489.555L282.205 489.847L280.622 489.656L281.015 491.159L279.781 491.664L281.363 494.412L280.858 495.735L280.443 495.746L279.882 495.129L279.017 495.365L278.973 496.161L279.994 498.573L279.68 499.302L280.813 500.446L283.215 499.459L283.9 499.885L283.608 500.468L285.078 500.648L287.301 499.851L289.018 499.964L289.691 502.543L288.333 503.407L288.603 504.125L288.255 504.798L289.871 506.222L290.308 506.256L290.421 507.153L288.726 507.221L288.681 508.118L288.344 508.387L285.898 508.275L285.763 508.746L284.102 510.058L283.754 511.225L282.878 510.72L282.654 509.912L283.26 509.497L282.71 509.094L280.982 509.408L279.915 509.094L279.354 509.464L279.668 510.473L279.186 510.597L278.322 510.316L278.591 509.744L278.12 509.722L278.153 509.408L277.648 510.069L277.21 509.453L276.582 509.688L276.212 510.484L275.953 509.924L275.269 509.587L274.988 508.712L274.449 508.634L273.742 508.847L273.338 509.385V510.978L272.788 510.899L272.541 510.384L271.498 510.507L271.195 511.258L272.373 511.483L273.035 512.627L271.655 513.961L271.61 514.735L271.273 514.354L270.622 514.388L270.6 515.061L274.135 515.846L275.325 515.408L276.01 516.306L274.854 517.203L274.315 516.732L273.35 516.597L273.17 517.483L272.553 518.168L272.743 519.379L274.461 519.771L275.448 520.489L276.279 520.456L276.649 519.973L277.704 521.196L280.218 521.79L280.432 523.271L279.388 523.989L278.333 523.192L277.031 523.383L276.436 523.843L274.977 522.878L274.27 523.518L273.181 522.923L272.216 523.742L271.475 523.607L271.868 524.516L270.106 526.367L269.096 526.647L268.984 527.937L270.005 528.408L270.061 529.743L271.071 529.922L271.857 532.109L270.993 532.951L269.623 533.5L269.04 534.319L267.502 534.364L265.414 536.371L264.169 536.562L263.102 535.822L263.967 533.904L265.111 532.906L264.696 530.92L262.99 531.111L261.913 530.371L261.621 530.618L260.667 530.146L259.679 530.46L259.421 529.933L259.062 529.989L257.49 530.651L257.232 531.358L257.513 532.58L255.942 531.649L255.291 530.382L254.135 530.404L253.753 529.776L254.157 529.014L253.36 527.724L253.686 527.017L253.888 523.72L254.954 522.452L254.505 521.734L254.337 520.299L253.719 519.581L254.168 519.211L254.224 517.259L254.168 515.98L253.708 515.218L254.426 513.95L254.774 510.473L255.93 510.238L256.75 509.509L257.648 507.288L259.825 507.052L261.026 507.512L261.43 505.336L260.42 504.551L261.093 503.575L260.689 502.7L261.666 501.814L262.642 499.38L262.204 498.461L262.552 497.563L261.318 497.765L260.824 496.924L260.229 497.765L259.544 498.023L258.849 499.515L257.21 501.141L256.637 501.276L255.953 500.895L253.529 501.792L252.9 503.003L252.204 503.048L250.464 502.117L249.017 502.498L247.647 503.867L246.974 504.035L246.424 503.867L245.212 502.409L244.92 501.388L240.52 497.911L241.317 496.24L240.116 494.827L241.239 492.538L243.517 491.237L247.558 492.112L247.838 492.774L247.109 493.952L247.468 495.533L246.839 496.588L247.187 496.711L248.31 495.017L248.5 493.907L249.275 493.133L250.521 495.029L250.958 495.399L251.396 495.219L252.047 496.431L252.956 496.06L253.944 495.085L253.472 493.94L252.26 493.425L253.091 492.55L253.046 492.034L253.899 491.394L255.133 492.023L255.616 491.821L256.626 490.845L256.413 490.071L256.727 489.622L259.208 489.263L260.431 487.48L259.286 487.435L258.534 486.762L257.771 487.031L257.547 485.764L257.782 485.181L256.267 484.216L257.098 482.489L256.884 481.143L258.085 480.223L258.141 479.819L257.76 479.259L256.57 479.55L256.065 479.27L255.425 479.64Z\" />\n                </mask>\n                <path d=\"M255.425 479.64L255.594 478.473L256.054 478.597L256.637 478.148L256.458 476.757L257.356 476.286L258.265 476.802L260.229 477.004L260.992 478.238L262.945 477.767L264.247 478.227L266.537 477.61L267.872 478.417L268.815 478.137L269.489 478.507L272.407 478.204L271.846 476.825L272.923 475.972L273.888 476.41L274.809 476.096L275.594 476.959L276.986 476.892L277.087 477.453L277.962 477.767L278.4 478.787L279.579 479.292L280.948 481.132L281.262 482.646L282.272 482.702L281.913 483.397L283.687 485.113L283.395 485.551L283.821 487.222L283.193 487.973L283.967 488.187L283.72 489.118L282.991 489.555L282.205 489.847L280.622 489.656L281.015 491.159L279.781 491.664L281.363 494.412L280.858 495.735L280.443 495.746L279.882 495.129L279.017 495.365L278.973 496.161L279.994 498.573L279.68 499.302L280.813 500.446L283.215 499.459L283.9 499.885L283.608 500.468L285.078 500.648L287.301 499.851L289.018 499.964L289.691 502.543L288.333 503.407L288.603 504.125L288.255 504.798L289.871 506.222L290.308 506.256L290.421 507.153L288.726 507.221L288.681 508.118L288.344 508.387L285.898 508.275L285.763 508.746L284.102 510.058L283.754 511.225L282.878 510.72L282.654 509.912L283.26 509.497L282.71 509.094L280.982 509.408L279.915 509.094L279.354 509.464L279.668 510.473L279.186 510.597L278.322 510.316L278.591 509.744L278.12 509.722L278.153 509.408L277.648 510.069L277.21 509.453L276.582 509.688L276.212 510.484L275.953 509.924L275.269 509.587L274.988 508.712L274.449 508.634L273.742 508.847L273.338 509.385V510.978L272.788 510.899L272.541 510.384L271.498 510.507L271.195 511.258L272.373 511.483L273.035 512.627L271.655 513.961L271.61 514.735L271.273 514.354L270.622 514.388L270.6 515.061L274.135 515.846L275.325 515.408L276.01 516.306L274.854 517.203L274.315 516.732L273.35 516.597L273.17 517.483L272.553 518.168L272.743 519.379L274.461 519.771L275.448 520.489L276.279 520.456L276.649 519.973L277.704 521.196L280.218 521.79L280.432 523.271L279.388 523.989L278.333 523.192L277.031 523.383L276.436 523.843L274.977 522.878L274.27 523.518L273.181 522.923L272.216 523.742L271.475 523.607L271.868 524.516L270.106 526.367L269.096 526.647L268.984 527.937L270.005 528.408L270.061 529.743L271.071 529.922L271.857 532.109L270.993 532.951L269.623 533.5L269.04 534.319L267.502 534.364L265.414 536.371L264.169 536.562L263.102 535.822L263.967 533.904L265.111 532.906L264.696 530.92L262.99 531.111L261.913 530.371L261.621 530.618L260.667 530.146L259.679 530.46L259.421 529.933L259.062 529.989L257.49 530.651L257.232 531.358L257.513 532.58L255.942 531.649L255.291 530.382L254.135 530.404L253.753 529.776L254.157 529.014L253.36 527.724L253.686 527.017L253.888 523.72L254.954 522.452L254.505 521.734L254.337 520.299L253.719 519.581L254.168 519.211L254.224 517.259L254.168 515.98L253.708 515.218L254.426 513.95L254.774 510.473L255.93 510.238L256.75 509.509L257.648 507.288L259.825 507.052L261.026 507.512L261.43 505.336L260.42 504.551L261.093 503.575L260.689 502.7L261.666 501.814L262.642 499.38L262.204 498.461L262.552 497.563L261.318 497.765L260.824 496.924L260.229 497.765L259.544 498.023L258.849 499.515L257.21 501.141L256.637 501.276L255.953 500.895L253.529 501.792L252.9 503.003L252.204 503.048L250.464 502.117L249.017 502.498L247.647 503.867L246.974 504.035L246.424 503.867L245.212 502.409L244.92 501.388L240.52 497.911L241.317 496.24L240.116 494.827L241.239 492.538L243.517 491.237L247.558 492.112L247.838 492.774L247.109 493.952L247.468 495.533L246.839 496.588L247.187 496.711L248.31 495.017L248.5 493.907L249.275 493.133L250.521 495.029L250.958 495.399L251.396 495.219L252.047 496.431L252.956 496.06L253.944 495.085L253.472 493.94L252.26 493.425L253.091 492.55L253.046 492.034L253.899 491.394L255.133 492.023L255.616 491.821L256.626 490.845L256.413 490.071L256.727 489.622L259.208 489.263L260.431 487.48L259.286 487.435L258.534 486.762L257.771 487.031L257.547 485.764L257.782 485.181L256.267 484.216L257.098 482.489L256.884 481.143L258.085 480.223L258.141 479.819L257.76 479.259L256.57 479.55L256.065 479.27L255.425 479.64Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-13-inside-9_10718_32869)\" />\n                <mask id=\"path-14-inside-10_10718_32869\" fill=\"white\">\n                    <path d=\"M1131.47 233.623L1130.61 233.018L1131.74 230.685L1133.42 229.619L1133.31 229.193L1133.89 229.081L1134.53 228.285L1135.26 228.15L1135.2 228.453L1136.55 228.498L1136.5 228.946L1137.4 229.081L1137.26 229.597L1137.95 229.44L1137.84 229.664L1138.46 229.866L1138.31 230.146L1138.81 229.552L1139.18 230.36L1142.25 230.965L1143.88 231.941L1144.15 233.018L1143.84 234.218L1142.78 234.083L1142.63 234.465L1143.09 235.025L1142.67 235.272L1142.97 236.528L1142.54 238.245L1141.97 238.996L1141 238.749L1139.81 238.94L1135.47 237.179L1133.53 235.743L1133.33 234.969L1133.63 234.79L1131.47 233.623ZM1288.63 340.839L1289.36 340.581L1289.86 341.198L1289.45 341.647L1288.01 341.501L1287.52 341.097L1287.88 340.447L1288.63 340.839ZM1217.98 204.988L1217.75 202.835L1219.85 200.345L1219.95 199.156L1222.22 197.709L1224.67 194.221L1226.37 192.965L1226.27 193.368L1226.81 193.469L1227.15 192.752L1227.71 192.639L1228.23 191.45L1228.8 191.148L1228.85 191.462L1230.5 191.417L1229.9 191.013L1230.09 190.632L1230.67 190.789L1231.12 190.093L1231.2 190.755L1231.47 190.789L1232.03 189.891L1232.19 190.43L1232.81 190.463L1232.83 190.979L1233.34 190.654L1234.41 191.148L1234.86 190.777L1235.21 190.991L1236.28 189.734L1239.84 190.25L1239.83 190.576L1240.7 190.564L1242.99 191.664L1242.29 191.787L1243.14 192.337L1243.02 192.897L1243.84 192.83L1243.88 192.37L1244.18 192.538L1245.02 193.436L1244.47 193.761L1244.92 194.243L1244.31 194.221L1245.49 194.569L1246.26 195.914L1248.11 197.821L1248.84 197.619L1248.88 198.225L1249.47 198.954L1249.24 200.603L1248.69 200.939L1248.38 201.825L1245.71 203.856L1243.82 204.158L1241.76 205.145L1238.84 205.583L1235.15 207.31L1232.55 207.916L1233.27 207.4L1232.45 206.536L1231.44 205.762L1229.02 205.123L1228.04 205.448L1226.35 207.333L1225.04 208.107L1224.33 208.196L1223.88 207.849L1224.83 208.028L1225.06 207.826L1224.71 207.434L1224.23 207.703L1222.87 207.579L1218.97 209.856L1219.2 209.531L1218.93 207.512L1217.98 204.988ZM1311.99 311.857L1312.21 312.978L1311.69 314.425L1310.98 314.38L1310.2 313.64L1309.28 313.819L1308.26 314.313L1305.18 317.487L1305.6 318.407L1305.2 319.08L1305.39 321.379L1304.77 322.377L1302.63 322.074L1302.48 321.502L1300.1 320.493L1299.29 318.9L1298.05 317.824L1297.59 317.801L1298.09 318.227L1298.4 319.338L1299.36 320.123L1298.94 320.044L1298.9 320.549L1299.56 321.39L1300.93 321.929L1301.57 322.781L1301.52 324.452L1300.99 325.08L1299.19 323.847L1294.09 325.013L1293.84 324.923L1295.47 324.273L1293.86 324.127L1292.86 323.331L1292.19 323.746L1291.86 323.42L1291.36 323.499L1291.63 322.77L1290.92 321.996L1290.97 321.547L1290.1 320.841L1288.7 321.087L1288.79 320.639L1287.4 321.144L1288.34 321.267L1288.39 322.243L1289.31 322.209L1290.53 322.916L1290.26 323.69L1290.94 324.946L1289.87 325.125L1290.56 325.967L1291.94 325.641L1292.72 324.733L1291.64 328.019L1291.97 328.546L1291.76 330.105L1292.76 332.326L1291.25 334.682L1290.25 335.556L1289.2 335.433L1289.29 335.769L1287.31 337.048L1285.79 336.42L1284.7 337.093L1284.88 337.643L1283.87 338.125L1283.92 338.562L1284.95 338.136L1286.06 336.914L1287.4 338.36L1287.13 339.022L1286.66 339.101L1286.59 339.74L1285.59 339.886L1284.85 340.424L1284.89 340.682L1285.75 340.447L1286.01 340.043L1286.66 340.379L1285.5 342.118L1286.25 342.073L1286.6 341.299L1287.06 341.221L1287.62 341.355L1287.72 341.815L1288.39 341.826L1288.77 342.376L1290.01 342.544L1290.45 343.812L1291.54 345.157L1289.86 345.169L1288.61 345.729L1287.55 345.202L1287.22 343.183L1285.69 343.554L1285.11 344.17L1285.2 344.462L1286.47 344.047L1287.02 344.731L1286.61 347.109L1285.76 347.849L1284.38 348.152L1282.36 347.188L1282.44 345.808L1283.21 345.135L1283.33 345.483L1284.03 344.507L1283.28 344.799L1283.62 342.925L1283.19 343.015L1283.08 341.916L1282.73 341.927L1282.54 341.434L1283.05 343.654L1282.89 344.541L1281.04 346.492L1280.26 346.593L1277.42 344.832L1276.96 342.656L1275.06 340.963L1275.56 340.794L1275.42 340.424L1274.36 340.738L1271.03 338.282L1269.82 337.777L1268.83 338.271L1266.65 338.024L1266.39 337.732L1265.87 338.013L1265.74 337.542L1266.3 336.824L1265.48 336.869L1265.42 336.106L1263.13 334.973L1263.14 334.513L1262.17 333.975L1263.01 333.257L1263.41 331.294L1262.34 329.41L1261.98 326.18L1261.33 325.697L1253.47 322.467L1252.33 322.624L1250.63 324.688L1249.47 325.17L1247.06 325.484L1246.59 325.17L1245.6 325.372L1244.15 325.08L1243.01 325.417L1240.88 324.464L1241.82 320.213L1241.39 319.551L1240.39 319.876L1239.56 318.586L1239.47 317.756L1238.14 316.534L1238.59 316.018L1238.41 314.862L1239.12 315.031L1239.85 314.156L1239.73 313.045L1241.21 312.193L1240.99 311.262L1241.49 310.309L1241.03 309.849L1241.58 309.086L1241.41 307.123L1241.1 306.82L1240.81 307.785L1240.37 307.684L1239.29 310.914L1238.34 311.599L1237.7 311.677L1236.91 311.083L1236.97 310.578L1236.49 309.916L1236.81 309.389L1236.71 307.359L1236.25 307.751L1236.17 309.254L1235.88 309.423L1234.05 308.57L1234.07 309.187L1235.49 310.858L1235.23 311.554L1234 312.473L1232.84 312.26L1232.3 311.363L1231.59 311.43L1231.76 311.756L1231 312.967L1230.79 316.646L1232.01 319.708L1234.81 321.906L1234.35 323.073L1234.9 323.791L1233.19 326.191L1233.32 326.92L1232.92 327.716L1232.74 329.545L1231.63 331.485L1230.8 331.597L1229.79 332.764L1227.74 334.188L1225.2 337.766L1221.97 338.674L1217.37 342.309L1217 341.871L1217.9 341.882L1219.37 340.772L1219 340.222L1215.91 340.907L1214.06 340.245L1213.07 340.727L1212.93 340.043L1210.59 339.863L1209.9 338.674L1209.15 338.506L1209.21 337.856L1208.55 337.99L1208.12 337.542L1209.11 336.981L1208.76 336.757L1208.85 335.893L1208.54 335.59L1207.06 335.713L1206.96 336.914L1207.61 337.687L1205.46 338.708L1205.18 338.159L1204.66 338.136L1204.5 337.329L1204.1 337.093L1203.6 337.362L1202.94 336.902L1202.2 336.824L1201.28 337.856L1200.52 337.901L1200.38 336.97L1198.84 336.297L1197.73 335.422L1197.71 335.052L1197.24 335.074L1196.42 336.162L1196 337.519L1194.94 338.473L1194.32 338.809L1193.57 338.215L1191.83 339.011L1190.8 338.798L1190.35 339.202L1191.73 339.695L1193 338.888L1194.54 339.179L1196.27 337.945L1196.83 337.104L1196.92 336.05L1198.01 336.039L1198.54 336.409L1199.37 338.506L1200.4 339.729L1200.3 340.379L1198.44 341.288L1198.25 341.804L1198.46 341.927L1198.8 341.456L1199.66 341.658L1200.31 341.243L1200.66 340.391H1201.27L1202.49 341.198L1202.94 342.746L1205.44 339.594L1206.56 339.673L1207.71 338.742L1208.98 338.932L1208.8 341.153L1208.19 342.353L1208.25 343.711L1208.84 345.135L1211.76 348.332L1213.31 349.072L1214.28 348.982L1213.83 348.421L1215.54 346.447L1214.7 344.529L1218.14 352.224L1219.27 358.37L1219.4 361.062L1220.02 363.182L1221.68 365.986L1223.53 367.253L1224.52 368.734L1224.63 369.654L1223.47 369.822L1223.06 371.112L1223.6 372.805L1225.06 373.108L1225.4 373.478L1225.95 376.238L1225.69 377.303L1224.61 377.92L1224.51 378.974L1223.84 379.95L1222.63 379.692L1222.02 380.264L1221.81 380.892L1222.39 381.442L1222.09 382.003L1222.32 382.653L1221.69 383.394L1221.12 382.339L1215.47 380.275L1213.5 379.03L1209.34 378.47L1205.8 378.84L1204.29 379.311L1201.47 380.769L1198.69 383.281L1196.74 383.764L1193.31 385.401L1190.6 387.779L1187.33 389.462L1186.61 390.437L1184.81 391.234L1184.22 390.998L1184.32 390.191L1183.75 389.686L1183.56 388.62L1182.91 388.082L1182.57 386.646L1181.61 386.882L1181.06 386.478L1180.9 384.403L1180.05 383.91L1181.4 382.339L1181 381.027L1180.29 380.477L1179.27 380.399L1178.89 379.647L1178.01 379.367L1173.24 380.982L1170.74 382.642L1169.8 381.823L1168.29 381.24L1167.21 381.476L1166.73 381.958L1165.42 382.014L1165.03 381.285L1164.06 380.881L1162.53 381.711L1161.97 382.709L1158.36 383.988L1158.53 383.18L1158.25 383.102L1157.38 383.73L1157.49 382.664L1157.23 382.474L1156.75 382.709L1156.48 383.483L1155.72 383.584L1155.69 384.257L1154.3 384.47L1154.06 385.065L1150.22 383.685L1149.16 384.616L1148.67 384.201L1148.36 382.485L1147.73 381.756L1147.93 381.049L1147.11 380.197L1147.35 378.918L1147.02 377.976L1146.16 377.909L1145.46 377.236L1144.72 377.269L1143.77 375.598L1140 372.817L1138.74 373.12L1137.33 372.536L1136.79 371.706L1134.69 370.495L1134.78 369.71L1135.55 369.407L1135.83 368.812L1136.84 368.599L1137.83 367.478L1137.82 366.222L1138.47 365.773L1138.83 364.775L1139.92 364.36L1141.3 362.52L1142.68 362.172L1143.53 361.455L1143.44 361.006L1143.98 360.243L1143.07 356.789L1141.92 356.082L1141.99 355.028L1141.23 354.635L1139.28 354.445L1138.12 353.065L1137.51 349.902L1135.92 349.543L1135.38 348.78L1135.09 347.266L1133.55 347.636L1133.12 347.333L1132.33 348.062L1131.07 348.388L1130.33 348.141L1130.19 347.199L1129.05 347.58L1128.52 347.345L1128.4 345.539L1127.12 344.888L1126.29 343.98L1125.06 341.748L1124.51 341.927L1123.68 343.139L1122.38 343.677L1121.38 343.497L1120.05 343.912L1118.73 342.421L1116.38 341.77L1115.55 342.959L1114.67 343.15L1114.09 342.802L1114.4 341.703L1113.44 339.37L1110.48 339.202L1109.83 337.788L1109.09 337.508L1107.8 337.945L1107.44 338.607L1107.82 340.2L1107.17 340.693L1105.82 338.45L1104.86 338.439L1101.66 336.084L1100.6 336.072L1099.86 336.723L1098.48 336.779L1097.83 336.173L1096.86 336.084L1096.37 335.657L1094.62 338.058L1093.76 337.901L1093.35 338.203L1093.31 338.865L1093.91 339.482L1093.96 340.234L1090.39 340.379L1088.7 338.618L1084.9 337.968L1083.28 336.835L1081.5 333.167L1080.28 332.954L1078.45 331.631L1073.08 330.655L1069.75 326.707L1069 324.407L1066.74 323.925L1066.08 322.893L1060.94 321.02L1059.64 319.54L1059.71 314.829L1060.26 313.404L1061.76 311.352L1061.85 310.623L1059.65 310.499L1057.84 309.344L1057.55 308.413L1056.47 308.323L1055.83 307.471L1055.51 306.147L1056.46 305.475L1056.76 304.162L1058.18 302.076L1058.1 301.089L1058.63 300.012L1059.85 299.317L1059.68 298.61L1058.4 296.984L1058.74 295.088L1058.46 293.821L1056.01 292.598L1054.61 292.374L1053.06 290.277L1051.57 289.805L1051.33 289.211L1051.55 286.799L1050.61 285.083L1050.44 283.165L1050.86 280.305L1052.15 279.991L1053.16 280.171L1054.27 279.688L1054.71 278.937L1054.63 278.522L1053.61 277.984L1053.16 276.884L1054.36 275.325L1055.07 272.521L1056.54 271.445L1059.51 271.624L1062.63 268.932L1063.32 269.706L1064.13 269.74L1064.59 269.403L1065.83 269.975L1066.37 268.674L1066.99 268.012L1067.82 267.799L1073.81 268.416L1075.54 267.721L1078.08 265.41L1079.22 265.152L1084.18 266.666L1087.21 268.08L1087.86 266.98L1087.81 265.152L1088.28 264.289L1088.18 262.18L1089.17 261.574L1089.04 260.632L1089.43 259.6L1088.53 258.894L1088.42 257.637L1089.42 256.987L1090.21 255.596L1089.39 253.835L1088.01 253.297L1087.53 252.388L1088.07 249.035L1089.68 248.664L1089.64 248.003L1087.25 244.941L1087.14 243.213L1086.11 242.697L1086.42 241.542L1085.57 240.297L1086.37 239.904L1086.97 238.188L1086.86 237.246L1086.99 236.27L1088.11 237.078L1088.02 236.764L1088.51 236.461L1089.94 237.179H1090.84L1094.47 235.564L1095.94 236.293L1097.4 236.416L1099.09 235.956L1100.5 234.465L1101.24 234.644L1102.26 236.528L1104.91 238.536L1107.36 239.007L1109.76 238.312L1111.58 238.727L1114.12 238.716L1118.11 240.219L1120.57 240.432L1121.67 240.017L1122.33 240.701L1123.96 240.813L1125.88 239.164L1129.58 234.711L1130.74 234.139L1131.89 235.429L1132.93 235.676L1133.07 236.091L1132.67 236.001L1132.29 236.383L1132.07 237.291L1133.34 238.536L1134.54 239.164L1134.12 244.055L1134.58 246.41L1135.15 246.881L1138.22 247.072L1139.59 247.846L1141.5 249.584L1142.49 249.853L1143.08 249.651L1143.9 251.121L1144.21 253.207L1143.86 254.497L1144.26 255.775L1145.44 256.908L1146.29 256.964L1151.29 255.876L1152.41 254.53L1155.33 252.612L1156.94 250.414L1156.97 249.158L1156.62 248.384L1155.59 247.711L1155.93 245.053L1155.28 243.325L1154.77 243.168L1154.72 241.183L1154.22 240.735L1154.33 239.904L1153.86 238.693L1153.02 238.031L1150.99 238.514L1150.01 238.211L1150.27 236.517L1150.99 235.811L1150.79 235.665L1152.62 235.126L1153.5 234.263L1152.85 230.808L1153.36 226.927L1153.12 226.512L1152.24 226.232L1152.34 225.75L1153.1 225.615L1154.95 226.669L1156.68 226.535L1158.81 227.286L1160.26 227.41L1163.51 228.823L1166.73 229.361L1168.67 230.18L1170.64 229.429L1171.19 230.158L1171.24 230.898L1173.76 232.479L1174.29 232.423L1174.25 231.436L1174.73 230.775L1176.63 230.124L1178.43 231.75L1178.12 232.109L1178.93 233.164L1180.39 232.031L1181.78 231.593L1182.01 231.829L1182.71 231.593L1182.84 232.132L1183.22 232.098L1183.31 231.604L1184.56 232.177L1189.37 232.39L1194.72 231.403L1196.18 231.75L1197.61 231.47L1200.09 234.756L1203.87 237.033L1205.94 237.83L1208.57 238.245L1211.67 240.465L1213.59 241.34L1214.9 241.419L1214.94 241.946L1216.05 241.351L1219.4 242.787L1224.22 246.5L1228.89 251.984L1230.65 253.476L1232.06 253.88L1232.79 253.577L1232.85 253.106L1233.48 253.42L1233.37 253.656L1234.52 254.856L1238.29 257.234L1241.44 261.193L1245.23 264.098L1248.09 266.868L1260.69 276.29L1262.2 276.918L1262.54 276.705L1262.47 277.647L1266.86 280.597L1267.06 280.911L1266.58 281.304L1267.08 282.964L1268.5 284.792L1269.28 285.196L1270.73 286.811L1271.34 289.413L1270.79 288.123L1270.18 288.886L1269.84 292.755L1270.28 294.741L1270.88 295.817L1271.57 296.232L1271.02 296.356L1271.44 299.754L1270.95 299.575L1269.47 301.381L1270.28 302.513L1271.71 302.727L1273.72 304.061L1273.9 305.228L1273.58 305.43L1273.42 306.888L1274.25 307.931L1275.89 306.607L1275.93 305.564L1276.96 305.25L1277.79 305.777L1277.49 306.293L1277.79 308.29L1277.16 308.267L1277.07 308.581L1277.88 308.952L1278.5 308.839L1278.83 308.537L1278.13 308.088L1279.52 307.538L1279.74 305.901L1278.81 305.25L1278.42 304.398L1276.7 304.028L1275.39 303.153L1277.84 301.291L1277.61 297.758L1276.94 295.077L1276.13 294.741L1275.69 295.021L1275.43 293.316L1273.13 293.877L1272.14 293.608L1272.17 293.26L1273.3 292.867L1279.43 292.856L1280.08 292.071L1281.73 292.845L1284.69 293.641L1285.12 293.496L1292.74 295.716L1293.85 294.853L1294.75 295.447L1295.52 295.357L1296.24 296.143L1295.73 296.872L1296.08 297.578L1298.6 299.407L1298.35 300.887L1300.24 302.973L1303.49 305.699L1304.77 307.617L1307.62 308.929L1309.03 310.746L1308.46 310.544L1308.53 311.06L1310.55 311.61L1311.38 311.385L1311.99 311.857ZM1291.21 337.239L1292.89 338.54L1288.64 339.998L1288.25 339.538L1289.35 337.463L1290.18 336.992L1291.21 337.239Z\" />\n                </mask>\n                <path d=\"M1131.47 233.623L1130.61 233.018L1131.74 230.685L1133.42 229.619L1133.31 229.193L1133.89 229.081L1134.53 228.285L1135.26 228.15L1135.2 228.453L1136.55 228.498L1136.5 228.946L1137.4 229.081L1137.26 229.597L1137.95 229.44L1137.84 229.664L1138.46 229.866L1138.31 230.146L1138.81 229.552L1139.18 230.36L1142.25 230.965L1143.88 231.941L1144.15 233.018L1143.84 234.218L1142.78 234.083L1142.63 234.465L1143.09 235.025L1142.67 235.272L1142.97 236.528L1142.54 238.245L1141.97 238.996L1141 238.749L1139.81 238.94L1135.47 237.179L1133.53 235.743L1133.33 234.969L1133.63 234.79L1131.47 233.623ZM1288.63 340.839L1289.36 340.581L1289.86 341.198L1289.45 341.647L1288.01 341.501L1287.52 341.097L1287.88 340.447L1288.63 340.839ZM1217.98 204.988L1217.75 202.835L1219.85 200.345L1219.95 199.156L1222.22 197.709L1224.67 194.221L1226.37 192.965L1226.27 193.368L1226.81 193.469L1227.15 192.752L1227.71 192.639L1228.23 191.45L1228.8 191.148L1228.85 191.462L1230.5 191.417L1229.9 191.013L1230.09 190.632L1230.67 190.789L1231.12 190.093L1231.2 190.755L1231.47 190.789L1232.03 189.891L1232.19 190.43L1232.81 190.463L1232.83 190.979L1233.34 190.654L1234.41 191.148L1234.86 190.777L1235.21 190.991L1236.28 189.734L1239.84 190.25L1239.83 190.576L1240.7 190.564L1242.99 191.664L1242.29 191.787L1243.14 192.337L1243.02 192.897L1243.84 192.83L1243.88 192.37L1244.18 192.538L1245.02 193.436L1244.47 193.761L1244.92 194.243L1244.31 194.221L1245.49 194.569L1246.26 195.914L1248.11 197.821L1248.84 197.619L1248.88 198.225L1249.47 198.954L1249.24 200.603L1248.69 200.939L1248.38 201.825L1245.71 203.856L1243.82 204.158L1241.76 205.145L1238.84 205.583L1235.15 207.31L1232.55 207.916L1233.27 207.4L1232.45 206.536L1231.44 205.762L1229.02 205.123L1228.04 205.448L1226.35 207.333L1225.04 208.107L1224.33 208.196L1223.88 207.849L1224.83 208.028L1225.06 207.826L1224.71 207.434L1224.23 207.703L1222.87 207.579L1218.97 209.856L1219.2 209.531L1218.93 207.512L1217.98 204.988ZM1311.99 311.857L1312.21 312.978L1311.69 314.425L1310.98 314.38L1310.2 313.64L1309.28 313.819L1308.26 314.313L1305.18 317.487L1305.6 318.407L1305.2 319.08L1305.39 321.379L1304.77 322.377L1302.63 322.074L1302.48 321.502L1300.1 320.493L1299.29 318.9L1298.05 317.824L1297.59 317.801L1298.09 318.227L1298.4 319.338L1299.36 320.123L1298.94 320.044L1298.9 320.549L1299.56 321.39L1300.93 321.929L1301.57 322.781L1301.52 324.452L1300.99 325.08L1299.19 323.847L1294.09 325.013L1293.84 324.923L1295.47 324.273L1293.86 324.127L1292.86 323.331L1292.19 323.746L1291.86 323.42L1291.36 323.499L1291.63 322.77L1290.92 321.996L1290.97 321.547L1290.1 320.841L1288.7 321.087L1288.79 320.639L1287.4 321.144L1288.34 321.267L1288.39 322.243L1289.31 322.209L1290.53 322.916L1290.26 323.69L1290.94 324.946L1289.87 325.125L1290.56 325.967L1291.94 325.641L1292.72 324.733L1291.64 328.019L1291.97 328.546L1291.76 330.105L1292.76 332.326L1291.25 334.682L1290.25 335.556L1289.2 335.433L1289.29 335.769L1287.31 337.048L1285.79 336.42L1284.7 337.093L1284.88 337.643L1283.87 338.125L1283.92 338.562L1284.95 338.136L1286.06 336.914L1287.4 338.36L1287.13 339.022L1286.66 339.101L1286.59 339.74L1285.59 339.886L1284.85 340.424L1284.89 340.682L1285.75 340.447L1286.01 340.043L1286.66 340.379L1285.5 342.118L1286.25 342.073L1286.6 341.299L1287.06 341.221L1287.62 341.355L1287.72 341.815L1288.39 341.826L1288.77 342.376L1290.01 342.544L1290.45 343.812L1291.54 345.157L1289.86 345.169L1288.61 345.729L1287.55 345.202L1287.22 343.183L1285.69 343.554L1285.11 344.17L1285.2 344.462L1286.47 344.047L1287.02 344.731L1286.61 347.109L1285.76 347.849L1284.38 348.152L1282.36 347.188L1282.44 345.808L1283.21 345.135L1283.33 345.483L1284.03 344.507L1283.28 344.799L1283.62 342.925L1283.19 343.015L1283.08 341.916L1282.73 341.927L1282.54 341.434L1283.05 343.654L1282.89 344.541L1281.04 346.492L1280.26 346.593L1277.42 344.832L1276.96 342.656L1275.06 340.963L1275.56 340.794L1275.42 340.424L1274.36 340.738L1271.03 338.282L1269.82 337.777L1268.83 338.271L1266.65 338.024L1266.39 337.732L1265.87 338.013L1265.74 337.542L1266.3 336.824L1265.48 336.869L1265.42 336.106L1263.13 334.973L1263.14 334.513L1262.17 333.975L1263.01 333.257L1263.41 331.294L1262.34 329.41L1261.98 326.18L1261.33 325.697L1253.47 322.467L1252.33 322.624L1250.63 324.688L1249.47 325.17L1247.06 325.484L1246.59 325.17L1245.6 325.372L1244.15 325.08L1243.01 325.417L1240.88 324.464L1241.82 320.213L1241.39 319.551L1240.39 319.876L1239.56 318.586L1239.47 317.756L1238.14 316.534L1238.59 316.018L1238.41 314.862L1239.12 315.031L1239.85 314.156L1239.73 313.045L1241.21 312.193L1240.99 311.262L1241.49 310.309L1241.03 309.849L1241.58 309.086L1241.41 307.123L1241.1 306.82L1240.81 307.785L1240.37 307.684L1239.29 310.914L1238.34 311.599L1237.7 311.677L1236.91 311.083L1236.97 310.578L1236.49 309.916L1236.81 309.389L1236.71 307.359L1236.25 307.751L1236.17 309.254L1235.88 309.423L1234.05 308.57L1234.07 309.187L1235.49 310.858L1235.23 311.554L1234 312.473L1232.84 312.26L1232.3 311.363L1231.59 311.43L1231.76 311.756L1231 312.967L1230.79 316.646L1232.01 319.708L1234.81 321.906L1234.35 323.073L1234.9 323.791L1233.19 326.191L1233.32 326.92L1232.92 327.716L1232.74 329.545L1231.63 331.485L1230.8 331.597L1229.79 332.764L1227.74 334.188L1225.2 337.766L1221.97 338.674L1217.37 342.309L1217 341.871L1217.9 341.882L1219.37 340.772L1219 340.222L1215.91 340.907L1214.06 340.245L1213.07 340.727L1212.93 340.043L1210.59 339.863L1209.9 338.674L1209.15 338.506L1209.21 337.856L1208.55 337.99L1208.12 337.542L1209.11 336.981L1208.76 336.757L1208.85 335.893L1208.54 335.59L1207.06 335.713L1206.96 336.914L1207.61 337.687L1205.46 338.708L1205.18 338.159L1204.66 338.136L1204.5 337.329L1204.1 337.093L1203.6 337.362L1202.94 336.902L1202.2 336.824L1201.28 337.856L1200.52 337.901L1200.38 336.97L1198.84 336.297L1197.73 335.422L1197.71 335.052L1197.24 335.074L1196.42 336.162L1196 337.519L1194.94 338.473L1194.32 338.809L1193.57 338.215L1191.83 339.011L1190.8 338.798L1190.35 339.202L1191.73 339.695L1193 338.888L1194.54 339.179L1196.27 337.945L1196.83 337.104L1196.92 336.05L1198.01 336.039L1198.54 336.409L1199.37 338.506L1200.4 339.729L1200.3 340.379L1198.44 341.288L1198.25 341.804L1198.46 341.927L1198.8 341.456L1199.66 341.658L1200.31 341.243L1200.66 340.391H1201.27L1202.49 341.198L1202.94 342.746L1205.44 339.594L1206.56 339.673L1207.71 338.742L1208.98 338.932L1208.8 341.153L1208.19 342.353L1208.25 343.711L1208.84 345.135L1211.76 348.332L1213.31 349.072L1214.28 348.982L1213.83 348.421L1215.54 346.447L1214.7 344.529L1218.14 352.224L1219.27 358.37L1219.4 361.062L1220.02 363.182L1221.68 365.986L1223.53 367.253L1224.52 368.734L1224.63 369.654L1223.47 369.822L1223.06 371.112L1223.6 372.805L1225.06 373.108L1225.4 373.478L1225.95 376.238L1225.69 377.303L1224.61 377.92L1224.51 378.974L1223.84 379.95L1222.63 379.692L1222.02 380.264L1221.81 380.892L1222.39 381.442L1222.09 382.003L1222.32 382.653L1221.69 383.394L1221.12 382.339L1215.47 380.275L1213.5 379.03L1209.34 378.47L1205.8 378.84L1204.29 379.311L1201.47 380.769L1198.69 383.281L1196.74 383.764L1193.31 385.401L1190.6 387.779L1187.33 389.462L1186.61 390.437L1184.81 391.234L1184.22 390.998L1184.32 390.191L1183.75 389.686L1183.56 388.62L1182.91 388.082L1182.57 386.646L1181.61 386.882L1181.06 386.478L1180.9 384.403L1180.05 383.91L1181.4 382.339L1181 381.027L1180.29 380.477L1179.27 380.399L1178.89 379.647L1178.01 379.367L1173.24 380.982L1170.74 382.642L1169.8 381.823L1168.29 381.24L1167.21 381.476L1166.73 381.958L1165.42 382.014L1165.03 381.285L1164.06 380.881L1162.53 381.711L1161.97 382.709L1158.36 383.988L1158.53 383.18L1158.25 383.102L1157.38 383.73L1157.49 382.664L1157.23 382.474L1156.75 382.709L1156.48 383.483L1155.72 383.584L1155.69 384.257L1154.3 384.47L1154.06 385.065L1150.22 383.685L1149.16 384.616L1148.67 384.201L1148.36 382.485L1147.73 381.756L1147.93 381.049L1147.11 380.197L1147.35 378.918L1147.02 377.976L1146.16 377.909L1145.46 377.236L1144.72 377.269L1143.77 375.598L1140 372.817L1138.74 373.12L1137.33 372.536L1136.79 371.706L1134.69 370.495L1134.78 369.71L1135.55 369.407L1135.83 368.812L1136.84 368.599L1137.83 367.478L1137.82 366.222L1138.47 365.773L1138.83 364.775L1139.92 364.36L1141.3 362.52L1142.68 362.172L1143.53 361.455L1143.44 361.006L1143.98 360.243L1143.07 356.789L1141.92 356.082L1141.99 355.028L1141.23 354.635L1139.28 354.445L1138.12 353.065L1137.51 349.902L1135.92 349.543L1135.38 348.78L1135.09 347.266L1133.55 347.636L1133.12 347.333L1132.33 348.062L1131.07 348.388L1130.33 348.141L1130.19 347.199L1129.05 347.58L1128.52 347.345L1128.4 345.539L1127.12 344.888L1126.29 343.98L1125.06 341.748L1124.51 341.927L1123.68 343.139L1122.38 343.677L1121.38 343.497L1120.05 343.912L1118.73 342.421L1116.38 341.77L1115.55 342.959L1114.67 343.15L1114.09 342.802L1114.4 341.703L1113.44 339.37L1110.48 339.202L1109.83 337.788L1109.09 337.508L1107.8 337.945L1107.44 338.607L1107.82 340.2L1107.17 340.693L1105.82 338.45L1104.86 338.439L1101.66 336.084L1100.6 336.072L1099.86 336.723L1098.48 336.779L1097.83 336.173L1096.86 336.084L1096.37 335.657L1094.62 338.058L1093.76 337.901L1093.35 338.203L1093.31 338.865L1093.91 339.482L1093.96 340.234L1090.39 340.379L1088.7 338.618L1084.9 337.968L1083.28 336.835L1081.5 333.167L1080.28 332.954L1078.45 331.631L1073.08 330.655L1069.75 326.707L1069 324.407L1066.74 323.925L1066.08 322.893L1060.94 321.02L1059.64 319.54L1059.71 314.829L1060.26 313.404L1061.76 311.352L1061.85 310.623L1059.65 310.499L1057.84 309.344L1057.55 308.413L1056.47 308.323L1055.83 307.471L1055.51 306.147L1056.46 305.475L1056.76 304.162L1058.18 302.076L1058.1 301.089L1058.63 300.012L1059.85 299.317L1059.68 298.61L1058.4 296.984L1058.74 295.088L1058.46 293.821L1056.01 292.598L1054.61 292.374L1053.06 290.277L1051.57 289.805L1051.33 289.211L1051.55 286.799L1050.61 285.083L1050.44 283.165L1050.86 280.305L1052.15 279.991L1053.16 280.171L1054.27 279.688L1054.71 278.937L1054.63 278.522L1053.61 277.984L1053.16 276.884L1054.36 275.325L1055.07 272.521L1056.54 271.445L1059.51 271.624L1062.63 268.932L1063.32 269.706L1064.13 269.74L1064.59 269.403L1065.83 269.975L1066.37 268.674L1066.99 268.012L1067.82 267.799L1073.81 268.416L1075.54 267.721L1078.08 265.41L1079.22 265.152L1084.18 266.666L1087.21 268.08L1087.86 266.98L1087.81 265.152L1088.28 264.289L1088.18 262.18L1089.17 261.574L1089.04 260.632L1089.43 259.6L1088.53 258.894L1088.42 257.637L1089.42 256.987L1090.21 255.596L1089.39 253.835L1088.01 253.297L1087.53 252.388L1088.07 249.035L1089.68 248.664L1089.64 248.003L1087.25 244.941L1087.14 243.213L1086.11 242.697L1086.42 241.542L1085.57 240.297L1086.37 239.904L1086.97 238.188L1086.86 237.246L1086.99 236.27L1088.11 237.078L1088.02 236.764L1088.51 236.461L1089.94 237.179H1090.84L1094.47 235.564L1095.94 236.293L1097.4 236.416L1099.09 235.956L1100.5 234.465L1101.24 234.644L1102.26 236.528L1104.91 238.536L1107.36 239.007L1109.76 238.312L1111.58 238.727L1114.12 238.716L1118.11 240.219L1120.57 240.432L1121.67 240.017L1122.33 240.701L1123.96 240.813L1125.88 239.164L1129.58 234.711L1130.74 234.139L1131.89 235.429L1132.93 235.676L1133.07 236.091L1132.67 236.001L1132.29 236.383L1132.07 237.291L1133.34 238.536L1134.54 239.164L1134.12 244.055L1134.58 246.41L1135.15 246.881L1138.22 247.072L1139.59 247.846L1141.5 249.584L1142.49 249.853L1143.08 249.651L1143.9 251.121L1144.21 253.207L1143.86 254.497L1144.26 255.775L1145.44 256.908L1146.29 256.964L1151.29 255.876L1152.41 254.53L1155.33 252.612L1156.94 250.414L1156.97 249.158L1156.62 248.384L1155.59 247.711L1155.93 245.053L1155.28 243.325L1154.77 243.168L1154.72 241.183L1154.22 240.735L1154.33 239.904L1153.86 238.693L1153.02 238.031L1150.99 238.514L1150.01 238.211L1150.27 236.517L1150.99 235.811L1150.79 235.665L1152.62 235.126L1153.5 234.263L1152.85 230.808L1153.36 226.927L1153.12 226.512L1152.24 226.232L1152.34 225.75L1153.1 225.615L1154.95 226.669L1156.68 226.535L1158.81 227.286L1160.26 227.41L1163.51 228.823L1166.73 229.361L1168.67 230.18L1170.64 229.429L1171.19 230.158L1171.24 230.898L1173.76 232.479L1174.29 232.423L1174.25 231.436L1174.73 230.775L1176.63 230.124L1178.43 231.75L1178.12 232.109L1178.93 233.164L1180.39 232.031L1181.78 231.593L1182.01 231.829L1182.71 231.593L1182.84 232.132L1183.22 232.098L1183.31 231.604L1184.56 232.177L1189.37 232.39L1194.72 231.403L1196.18 231.75L1197.61 231.47L1200.09 234.756L1203.87 237.033L1205.94 237.83L1208.57 238.245L1211.67 240.465L1213.59 241.34L1214.9 241.419L1214.94 241.946L1216.05 241.351L1219.4 242.787L1224.22 246.5L1228.89 251.984L1230.65 253.476L1232.06 253.88L1232.79 253.577L1232.85 253.106L1233.48 253.42L1233.37 253.656L1234.52 254.856L1238.29 257.234L1241.44 261.193L1245.23 264.098L1248.09 266.868L1260.69 276.29L1262.2 276.918L1262.54 276.705L1262.47 277.647L1266.86 280.597L1267.06 280.911L1266.58 281.304L1267.08 282.964L1268.5 284.792L1269.28 285.196L1270.73 286.811L1271.34 289.413L1270.79 288.123L1270.18 288.886L1269.84 292.755L1270.28 294.741L1270.88 295.817L1271.57 296.232L1271.02 296.356L1271.44 299.754L1270.95 299.575L1269.47 301.381L1270.28 302.513L1271.71 302.727L1273.72 304.061L1273.9 305.228L1273.58 305.43L1273.42 306.888L1274.25 307.931L1275.89 306.607L1275.93 305.564L1276.96 305.25L1277.79 305.777L1277.49 306.293L1277.79 308.29L1277.16 308.267L1277.07 308.581L1277.88 308.952L1278.5 308.839L1278.83 308.537L1278.13 308.088L1279.52 307.538L1279.74 305.901L1278.81 305.25L1278.42 304.398L1276.7 304.028L1275.39 303.153L1277.84 301.291L1277.61 297.758L1276.94 295.077L1276.13 294.741L1275.69 295.021L1275.43 293.316L1273.13 293.877L1272.14 293.608L1272.17 293.26L1273.3 292.867L1279.43 292.856L1280.08 292.071L1281.73 292.845L1284.69 293.641L1285.12 293.496L1292.74 295.716L1293.85 294.853L1294.75 295.447L1295.52 295.357L1296.24 296.143L1295.73 296.872L1296.08 297.578L1298.6 299.407L1298.35 300.887L1300.24 302.973L1303.49 305.699L1304.77 307.617L1307.62 308.929L1309.03 310.746L1308.46 310.544L1308.53 311.06L1310.55 311.61L1311.38 311.385L1311.99 311.857ZM1291.21 337.239L1292.89 338.54L1288.64 339.998L1288.25 339.538L1289.35 337.463L1290.18 336.992L1291.21 337.239Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-14-inside-10_10718_32869)\" />\n                <path d=\"M151.786 481.558L154.839 479.539L155.804 480.044L156.365 479.943L157.162 478.967L160.103 476.982L161.45 476.847L161.932 477.262L162.617 479.079L163.526 479.606L165.95 480.01L166.904 482.489L170.148 484.216L170.182 485.035L169.037 485.271L168.442 486.235L167.095 486.74L167.14 487.491L168.027 487.951L166.815 488.927L165.479 490.901L164.604 491.159L164.446 491.585L164.323 492.741L164.828 492.92L165.412 492.202L165.894 492.258L165.827 491.451L166.444 491.653L167.32 493.885L166.253 494.479L166.096 495.264L166.568 495.892L167.623 495.455L167.612 495.881L165.086 496.319L165.49 497.765L164.368 497.709L164.503 498.494L163.212 498.326L162.101 497.474L162.202 497.945L161.663 498.405L162.258 499.313L160.855 499.896L159.957 500.659L159.284 500.087L158.543 500.166L157.578 501.142L156.994 500.469L156.118 500.513L154.424 499.325L153.919 497.564L152.785 496.599L153.301 495.769L153.01 495.085L152.572 494.883L151.977 496.195L151.685 496.218L151.472 495.298L151.012 493.503L151.494 492.729L152.538 492.101L152.864 490.834L153.952 490.094L153.739 489.241L152.011 488.501L150.383 486.953L150.372 486.022L151.517 484.485L151.315 482.556L151.786 481.558Z\" fill=\"#3C484F\" />\n                <path d=\"M167.025 487.713L167.572 487.997L166.658 488.732L166.629 488.756L166.608 488.787L165.322 490.687L164.533 490.919L164.412 490.955L164.369 491.073L164.212 491.499L164.201 491.528L164.198 491.559L164.074 492.714L164.053 492.91L164.239 492.976L164.744 493.156L164.911 493.215L165.022 493.078L165.519 492.466L165.865 492.507L166.169 492.542L166.143 492.237L166.107 491.805L166.255 491.854L167.007 493.773L166.132 494.261L166.031 494.317L166.008 494.43L165.851 495.215L165.829 495.325L165.896 495.414L166.235 495.866L165.044 496.072L164.771 496.119L164.845 496.386L165.156 497.498L164.38 497.46L164.069 497.444L164.121 497.752L164.199 498.203L163.311 498.087L162.253 497.275L161.714 496.862L161.856 497.526L161.926 497.852L161.501 498.215L161.333 498.358L161.454 498.542L161.884 499.198L160.759 499.666L160.723 499.681L160.693 499.706L159.957 500.331L159.445 499.897L159.364 499.827L159.257 499.839L158.516 499.917L158.428 499.927L158.365 499.99L157.59 500.774L157.183 500.305L157.103 500.213L156.981 500.219L156.192 500.259L154.64 499.171L154.159 497.495L154.138 497.422L154.081 497.373L153.111 496.548L153.514 495.901L153.582 495.791L153.531 495.671L153.239 494.987L153.202 494.898L153.114 494.858L152.676 494.656L152.448 494.55L152.344 494.78L151.857 495.853L151.715 495.241L151.715 495.241L151.714 495.236L151.28 493.545L151.675 492.913L152.667 492.315L152.755 492.263L152.78 492.163L153.082 490.987L154.093 490.3L154.237 490.202L154.195 490.033L153.982 489.18L153.951 489.06L153.837 489.011L152.15 488.289L150.632 486.845L150.623 486.104L151.717 484.635L151.776 484.556L151.765 484.459L151.571 482.6L151.982 481.728L154.854 479.829L155.688 480.265L155.764 480.305L155.848 480.29L156.41 480.189L156.501 480.173L156.559 480.101L157.333 479.154L160.19 477.224L161.368 477.107L161.721 477.41L162.383 479.167L162.414 479.251L162.492 479.295L163.401 479.823L163.44 479.846L163.485 479.853L165.768 480.233L166.671 482.579L166.705 482.666L166.787 482.71L169.904 484.37L169.923 484.833L168.987 485.026L168.881 485.047L168.824 485.139L168.274 486.031L167.007 486.506L166.835 486.571L166.846 486.755L166.891 487.506L166.899 487.648L167.025 487.713Z\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" strokeWidth=\"0.5\" />\n                <mask id=\"path-17-inside-11_10718_32869\" fill=\"white\">\n                    <path d=\"M148.217 621.547L149.182 621.245L153.661 621.985L155.008 623.118L156.59 623.78L157.78 623.297L157.398 624.901H156.949L156.983 625.563L157.275 625.653L156.904 626.157L157.443 626.449L156.624 626.83L156.792 627.223L157.533 627.133L158.745 627.952L159.396 630.105L159.699 630.341L160.159 629.971L160.44 630.296L160.844 631.586L162.83 634.491L162.258 637.048L161.731 637.475H162.157L161.989 637.89L162.281 638.237L163.661 633.874L164.402 633.582L164.705 633.874L162.426 639.449L162.729 640.166L163.055 639.617L163.459 640.279L162.718 641.053L162.236 643.273L164.144 644.799L164.492 647.479L167.241 650.912L169.643 655.544L170.721 656.049L169.991 658.595L168.678 659.716L167.017 660.075L165.681 662.947L164.671 663.272L163.627 662.745L162.92 663.081L162.505 662.442L160.777 661.892L159.542 659.066L158.689 659.346L158.599 658.561L157.825 657.484L157.365 657.473L156.848 656.89L156.635 656.093L155.075 656.654L154.85 655.88L154.031 655.712L153.638 655.017L153.043 655.252L152.505 654.557L151.887 654.703L151.539 654.377L151.394 654.669L151.046 654.142L150.08 654.299L149.631 653.48L148.823 653.289L147.443 652.302L147.667 651.45L148.509 651.282L148.352 650.553L148.734 649.577L149.789 648.971L150.092 648.231L150.709 648.321L150.956 647.266L152.437 646.851L151.73 645.875L152.561 645.191L153.582 644.855L153.818 645.382L154.166 645.427L155.019 644.563L154.716 644.126L154.839 643.206L154.244 642.903L154.401 641.4L153.515 639.123L155.356 635.938L155.535 634.996L155.423 634.525L154.615 634.098L154.626 633.594L153.975 632.719L152.752 633.74L152.864 634.401L151.831 634.558L151.236 635.13L151.27 633.773L149.777 633.392L148.835 633.762L147.095 632.943L147.061 631.193L146.433 630.958L145.389 631.395L144.109 630.79L144.334 630.341L146.062 629.825L146.399 629.275L146.309 628.154L144.906 627.84L145.176 627.492L144.996 626.785L146.567 625.967L147.331 624.811L147.701 623.97L147.263 622.748L148.217 621.547Z\" />\n                </mask>\n                <path d=\"M148.217 621.547L149.182 621.245L153.661 621.985L155.008 623.118L156.59 623.78L157.78 623.297L157.398 624.901H156.949L156.983 625.563L157.275 625.653L156.904 626.157L157.443 626.449L156.624 626.83L156.792 627.223L157.533 627.133L158.745 627.952L159.396 630.105L159.699 630.341L160.159 629.971L160.44 630.296L160.844 631.586L162.83 634.491L162.258 637.048L161.731 637.475H162.157L161.989 637.89L162.281 638.237L163.661 633.874L164.402 633.582L164.705 633.874L162.426 639.449L162.729 640.166L163.055 639.617L163.459 640.279L162.718 641.053L162.236 643.273L164.144 644.799L164.492 647.479L167.241 650.912L169.643 655.544L170.721 656.049L169.991 658.595L168.678 659.716L167.017 660.075L165.681 662.947L164.671 663.272L163.627 662.745L162.92 663.081L162.505 662.442L160.777 661.892L159.542 659.066L158.689 659.346L158.599 658.561L157.825 657.484L157.365 657.473L156.848 656.89L156.635 656.093L155.075 656.654L154.85 655.88L154.031 655.712L153.638 655.017L153.043 655.252L152.505 654.557L151.887 654.703L151.539 654.377L151.394 654.669L151.046 654.142L150.08 654.299L149.631 653.48L148.823 653.289L147.443 652.302L147.667 651.45L148.509 651.282L148.352 650.553L148.734 649.577L149.789 648.971L150.092 648.231L150.709 648.321L150.956 647.266L152.437 646.851L151.73 645.875L152.561 645.191L153.582 644.855L153.818 645.382L154.166 645.427L155.019 644.563L154.716 644.126L154.839 643.206L154.244 642.903L154.401 641.4L153.515 639.123L155.356 635.938L155.535 634.996L155.423 634.525L154.615 634.098L154.626 633.594L153.975 632.719L152.752 633.74L152.864 634.401L151.831 634.558L151.236 635.13L151.27 633.773L149.777 633.392L148.835 633.762L147.095 632.943L147.061 631.193L146.433 630.958L145.389 631.395L144.109 630.79L144.334 630.341L146.062 629.825L146.399 629.275L146.309 628.154L144.906 627.84L145.176 627.492L144.996 626.785L146.567 625.967L147.331 624.811L147.701 623.97L147.263 622.748L148.217 621.547Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-17-inside-11_10718_32869)\" />\n                <mask id=\"path-18-inside-12_10718_32869\" fill=\"white\">\n                    <path d=\"M481.459 528.688L481.841 529.058L482.907 528.812L483.233 529.361L483.098 529.866L485.635 530.898L486.173 530.842L487.397 529.406L487.913 529.361L489.911 531.145L490.854 530.808L491.785 531.066L492.155 532.098L491.976 534.128L490.786 535.62L489.002 536.057L487.902 539.007L488.654 539.77L489.361 539.523L489.484 540.14L488.609 541.62L487.812 541.878L487.789 542.54L488.059 543.112L489.125 543.415L489.956 544.38L491.258 544.884L491.235 545.221L491.841 545.669L493.368 545.109L493.974 544.211L494.131 542.899L494.546 542.372L494.917 542.473L496.566 544.391L496.106 545.748L496.982 547.61L496.914 548.675L498.138 549.651L498.239 550.47L498.968 551.177L499.563 551.132L500.057 552.13L500.977 552.926L501.123 553.891L503.402 555.719L503.592 556.258L503.031 557.334L502.335 557.637L501.381 557.346L500.977 556.37L500.528 556.258L500.865 557.536L499.855 558.131L499.249 559.062L499.294 559.533L500.562 559.791L501.314 560.834L501.494 562.685L501.774 564.277L502.56 564.58L502.111 565.634L500.203 566.262L499.653 567.059L498.553 566.33L498.149 567.014L498.396 567.653L496.555 568.506L496.061 567.53L495.747 567.541L495.388 568.023L495.523 568.842L494.041 568.539L493.659 567.889L493.008 568.45L491.302 568.124L490.371 568.349L489.35 569.773L490.158 570.693L489.776 571.254L489.013 571.108L488.452 572.173L486.173 572.297L485.107 572.813L484.647 572.633L484.579 573.082L483.435 573.317L483.042 573.149L482.683 571.714L481.908 571.287L480.82 571.22L480.528 570.715L480.056 570.648L479.787 569.291L479.024 568.853L478.934 567.687L477.576 567.216L477.475 566.476L478.777 565.612L478.945 564.468H477.419L477.374 565.062L475.915 566.509L474.4 567.205L473.838 568.708L473.322 568.023L471.953 568.259L471.829 567.552L469.854 567.53L468.866 566.947L467.811 567.44L466.667 567.115L466.027 566.464L466.083 565.533L465.275 563.582L464.276 563.01L464.332 562.079L464.702 561.989L464.545 561.473L460.224 558.893L458.99 559.207L458.271 558.232L458.26 555.551L456.79 553.88L459.495 552.971L459.899 553.151L460.482 552.758L460.392 552.164L461.245 551.491L460.19 550.863L460.404 549.831L457.968 549.382L457.216 548.631L456.318 548.732L456.184 547.946L457.115 547.543L457.508 547.969L457.946 545.972L459.977 545.692L462.312 543.886L463.602 543.785L464.646 543.067L466.296 542.888L468.328 542.047L468.148 541.25L470.213 539.579L470.483 538.379L471.279 537.986L470.909 535.9L472.828 535.564L475.32 536.113L475.971 534.879L478.272 534.835L478.193 532.883L477.767 532.547L478.047 530.842L477.666 529.787L479.798 528.172L480.539 528.049L481.459 528.688Z\" />\n                </mask>\n                <path d=\"M481.459 528.688L481.841 529.058L482.907 528.812L483.233 529.361L483.098 529.866L485.635 530.898L486.173 530.842L487.397 529.406L487.913 529.361L489.911 531.145L490.854 530.808L491.785 531.066L492.155 532.098L491.976 534.128L490.786 535.62L489.002 536.057L487.902 539.007L488.654 539.77L489.361 539.523L489.484 540.14L488.609 541.62L487.812 541.878L487.789 542.54L488.059 543.112L489.125 543.415L489.956 544.38L491.258 544.884L491.235 545.221L491.841 545.669L493.368 545.109L493.974 544.211L494.131 542.899L494.546 542.372L494.917 542.473L496.566 544.391L496.106 545.748L496.982 547.61L496.914 548.675L498.138 549.651L498.239 550.47L498.968 551.177L499.563 551.132L500.057 552.13L500.977 552.926L501.123 553.891L503.402 555.719L503.592 556.258L503.031 557.334L502.335 557.637L501.381 557.346L500.977 556.37L500.528 556.258L500.865 557.536L499.855 558.131L499.249 559.062L499.294 559.533L500.562 559.791L501.314 560.834L501.494 562.685L501.774 564.277L502.56 564.58L502.111 565.634L500.203 566.262L499.653 567.059L498.553 566.33L498.149 567.014L498.396 567.653L496.555 568.506L496.061 567.53L495.747 567.541L495.388 568.023L495.523 568.842L494.041 568.539L493.659 567.889L493.008 568.45L491.302 568.124L490.371 568.349L489.35 569.773L490.158 570.693L489.776 571.254L489.013 571.108L488.452 572.173L486.173 572.297L485.107 572.813L484.647 572.633L484.579 573.082L483.435 573.317L483.042 573.149L482.683 571.714L481.908 571.287L480.82 571.22L480.528 570.715L480.056 570.648L479.787 569.291L479.024 568.853L478.934 567.687L477.576 567.216L477.475 566.476L478.777 565.612L478.945 564.468H477.419L477.374 565.062L475.915 566.509L474.4 567.205L473.838 568.708L473.322 568.023L471.953 568.259L471.829 567.552L469.854 567.53L468.866 566.947L467.811 567.44L466.667 567.115L466.027 566.464L466.083 565.533L465.275 563.582L464.276 563.01L464.332 562.079L464.702 561.989L464.545 561.473L460.224 558.893L458.99 559.207L458.271 558.232L458.26 555.551L456.79 553.88L459.495 552.971L459.899 553.151L460.482 552.758L460.392 552.164L461.245 551.491L460.19 550.863L460.404 549.831L457.968 549.382L457.216 548.631L456.318 548.732L456.184 547.946L457.115 547.543L457.508 547.969L457.946 545.972L459.977 545.692L462.312 543.886L463.602 543.785L464.646 543.067L466.296 542.888L468.328 542.047L468.148 541.25L470.213 539.579L470.483 538.379L471.279 537.986L470.909 535.9L472.828 535.564L475.32 536.113L475.971 534.879L478.272 534.835L478.193 532.883L477.767 532.547L478.047 530.842L477.666 529.787L479.798 528.172L480.539 528.049L481.459 528.688Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-18-inside-12_10718_32869)\" />\n                <path d=\"M139.911 646.47L140.214 645.281L140.506 645.842L141.314 646.021L142.358 644.967L141.943 643.228L140.506 641.748L139.642 641.714L139.788 639.908L139.159 639.336L139.271 637.912L140.181 637.789L140.383 638.394L140.832 638.473L141.135 637.385L141.931 637.811L144.266 638.899L144.109 639.897L145.007 640.323L144.939 641.647L143.862 643.677L144.187 644.911L143.694 645.617L143.795 646.324L143.222 647.042L141.527 646.481L140.641 647.805L139.911 646.47Z\" fill=\"#3C484F\" />\n                <path d=\"M141.32 646.342L140.662 647.323L140.178 646.436L140.295 645.977L140.338 646.061L140.452 646.086L141.26 646.265L141.357 646.287L141.32 646.342ZM141.606 646.244L141.485 646.204L141.492 646.197L142.536 645.143L142.633 645.044L142.601 644.909L142.186 643.17L142.17 643.104L142.122 643.054L140.685 641.574L140.616 641.502L140.516 641.498L139.912 641.475L140.037 639.929L140.047 639.806L139.956 639.724L139.418 639.234L139.505 638.133L140.009 638.064L140.145 638.473L140.193 638.615L140.34 638.641L140.788 638.719L141.012 638.758L141.072 638.54L141.292 637.752L141.814 638.031L141.813 638.032L141.826 638.038L143.99 639.046L143.862 639.858L143.833 640.043L144.002 640.123L144.749 640.478L144.693 641.579L143.641 643.56L143.595 643.646L143.62 643.741L143.916 644.863L143.489 645.474L143.432 645.555L143.446 645.653L143.532 646.253L143.135 646.75L141.606 646.244Z\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" strokeWidth=\"0.5\" />\n                <mask id=\"path-21-inside-13_10718_32869\" fill=\"white\">\n                    <path d=\"M738.773 448.975L735.137 449.693L733.588 448.941L732.398 447.247L731.523 446.608L730.692 446.395L730.041 446.698L728.29 445.924L727.606 445.958L726.966 446.832L725.686 447.36L725.406 447.999L726.236 448.616L726.584 450.197L726.079 450.399L725.484 449.749L725.058 450.41L725.237 451.308L724.732 453.327L724.968 453.921L724.564 454.033L724.328 454.684L722.937 454.616L722.544 455.065L723.038 455.402L723.318 456.377L722.881 457.23L723.307 457.925L724.261 458.004L723.599 459.451L723.879 460.135L724.553 460.595V462.187L725.204 462.131L725.35 462.681L724.901 463.354L725.406 463.791L726.337 463.141L726.461 462.502L726.977 462.434L728.346 463.141L727.808 463.421L727.471 464.498L726.607 464.879L727.303 466.147L726.865 467.874L726.438 468.087L726.64 468.827L726.281 469.534L725.754 469.186L725.204 469.467L724.07 467.84L723.161 468.738L722.735 469.826L722.409 470.028L721.646 469.77L721.781 470.353L720.928 470.241L720.075 470.858L719.682 470.499L717.661 470.375L716.382 469.242L715.922 469.164L715.024 469.781L714.115 468.928L712.33 467.941L711.971 468.054L714.901 465.552L715.866 465.182L714.755 463.814L712.386 463.948L710.916 465.507L706.483 465.586L706.472 467.134L704.878 469.534L704.429 471.093L703.98 471.486L702.195 471.508L701.488 472.08L699.086 471.71L697.953 472.877L697.661 473.807L697.212 473.92L696.258 473.729L695.955 472.899L694.339 472.024L691.712 472.529L688.805 471.519L687.29 470.028L687.2 467.975L686.527 467.908L685.147 469.456L683.429 469.153L682.385 468.132L680.983 467.93L680.534 468.48L680.107 468.379L678.513 465.687L677.975 465.463L676.774 466.517L676.055 467.885L676.123 468.569L674.63 469.971L673.541 469.355L672.183 469.5L671.465 469.186L670.107 469.624L668.58 468.368L665.528 467.773L664.776 468.783L664.484 470.499L663.07 471.721L661.442 471.385L659.209 472.271L658.243 472.215L656.986 473.437L655.078 473.707L654.854 474.077L655.28 474.346L655.202 475.075L653.99 476.982L655.056 478.249L656.201 478.698L657.256 481.524L657.839 481.479L659.253 482.332L658.827 483.005L657.424 482.825L656.593 483.094L655.393 487.39L654.843 487.794L655.033 488.759L654.562 489.51L654.652 491.821L654.764 492.325L655.449 492.774L654.944 495.118L655.179 496.79L654.876 497.732L654.955 500.513L654.405 500.962L653.765 502.431L654.349 502.409L653.844 503.082L653.552 509.542L650.263 519.413L645.92 523.697L637.468 528.733L628.31 539.422L622.911 542.428L622.271 543.595L622.294 545.199L621.755 545.771L621.273 545.457L620.554 545.917L618.983 546.096L618.467 546.713L617.266 546.971L616.626 547.644L615.795 547.868V544.593L614.628 543.729H611.968L611.261 543.056L610.936 541.867L611.093 540.454L610.318 538.379L608.085 537.336L606.502 535.115L605.975 534.891L605.784 533.545L604.639 533.051L603.741 533.321L602.271 532.928L601.384 533.467L600.049 532.221L598.803 531.661L598.141 530.057L596.277 528.172L592.304 525.716L591.283 524.236L588.746 522.52L588.084 521.431L588.039 519.592L587.31 517.842L586.322 518.145L585.974 519.009L584.055 518.818L583.988 520.175L582.046 521.398L580.059 521.678L580.07 522.396L579.105 523.114L578.78 524.179L576.108 522.564L576.703 521.858L576.007 521.353L575.458 521.23L574.762 521.645L573.987 521.162L573.303 521.723L570.721 521.936L570.598 520.456L569.004 520.198L568.443 519.469L568.432 518.527L567.231 518.414L566.613 517.999L565.132 518.224L564.862 517.338L563.684 516.676L563.414 515.857L562.685 515.139H561.394L561.013 514.578L560.384 514.421L559.509 513.21L558.364 513.3L558.252 514.298L556.388 513.861L555.58 512.582L554.84 512.122L553.672 510.047L552.808 509.531L552.763 508.735L551.102 507.546L550.496 506.649L549.587 506.48L549.733 505.033L550.496 504.024L552.045 503.755L553.033 501.971L556.579 502.386L556.512 501.68L557.915 497.956L557.814 496.958L557.23 496.307L557.937 493.514L557.522 492.247L559.554 491.327L558.802 489.981L558.947 487.424L558.184 486.762L558.521 486.291L558.398 484.889L559.868 483.532L560.182 481.558L561.226 481.434L561.529 480.324L562.528 480.459L562.988 481.008L563.908 480.077L564.009 478.698L564.862 478.765L564.728 476.309L567.567 475.939L567.365 474.884L567.713 473.864L567.556 473.538L566.467 473.381L566.827 470.286L564.481 470.14L564.167 469.624L564.268 468.962L565.199 468.457L565.424 467.717L563.19 466.517L567.848 455.29L574.683 455.547L575.177 456.411L577.04 456.31L577.612 455.615L578.353 455.761L580.014 455.379L580.531 453.024L581.339 452.497L581.631 451.263L582.719 451.016L583.561 451.454L584.594 451.016L585.514 451.925L584.897 453.158L585.188 454.448L585.615 454.83L587.22 455.166L587.13 455.761L587.747 456.299L587.456 457.151L588.095 457.824L587.725 458.329L587.916 459.159L589.577 460.101L589.959 460.987L590.486 461.021L591.081 460.068L591.81 460.247L592.17 459.888L591.979 458.8L591.317 458.396L590.924 457.185L591.384 455.66L590.901 454.101L592.989 454.213L593.011 453.315L594.392 451.678L593.718 451.274L593.819 450.624L595.941 448.851L596.973 448.627L598.174 445.935L598.836 445.329L601.878 444.556L603.337 442.582L604.718 441.819L605.234 440.877L605.032 438.757L603.831 436.323L604.471 434.405L606.188 433.564L607.288 433.788L607.49 433.115L608.41 432.218L609.477 432.767L610.24 432.408L611.688 432.599L611.721 433.093L610.722 433.104L610.689 434.057L611.575 435.145L611.609 435.953L613.068 437.747L616.368 438.678L616.559 441.011L617.76 440.428L618.893 440.585L619.017 441.348L619.701 441.471L619.611 442.828L620.835 443.064L621.351 442.66L622.328 442.649L624.09 441.101L623.484 440.652L623.046 439.654L623.248 438.981L625.964 436.435L627.288 435.986L627.805 435.437L627.625 433.407L626.278 432.005L626.682 431.276L626.559 430.042L625.414 430.064L624.067 428.561L623.91 427.484L623.27 426.43L625.122 424.961L625.852 423.48L629.365 423.615L629.309 422.942L628.658 422.314L629.107 421.024L628.725 420.127L628.882 416.93L628.119 417.087L627.513 416.414L626.11 416.605L623.854 415.292L621.845 412.96L621.172 411.423L621.935 409.639L621.654 409.023L621.003 408.843L620.947 408.103L621.879 407.621L621.811 405.119L622.148 404.244L623.012 403.852L623.057 403.123L625.493 401.754L625.246 400.622L624.628 399.96L624.729 399.175L627.378 397.975L627.524 397.324L629.982 395.429L630.364 394.666L631.879 394.643L633.013 393.78L632.519 391.593L636.324 387.959L636.941 385.054L636.447 384.605L636.391 384.044L637.087 383.169L637.266 382.317L639.444 379.995L639.343 379.087L639.938 378.077L637.884 377.483L637.322 376.709L637.682 375.778L636.57 373.849L635.078 372.424L634.842 370.259L636.054 370.136L636.627 369.721L637.019 367.747L636.301 366.939L636.615 365.806L637.289 365.459L638.142 366.098L638.972 365.649L639.421 364.909L638.007 363.014L637.659 362.027L638.68 360.636L638.815 358.348L639.545 356.441L639.006 353.951L639.354 353.614L642.396 355.263L643.282 354.175L644.472 355.398L645.729 355.611L646.324 355.207L646.638 353.962L648.052 353.57L651.229 353.413L651.868 354.13L652.912 351.91L651.846 350.676L651.341 348.993L650.095 348.41L650.982 347.917L652.115 348.388L653.058 347.446L653.485 347.569L653.552 348.825L654.135 349.307L653.709 350.384L654.079 351.999L654.416 352.706L655.74 352.93L656.279 353.704L655.92 355.331L656.358 355.645L656.391 356.295L655.696 357.002L652.429 357.226V358.426L651.128 360.804L651.453 361.589L653.361 360.939L654.641 360.894L656.739 361.948L658.389 361.713L660.039 365.01L661.06 364.696L661.633 371.841L661.97 372.727L663.159 374.073L663.081 374.622L661.7 375.924L661.408 377.258L660.802 377.684L660.769 378.357L660.174 378.896V380.354L661.386 382.115L662.329 381.476L664.708 381.431L665.505 383.551L665.157 384.123L665.617 385.581L664.944 386.927L665.045 387.869L663.485 388.665L662.778 389.551L662.172 391.368L662.587 393.23L664.428 396.124L664.091 399.848L664.473 400.599L665 400.779L665.73 400.453L666.257 400.857L666.796 402.169L667.75 402.854L669.119 402.652L670.006 403.291L669.658 405.714L667.783 408.327L668.188 409.101L667.705 410.245L666.201 410.503L666.1 410.963L666.728 411.445L666.684 411.928L665.932 412.264L665.819 412.971L664.966 413.711L665.079 414.877L664.315 415.393L664.024 416.683L663.361 417.536L662.879 419.656L663.462 420.889L662.508 422.359L662.497 423.447L660.926 425.802L661.285 426.778L660.982 427.855L659.59 429.503L659.377 430.3L659.848 430.659L659.31 431.231L659.164 432.049L660.69 432.779L660.926 433.766L661.902 434.932L661.801 436.121L662.16 436.469L663.036 436.076L663.406 437.512L664.405 437.142L667.436 437.287L668.412 436.693L669.209 436.626L669.894 435.897L670.455 434.001L670.971 433.339L673.092 433.676L674.091 433.373L674.574 434.012L675.247 434.08L675.629 433.407L677.155 433.025L678.379 433.9L679.176 433.059L681.431 432.487L683.586 429.481L684.26 430.603L683.912 432.722L684.989 432.24L686.628 432.229L686.606 433.564L685.607 434.046L684.776 434.954L684.989 436.48L684.641 437.826L684.945 439.419L685.517 439.441L686.067 439.048V436.121L686.639 435.672L686.651 436.536L687.515 437.153L688.581 435.414L690.904 434.54L691.802 434.64L693.418 433.16L693.587 432.341L693.149 430.737L694.294 429.851L694.608 428.595L695.517 427.686L696.393 427.608L696.426 426.969L696.819 426.385L697.582 426.318L697.493 425.645L697.919 425.286L698.491 425.567L699.075 425.353L699.064 424.411L699.726 423.469L701.342 422.157L702.218 421.977L702.386 421.17L701.993 420.295L703.407 418.276L704.99 418.332L705.618 417.973L706.236 416.885L706.528 415.169L707.672 413.509L708.245 414.003L709.109 413.991L711.298 412.713L711.915 412.701L712.914 413.408L712.847 414.036H714.193L715.046 414.485L715.08 415.023L715.989 415.034L716.326 415.629L717.908 415.472L718.728 416.56L719.693 416.762L719.794 417.614L720.972 418.007L721.601 418.702L721.994 419.353L722.05 420.575L722.443 421.002L724.182 420.575L723.543 422.392L722.813 422.684L722.274 423.391L723.004 424.086L723.116 427.081L722.858 427.899L723.161 428.662L724.138 429.414L725.698 429.223L726.495 429.559L727.673 428.629L728.088 430.132L728.526 430.513L729.39 430.098L729.648 428.617L730.176 428.326L730.58 427.215L730.737 427.765L731.882 427.473L732.645 428.371L732.959 429.492L735.956 430.535L736.663 432.397L735.563 433.923L735.99 436.929L736.528 437.276L736.023 438.353L736.585 440.092L736.169 443.299L738.672 444.948L738.773 445.744L738.336 446.395L739.043 448.19L738.773 448.975Z\" />\n                </mask>\n                <path d=\"M738.773 448.975L735.137 449.693L733.588 448.941L732.398 447.247L731.523 446.608L730.692 446.395L730.041 446.698L728.29 445.924L727.606 445.958L726.966 446.832L725.686 447.36L725.406 447.999L726.236 448.616L726.584 450.197L726.079 450.399L725.484 449.749L725.058 450.41L725.237 451.308L724.732 453.327L724.968 453.921L724.564 454.033L724.328 454.684L722.937 454.616L722.544 455.065L723.038 455.402L723.318 456.377L722.881 457.23L723.307 457.925L724.261 458.004L723.599 459.451L723.879 460.135L724.553 460.595V462.187L725.204 462.131L725.35 462.681L724.901 463.354L725.406 463.791L726.337 463.141L726.461 462.502L726.977 462.434L728.346 463.141L727.808 463.421L727.471 464.498L726.607 464.879L727.303 466.147L726.865 467.874L726.438 468.087L726.64 468.827L726.281 469.534L725.754 469.186L725.204 469.467L724.07 467.84L723.161 468.738L722.735 469.826L722.409 470.028L721.646 469.77L721.781 470.353L720.928 470.241L720.075 470.858L719.682 470.499L717.661 470.375L716.382 469.242L715.922 469.164L715.024 469.781L714.115 468.928L712.33 467.941L711.971 468.054L714.901 465.552L715.866 465.182L714.755 463.814L712.386 463.948L710.916 465.507L706.483 465.586L706.472 467.134L704.878 469.534L704.429 471.093L703.98 471.486L702.195 471.508L701.488 472.08L699.086 471.71L697.953 472.877L697.661 473.807L697.212 473.92L696.258 473.729L695.955 472.899L694.339 472.024L691.712 472.529L688.805 471.519L687.29 470.028L687.2 467.975L686.527 467.908L685.147 469.456L683.429 469.153L682.385 468.132L680.983 467.93L680.534 468.48L680.107 468.379L678.513 465.687L677.975 465.463L676.774 466.517L676.055 467.885L676.123 468.569L674.63 469.971L673.541 469.355L672.183 469.5L671.465 469.186L670.107 469.624L668.58 468.368L665.528 467.773L664.776 468.783L664.484 470.499L663.07 471.721L661.442 471.385L659.209 472.271L658.243 472.215L656.986 473.437L655.078 473.707L654.854 474.077L655.28 474.346L655.202 475.075L653.99 476.982L655.056 478.249L656.201 478.698L657.256 481.524L657.839 481.479L659.253 482.332L658.827 483.005L657.424 482.825L656.593 483.094L655.393 487.39L654.843 487.794L655.033 488.759L654.562 489.51L654.652 491.821L654.764 492.325L655.449 492.774L654.944 495.118L655.179 496.79L654.876 497.732L654.955 500.513L654.405 500.962L653.765 502.431L654.349 502.409L653.844 503.082L653.552 509.542L650.263 519.413L645.92 523.697L637.468 528.733L628.31 539.422L622.911 542.428L622.271 543.595L622.294 545.199L621.755 545.771L621.273 545.457L620.554 545.917L618.983 546.096L618.467 546.713L617.266 546.971L616.626 547.644L615.795 547.868V544.593L614.628 543.729H611.968L611.261 543.056L610.936 541.867L611.093 540.454L610.318 538.379L608.085 537.336L606.502 535.115L605.975 534.891L605.784 533.545L604.639 533.051L603.741 533.321L602.271 532.928L601.384 533.467L600.049 532.221L598.803 531.661L598.141 530.057L596.277 528.172L592.304 525.716L591.283 524.236L588.746 522.52L588.084 521.431L588.039 519.592L587.31 517.842L586.322 518.145L585.974 519.009L584.055 518.818L583.988 520.175L582.046 521.398L580.059 521.678L580.07 522.396L579.105 523.114L578.78 524.179L576.108 522.564L576.703 521.858L576.007 521.353L575.458 521.23L574.762 521.645L573.987 521.162L573.303 521.723L570.721 521.936L570.598 520.456L569.004 520.198L568.443 519.469L568.432 518.527L567.231 518.414L566.613 517.999L565.132 518.224L564.862 517.338L563.684 516.676L563.414 515.857L562.685 515.139H561.394L561.013 514.578L560.384 514.421L559.509 513.21L558.364 513.3L558.252 514.298L556.388 513.861L555.58 512.582L554.84 512.122L553.672 510.047L552.808 509.531L552.763 508.735L551.102 507.546L550.496 506.649L549.587 506.48L549.733 505.033L550.496 504.024L552.045 503.755L553.033 501.971L556.579 502.386L556.512 501.68L557.915 497.956L557.814 496.958L557.23 496.307L557.937 493.514L557.522 492.247L559.554 491.327L558.802 489.981L558.947 487.424L558.184 486.762L558.521 486.291L558.398 484.889L559.868 483.532L560.182 481.558L561.226 481.434L561.529 480.324L562.528 480.459L562.988 481.008L563.908 480.077L564.009 478.698L564.862 478.765L564.728 476.309L567.567 475.939L567.365 474.884L567.713 473.864L567.556 473.538L566.467 473.381L566.827 470.286L564.481 470.14L564.167 469.624L564.268 468.962L565.199 468.457L565.424 467.717L563.19 466.517L567.848 455.29L574.683 455.547L575.177 456.411L577.04 456.31L577.612 455.615L578.353 455.761L580.014 455.379L580.531 453.024L581.339 452.497L581.631 451.263L582.719 451.016L583.561 451.454L584.594 451.016L585.514 451.925L584.897 453.158L585.188 454.448L585.615 454.83L587.22 455.166L587.13 455.761L587.747 456.299L587.456 457.151L588.095 457.824L587.725 458.329L587.916 459.159L589.577 460.101L589.959 460.987L590.486 461.021L591.081 460.068L591.81 460.247L592.17 459.888L591.979 458.8L591.317 458.396L590.924 457.185L591.384 455.66L590.901 454.101L592.989 454.213L593.011 453.315L594.392 451.678L593.718 451.274L593.819 450.624L595.941 448.851L596.973 448.627L598.174 445.935L598.836 445.329L601.878 444.556L603.337 442.582L604.718 441.819L605.234 440.877L605.032 438.757L603.831 436.323L604.471 434.405L606.188 433.564L607.288 433.788L607.49 433.115L608.41 432.218L609.477 432.767L610.24 432.408L611.688 432.599L611.721 433.093L610.722 433.104L610.689 434.057L611.575 435.145L611.609 435.953L613.068 437.747L616.368 438.678L616.559 441.011L617.76 440.428L618.893 440.585L619.017 441.348L619.701 441.471L619.611 442.828L620.835 443.064L621.351 442.66L622.328 442.649L624.09 441.101L623.484 440.652L623.046 439.654L623.248 438.981L625.964 436.435L627.288 435.986L627.805 435.437L627.625 433.407L626.278 432.005L626.682 431.276L626.559 430.042L625.414 430.064L624.067 428.561L623.91 427.484L623.27 426.43L625.122 424.961L625.852 423.48L629.365 423.615L629.309 422.942L628.658 422.314L629.107 421.024L628.725 420.127L628.882 416.93L628.119 417.087L627.513 416.414L626.11 416.605L623.854 415.292L621.845 412.96L621.172 411.423L621.935 409.639L621.654 409.023L621.003 408.843L620.947 408.103L621.879 407.621L621.811 405.119L622.148 404.244L623.012 403.852L623.057 403.123L625.493 401.754L625.246 400.622L624.628 399.96L624.729 399.175L627.378 397.975L627.524 397.324L629.982 395.429L630.364 394.666L631.879 394.643L633.013 393.78L632.519 391.593L636.324 387.959L636.941 385.054L636.447 384.605L636.391 384.044L637.087 383.169L637.266 382.317L639.444 379.995L639.343 379.087L639.938 378.077L637.884 377.483L637.322 376.709L637.682 375.778L636.57 373.849L635.078 372.424L634.842 370.259L636.054 370.136L636.627 369.721L637.019 367.747L636.301 366.939L636.615 365.806L637.289 365.459L638.142 366.098L638.972 365.649L639.421 364.909L638.007 363.014L637.659 362.027L638.68 360.636L638.815 358.348L639.545 356.441L639.006 353.951L639.354 353.614L642.396 355.263L643.282 354.175L644.472 355.398L645.729 355.611L646.324 355.207L646.638 353.962L648.052 353.57L651.229 353.413L651.868 354.13L652.912 351.91L651.846 350.676L651.341 348.993L650.095 348.41L650.982 347.917L652.115 348.388L653.058 347.446L653.485 347.569L653.552 348.825L654.135 349.307L653.709 350.384L654.079 351.999L654.416 352.706L655.74 352.93L656.279 353.704L655.92 355.331L656.358 355.645L656.391 356.295L655.696 357.002L652.429 357.226V358.426L651.128 360.804L651.453 361.589L653.361 360.939L654.641 360.894L656.739 361.948L658.389 361.713L660.039 365.01L661.06 364.696L661.633 371.841L661.97 372.727L663.159 374.073L663.081 374.622L661.7 375.924L661.408 377.258L660.802 377.684L660.769 378.357L660.174 378.896V380.354L661.386 382.115L662.329 381.476L664.708 381.431L665.505 383.551L665.157 384.123L665.617 385.581L664.944 386.927L665.045 387.869L663.485 388.665L662.778 389.551L662.172 391.368L662.587 393.23L664.428 396.124L664.091 399.848L664.473 400.599L665 400.779L665.73 400.453L666.257 400.857L666.796 402.169L667.75 402.854L669.119 402.652L670.006 403.291L669.658 405.714L667.783 408.327L668.188 409.101L667.705 410.245L666.201 410.503L666.1 410.963L666.728 411.445L666.684 411.928L665.932 412.264L665.819 412.971L664.966 413.711L665.079 414.877L664.315 415.393L664.024 416.683L663.361 417.536L662.879 419.656L663.462 420.889L662.508 422.359L662.497 423.447L660.926 425.802L661.285 426.778L660.982 427.855L659.59 429.503L659.377 430.3L659.848 430.659L659.31 431.231L659.164 432.049L660.69 432.779L660.926 433.766L661.902 434.932L661.801 436.121L662.16 436.469L663.036 436.076L663.406 437.512L664.405 437.142L667.436 437.287L668.412 436.693L669.209 436.626L669.894 435.897L670.455 434.001L670.971 433.339L673.092 433.676L674.091 433.373L674.574 434.012L675.247 434.08L675.629 433.407L677.155 433.025L678.379 433.9L679.176 433.059L681.431 432.487L683.586 429.481L684.26 430.603L683.912 432.722L684.989 432.24L686.628 432.229L686.606 433.564L685.607 434.046L684.776 434.954L684.989 436.48L684.641 437.826L684.945 439.419L685.517 439.441L686.067 439.048V436.121L686.639 435.672L686.651 436.536L687.515 437.153L688.581 435.414L690.904 434.54L691.802 434.64L693.418 433.16L693.587 432.341L693.149 430.737L694.294 429.851L694.608 428.595L695.517 427.686L696.393 427.608L696.426 426.969L696.819 426.385L697.582 426.318L697.493 425.645L697.919 425.286L698.491 425.567L699.075 425.353L699.064 424.411L699.726 423.469L701.342 422.157L702.218 421.977L702.386 421.17L701.993 420.295L703.407 418.276L704.99 418.332L705.618 417.973L706.236 416.885L706.528 415.169L707.672 413.509L708.245 414.003L709.109 413.991L711.298 412.713L711.915 412.701L712.914 413.408L712.847 414.036H714.193L715.046 414.485L715.08 415.023L715.989 415.034L716.326 415.629L717.908 415.472L718.728 416.56L719.693 416.762L719.794 417.614L720.972 418.007L721.601 418.702L721.994 419.353L722.05 420.575L722.443 421.002L724.182 420.575L723.543 422.392L722.813 422.684L722.274 423.391L723.004 424.086L723.116 427.081L722.858 427.899L723.161 428.662L724.138 429.414L725.698 429.223L726.495 429.559L727.673 428.629L728.088 430.132L728.526 430.513L729.39 430.098L729.648 428.617L730.176 428.326L730.58 427.215L730.737 427.765L731.882 427.473L732.645 428.371L732.959 429.492L735.956 430.535L736.663 432.397L735.563 433.923L735.99 436.929L736.528 437.276L736.023 438.353L736.585 440.092L736.169 443.299L738.672 444.948L738.773 445.744L738.336 446.395L739.043 448.19L738.773 448.975Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-21-inside-13_10718_32869)\" />\n                <mask id=\"path-22-inside-14_10718_32869\" fill=\"white\">\n                    <path d=\"M106.297 463.13L107.083 462.659L107.879 462.849L108.149 462.423L109.675 462.221L110.607 462.771V462.3L111.067 462.322L111.583 461.649V461.032L112.167 461.324L115.22 460.37L115.568 458.475L115.298 456.725L118.003 457.544L118.149 458.082L119.451 458.856L119.866 458.52L120.304 458.8L121.247 458.632L121.483 458.071L122.19 457.768L122.515 458.071L123.873 457.88L124.199 457.095L125.142 457.42L124.861 458.8L125.287 459.967L124.592 460.64L125.467 461.526L126.724 461.649L127.588 461.088L127.824 460.561L127.498 459.036L128.093 457.97L128.318 460.898L129.362 459.574L130.203 459.215L131.629 459.518L132.134 459.967L132.28 460.673L132.156 461.2L133.436 461.963L133.312 462.3L132.931 462.042L132.706 462.681L132.212 462.322L131.651 462.726L131.864 463.219L130.899 463.668L130.506 464.274L130.428 465.642L131.438 465.889L131.382 466.18L131.943 466.427L130.563 469.052L127.409 469.433L127.375 469.814L126.836 470.072L126.197 469.713L125.299 470.072L124.816 470.723L125.243 471.284L124.816 472.282L125.209 472.607L125.658 472.26L125.714 475.041L123.828 475.12L123.357 476.028L121.988 476.118L121.797 475.535L120.63 475.277L119.878 475.49L119.833 476.118L118.845 476.97L117.835 476.544L117.566 474.682L115.22 475.366L114.602 475.871L114.097 475.165L112.414 475.064L112.144 474.671L111.325 475.008L111.112 475.467L110.584 474.963L109.114 474.593L108.834 473.493L108.093 473.258L106.331 473.729L106.14 474.144L105.354 474.2L105.197 474.615L104.804 474.503L104.075 475.972L103.345 475.378L102.324 475.165L101.561 473.09L100.842 473.022L101.415 471.744L101.347 470.779L99.3383 470.151L98.2047 470.914L97.7557 470.835L97.5537 469.713L97.9802 469.725L98.171 468.726L99.125 468.334L98.5638 467.448L99.0352 466.943L99.4842 466.954L99.4393 466.506L100.607 465.81L100.809 466.012L101.572 464.98L102.032 464.958L102.638 464.307L102.986 464.161L103.547 464.711L103.951 464.644L103.94 464.184L104.501 463.814L103.682 463.32L105.635 463.511L106.297 463.13Z\" />\n                </mask>\n                <path d=\"M106.297 463.13L107.083 462.659L107.879 462.849L108.149 462.423L109.675 462.221L110.607 462.771V462.3L111.067 462.322L111.583 461.649V461.032L112.167 461.324L115.22 460.37L115.568 458.475L115.298 456.725L118.003 457.544L118.149 458.082L119.451 458.856L119.866 458.52L120.304 458.8L121.247 458.632L121.483 458.071L122.19 457.768L122.515 458.071L123.873 457.88L124.199 457.095L125.142 457.42L124.861 458.8L125.287 459.967L124.592 460.64L125.467 461.526L126.724 461.649L127.588 461.088L127.824 460.561L127.498 459.036L128.093 457.97L128.318 460.898L129.362 459.574L130.203 459.215L131.629 459.518L132.134 459.967L132.28 460.673L132.156 461.2L133.436 461.963L133.312 462.3L132.931 462.042L132.706 462.681L132.212 462.322L131.651 462.726L131.864 463.219L130.899 463.668L130.506 464.274L130.428 465.642L131.438 465.889L131.382 466.18L131.943 466.427L130.563 469.052L127.409 469.433L127.375 469.814L126.836 470.072L126.197 469.713L125.299 470.072L124.816 470.723L125.243 471.284L124.816 472.282L125.209 472.607L125.658 472.26L125.714 475.041L123.828 475.12L123.357 476.028L121.988 476.118L121.797 475.535L120.63 475.277L119.878 475.49L119.833 476.118L118.845 476.97L117.835 476.544L117.566 474.682L115.22 475.366L114.602 475.871L114.097 475.165L112.414 475.064L112.144 474.671L111.325 475.008L111.112 475.467L110.584 474.963L109.114 474.593L108.834 473.493L108.093 473.258L106.331 473.729L106.14 474.144L105.354 474.2L105.197 474.615L104.804 474.503L104.075 475.972L103.345 475.378L102.324 475.165L101.561 473.09L100.842 473.022L101.415 471.744L101.347 470.779L99.3383 470.151L98.2047 470.914L97.7557 470.835L97.5537 469.713L97.9802 469.725L98.171 468.726L99.125 468.334L98.5638 467.448L99.0352 466.943L99.4842 466.954L99.4393 466.506L100.607 465.81L100.809 466.012L101.572 464.98L102.032 464.958L102.638 464.307L102.986 464.161L103.547 464.711L103.951 464.644L103.94 464.184L104.501 463.814L103.682 463.32L105.635 463.511L106.297 463.13Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-22-inside-14_10718_32869)\" />\n                <path d=\"M125.444 635.444L128.812 634.536L129.429 633.998L130.248 635.534L131.831 635.063L133.537 635.557L134.21 634.132L135.052 633.504L137.645 634.491L138.655 633.224L138.7 633.818L137.903 634.872L137.88 635.658L137.802 636.51L138.745 637.396L138.531 639.897L138.296 640.11L137.555 639.796L136.747 640.357L135.939 639.976L135.624 640.335L135.804 641.501L135.377 641.995L134.962 641.916L134.794 641.647L135.198 641.591L134.895 641.21L134.367 641.479L133.93 640.806L131.696 644.462L130.967 644.788L130.327 644.384L129.777 644.855L127.959 644.429L126.735 643.341L126.724 642.724L125.815 642.443L125.557 641.849L123.839 641.804L123.862 642.208L122.796 641.681L122.459 640.884L122.571 639.763L123.211 638.877L123.088 637.777L125.007 636.633L125.444 635.444Z\" fill=\"#3C484F\" />\n                <path d=\"M128.976 634.724L129.356 634.393L130.028 635.652L130.124 635.832L130.32 635.774L131.832 635.324L133.467 635.797L133.672 635.856L133.763 635.663L134.41 634.295L135.091 633.787L137.556 634.725L137.669 634.768L137.655 634.785L137.653 634.865L137.631 635.643L137.553 636.487L137.542 636.609L137.631 636.692L138.485 637.495L138.291 639.778L138.246 639.818L137.652 639.566L137.526 639.512L137.412 639.591L136.723 640.069L136.045 639.75L135.875 639.669L135.751 639.811L135.436 640.17L135.36 640.258L135.377 640.373L135.539 641.425L135.459 641.518L135.394 641.435L135.091 641.054L134.963 640.894L134.781 640.987L134.454 641.154L134.139 640.67L133.923 640.337L133.716 640.675L131.523 644.266L130.987 644.505L130.46 644.172L130.304 644.074L130.164 644.194L129.71 644.583L128.077 644.2L126.983 643.227L126.974 642.719L126.971 642.538L126.798 642.485L125.998 642.238L125.786 641.749L125.723 641.603L125.563 641.599L123.846 641.554L123.575 641.547L123.589 641.794L122.99 641.498L122.714 640.846L122.813 639.855L123.414 639.023L123.47 638.945L123.459 638.849L123.354 637.91L125.135 636.848L125.211 636.803L125.241 636.72L125.634 635.652L128.877 634.777L128.932 634.762L128.976 634.724Z\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" strokeWidth=\"0.5\" />\n                <path d=\"M117.318 627.728L117.733 627.369L118.609 627.459L119.428 628.805L122.043 629.31L122.93 630.229L122.975 629.668L123.772 629.725L123.85 629.052L124.198 628.962L125.04 630.263L122.369 631.721L122.043 632.899L123.379 633.673L123.783 633.46L123.682 632.854L124.266 633L124.883 634.032L125.006 635.164L125.444 635.445L125.006 636.634L123.087 637.778L123.211 638.877L122.571 639.763L122.459 640.885L122.795 641.681L122.021 641.378L121.875 640.918L120.685 641.423L120.079 641.188L118.833 641.58L117.341 640.997L116.914 641.479L116.241 641.154L115.399 641.266L113.749 640.358L113.603 639.741L112.986 640.055L111.437 639.371L110.808 639.505L110.292 638.967L109.798 639.034L109.349 638.372L108.036 637.868L108.092 635.658L108.867 633.65L109.787 633.291L109.854 631.609L110.494 631.351L113.367 632.136L113.895 633.078L114.793 633.258L115.421 632.046H116.151L116.824 630.577L116.734 629.612L115.949 628.76L117.318 627.728Z\" fill=\"#3C484F\" />\n                <path d=\"M117.469 627.928L117.475 627.923L117.482 627.917L117.815 627.629L118.46 627.695L119.215 628.935L119.272 629.029L119.381 629.05L121.918 629.54L122.75 630.403L123.135 630.802L123.179 630.249L123.204 629.935L123.754 629.974L123.992 629.991L124.02 629.754L124.079 629.251L124.086 629.249L124.684 630.173L122.249 631.502L122.156 631.552L122.128 631.654L121.802 632.832L121.751 633.018L121.918 633.115L123.254 633.889L123.373 633.958L123.496 633.894L123.9 633.681L124.059 633.596L124.03 633.418L123.991 633.189L124.104 633.217L124.64 634.113L124.758 635.192L124.771 635.31L124.871 635.375L125.14 635.547L124.802 636.464L122.959 637.563L122.821 637.646L122.839 637.806L122.951 638.809L122.368 639.617L122.329 639.671L122.322 639.738L122.21 640.86L122.203 640.923L122.228 640.982L122.334 641.232L122.223 641.189L122.113 640.843L122.03 640.581L121.777 640.688L120.681 641.153L120.17 640.955L120.088 640.923L120.004 640.949L118.842 641.315L117.432 640.764L117.269 640.7L117.153 640.831L116.852 641.172L116.349 640.929L116.282 640.896L116.208 640.906L115.447 641.007L113.967 640.192L113.846 639.683L113.773 639.374L113.49 639.518L112.978 639.778L111.538 639.142L111.464 639.109L111.385 639.126L110.892 639.231L110.473 638.794L110.384 638.702L110.258 638.719L109.918 638.765L109.556 638.232L109.512 638.167L109.439 638.139L108.291 637.697L108.341 635.708L109.06 633.843L109.878 633.524L110.03 633.465L110.037 633.301L110.098 631.78L110.509 631.614L113.2 632.35L113.677 633.2L113.733 633.301L113.846 633.323L114.744 633.503L114.928 633.54L115.015 633.373L115.573 632.296H116.151H116.311L116.378 632.15L117.052 630.681L117.079 630.62L117.073 630.554L116.983 629.589L116.976 629.505L116.918 629.443L116.32 628.793L117.469 627.928Z\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" strokeWidth=\"0.5\" />\n                <mask id=\"path-27-inside-15_10718_32869\" fill=\"white\">\n                    <path d=\"M117.319 627.728L115.949 628.748L116.746 629.601L116.836 630.565L116.163 632.035H115.433L114.804 633.246L113.907 633.078L113.379 632.136L110.506 631.35L109.866 631.597L109.799 633.28L108.878 633.639L108.115 635.646L108.059 637.856L107.633 637.542L106.903 638.024L104.299 637.273L103.154 637.452L102.391 639.482L101.908 639.336L101.336 638.226L100.135 637.452L96.6221 633.302L94.5345 631.586L94.2315 630.857L93.1652 630.464L92.5704 629.522L87.8228 627.997L86.5881 626.505L86.7228 626.213L86.0718 626.314L85.4209 625.597L85.4994 625.193L84.6015 624.43L84.6801 625.047L84.0853 625.383L82.0313 624.879L81.1896 624.15L80.5386 622.658L80.6845 622.243L80.056 621.525L77.3623 620.224L76.0154 620.179L74.9043 619.203L78.0806 618.149L78.1143 617.712L76.5205 617.981L76.2511 617.151L76.543 617.397L76.9807 617.117L76.2399 616.713L76.4083 616.399L76.9807 616.298L79.955 617.656L81.7507 617.498L82.5252 617.005L83.0078 615.995L83.0751 613.864L84.8372 612.81L85.9708 609.591L87.0932 609.355L86.7228 610.354L87.0483 610.567L87.6768 608.66L88.1482 608.178L89.8767 609.49L90.8644 609.546L90.7633 608.671L88.9788 607.572L87.3289 605.632L86.1841 605.25L86.1167 605.777L85.5107 605.273L83.9955 602.009L84.7587 602.491L86.1953 602.626L88.5411 601.381L88.8104 602.256L90.2695 602.536L90.9878 602.256L90.8644 601.583L89.4614 601.246L89.5961 600.394L90.2246 599.754L90.6062 600.035L91.5153 599.844L91.6388 600.315L93.3448 600.282L92.6265 601.919V602.693L93.1877 602.031L94.8712 602.166L95.6793 601.403L95.7691 600.652L97.3292 599.766L97.9353 600.225L101.706 600.618L102.503 601.224L101.953 603.164L103.637 603.916L104.12 605.015L103.839 605.62L104.58 606.529H107.61L108.452 607.168L109.956 606.596L110.18 608.099L111.056 608.683L111.819 610.152L111.651 610.982L112.414 611.576L112.638 612.675H112.021L111.471 613.707L110.618 613.315L109.361 613.562L109.114 614.986L109.9 615.491L110.663 616.668L110.977 618.755L113.738 619.091L113.716 620.089L114.715 621.469L116.286 622.31L116.376 623.432L115.343 624.71L114.468 625.047L115.074 626.101L117.319 627.728ZM100.708 630.094L101.841 631.665L103.042 631.003L102.997 629.601H102.503L102.133 628.894L101.572 628.917L101.156 628.49L101.437 627.593L100.999 626.113L101.639 625.507L101.617 624.677L102.683 623.981L101.931 623.454L102.346 623.017L102.167 622.389L101.482 622.142L101.729 621.503L100.371 621.413L99.6413 620.774L98.923 623.006L97.621 623.421L95.4997 622.994L94.2539 623.129L92.7163 622.49L91.9755 621.716L91.0327 621.559L90.7858 621.065L91.2796 620.426L91.8184 620.919L92.7163 620.762L93.8723 621.48L95.7354 621.368L98.0026 620.359L99.2148 619.394L100.528 619.618L101.28 620.303L102.526 620.751L103.435 620.303L104.714 620.381L106.331 621.727L108.856 627.391L108.126 627.683L107.094 624.834L106.544 624.318L105.758 624.385L105.163 626.113L106.319 628.681L105.646 630.599L106.173 632.663L105.747 634.076L104.625 635.041L101.785 633.302L100.124 633.414L99.4505 632.831L100.202 632.483L100.012 631.878L100.618 631.608L99.9668 630.476L100.708 630.094Z\" />\n                </mask>\n                <path d=\"M117.319 627.728L115.949 628.748L116.746 629.601L116.836 630.565L116.163 632.035H115.433L114.804 633.246L113.907 633.078L113.379 632.136L110.506 631.35L109.866 631.597L109.799 633.28L108.878 633.639L108.115 635.646L108.059 637.856L107.633 637.542L106.903 638.024L104.299 637.273L103.154 637.452L102.391 639.482L101.908 639.336L101.336 638.226L100.135 637.452L96.6221 633.302L94.5345 631.586L94.2315 630.857L93.1652 630.464L92.5704 629.522L87.8228 627.997L86.5881 626.505L86.7228 626.213L86.0718 626.314L85.4209 625.597L85.4994 625.193L84.6015 624.43L84.6801 625.047L84.0853 625.383L82.0313 624.879L81.1896 624.15L80.5386 622.658L80.6845 622.243L80.056 621.525L77.3623 620.224L76.0154 620.179L74.9043 619.203L78.0806 618.149L78.1143 617.712L76.5205 617.981L76.2511 617.151L76.543 617.397L76.9807 617.117L76.2399 616.713L76.4083 616.399L76.9807 616.298L79.955 617.656L81.7507 617.498L82.5252 617.005L83.0078 615.995L83.0751 613.864L84.8372 612.81L85.9708 609.591L87.0932 609.355L86.7228 610.354L87.0483 610.567L87.6768 608.66L88.1482 608.178L89.8767 609.49L90.8644 609.546L90.7633 608.671L88.9788 607.572L87.3289 605.632L86.1841 605.25L86.1167 605.777L85.5107 605.273L83.9955 602.009L84.7587 602.491L86.1953 602.626L88.5411 601.381L88.8104 602.256L90.2695 602.536L90.9878 602.256L90.8644 601.583L89.4614 601.246L89.5961 600.394L90.2246 599.754L90.6062 600.035L91.5153 599.844L91.6388 600.315L93.3448 600.282L92.6265 601.919V602.693L93.1877 602.031L94.8712 602.166L95.6793 601.403L95.7691 600.652L97.3292 599.766L97.9353 600.225L101.706 600.618L102.503 601.224L101.953 603.164L103.637 603.916L104.12 605.015L103.839 605.62L104.58 606.529H107.61L108.452 607.168L109.956 606.596L110.18 608.099L111.056 608.683L111.819 610.152L111.651 610.982L112.414 611.576L112.638 612.675H112.021L111.471 613.707L110.618 613.315L109.361 613.562L109.114 614.986L109.9 615.491L110.663 616.668L110.977 618.755L113.738 619.091L113.716 620.089L114.715 621.469L116.286 622.31L116.376 623.432L115.343 624.71L114.468 625.047L115.074 626.101L117.319 627.728ZM100.708 630.094L101.841 631.665L103.042 631.003L102.997 629.601H102.503L102.133 628.894L101.572 628.917L101.156 628.49L101.437 627.593L100.999 626.113L101.639 625.507L101.617 624.677L102.683 623.981L101.931 623.454L102.346 623.017L102.167 622.389L101.482 622.142L101.729 621.503L100.371 621.413L99.6413 620.774L98.923 623.006L97.621 623.421L95.4997 622.994L94.2539 623.129L92.7163 622.49L91.9755 621.716L91.0327 621.559L90.7858 621.065L91.2796 620.426L91.8184 620.919L92.7163 620.762L93.8723 621.48L95.7354 621.368L98.0026 620.359L99.2148 619.394L100.528 619.618L101.28 620.303L102.526 620.751L103.435 620.303L104.714 620.381L106.331 621.727L108.856 627.391L108.126 627.683L107.094 624.834L106.544 624.318L105.758 624.385L105.163 626.113L106.319 628.681L105.646 630.599L106.173 632.663L105.747 634.076L104.625 635.041L101.785 633.302L100.124 633.414L99.4505 632.831L100.202 632.483L100.012 631.878L100.618 631.608L99.9668 630.476L100.708 630.094Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-27-inside-15_10718_32869)\" />\n                <mask id=\"path-28-inside-16_10718_32869\" fill=\"white\">\n                    <path d=\"M493.513 469.209L494.097 471.654L493.985 472.563L493.614 472.944L492.874 473.011L492.593 473.853L493.525 474.615L493.39 475.232L494.355 476.713L495.612 476.69L496.061 477.644L497.195 477.722L497.543 479.191L498.676 480.526L498.609 481.648L499.339 483.588L500.158 483.97L500.023 485.013L498.755 485.596L498.171 486.381L496.308 486.818L493.693 490.06L493.188 491.148L492.391 491.529L492.38 492.404L492.997 495.982L493.816 497.586L494.726 498.405L494.434 499.448L493.671 499.807L493.345 500.614L492.975 503.957L491.628 504.663L491.908 505.146L493.345 505.953L493.873 505.729L494.434 504.686L495.433 504.394L495.87 505.527L496.364 505.841L497.7 505.213L497.936 505.482L498.25 507.479L497.139 508.769L496.869 510.518L497.891 510.63L498.418 512.952L496.858 513.334L496.106 515.05L495.107 516.003L495.41 516.979L494.782 518.762L494.905 519.166L495.623 518.459L496.634 519.974L496.869 520.557L496.241 520.86L497.004 521.454L497.071 522.049L496.129 522.542L495.938 523.484L496.23 523.989L496.746 523.899L497.363 525.043L498.171 525.425L498.407 526.143L497.868 526.255L497.565 526.961L496.892 527.354L496.757 527.892L497.644 528.834L495.983 530.506L494.075 531.739L494.209 532.928L492.717 533.983L491.976 534.128L492.155 532.098L491.785 531.066L490.853 530.808L489.911 531.145L487.913 529.362L487.397 529.406L486.173 530.842L485.634 530.898L483.098 529.866L483.233 529.362L482.907 528.812L481.841 529.059L481.459 528.689L481.448 527.758L481.19 527.387L480.438 527.444L480.079 526.221L480.101 525.324L480.741 524.684L480.584 523.26L478.092 521.185L477.531 520.344L477.711 519.918L479.293 519.166L479.742 518.134L479.753 517.046L476.611 516.654L476.128 515.453L475.342 514.814L474.658 512.649L473.973 512.313L473.356 510.395L471.784 509.643L471.683 509.24L470.954 508.937L470.561 508.062L468.586 506.974L467.564 507.165L465.959 504.417L465.566 504.114L465.118 504.282L464.22 502.072L464.837 501.209L463.905 500.334L464.063 499.616L464.68 499.414L465.061 498.831L464.736 497.721L463.445 496.24L463.872 494.502L463.412 492.673L463.479 490.778L461.526 490.71L462.716 489.791L462.94 488.03L462.648 487.346L461.694 486.931L460.954 485.652L461.156 485.237L460.651 483.622L461.01 483.128L460.808 481.794L460.078 481.581L462.862 479.943L464.085 480.033L466.509 478.99L469.495 478.743L469.046 478.575L468.799 477.812L470.505 477.262L470.909 476.174L472.458 475.355L473.12 474.582L473.749 474.514L474.029 472.955L474.355 472.697L475.432 473.83L475.926 473.909L477.374 472.978L479.024 473L478.766 473.909L479.012 474.2L480.707 474.122L481.684 473.707L481.942 472.596L483.468 472.585L483.39 473.572L485.174 472.54L485.556 474.211L487.385 473.438L488.811 472.125L491.875 470.162L492.952 470.499L493.513 469.209Z\" />\n                </mask>\n                <path d=\"M493.513 469.209L494.097 471.654L493.985 472.563L493.614 472.944L492.874 473.011L492.593 473.853L493.525 474.615L493.39 475.232L494.355 476.713L495.612 476.69L496.061 477.644L497.195 477.722L497.543 479.191L498.676 480.526L498.609 481.648L499.339 483.588L500.158 483.97L500.023 485.013L498.755 485.596L498.171 486.381L496.308 486.818L493.693 490.06L493.188 491.148L492.391 491.529L492.38 492.404L492.997 495.982L493.816 497.586L494.726 498.405L494.434 499.448L493.671 499.807L493.345 500.614L492.975 503.957L491.628 504.663L491.908 505.146L493.345 505.953L493.873 505.729L494.434 504.686L495.433 504.394L495.87 505.527L496.364 505.841L497.7 505.213L497.936 505.482L498.25 507.479L497.139 508.769L496.869 510.518L497.891 510.63L498.418 512.952L496.858 513.334L496.106 515.05L495.107 516.003L495.41 516.979L494.782 518.762L494.905 519.166L495.623 518.459L496.634 519.974L496.869 520.557L496.241 520.86L497.004 521.454L497.071 522.049L496.129 522.542L495.938 523.484L496.23 523.989L496.746 523.899L497.363 525.043L498.171 525.425L498.407 526.143L497.868 526.255L497.565 526.961L496.892 527.354L496.757 527.892L497.644 528.834L495.983 530.506L494.075 531.739L494.209 532.928L492.717 533.983L491.976 534.128L492.155 532.098L491.785 531.066L490.853 530.808L489.911 531.145L487.913 529.362L487.397 529.406L486.173 530.842L485.634 530.898L483.098 529.866L483.233 529.362L482.907 528.812L481.841 529.059L481.459 528.689L481.448 527.758L481.19 527.387L480.438 527.444L480.079 526.221L480.101 525.324L480.741 524.684L480.584 523.26L478.092 521.185L477.531 520.344L477.711 519.918L479.293 519.166L479.742 518.134L479.753 517.046L476.611 516.654L476.128 515.453L475.342 514.814L474.658 512.649L473.973 512.313L473.356 510.395L471.784 509.643L471.683 509.24L470.954 508.937L470.561 508.062L468.586 506.974L467.564 507.165L465.959 504.417L465.566 504.114L465.118 504.282L464.22 502.072L464.837 501.209L463.905 500.334L464.063 499.616L464.68 499.414L465.061 498.831L464.736 497.721L463.445 496.24L463.872 494.502L463.412 492.673L463.479 490.778L461.526 490.71L462.716 489.791L462.94 488.03L462.648 487.346L461.694 486.931L460.954 485.652L461.156 485.237L460.651 483.622L461.01 483.128L460.808 481.794L460.078 481.581L462.862 479.943L464.085 480.033L466.509 478.99L469.495 478.743L469.046 478.575L468.799 477.812L470.505 477.262L470.909 476.174L472.458 475.355L473.12 474.582L473.749 474.514L474.029 472.955L474.355 472.697L475.432 473.83L475.926 473.909L477.374 472.978L479.024 473L478.766 473.909L479.012 474.2L480.707 474.122L481.684 473.707L481.942 472.596L483.468 472.585L483.39 473.572L485.174 472.54L485.556 474.211L487.385 473.438L488.811 472.125L491.875 470.162L492.952 470.499L493.513 469.209Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-28-inside-16_10718_32869)\" />\n                <mask id=\"path-29-inside-17_10718_32869\" fill=\"white\">\n                    <path d=\"M65.072 492.83L65.4536 493.301L66.3066 493.335L67.2494 492.482L68.2819 492.348L69.0676 493.2L69.9991 493.099L70.5042 493.649L71.2001 493.57L71.4807 494.008L72.3225 493.772L72.502 494.053L73.1081 492.83L73.3999 492.852L73.5122 492.191L74.5111 492.213L74.9825 491.686L75.2406 492.852L76.4752 492.897L76.6772 493.57L78.0016 493.054L77.9904 493.077L78.069 493.279H78.0802L78.1026 493.301L78.1363 493.357L78.1251 493.38L78.1139 493.391L78.7873 494.299L78.9444 494.243L79.1913 494.221L78.8546 494.333L78.8322 494.748L79.3597 494.972L79.3709 495.455L79.0791 495.578L79.8199 496.834L79.7637 498.214L80.0443 498.438L79.6178 501.41L79.023 502.521L78.2037 501.781L77.2945 502.016L77.5751 502.667L76.868 503.149L77.1037 503.957L77.9118 504.08L77.6761 505.583L77.968 506.009L75.7793 506.177L75.3079 505.807L74.1631 506.132L73.456 506.974L72.5581 506.761L71.75 507.849L70.4256 507.647L71.3348 508.163L71.1776 508.488L70.4705 508.578L72.0419 508.768L71.245 509.61L71.2562 510.81L70.594 510.664L69.9543 511.202L70.2461 511.651L69.4829 512.088L69.8869 512.638L69.4941 513.131L70.6613 514.096L70.0553 514.769L68.8094 515.711L68.5401 516.317L67.7544 516.384L67.4963 515.913L66.8565 516.339L66.2953 517.73L65.9137 517.618L66.2953 516.788L65.7566 516.967L65.173 518.504L64.1067 518.874L64.1628 519.457L63.7363 519.233L63.0517 519.536L62.1762 518.482L61.0988 518.627L59.7744 517.999H59.0224L58.2592 517.416L58.0796 514.163L57.2491 513.647V513.098L56.0593 512.223L55.8349 511.628L54.3197 512.099L54.0054 511.707L53.6014 511.875L52.6698 510.238L51.5811 509.576L50.3128 509.755L49.8302 508.981L50.6383 508.858L50.9189 507.546L51.4913 507.265L51.1995 506.716L51.9627 505.605L51.2332 505.067L51.6597 504.046L51.2332 503.755L51.5811 502.992L52.0749 503.07L52.9728 502.218L53.1973 502.588L53.4667 502.229L54.1289 502.184L55.1278 502.667L55.7563 502.532L56.1155 503.205L56.643 502.869L57.9449 503.048L58.4837 501.433L57.6868 500.345L59.4152 500.794L61.6487 499.526L61.862 499.212L61.2335 498.651L61.1437 497.978L63.0068 496.072L63.3547 496.722L63.5455 496.576L64.0955 495.051L64.3649 495.062L65.0944 493.772L65.072 492.83Z\" />\n                </mask>\n                <path d=\"M65.072 492.83L65.4536 493.301L66.3066 493.335L67.2494 492.482L68.2819 492.348L69.0676 493.2L69.9991 493.099L70.5042 493.649L71.2001 493.57L71.4807 494.008L72.3225 493.772L72.502 494.053L73.1081 492.83L73.3999 492.852L73.5122 492.191L74.5111 492.213L74.9825 491.686L75.2406 492.852L76.4752 492.897L76.6772 493.57L78.0016 493.054L77.9904 493.077L78.069 493.279H78.0802L78.1026 493.301L78.1363 493.357L78.1251 493.38L78.1139 493.391L78.7873 494.299L78.9444 494.243L79.1913 494.221L78.8546 494.333L78.8322 494.748L79.3597 494.972L79.3709 495.455L79.0791 495.578L79.8199 496.834L79.7637 498.214L80.0443 498.438L79.6178 501.41L79.023 502.521L78.2037 501.781L77.2945 502.016L77.5751 502.667L76.868 503.149L77.1037 503.957L77.9118 504.08L77.6761 505.583L77.968 506.009L75.7793 506.177L75.3079 505.807L74.1631 506.132L73.456 506.974L72.5581 506.761L71.75 507.849L70.4256 507.647L71.3348 508.163L71.1776 508.488L70.4705 508.578L72.0419 508.768L71.245 509.61L71.2562 510.81L70.594 510.664L69.9543 511.202L70.2461 511.651L69.4829 512.088L69.8869 512.638L69.4941 513.131L70.6613 514.096L70.0553 514.769L68.8094 515.711L68.5401 516.317L67.7544 516.384L67.4963 515.913L66.8565 516.339L66.2953 517.73L65.9137 517.618L66.2953 516.788L65.7566 516.967L65.173 518.504L64.1067 518.874L64.1628 519.457L63.7363 519.233L63.0517 519.536L62.1762 518.482L61.0988 518.627L59.7744 517.999H59.0224L58.2592 517.416L58.0796 514.163L57.2491 513.647V513.098L56.0593 512.223L55.8349 511.628L54.3197 512.099L54.0054 511.707L53.6014 511.875L52.6698 510.238L51.5811 509.576L50.3128 509.755L49.8302 508.981L50.6383 508.858L50.9189 507.546L51.4913 507.265L51.1995 506.716L51.9627 505.605L51.2332 505.067L51.6597 504.046L51.2332 503.755L51.5811 502.992L52.0749 503.07L52.9728 502.218L53.1973 502.588L53.4667 502.229L54.1289 502.184L55.1278 502.667L55.7563 502.532L56.1155 503.205L56.643 502.869L57.9449 503.048L58.4837 501.433L57.6868 500.345L59.4152 500.794L61.6487 499.526L61.862 499.212L61.2335 498.651L61.1437 497.978L63.0068 496.072L63.3547 496.722L63.5455 496.576L64.0955 495.051L64.3649 495.062L65.0944 493.772L65.072 492.83Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-29-inside-17_10718_32869)\" />\n                <mask id=\"path-30-inside-18_10718_32869\" fill=\"white\">\n                    <path d=\"M834.523 486.134L834.511 484.878L833.838 483.846L833.771 482.982L834.433 480.784L835.892 478.204L836.094 475.669L836.756 474.671L837.396 474.447L838.058 475.176L838.574 475.064L839.214 474.066L839.977 475.153L840.628 474.974L840.931 474.436L840.314 473.359L840.415 471.699L841.526 470.925L841.683 470.308L838.765 465.822L837.553 464.678L836.756 464.588L836.464 463.522L837.059 463.388L837.295 462.333L837.733 462.266L837.721 462.703L838.933 463.309L839.371 463.029L839.876 462.053L839.91 460.864L841.167 459.316L841.279 458.711L842.177 457.903L842.817 457.847L842.974 457.163L843.434 457.073L843.726 456.512L841.223 453.865L841.638 453.114L840.37 452.598L839.753 451.846L839.955 450.904L839.169 450.713L838.99 449.423L840.482 449.065L841.077 449.995L842.424 450.556L843.053 451.308L844.22 451.24L843.715 449.154L844.13 448.291L844.725 448.078L844.209 444.343L846.24 444.6L846.521 443.524L847.284 442.593L846.857 441.505L847.688 438.824L849.495 438.454L849.854 437.59L849.091 436.805L849.585 435.515L850.202 435.684L850.887 435.381L851.156 434.214L851.874 433.855L852.941 434.046L855.107 433.149L856.072 433.698L858.844 433.093L860.797 434.113L861.527 433.878L862.38 434.64L863.244 434.652L864.198 433.855L864.658 433.889L865.646 435.067L866.128 434.887L868.093 435.639L868.822 435.246V434.842L869.619 433.99L869.608 432.981L872.133 429.526L873.031 429.268L874.153 429.459L875.77 430.378L875.871 430.816L877.88 431.444L879.653 431.567L880.91 432.341L881.471 432.296L882.93 430.928L884.659 430.636L886.892 428.584L887.229 428.057L887.072 427.025L888.385 425.701L891.314 425.746L891.853 425.286L892.179 426.026L892.01 426.924L892.931 426.89L893.57 426.116L893.537 425.757L892.953 425.443L892.751 424.097L893.593 422.785L892.953 421.977L893.133 420.441L892.773 419.487L893.076 418.983L893.088 417.502L894.289 415.281L893.784 414.059L895.366 410.301L892.908 407.396L894.087 404.704L893.795 403.874L894.042 403.515L894.782 403.695L896.702 402.013L897.05 401.384L896.679 400.409L897.162 399.556L897.566 400.173L898.105 399.758L899.642 399.747L900.069 399.242L900.046 398.289L900.563 397.75L901.606 398.098L902.684 397.313L904.233 396.976L905.378 394.969L906.096 394.632L907.476 390.55L907.072 389.271L907.813 388.901L909.328 388.99L909.429 388.385L910.204 387.532L909.721 386.803L910.496 381.756L911.236 381.184L912.864 381.128L913.661 379.614L914.794 379.603L915.277 380.477L916.287 380.421L916.242 381.554L917.162 381.621L917.914 381.251L918.105 382.216L918.936 383.472L919.89 384.067L919.856 385.222L920.384 386.007L921.124 386.388L921.282 386.949L922.258 387.207L922.842 388.374L923.975 387.981L924.447 387.319L925.255 387.297L925.76 389.406L927.006 390.28L927.87 390.168L928.902 388.99L930.911 389.574L931.203 390.415L931.91 390.168L932 389.237L932.887 388.172L932.831 386.792L933.863 386.355L933.908 387.252L934.671 387.79L934.626 388.217L935.592 387.633L936.332 387.79L936.703 388.654L936.411 389.069L937.376 390.808L938.027 389.495L939.262 388.845L939.722 389.047L939.374 390.101L939.643 390.897L939.15 391.705L939.296 392.411L940.171 392.883L940.699 392.501L941.911 392.456L942.775 391.29L944.054 390.841L944.649 388.362L945.615 387.398L947.612 387.162L948.241 388.172L949.689 389.024L950.272 388.138L950.71 388.228L951.013 388.744L951.563 388.609L951.271 389.484L951.922 389.495L952.158 388.957L952.82 388.856L953.202 388.318L953.056 387.353L953.527 386.972L953.999 388.037L955.166 388.239L957.332 389.731L959.667 392.894L959.633 393.69L960.912 395.283L960.755 397.268L961.642 398.379L961.373 399.523L962.203 402.057L962.147 403.437L961.687 404.02L961.855 404.413L961.305 405.994L960.015 406.14L959.655 406.656L959.633 409.034L960.048 409.797L959.644 410.526L958.791 410.548L957.186 409.225L956.625 409.37L956.097 409.976L955.525 410.032L954.919 411.367H954.358L953.146 412.253V413.24L952.382 413.453L952.124 414.137L952.887 415.304L952.293 415.595L954.84 418.355L955.996 417.738L957.074 418.029L958.185 417.379L959.139 417.67L959.958 419.409L961.575 419.768L961.866 420.631L961.361 421.45L962.27 422.964L962.652 423.088L963.628 422.112L964.268 422.056L964.324 423.054L965.267 423.435L965.391 424.165L964.975 424.613L965.48 425.107L965.66 426.991L965.02 428.573L964.998 430.614L963.123 431.343L962.226 431.5L961.013 431.029L960.823 430.345L958.948 429.874L957.815 431.006V432.823L958.207 433.911L957.893 434.237L957.006 433.867L955.761 434.932L955.211 434.876L955.301 434.304L953.987 433.283L955.143 430.793L954.762 430.513L954.391 430.894L953.987 430.67L953.797 431.421L952.921 430.468L952.809 430.715L951.933 430.423L949.879 430.984L949.868 430.603L949.363 430.49L947.029 431.242L938.263 430.737L935.087 432.027L933.246 431.354L926.624 434.035L923.56 436.839L920.608 441.953L919.665 443.019L917.679 444.645L915.367 445.688L913.313 447.797L911.539 452.328L911.034 454.751L909.901 455.536L909.564 456.198L909.037 455.918L907.117 456.826L905.4 460.124L904.828 460.012L903.963 460.427L903.009 462.345L901.517 463.219L900.529 463.287L899.44 464.498L899.272 465.294L899.003 465.025L898.531 465.205L898.251 466.876L897.869 467.145L897.386 466.876L897.42 467.246L895.882 467.998L895.624 470.499L895.355 470.319L895.411 469.422L894.468 469.624L894.749 470.05L894.008 471.43L893.256 471.833L893.166 472.899L892.807 472.787L891.876 473.505L892.055 474.738L893.02 475.086L892.796 475.714L892.302 475.378L891.505 475.512L891.326 476.387L890.293 476.6L889.687 478.485L889.182 478.731L888.733 479.909L887.633 480.19L886.353 481.345L886.073 482.646L885.321 482.365L883.649 483.925L883.346 484.9L882.717 484.811L881.729 485.585L880.966 486.953L880.629 486.605L879.709 487.379L879.316 487.211L879.226 487.817L878.261 488.03L875.96 491.978L875.388 492.011L874.097 493.369L873.401 493.436L872.503 494.401L871.033 494.86L868.306 497.922L868.261 498.584L868.946 499.672L871.471 500.76L872.2 500.771L872.492 500.962L872.526 501.814L873.154 502.229L876.611 501.377L876.926 501.657L879.002 501.758L881.583 500.962L881.37 501.601L882.01 502.072L881.37 502.779L881.752 503.138L881.359 503.452L881.572 504.024L881.303 504.338L881.235 503.889L880.888 504.159L880.944 504.944L881.505 505.415L880.932 505.886L881.381 506.256L881.426 506.581L880.944 506.85L881.494 507.961L881.112 508.107L881.359 508.275L881.224 508.959L880.528 509.621L880.315 510.944L880.607 512.548L881.303 513.064L881.842 512.537L881.785 512.156L882.526 511.797L883.514 511.909L883.907 512.436L884.569 511.864L885.433 509.352L885.141 509.083L884.277 509.318L883.671 508.107L884.513 506.929L885.321 506.727L885.119 506.435L886.039 506.054L886.163 505.628L888.093 505.785L888.89 505.415L886.791 508.522L886.556 508.623V507.781L885.938 507.927L885.5 508.219L885.287 509.094L886.432 509.284L887.734 510.451L889.855 510.283L889.429 511.124L887.857 512.077L887.779 512.885L886.971 514.298L885.613 514.444L884.513 515.431L885.478 516.138L890.618 515.487L893.458 513.434L894.008 511.101L895.703 509.868L895.591 512.492L893.873 514.59L893.952 515.151L893.133 515.723L893.177 516.328L894.76 516.227L896.331 513.748L896.747 510.989L897.207 510.036L897.218 508.533L896.343 508.982L896.87 507.77L896.937 506.402L896.309 505.875L897.027 505.628L899.238 506.85L901.483 507.378L902.841 507.041L904.996 505.74L905.4 505.819L905.445 507.052L908.689 509.038L908.778 509.812L909.755 510.406L909.16 511.258L909.609 512.47L911.281 513.726L911.191 514.163L912.19 515.195L914.66 516.586L914.39 517.584L915.109 517.338L915.03 517.798L916.051 517.988L915.849 518.302L916.691 519.043L918.521 519.334L918.341 519.985L917.926 520.198L918.509 520.265L918.745 521.252L918.094 521.465L918.139 522.183L916.949 522.351L917.252 522.721L916.803 523.271L915.995 523.327L914.166 522.217L913.717 521.465L912.92 521.555L913.795 522.744L914.615 522.789L914.817 524.079L915.513 524.281L915.659 524.819L917.106 525.054L916.489 526.041L917.162 526.771L917.331 528.688L916.893 529.788L916.074 530.113L916.152 531.212L918.296 533.568L919.418 533.366L919.564 534.465L918.902 534.375L917.982 535.171L917.948 536.484L918.577 537.045L918.319 537.583L916.725 538.447L916.029 540.6L915.243 540.623L914.177 541.284L914.256 543L912.976 543.393L913.425 543.516L913.515 544.021L914.065 543.943L914.031 544.593L912.493 545.244L912.774 546.152L912.179 546.388L912.594 548.631L912.202 549.416L912.348 549.853L911.337 550.616L911.236 551.671L910.563 552.949L911.079 554.06L910.439 555.148L911.394 557.705L911.079 558.198L911.191 560.004L911.483 560.475L912.639 560.845L911.023 562.001L910.327 563.425L910.709 564.345L911.36 564.625L911.124 565.938L911.506 567.373L910.473 569.347L910.529 570.648L909.609 571.658L909.89 571.815L909.934 573.037L909.373 573.161L909.643 573.677L908.879 574.697L909.8 574.024L910.26 574.619L910.024 575.303L909.037 576.212L908.588 577.378L908.52 581.057L907.802 581.573L907.409 582.437L906.5 582.807L904.884 584.467L903.413 586.777L902.347 587.316L901.315 588.617L899.485 592.699L899.508 593.473L899.126 593.339L897.981 592.531L896.612 592.89L895.254 592.453L895.882 590.961L895.276 590.299L895.411 589.884L897.218 588.74L897.353 587.921L896.836 586.901L895.714 585.936L896.129 585.05L896.769 584.814L896.735 584.186L895.49 584.029L895.557 583.435L894.951 583.02L894.625 581.349L893.368 580.967L892.347 581.786L892.381 582.515L890.686 582.807L890.36 583.491L889.171 584.007L888.104 583.659L886.836 584.007L885.68 585.151L886.297 586.441L887.801 587.327L887.611 587.876L886.724 588.168L886.522 588.74L887.88 588.841L889.283 589.839L890.349 589.604L891.034 590.086L891.539 590.019L890.966 590.86L891.662 591.118L891.763 592.341L891.112 592.969L890.484 593.058L890.416 593.843L889.53 594.27L888.71 593.978L886.421 595.818L885.456 595.481L885.265 595.066L883.424 594.685L882.56 597.085L882.998 598.038L879.844 600.461L878.676 600.282L877.7 600.82L876.207 600.259L875.814 599.609L875.422 599.642L874.771 600.506L872.997 599.194L873.233 598.666L871.897 598.577L871.886 598.319H871.493L870.943 598.969L870.18 599.003L870.079 598.577L870.64 597.646L869.9 597.13L869.832 596.165L868.878 596.132L867.7 595.582L866.88 596.524L866.072 596.221L865.556 596.591L864.49 596.58L863.816 598.588L862.716 598.072L863.064 600.484L862.694 601.392L859.069 602.2L859.462 598.588L860.011 597.231L860.707 596.872L860.662 595.952L860.135 595.358L860.393 594.449L861.313 593.294L862.907 593.025L863.502 592.43L865.163 589.637L864.366 588.527L864.22 587.686L863.67 587.529L863.367 586.486L864.658 583.098L863.996 582.807L863.513 581.999L863.042 582.235L862.178 581.775L861.28 581.909L863.087 580.642L865.029 581.225L865.837 580.72L866.106 579.262L865.129 578.915L864.49 579.274L863.738 578.758L863.446 579.128L862.986 578.186L862.492 578.096L861.998 577.434L861.471 577.389L860.258 578.634L856.79 578.073L854.13 576.873L852.817 575.483L852.054 572.028L851.077 571.49L849.181 571.355L848.799 570.357L848.092 570.727L847.306 570.491L846.61 570.884L845.971 570.39L845.892 569.235L844.051 568.293L843.176 568.663L842.996 569.538L842.57 569.796L842.615 570.682L842.076 570.817L841.672 570.301L840.853 570.11L838.664 571.534L837.912 571.209L838.406 571.052L838.889 569.527L838.877 567.34L838.036 565.881L839.068 564.457L838.844 564.109L839.147 563.055L838.675 562.382L838.664 561.316L838.092 560.89L838.821 559.825L838.159 558.501L837.284 558.221L837.07 557.032L836.565 557.301L836.015 556.852L835.286 556.718L834.702 557.077L834.186 556.707L834.264 556.123L835.05 555.204L835.028 554.508L834.354 553.454L833.827 553.465L832.873 554.149L832.525 553.869L832.469 553.297L833.703 551.177L833.221 549.999L834.646 549.203L835.712 546.433L836.947 546.051L837.744 544.683L838.799 544.728L839.034 543.864L838.327 542.092L838.72 540.69L840.437 540.813L841.795 540.095L842.345 540.219L845.421 539.12L845.937 538.525L846.162 537.235L848.878 534.712L849.697 534.263L852.402 534.431L853.928 533.366L854.074 532.637L852.851 531.212L852.694 530.517L853.232 529.933L852.593 528.453L853.131 527.701L857.868 529.732L858.822 529.821L859.462 530.348L863.637 530.909L863.85 529.956L863.491 529.418L864.512 528.15L864.333 527.477L863.839 527.23L864.063 526.322L863.67 524.819L865.578 522.037L865.376 521.106L865.803 520.209L865.388 519.278L864.658 518.728L864.849 518.37L865.994 518.403L866.207 517.977L862.93 515.408L862.256 516.25L861.022 516.227L858.855 517.495L858.16 517.573L857.475 516.945L856.375 517.125L855.758 516.25L854.972 516.07L854.512 516.844L853.468 516.867L851.987 517.831L852.121 519.054L851.538 519.491L851.111 519.166L850.449 519.413L850.022 520.231L849.338 520.456L848.575 520.187L846.296 520.411L845.477 520.097L843.546 520.613L843.389 521.331L842.604 521.712L841.863 521.476L841.481 520.759L841.941 520.31L841.762 519.917L840.606 519.794L838.933 520.489L838.383 520.299L839.45 518.482L838.586 516.631L838.844 516.003L838.282 513.176L837.508 512.593L836.532 512.806L835.263 512.178L834.152 512.728L833.322 511.819L832.39 511.763L831.784 511.045L830.617 511.18L829.809 510.743L830.807 509.61L831.279 507.355L832.121 506.839L832.704 505.852L834.377 505.056L835.331 505.314L835.768 505.078L836.722 502.084L836.734 500.839L837.845 500.267L838.181 499.448L839.618 499.212L839.82 498.64L841.335 498.068L841.829 497.283L842.626 497.059L843.535 495.365L845.656 494.827L846.049 494.221L846.072 492.965L847.643 492.561L848.664 490.632L850.045 490.452L850.303 489.993L848.272 488.826L847.957 488.321L848.305 487.458L847.576 486.942L846.947 485.528L845.645 485.315L843.962 486.078L841.055 486.426L840.909 485.876L836.947 486.527L835.656 486.504L834.523 486.134Z\" />\n                </mask>\n                <path d=\"M834.523 486.134L834.511 484.878L833.838 483.846L833.771 482.982L834.433 480.784L835.892 478.204L836.094 475.669L836.756 474.671L837.396 474.447L838.058 475.176L838.574 475.064L839.214 474.066L839.977 475.153L840.628 474.974L840.931 474.436L840.314 473.359L840.415 471.699L841.526 470.925L841.683 470.308L838.765 465.822L837.553 464.678L836.756 464.588L836.464 463.522L837.059 463.388L837.295 462.333L837.733 462.266L837.721 462.703L838.933 463.309L839.371 463.029L839.876 462.053L839.91 460.864L841.167 459.316L841.279 458.711L842.177 457.903L842.817 457.847L842.974 457.163L843.434 457.073L843.726 456.512L841.223 453.865L841.638 453.114L840.37 452.598L839.753 451.846L839.955 450.904L839.169 450.713L838.99 449.423L840.482 449.065L841.077 449.995L842.424 450.556L843.053 451.308L844.22 451.24L843.715 449.154L844.13 448.291L844.725 448.078L844.209 444.343L846.24 444.6L846.521 443.524L847.284 442.593L846.857 441.505L847.688 438.824L849.495 438.454L849.854 437.59L849.091 436.805L849.585 435.515L850.202 435.684L850.887 435.381L851.156 434.214L851.874 433.855L852.941 434.046L855.107 433.149L856.072 433.698L858.844 433.093L860.797 434.113L861.527 433.878L862.38 434.64L863.244 434.652L864.198 433.855L864.658 433.889L865.646 435.067L866.128 434.887L868.093 435.639L868.822 435.246V434.842L869.619 433.99L869.608 432.981L872.133 429.526L873.031 429.268L874.153 429.459L875.77 430.378L875.871 430.816L877.88 431.444L879.653 431.567L880.91 432.341L881.471 432.296L882.93 430.928L884.659 430.636L886.892 428.584L887.229 428.057L887.072 427.025L888.385 425.701L891.314 425.746L891.853 425.286L892.179 426.026L892.01 426.924L892.931 426.89L893.57 426.116L893.537 425.757L892.953 425.443L892.751 424.097L893.593 422.785L892.953 421.977L893.133 420.441L892.773 419.487L893.076 418.983L893.088 417.502L894.289 415.281L893.784 414.059L895.366 410.301L892.908 407.396L894.087 404.704L893.795 403.874L894.042 403.515L894.782 403.695L896.702 402.013L897.05 401.384L896.679 400.409L897.162 399.556L897.566 400.173L898.105 399.758L899.642 399.747L900.069 399.242L900.046 398.289L900.563 397.75L901.606 398.098L902.684 397.313L904.233 396.976L905.378 394.969L906.096 394.632L907.476 390.55L907.072 389.271L907.813 388.901L909.328 388.99L909.429 388.385L910.204 387.532L909.721 386.803L910.496 381.756L911.236 381.184L912.864 381.128L913.661 379.614L914.794 379.603L915.277 380.477L916.287 380.421L916.242 381.554L917.162 381.621L917.914 381.251L918.105 382.216L918.936 383.472L919.89 384.067L919.856 385.222L920.384 386.007L921.124 386.388L921.282 386.949L922.258 387.207L922.842 388.374L923.975 387.981L924.447 387.319L925.255 387.297L925.76 389.406L927.006 390.28L927.87 390.168L928.902 388.99L930.911 389.574L931.203 390.415L931.91 390.168L932 389.237L932.887 388.172L932.831 386.792L933.863 386.355L933.908 387.252L934.671 387.79L934.626 388.217L935.592 387.633L936.332 387.79L936.703 388.654L936.411 389.069L937.376 390.808L938.027 389.495L939.262 388.845L939.722 389.047L939.374 390.101L939.643 390.897L939.15 391.705L939.296 392.411L940.171 392.883L940.699 392.501L941.911 392.456L942.775 391.29L944.054 390.841L944.649 388.362L945.615 387.398L947.612 387.162L948.241 388.172L949.689 389.024L950.272 388.138L950.71 388.228L951.013 388.744L951.563 388.609L951.271 389.484L951.922 389.495L952.158 388.957L952.82 388.856L953.202 388.318L953.056 387.353L953.527 386.972L953.999 388.037L955.166 388.239L957.332 389.731L959.667 392.894L959.633 393.69L960.912 395.283L960.755 397.268L961.642 398.379L961.373 399.523L962.203 402.057L962.147 403.437L961.687 404.02L961.855 404.413L961.305 405.994L960.015 406.14L959.655 406.656L959.633 409.034L960.048 409.797L959.644 410.526L958.791 410.548L957.186 409.225L956.625 409.37L956.097 409.976L955.525 410.032L954.919 411.367H954.358L953.146 412.253V413.24L952.382 413.453L952.124 414.137L952.887 415.304L952.293 415.595L954.84 418.355L955.996 417.738L957.074 418.029L958.185 417.379L959.139 417.67L959.958 419.409L961.575 419.768L961.866 420.631L961.361 421.45L962.27 422.964L962.652 423.088L963.628 422.112L964.268 422.056L964.324 423.054L965.267 423.435L965.391 424.165L964.975 424.613L965.48 425.107L965.66 426.991L965.02 428.573L964.998 430.614L963.123 431.343L962.226 431.5L961.013 431.029L960.823 430.345L958.948 429.874L957.815 431.006V432.823L958.207 433.911L957.893 434.237L957.006 433.867L955.761 434.932L955.211 434.876L955.301 434.304L953.987 433.283L955.143 430.793L954.762 430.513L954.391 430.894L953.987 430.67L953.797 431.421L952.921 430.468L952.809 430.715L951.933 430.423L949.879 430.984L949.868 430.603L949.363 430.49L947.029 431.242L938.263 430.737L935.087 432.027L933.246 431.354L926.624 434.035L923.56 436.839L920.608 441.953L919.665 443.019L917.679 444.645L915.367 445.688L913.313 447.797L911.539 452.328L911.034 454.751L909.901 455.536L909.564 456.198L909.037 455.918L907.117 456.826L905.4 460.124L904.828 460.012L903.963 460.427L903.009 462.345L901.517 463.219L900.529 463.287L899.44 464.498L899.272 465.294L899.003 465.025L898.531 465.205L898.251 466.876L897.869 467.145L897.386 466.876L897.42 467.246L895.882 467.998L895.624 470.499L895.355 470.319L895.411 469.422L894.468 469.624L894.749 470.05L894.008 471.43L893.256 471.833L893.166 472.899L892.807 472.787L891.876 473.505L892.055 474.738L893.02 475.086L892.796 475.714L892.302 475.378L891.505 475.512L891.326 476.387L890.293 476.6L889.687 478.485L889.182 478.731L888.733 479.909L887.633 480.19L886.353 481.345L886.073 482.646L885.321 482.365L883.649 483.925L883.346 484.9L882.717 484.811L881.729 485.585L880.966 486.953L880.629 486.605L879.709 487.379L879.316 487.211L879.226 487.817L878.261 488.03L875.96 491.978L875.388 492.011L874.097 493.369L873.401 493.436L872.503 494.401L871.033 494.86L868.306 497.922L868.261 498.584L868.946 499.672L871.471 500.76L872.2 500.771L872.492 500.962L872.526 501.814L873.154 502.229L876.611 501.377L876.926 501.657L879.002 501.758L881.583 500.962L881.37 501.601L882.01 502.072L881.37 502.779L881.752 503.138L881.359 503.452L881.572 504.024L881.303 504.338L881.235 503.889L880.888 504.159L880.944 504.944L881.505 505.415L880.932 505.886L881.381 506.256L881.426 506.581L880.944 506.85L881.494 507.961L881.112 508.107L881.359 508.275L881.224 508.959L880.528 509.621L880.315 510.944L880.607 512.548L881.303 513.064L881.842 512.537L881.785 512.156L882.526 511.797L883.514 511.909L883.907 512.436L884.569 511.864L885.433 509.352L885.141 509.083L884.277 509.318L883.671 508.107L884.513 506.929L885.321 506.727L885.119 506.435L886.039 506.054L886.163 505.628L888.093 505.785L888.89 505.415L886.791 508.522L886.556 508.623V507.781L885.938 507.927L885.5 508.219L885.287 509.094L886.432 509.284L887.734 510.451L889.855 510.283L889.429 511.124L887.857 512.077L887.779 512.885L886.971 514.298L885.613 514.444L884.513 515.431L885.478 516.138L890.618 515.487L893.458 513.434L894.008 511.101L895.703 509.868L895.591 512.492L893.873 514.59L893.952 515.151L893.133 515.723L893.177 516.328L894.76 516.227L896.331 513.748L896.747 510.989L897.207 510.036L897.218 508.533L896.343 508.982L896.87 507.77L896.937 506.402L896.309 505.875L897.027 505.628L899.238 506.85L901.483 507.378L902.841 507.041L904.996 505.74L905.4 505.819L905.445 507.052L908.689 509.038L908.778 509.812L909.755 510.406L909.16 511.258L909.609 512.47L911.281 513.726L911.191 514.163L912.19 515.195L914.66 516.586L914.39 517.584L915.109 517.338L915.03 517.798L916.051 517.988L915.849 518.302L916.691 519.043L918.521 519.334L918.341 519.985L917.926 520.198L918.509 520.265L918.745 521.252L918.094 521.465L918.139 522.183L916.949 522.351L917.252 522.721L916.803 523.271L915.995 523.327L914.166 522.217L913.717 521.465L912.92 521.555L913.795 522.744L914.615 522.789L914.817 524.079L915.513 524.281L915.659 524.819L917.106 525.054L916.489 526.041L917.162 526.771L917.331 528.688L916.893 529.788L916.074 530.113L916.152 531.212L918.296 533.568L919.418 533.366L919.564 534.465L918.902 534.375L917.982 535.171L917.948 536.484L918.577 537.045L918.319 537.583L916.725 538.447L916.029 540.6L915.243 540.623L914.177 541.284L914.256 543L912.976 543.393L913.425 543.516L913.515 544.021L914.065 543.943L914.031 544.593L912.493 545.244L912.774 546.152L912.179 546.388L912.594 548.631L912.202 549.416L912.348 549.853L911.337 550.616L911.236 551.671L910.563 552.949L911.079 554.06L910.439 555.148L911.394 557.705L911.079 558.198L911.191 560.004L911.483 560.475L912.639 560.845L911.023 562.001L910.327 563.425L910.709 564.345L911.36 564.625L911.124 565.938L911.506 567.373L910.473 569.347L910.529 570.648L909.609 571.658L909.89 571.815L909.934 573.037L909.373 573.161L909.643 573.677L908.879 574.697L909.8 574.024L910.26 574.619L910.024 575.303L909.037 576.212L908.588 577.378L908.52 581.057L907.802 581.573L907.409 582.437L906.5 582.807L904.884 584.467L903.413 586.777L902.347 587.316L901.315 588.617L899.485 592.699L899.508 593.473L899.126 593.339L897.981 592.531L896.612 592.89L895.254 592.453L895.882 590.961L895.276 590.299L895.411 589.884L897.218 588.74L897.353 587.921L896.836 586.901L895.714 585.936L896.129 585.05L896.769 584.814L896.735 584.186L895.49 584.029L895.557 583.435L894.951 583.02L894.625 581.349L893.368 580.967L892.347 581.786L892.381 582.515L890.686 582.807L890.36 583.491L889.171 584.007L888.104 583.659L886.836 584.007L885.68 585.151L886.297 586.441L887.801 587.327L887.611 587.876L886.724 588.168L886.522 588.74L887.88 588.841L889.283 589.839L890.349 589.604L891.034 590.086L891.539 590.019L890.966 590.86L891.662 591.118L891.763 592.341L891.112 592.969L890.484 593.058L890.416 593.843L889.53 594.27L888.71 593.978L886.421 595.818L885.456 595.481L885.265 595.066L883.424 594.685L882.56 597.085L882.998 598.038L879.844 600.461L878.676 600.282L877.7 600.82L876.207 600.259L875.814 599.609L875.422 599.642L874.771 600.506L872.997 599.194L873.233 598.666L871.897 598.577L871.886 598.319H871.493L870.943 598.969L870.18 599.003L870.079 598.577L870.64 597.646L869.9 597.13L869.832 596.165L868.878 596.132L867.7 595.582L866.88 596.524L866.072 596.221L865.556 596.591L864.49 596.58L863.816 598.588L862.716 598.072L863.064 600.484L862.694 601.392L859.069 602.2L859.462 598.588L860.011 597.231L860.707 596.872L860.662 595.952L860.135 595.358L860.393 594.449L861.313 593.294L862.907 593.025L863.502 592.43L865.163 589.637L864.366 588.527L864.22 587.686L863.67 587.529L863.367 586.486L864.658 583.098L863.996 582.807L863.513 581.999L863.042 582.235L862.178 581.775L861.28 581.909L863.087 580.642L865.029 581.225L865.837 580.72L866.106 579.262L865.129 578.915L864.49 579.274L863.738 578.758L863.446 579.128L862.986 578.186L862.492 578.096L861.998 577.434L861.471 577.389L860.258 578.634L856.79 578.073L854.13 576.873L852.817 575.483L852.054 572.028L851.077 571.49L849.181 571.355L848.799 570.357L848.092 570.727L847.306 570.491L846.61 570.884L845.971 570.39L845.892 569.235L844.051 568.293L843.176 568.663L842.996 569.538L842.57 569.796L842.615 570.682L842.076 570.817L841.672 570.301L840.853 570.11L838.664 571.534L837.912 571.209L838.406 571.052L838.889 569.527L838.877 567.34L838.036 565.881L839.068 564.457L838.844 564.109L839.147 563.055L838.675 562.382L838.664 561.316L838.092 560.89L838.821 559.825L838.159 558.501L837.284 558.221L837.07 557.032L836.565 557.301L836.015 556.852L835.286 556.718L834.702 557.077L834.186 556.707L834.264 556.123L835.05 555.204L835.028 554.508L834.354 553.454L833.827 553.465L832.873 554.149L832.525 553.869L832.469 553.297L833.703 551.177L833.221 549.999L834.646 549.203L835.712 546.433L836.947 546.051L837.744 544.683L838.799 544.728L839.034 543.864L838.327 542.092L838.72 540.69L840.437 540.813L841.795 540.095L842.345 540.219L845.421 539.12L845.937 538.525L846.162 537.235L848.878 534.712L849.697 534.263L852.402 534.431L853.928 533.366L854.074 532.637L852.851 531.212L852.694 530.517L853.232 529.933L852.593 528.453L853.131 527.701L857.868 529.732L858.822 529.821L859.462 530.348L863.637 530.909L863.85 529.956L863.491 529.418L864.512 528.15L864.333 527.477L863.839 527.23L864.063 526.322L863.67 524.819L865.578 522.037L865.376 521.106L865.803 520.209L865.388 519.278L864.658 518.728L864.849 518.37L865.994 518.403L866.207 517.977L862.93 515.408L862.256 516.25L861.022 516.227L858.855 517.495L858.16 517.573L857.475 516.945L856.375 517.125L855.758 516.25L854.972 516.07L854.512 516.844L853.468 516.867L851.987 517.831L852.121 519.054L851.538 519.491L851.111 519.166L850.449 519.413L850.022 520.231L849.338 520.456L848.575 520.187L846.296 520.411L845.477 520.097L843.546 520.613L843.389 521.331L842.604 521.712L841.863 521.476L841.481 520.759L841.941 520.31L841.762 519.917L840.606 519.794L838.933 520.489L838.383 520.299L839.45 518.482L838.586 516.631L838.844 516.003L838.282 513.176L837.508 512.593L836.532 512.806L835.263 512.178L834.152 512.728L833.322 511.819L832.39 511.763L831.784 511.045L830.617 511.18L829.809 510.743L830.807 509.61L831.279 507.355L832.121 506.839L832.704 505.852L834.377 505.056L835.331 505.314L835.768 505.078L836.722 502.084L836.734 500.839L837.845 500.267L838.181 499.448L839.618 499.212L839.82 498.64L841.335 498.068L841.829 497.283L842.626 497.059L843.535 495.365L845.656 494.827L846.049 494.221L846.072 492.965L847.643 492.561L848.664 490.632L850.045 490.452L850.303 489.993L848.272 488.826L847.957 488.321L848.305 487.458L847.576 486.942L846.947 485.528L845.645 485.315L843.962 486.078L841.055 486.426L840.909 485.876L836.947 486.527L835.656 486.504L834.523 486.134Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-30-inside-18_10718_32869)\" />\n                <mask id=\"path-31-inside-19_10718_32869\" fill=\"white\">\n                    <path d=\"M61.009 338.338L59.9091 338.865L60.5488 339.179L60.7621 340.133L61.3232 340.469L61.2896 340.985L61.761 341.445L60.2346 343.105L61.1212 343.744L61.6151 343.542L61.7946 344.9L62.367 345.191L63.0068 344.956L63.1303 346.167L64.7689 346.38L64.6455 347.154L65.2852 347.39L66.3851 346.604L66.8004 346.885L67.1596 346.38L66.8228 345.64L67.9228 346.167L68.1472 346.75L68.6186 346.728L69.09 347.333L69.4267 347.906L69.1798 348.466L69.8308 349.341L70.493 348.758L72.0082 350.261L71.5929 350.687V351.349L72.2439 351.629L72.1092 352.672L72.3786 353.054L73.7928 353.099L73.8601 353.435L74.9937 353.738L74.7804 354.433L75.409 356.699L73.355 359.638L71.9633 359.245L71.3235 359.66L69.8084 359.425L72.1092 362.666L72.2102 364.113L73.0632 364.988L73.1867 365.571L72.5245 366.446L72.7938 366.726L73.7815 366.266L73.6805 366.917L72.6704 368.241L72.8949 370.248L75.3753 373.804L78.9556 375.991L81.2341 375.587L82.0309 375.89L82.9513 377.337L83.0635 380.309L82.4462 382.294L81.8738 382.328L81.9524 383.023L82.6707 383.91L83.7594 383.73L84.1073 384.089L85.0164 386.321L84.9379 387.207L85.7572 387.858L85.8021 389.08L85.0164 391.066L85.6562 391.727L85.6113 392.086L84.5338 393.354L84.4553 395.72L81.279 396.169L80.5719 395.799L80.1005 395.002L79.6291 395.036L78.6975 394.363L77.7098 394.789L77.1599 395.754L75.5773 395.148L73.7815 397.997L67.4065 401.575L66.8228 400.958L65.925 402.091L65.6107 402.024L64.7801 401.441L64.8026 399.657L63.2537 400.599L60.4141 399.152L58.0235 400.79L57.7541 402.315L55.6328 400.364L54.9819 400.667L52.1198 400.308L49.6843 401.642L49.9312 402.327L51.1546 403.28L52.1086 402.73L53.1524 403.201L52.2433 405.456L51.9515 405.77L50.5261 404.828L49.4598 404.704V405.434L48.5844 405.882L47.462 407.105L46.9569 408.585L46.2498 409L45.5652 408.843L44.1622 410.728L42.9501 410.649L22.2536 402.585L21.2996 402.528L20.1772 401.777H18.8529L18.2917 400.812L17.2142 400.364L16.3387 399.298L17.7866 397.324L17.7978 396.73L18.8753 396.517L20.7384 393.421L22.0965 392.165L22.4444 391.133L24.3525 389.114L24.33 388.643L26.7206 385.603L27.091 384.526L29.5041 382.62L29.3919 382.238L31.154 380.264L34.5323 372.2L33.5334 370.091L32.0856 368.678L31.704 366.67L28.1124 363.406L25.8677 362.453L21.6475 357.17L23.8249 355.903L25.8115 352.392L26.2717 350.631L25.6095 349.072L25.9238 348.646L25.6993 347.995L24.7677 347.58L23.926 346.47L22.7587 346.066L22.22 345.225L22.3434 344.193L21.872 342.342L21.973 341.714L22.9495 340.593L22.1526 339.179L22.523 338.26L22.1638 337.968L19.7956 338.013L19.2569 337.452L18.8416 336.117L18.5498 334.222L18.7855 332.887L19.661 332.304L20.5252 332.349L20.918 332.035L20.4129 331.395L20.9629 330.319L20.817 329.96L19.0437 329.679L18.6508 329.231L19.9303 327.638L19.7171 325.092L20.8058 323.174L19.6497 321.951L21.8383 320.74L22.7924 321.211L22.8148 319.854L22.3883 316.511L21.0527 311.901L19.1222 308.851L18.4937 306.159L17.0683 302.928L20.0875 302.222L22.8148 302.413L26.0809 302.099L27.2033 301.695L30.402 301.919L32.7029 301.616L32.6243 302.009L34.465 302.121L34.6109 304.23L35.7557 304.734L36.6536 307.056L40.1666 307.179L40.4135 306.809L40.1891 305.755L41.4237 306.192L40.0881 305.026L41.8389 304.835L42.1644 302.839L42.4899 302.603L44.6336 302.895L47.3498 303.927L44.903 304.207L46.2723 304.589L47.7538 304.162L48.2926 304.577L48.0456 304.701L48.2589 305.183L48.9211 305.508L50.0659 305.833L50.2679 305.194H50.7393L50.3914 305.901L51.6372 306.484L49.8526 306.921L51.3342 308.021L49.7067 308.122L46.0029 309.591L47.9446 309.254L48.7415 308.638L49.3588 308.604L49.4037 308.918L50.672 308.548L50.9077 308.705L50.5148 309.21L52.1984 309.367L52.2882 309.826L53.1749 310.107L53.0177 310.735L53.6126 310.241L54.8247 310.185L55.4308 310.914L55.1614 311.408L55.7002 311.296L55.6553 311.565L55.6441 311.083L55.9247 311.139L56.5083 311.756L56.3624 311.991L56.744 311.935L58.1694 313.102L58.3378 313.831L58.652 313.696L58.8653 313.988V314.526L59.606 314.975L59.7295 315.401L59.3367 315.491L59.2132 316.197L59.5499 316.332L59.3142 316.624L59.505 317.229L59.7856 316.724L60.6274 316.949L60.8182 317.42L60.56 318.104L59.954 318.272L60.7621 318.598L59.7856 318.373L59.1459 318.923L59.4489 319.024L59.2693 319.405L59.5948 320.011L59.3142 320.684L59.7183 320.37L60.1111 320.762L59.3142 321.289L59.8193 321.334L60.3692 322.725L60.1897 323.017L59.8866 322.691L59.8978 323.903L59.0673 324.654L59.3816 325.619L58.753 325.899L57.8439 325.675L58.2031 326.359L56.8338 326.225L57.4848 327.01L56.845 326.718L56.2053 326.92L57.9337 327.739L57.5409 328.131L57.7653 329.388L58.2816 329.242L58.2143 329.96L58.7418 329.769L59.1459 330.307L58.7755 330.352L59.5499 331.16L59.0673 331.35L59.4265 332.562L60.2794 332.696L59.9652 333.381L60.2346 333.504L60.1335 334.009L60.3692 333.807L60.1784 334.222L60.6049 333.728L60.4815 334.11L59.4152 334.816L60.156 334.962L60.5825 335.994L60.6835 335.691L61.0875 336.005L60.9865 336.42L61.6487 337.194L61.009 338.338Z\" />\n                </mask>\n                <path d=\"M61.009 338.338L59.9091 338.865L60.5488 339.179L60.7621 340.133L61.3232 340.469L61.2896 340.985L61.761 341.445L60.2346 343.105L61.1212 343.744L61.6151 343.542L61.7946 344.9L62.367 345.191L63.0068 344.956L63.1303 346.167L64.7689 346.38L64.6455 347.154L65.2852 347.39L66.3851 346.604L66.8004 346.885L67.1596 346.38L66.8228 345.64L67.9228 346.167L68.1472 346.75L68.6186 346.728L69.09 347.333L69.4267 347.906L69.1798 348.466L69.8308 349.341L70.493 348.758L72.0082 350.261L71.5929 350.687V351.349L72.2439 351.629L72.1092 352.672L72.3786 353.054L73.7928 353.099L73.8601 353.435L74.9937 353.738L74.7804 354.433L75.409 356.699L73.355 359.638L71.9633 359.245L71.3235 359.66L69.8084 359.425L72.1092 362.666L72.2102 364.113L73.0632 364.988L73.1867 365.571L72.5245 366.446L72.7938 366.726L73.7815 366.266L73.6805 366.917L72.6704 368.241L72.8949 370.248L75.3753 373.804L78.9556 375.991L81.2341 375.587L82.0309 375.89L82.9513 377.337L83.0635 380.309L82.4462 382.294L81.8738 382.328L81.9524 383.023L82.6707 383.91L83.7594 383.73L84.1073 384.089L85.0164 386.321L84.9379 387.207L85.7572 387.858L85.8021 389.08L85.0164 391.066L85.6562 391.727L85.6113 392.086L84.5338 393.354L84.4553 395.72L81.279 396.169L80.5719 395.799L80.1005 395.002L79.6291 395.036L78.6975 394.363L77.7098 394.789L77.1599 395.754L75.5773 395.148L73.7815 397.997L67.4065 401.575L66.8228 400.958L65.925 402.091L65.6107 402.024L64.7801 401.441L64.8026 399.657L63.2537 400.599L60.4141 399.152L58.0235 400.79L57.7541 402.315L55.6328 400.364L54.9819 400.667L52.1198 400.308L49.6843 401.642L49.9312 402.327L51.1546 403.28L52.1086 402.73L53.1524 403.201L52.2433 405.456L51.9515 405.77L50.5261 404.828L49.4598 404.704V405.434L48.5844 405.882L47.462 407.105L46.9569 408.585L46.2498 409L45.5652 408.843L44.1622 410.728L42.9501 410.649L22.2536 402.585L21.2996 402.528L20.1772 401.777H18.8529L18.2917 400.812L17.2142 400.364L16.3387 399.298L17.7866 397.324L17.7978 396.73L18.8753 396.517L20.7384 393.421L22.0965 392.165L22.4444 391.133L24.3525 389.114L24.33 388.643L26.7206 385.603L27.091 384.526L29.5041 382.62L29.3919 382.238L31.154 380.264L34.5323 372.2L33.5334 370.091L32.0856 368.678L31.704 366.67L28.1124 363.406L25.8677 362.453L21.6475 357.17L23.8249 355.903L25.8115 352.392L26.2717 350.631L25.6095 349.072L25.9238 348.646L25.6993 347.995L24.7677 347.58L23.926 346.47L22.7587 346.066L22.22 345.225L22.3434 344.193L21.872 342.342L21.973 341.714L22.9495 340.593L22.1526 339.179L22.523 338.26L22.1638 337.968L19.7956 338.013L19.2569 337.452L18.8416 336.117L18.5498 334.222L18.7855 332.887L19.661 332.304L20.5252 332.349L20.918 332.035L20.4129 331.395L20.9629 330.319L20.817 329.96L19.0437 329.679L18.6508 329.231L19.9303 327.638L19.7171 325.092L20.8058 323.174L19.6497 321.951L21.8383 320.74L22.7924 321.211L22.8148 319.854L22.3883 316.511L21.0527 311.901L19.1222 308.851L18.4937 306.159L17.0683 302.928L20.0875 302.222L22.8148 302.413L26.0809 302.099L27.2033 301.695L30.402 301.919L32.7029 301.616L32.6243 302.009L34.465 302.121L34.6109 304.23L35.7557 304.734L36.6536 307.056L40.1666 307.179L40.4135 306.809L40.1891 305.755L41.4237 306.192L40.0881 305.026L41.8389 304.835L42.1644 302.839L42.4899 302.603L44.6336 302.895L47.3498 303.927L44.903 304.207L46.2723 304.589L47.7538 304.162L48.2926 304.577L48.0456 304.701L48.2589 305.183L48.9211 305.508L50.0659 305.833L50.2679 305.194H50.7393L50.3914 305.901L51.6372 306.484L49.8526 306.921L51.3342 308.021L49.7067 308.122L46.0029 309.591L47.9446 309.254L48.7415 308.638L49.3588 308.604L49.4037 308.918L50.672 308.548L50.9077 308.705L50.5148 309.21L52.1984 309.367L52.2882 309.826L53.1749 310.107L53.0177 310.735L53.6126 310.241L54.8247 310.185L55.4308 310.914L55.1614 311.408L55.7002 311.296L55.6553 311.565L55.6441 311.083L55.9247 311.139L56.5083 311.756L56.3624 311.991L56.744 311.935L58.1694 313.102L58.3378 313.831L58.652 313.696L58.8653 313.988V314.526L59.606 314.975L59.7295 315.401L59.3367 315.491L59.2132 316.197L59.5499 316.332L59.3142 316.624L59.505 317.229L59.7856 316.724L60.6274 316.949L60.8182 317.42L60.56 318.104L59.954 318.272L60.7621 318.598L59.7856 318.373L59.1459 318.923L59.4489 319.024L59.2693 319.405L59.5948 320.011L59.3142 320.684L59.7183 320.37L60.1111 320.762L59.3142 321.289L59.8193 321.334L60.3692 322.725L60.1897 323.017L59.8866 322.691L59.8978 323.903L59.0673 324.654L59.3816 325.619L58.753 325.899L57.8439 325.675L58.2031 326.359L56.8338 326.225L57.4848 327.01L56.845 326.718L56.2053 326.92L57.9337 327.739L57.5409 328.131L57.7653 329.388L58.2816 329.242L58.2143 329.96L58.7418 329.769L59.1459 330.307L58.7755 330.352L59.5499 331.16L59.0673 331.35L59.4265 332.562L60.2794 332.696L59.9652 333.381L60.2346 333.504L60.1335 334.009L60.3692 333.807L60.1784 334.222L60.6049 333.728L60.4815 334.11L59.4152 334.816L60.156 334.962L60.5825 335.994L60.6835 335.691L61.0875 336.005L60.9865 336.42L61.6487 337.194L61.009 338.338Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-31-inside-19_10718_32869)\" />\n                <mask id=\"path-32-inside-20_10718_32869\" fill=\"white\">\n                    <path d=\"M493.693 490.06L494.692 491.204L495.197 491.159L496.229 491.978L496.353 493.447L497.161 494.188L496.925 494.861L497.812 494.973L498.238 496.173L499.417 496.038L499.776 496.408L500.225 495.5L501.19 495.231L501.92 496.005L503.906 494.838L505.713 494.569L506.252 493.918L506.521 495.107L508.182 495.803L508.564 497.037L508.362 497.833L510.18 497.362L510.427 498.382L511.437 498.27L512.043 498.932L511.561 501.22L514.008 503.138L514.748 506.077L516.454 509.072L516.466 510.305L515.354 512.335L515.411 513.132L516.387 515.184L516.51 516.429L518.721 517.338L519.541 518.617L519.496 519.469L518.037 521.207L516.847 521.903L516.23 521.88L516.398 522.194L516.118 522.206V521.869L515.545 522.284L516.005 524.023L515.916 525.077L514.67 526.681L513.031 527.836L512.694 528.61L511.92 528.924L510.315 530.495L508.317 534.364L507.038 534.252L506.746 534.768L506.084 535.015L505.354 534.633L505.074 534.858L505.264 536.204L504.557 536.899L504.333 537.897L505.163 539.838L504.827 540.219L503.704 540.455L502.458 542.193L501.628 542.72L500.169 542.014L498.485 542.687L497.98 542.473L498.216 541.318L496.79 541.677L495.949 542.328L494.894 542.44L494.523 542.35L494.108 542.877L493.951 544.19L493.345 545.076L491.818 545.648L491.212 545.188L491.235 544.851L489.933 544.347L489.102 543.382L488.036 543.079L487.767 542.507L487.789 541.845L488.586 541.599L489.461 540.107L489.349 539.49L488.631 539.737L487.879 538.974L488.99 536.024L490.763 535.575L491.953 534.084L492.694 533.938L494.187 532.884L494.063 531.695L495.96 530.461L497.621 528.79L496.734 527.847L496.88 527.309L497.554 526.905L497.857 526.199L498.395 526.087L498.16 525.369L497.352 524.999L496.734 523.855L496.218 523.944L495.937 523.44L496.128 522.497L497.071 522.004L497.004 521.409L496.24 520.804L496.869 520.501L496.633 519.929L495.623 518.403L494.905 519.11L494.781 518.706L495.399 516.923L495.107 515.947L496.106 514.994L496.858 513.278L498.418 512.896L497.89 510.574L496.869 510.451L497.138 508.701L498.25 507.412L497.935 505.415L497.7 505.135L496.364 505.763L495.87 505.449L495.421 504.316L494.433 504.607L493.872 505.651L493.345 505.875L491.908 505.056L491.628 504.574L492.974 503.878L493.356 500.525L493.67 499.717L494.445 499.358L494.737 498.315L493.827 497.496L492.997 495.893L492.38 492.315L492.402 491.44L493.199 491.058L493.693 490.06Z\" />\n                </mask>\n                <path d=\"M493.693 490.06L494.692 491.204L495.197 491.159L496.229 491.978L496.353 493.447L497.161 494.188L496.925 494.861L497.812 494.973L498.238 496.173L499.417 496.038L499.776 496.408L500.225 495.5L501.19 495.231L501.92 496.005L503.906 494.838L505.713 494.569L506.252 493.918L506.521 495.107L508.182 495.803L508.564 497.037L508.362 497.833L510.18 497.362L510.427 498.382L511.437 498.27L512.043 498.932L511.561 501.22L514.008 503.138L514.748 506.077L516.454 509.072L516.466 510.305L515.354 512.335L515.411 513.132L516.387 515.184L516.51 516.429L518.721 517.338L519.541 518.617L519.496 519.469L518.037 521.207L516.847 521.903L516.23 521.88L516.398 522.194L516.118 522.206V521.869L515.545 522.284L516.005 524.023L515.916 525.077L514.67 526.681L513.031 527.836L512.694 528.61L511.92 528.924L510.315 530.495L508.317 534.364L507.038 534.252L506.746 534.768L506.084 535.015L505.354 534.633L505.074 534.858L505.264 536.204L504.557 536.899L504.333 537.897L505.163 539.838L504.827 540.219L503.704 540.455L502.458 542.193L501.628 542.72L500.169 542.014L498.485 542.687L497.98 542.473L498.216 541.318L496.79 541.677L495.949 542.328L494.894 542.44L494.523 542.35L494.108 542.877L493.951 544.19L493.345 545.076L491.818 545.648L491.212 545.188L491.235 544.851L489.933 544.347L489.102 543.382L488.036 543.079L487.767 542.507L487.789 541.845L488.586 541.599L489.461 540.107L489.349 539.49L488.631 539.737L487.879 538.974L488.99 536.024L490.763 535.575L491.953 534.084L492.694 533.938L494.187 532.884L494.063 531.695L495.96 530.461L497.621 528.79L496.734 527.847L496.88 527.309L497.554 526.905L497.857 526.199L498.395 526.087L498.16 525.369L497.352 524.999L496.734 523.855L496.218 523.944L495.937 523.44L496.128 522.497L497.071 522.004L497.004 521.409L496.24 520.804L496.869 520.501L496.633 519.929L495.623 518.403L494.905 519.11L494.781 518.706L495.399 516.923L495.107 515.947L496.106 514.994L496.858 513.278L498.418 512.896L497.89 510.574L496.869 510.451L497.138 508.701L498.25 507.412L497.935 505.415L497.7 505.135L496.364 505.763L495.87 505.449L495.421 504.316L494.433 504.607L493.872 505.651L493.345 505.875L491.908 505.056L491.628 504.574L492.974 503.878L493.356 500.525L493.67 499.717L494.445 499.358L494.737 498.315L493.827 497.496L492.997 495.893L492.38 492.315L492.402 491.44L493.199 491.058L493.693 490.06Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-32-inside-20_10718_32869)\" />\n                <mask id=\"path-33-inside-21_10718_32869\" fill=\"white\">\n                    <path d=\"M132.302 592.8L132.167 591.297L132.481 590.265L134.928 588.807L134.917 587.865L135.736 587.461L136.937 588.067L137.7 588.033L138.598 586.99L138.868 586.418L137.274 585.611L137.476 584.68L138.082 583.951L139.575 584.366L139.35 585.566L139.631 585.891L140.809 585.353L141.213 585.801L141.842 585.757L142.358 585.476L142.055 584.882L142.257 584.478L142.987 584.467L144.603 585.185L145.175 584.904L147.184 586.508L147.925 586.216L148.677 586.474L148.565 588.426L150.742 591.152L153.638 593.484L155.86 591.039L157.106 591.409L156.814 591.903L155.782 592.374L154.85 593.563L157.51 598.476L158.139 598.711L158.711 599.889L159.587 599.979L160.72 601.594L160.406 602.603L159.048 603.198L158.588 603.927L158.509 605.172L156.938 605.273L155.434 606.708L156.567 607.37L157.488 607.437L157.836 607.931L157.881 609.142L158.229 609.389L160.473 608.896L160.731 609.367L158.801 613.472L157.757 614.919L160.181 614.975L161.618 614.425L163.223 614.706L162.639 615.749L163.391 616.422L162.74 620.258L161.652 618.99L162.078 620.46L161.641 620.661L161.798 621.189L161.169 622.097L160.698 621.929L159.542 623.824L158.992 623.163L158.397 623.813L158.273 623.421L157.78 623.297L156.59 623.779L155.007 623.118L153.66 621.985L149.182 621.245L148.217 621.547L147.14 619.966L146.208 619.304L142.111 617.409L141.483 616.725L137.936 615.749L136.196 613.898L134.85 611.408L132.291 610.421L130.394 610.23L129.361 609.221L126.757 608.155L125.972 607.381L124.905 608.929L123.951 609.131L122.908 610.062L121.011 610.309L121.168 608.626L120.36 608.391L119.956 608.447L120.18 609.266L119.698 609.737L119.855 610.6L119.541 610.735L118.081 610.006L116.14 609.871L116.286 609.412L115.657 608.2L115.949 607.785L116.622 607.538L117.419 608.032L118.239 607.426L118.138 606.361L118.912 605.946L119.888 606.192L120.281 605.811L119.338 604.432L118.968 603.501L119.159 603.31L121.998 604.51L122.874 605.407L124.176 606.002L126.331 605.407L129.833 608.211L131.606 608.178L132.74 605.407L133.312 605.878L133.357 606.72L134.21 606.271L134.389 605.968L133.795 604.544L134.143 603.613L133.211 603.276L135.343 600.371L135.837 600.405L136.746 599.564L136.814 597.993L137.364 596.311L137.465 593.103L136.556 592.554L136.78 592.094L136.118 591.982L135.837 593.193L134.446 593.742L134.12 595.044L133.716 595.021L133.054 594.696L132.302 592.8Z\" />\n                </mask>\n                <path d=\"M132.302 592.8L132.167 591.297L132.481 590.265L134.928 588.807L134.917 587.865L135.736 587.461L136.937 588.067L137.7 588.033L138.598 586.99L138.868 586.418L137.274 585.611L137.476 584.68L138.082 583.951L139.575 584.366L139.35 585.566L139.631 585.891L140.809 585.353L141.213 585.801L141.842 585.757L142.358 585.476L142.055 584.882L142.257 584.478L142.987 584.467L144.603 585.185L145.175 584.904L147.184 586.508L147.925 586.216L148.677 586.474L148.565 588.426L150.742 591.152L153.638 593.484L155.86 591.039L157.106 591.409L156.814 591.903L155.782 592.374L154.85 593.563L157.51 598.476L158.139 598.711L158.711 599.889L159.587 599.979L160.72 601.594L160.406 602.603L159.048 603.198L158.588 603.927L158.509 605.172L156.938 605.273L155.434 606.708L156.567 607.37L157.488 607.437L157.836 607.931L157.881 609.142L158.229 609.389L160.473 608.896L160.731 609.367L158.801 613.472L157.757 614.919L160.181 614.975L161.618 614.425L163.223 614.706L162.639 615.749L163.391 616.422L162.74 620.258L161.652 618.99L162.078 620.46L161.641 620.661L161.798 621.189L161.169 622.097L160.698 621.929L159.542 623.824L158.992 623.163L158.397 623.813L158.273 623.421L157.78 623.297L156.59 623.779L155.007 623.118L153.66 621.985L149.182 621.245L148.217 621.547L147.14 619.966L146.208 619.304L142.111 617.409L141.483 616.725L137.936 615.749L136.196 613.898L134.85 611.408L132.291 610.421L130.394 610.23L129.361 609.221L126.757 608.155L125.972 607.381L124.905 608.929L123.951 609.131L122.908 610.062L121.011 610.309L121.168 608.626L120.36 608.391L119.956 608.447L120.18 609.266L119.698 609.737L119.855 610.6L119.541 610.735L118.081 610.006L116.14 609.871L116.286 609.412L115.657 608.2L115.949 607.785L116.622 607.538L117.419 608.032L118.239 607.426L118.138 606.361L118.912 605.946L119.888 606.192L120.281 605.811L119.338 604.432L118.968 603.501L119.159 603.31L121.998 604.51L122.874 605.407L124.176 606.002L126.331 605.407L129.833 608.211L131.606 608.178L132.74 605.407L133.312 605.878L133.357 606.72L134.21 606.271L134.389 605.968L133.795 604.544L134.143 603.613L133.211 603.276L135.343 600.371L135.837 600.405L136.746 599.564L136.814 597.993L137.364 596.311L137.465 593.103L136.556 592.554L136.78 592.094L136.118 591.982L135.837 593.193L134.446 593.742L134.12 595.044L133.716 595.021L133.054 594.696L132.302 592.8Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-33-inside-21_10718_32869)\" />\n                <mask id=\"path-34-inside-22_10718_32869\" fill=\"white\">\n                    <path d=\"M279.826 320.482L281.745 322.4L282.834 324.666L283.013 326.303L284.888 327.817L286.369 328.445L285.909 334.334L285.303 335.781L286.358 338.304L285.64 340.133L283.844 341.378L284.091 342.354L286.459 343.913L287.918 343.161L290.87 344.507L291.465 346.75L292.879 347.995L294.327 347.67L296.246 346.122L299.355 346.145L300.107 345.505L300.96 345.707L302.722 344.832L305.461 344.473L307.964 343.509L312.958 342.914L314.754 344.35L318.155 343.284L318.727 343.756L319.221 345.034L318.278 347.95L318.592 348.937L319.367 349.745L321.398 350.295L321.825 351.618L325.506 351.102L326.067 352.145L328.784 350.351L331.747 347.648L335.237 349.543L335.327 347.928L336.045 346.795L335.271 345.236L336.629 344.81L338.402 345.012L339.424 346.156L342.342 346.032L342.723 347.098L346.416 346.537L347.763 348.197L349.772 349.308L350.153 350.003L350.254 351.035L349.648 352.134L348.952 352.572L350.872 356.206L351.242 358.247L354.654 358.348L355.26 358.763L356.237 360.501L356.315 363.35L357.224 367.175L360.524 366.345L361.579 365.414L364.385 365.773L365.833 365.493L367.326 363.35L367.775 363.227L369.076 363.339L369.593 364.853L370.199 365.179L371.276 366.996L372.129 367.489L377.281 367.5L378.37 368.072L380.177 370.091L384.285 369.788L386.26 369.048L390.379 368.521L393.937 370.136L394.7 371.19L395.261 371.179L396.642 370.058L397.966 370.002L399.773 370.618L400.391 371.224L401.277 373.422L403.174 375.453L406.788 378.268L408.494 379.064L410.267 378.234L414.532 377.539L417.451 378.133L422.894 377.887L423.893 373.938L426.037 373.4L428.259 371.314L428.225 370.977L429.056 370.865L429.437 369.16L431.851 368.229L432.142 368.285L432.771 369.833L434.959 372.11L434.668 373.052L435.049 373.557L436.385 374.421L437.215 374.073L438.327 375.755L439.09 376.204L439.73 376.025L440.156 374.544L440.616 373.927L441.323 373.804L443.512 375.038L446.655 374.948L446.711 376.888L448.944 377.595L449.157 378.874L450.134 379.625L451.986 380.175L453.22 378.907L453.344 379.827L454.792 378.728L455.768 379.132L457.272 381.599L458.159 381.509L458.855 382.306L459.001 383.45L460.527 385.009L460.516 388.25L461.896 391.077L462.536 391.66L464.051 391.997L466.139 393.208L467.665 393.387L469.697 395.249L471.796 395.731L472.188 397.077L470.853 397.403L469.686 398.334L469.753 400.577L460.931 405.613L458.417 407.464L455.948 407.621L452.502 404.671L449.909 404.862L444.556 408.944L443.647 409.909L443.523 411.558L442.266 412.892L441.514 412.993L439.191 411.064L436.991 411.008L436.071 411.412L432.894 411.086L432.614 409.292L430.784 408.428L430.021 408.372L428.977 409.068L426.733 409.46L425.487 410.335L421.817 410.346L419.774 410.806L418.584 410.526L418.135 408.35L416.946 408.069L416.238 408.013L415.138 409.146L413.938 408.54L413.567 407.778L412.377 408.709L408.999 408.361L408.314 409.045L406.261 408.294L402.927 408.204L401.288 407.565L400.783 407.755L400.492 408.361L400.581 409.651L400.065 410.907L400.638 412.466L400.48 412.892L398.909 413.891L398.685 415.708L398.976 417.614L397.798 419.981L398.157 421.619L397.394 428.146L393.387 428.842L392.399 430.446L391.501 430.614L390.604 432.622L388.898 434.169L389.605 436.861L389.403 437.86L385.396 441.696L385.093 442.458L384.015 441.74L382.904 441.987L381.019 441.572L376.933 441.639L375.474 440.069L374.352 440.361L373.353 439.464L370.603 440.338L368.628 439.766L367.573 439.273L368.65 438.028L367.045 436.536L367.73 435.594L367.55 434.977L366.473 434.641L365.07 435.471L363.487 433.979L363.341 432.33L360.457 428.831L358.807 428.629L357.673 427.372L354.766 425.354L353.296 423.727L351.612 424.524L350.849 423.671L348.447 424.322L346.259 423.391L344.833 422.269L341.32 423.525L341.275 422.437L340.153 421.91L338.672 422.056L337.639 422.908L338.907 425.006L334.642 428.483L332.543 428.472L332.072 431.175L331.028 433.149L328.323 434.181L325.742 434.573L324.676 436.289L320.904 438.331L320.557 437.624L319.827 437.411L318.132 438.813L318.188 442.312L313.991 443.636L311.847 443.232L311.331 443.726L311.028 442.324L309.344 441.718L307.818 440.002L305.719 433.317L305.472 432.992L304.653 433.059L304.305 431.635L302.43 431.713L299.232 430.648L296.717 430.58L295.741 430.165L294.821 429.178L294.226 427.933L294.237 423.537L293.597 419.824L293.047 418.792L289.467 417.311L290.006 416.044L289.714 414.777L286.897 409.729L286.044 406.768L286.695 404.626L286.538 403.673L285.112 401.519L272.71 393.421L266.649 392.333L263.787 392.939L263.125 392.187L263.147 390.471L262.833 390.011L259.388 388.497L258.927 388.957L258.781 385.244L259.118 384.74L259.096 383.483L260.297 382.788L260.263 380.713L259.691 379.513L259.107 379.434L258.793 378.963L258.153 375.969L259.062 374.925L259.084 373.467L257.412 371.65L257.064 370.338L257.749 369.284L257.367 367.444L258.041 366.468L257.693 365.38L258.31 364.898L258.175 363.99L258.961 360.591L259.287 357.394L259.017 356.149L259.511 355.835L260.005 354.175L261.251 353.301L261.542 352.157L262.407 351.293L261.947 349.992L260.645 349.947L260.33 349.106L260.308 344.541L259.174 343.318L260.095 341.995L260.633 340.346L261.183 340.077L260.263 339.034L260.33 337.766L261.284 337.486L261.464 336.375L262.597 335.983L262.721 335.411L263.551 335.299L263.529 333.751L264.775 332.629L266.952 333.482L267.109 334.368L267.839 334.738L268.041 335.826L269.388 334.996L269.579 333.897L271.913 332.539L272.261 331.272L273.103 330.913L274.281 329.533L273.911 327.873L274.091 327.099L276.313 323.364L277.177 323.006L277.233 322.557L278.546 321.189L279.826 320.482Z\" />\n                </mask>\n                <path d=\"M279.826 320.482L281.745 322.4L282.834 324.666L283.013 326.303L284.888 327.817L286.369 328.445L285.909 334.334L285.303 335.781L286.358 338.304L285.64 340.133L283.844 341.378L284.091 342.354L286.459 343.913L287.918 343.161L290.87 344.507L291.465 346.75L292.879 347.995L294.327 347.67L296.246 346.122L299.355 346.145L300.107 345.505L300.96 345.707L302.722 344.832L305.461 344.473L307.964 343.509L312.958 342.914L314.754 344.35L318.155 343.284L318.727 343.756L319.221 345.034L318.278 347.95L318.592 348.937L319.367 349.745L321.398 350.295L321.825 351.618L325.506 351.102L326.067 352.145L328.784 350.351L331.747 347.648L335.237 349.543L335.327 347.928L336.045 346.795L335.271 345.236L336.629 344.81L338.402 345.012L339.424 346.156L342.342 346.032L342.723 347.098L346.416 346.537L347.763 348.197L349.772 349.308L350.153 350.003L350.254 351.035L349.648 352.134L348.952 352.572L350.872 356.206L351.242 358.247L354.654 358.348L355.26 358.763L356.237 360.501L356.315 363.35L357.224 367.175L360.524 366.345L361.579 365.414L364.385 365.773L365.833 365.493L367.326 363.35L367.775 363.227L369.076 363.339L369.593 364.853L370.199 365.179L371.276 366.996L372.129 367.489L377.281 367.5L378.37 368.072L380.177 370.091L384.285 369.788L386.26 369.048L390.379 368.521L393.937 370.136L394.7 371.19L395.261 371.179L396.642 370.058L397.966 370.002L399.773 370.618L400.391 371.224L401.277 373.422L403.174 375.453L406.788 378.268L408.494 379.064L410.267 378.234L414.532 377.539L417.451 378.133L422.894 377.887L423.893 373.938L426.037 373.4L428.259 371.314L428.225 370.977L429.056 370.865L429.437 369.16L431.851 368.229L432.142 368.285L432.771 369.833L434.959 372.11L434.668 373.052L435.049 373.557L436.385 374.421L437.215 374.073L438.327 375.755L439.09 376.204L439.73 376.025L440.156 374.544L440.616 373.927L441.323 373.804L443.512 375.038L446.655 374.948L446.711 376.888L448.944 377.595L449.157 378.874L450.134 379.625L451.986 380.175L453.22 378.907L453.344 379.827L454.792 378.728L455.768 379.132L457.272 381.599L458.159 381.509L458.855 382.306L459.001 383.45L460.527 385.009L460.516 388.25L461.896 391.077L462.536 391.66L464.051 391.997L466.139 393.208L467.665 393.387L469.697 395.249L471.796 395.731L472.188 397.077L470.853 397.403L469.686 398.334L469.753 400.577L460.931 405.613L458.417 407.464L455.948 407.621L452.502 404.671L449.909 404.862L444.556 408.944L443.647 409.909L443.523 411.558L442.266 412.892L441.514 412.993L439.191 411.064L436.991 411.008L436.071 411.412L432.894 411.086L432.614 409.292L430.784 408.428L430.021 408.372L428.977 409.068L426.733 409.46L425.487 410.335L421.817 410.346L419.774 410.806L418.584 410.526L418.135 408.35L416.946 408.069L416.238 408.013L415.138 409.146L413.938 408.54L413.567 407.778L412.377 408.709L408.999 408.361L408.314 409.045L406.261 408.294L402.927 408.204L401.288 407.565L400.783 407.755L400.492 408.361L400.581 409.651L400.065 410.907L400.638 412.466L400.48 412.892L398.909 413.891L398.685 415.708L398.976 417.614L397.798 419.981L398.157 421.619L397.394 428.146L393.387 428.842L392.399 430.446L391.501 430.614L390.604 432.622L388.898 434.169L389.605 436.861L389.403 437.86L385.396 441.696L385.093 442.458L384.015 441.74L382.904 441.987L381.019 441.572L376.933 441.639L375.474 440.069L374.352 440.361L373.353 439.464L370.603 440.338L368.628 439.766L367.573 439.273L368.65 438.028L367.045 436.536L367.73 435.594L367.55 434.977L366.473 434.641L365.07 435.471L363.487 433.979L363.341 432.33L360.457 428.831L358.807 428.629L357.673 427.372L354.766 425.354L353.296 423.727L351.612 424.524L350.849 423.671L348.447 424.322L346.259 423.391L344.833 422.269L341.32 423.525L341.275 422.437L340.153 421.91L338.672 422.056L337.639 422.908L338.907 425.006L334.642 428.483L332.543 428.472L332.072 431.175L331.028 433.149L328.323 434.181L325.742 434.573L324.676 436.289L320.904 438.331L320.557 437.624L319.827 437.411L318.132 438.813L318.188 442.312L313.991 443.636L311.847 443.232L311.331 443.726L311.028 442.324L309.344 441.718L307.818 440.002L305.719 433.317L305.472 432.992L304.653 433.059L304.305 431.635L302.43 431.713L299.232 430.648L296.717 430.58L295.741 430.165L294.821 429.178L294.226 427.933L294.237 423.537L293.597 419.824L293.047 418.792L289.467 417.311L290.006 416.044L289.714 414.777L286.897 409.729L286.044 406.768L286.695 404.626L286.538 403.673L285.112 401.519L272.71 393.421L266.649 392.333L263.787 392.939L263.125 392.187L263.147 390.471L262.833 390.011L259.388 388.497L258.927 388.957L258.781 385.244L259.118 384.74L259.096 383.483L260.297 382.788L260.263 380.713L259.691 379.513L259.107 379.434L258.793 378.963L258.153 375.969L259.062 374.925L259.084 373.467L257.412 371.65L257.064 370.338L257.749 369.284L257.367 367.444L258.041 366.468L257.693 365.38L258.31 364.898L258.175 363.99L258.961 360.591L259.287 357.394L259.017 356.149L259.511 355.835L260.005 354.175L261.251 353.301L261.542 352.157L262.407 351.293L261.947 349.992L260.645 349.947L260.33 349.106L260.308 344.541L259.174 343.318L260.095 341.995L260.633 340.346L261.183 340.077L260.263 339.034L260.33 337.766L261.284 337.486L261.464 336.375L262.597 335.983L262.721 335.411L263.551 335.299L263.529 333.751L264.775 332.629L266.952 333.482L267.109 334.368L267.839 334.738L268.041 335.826L269.388 334.996L269.579 333.897L271.913 332.539L272.261 331.272L273.103 330.913L274.281 329.533L273.911 327.873L274.091 327.099L276.313 323.364L277.177 323.006L277.233 322.557L278.546 321.189L279.826 320.482Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-34-inside-22_10718_32869)\" />\n                <mask id=\"path-35-inside-23_10718_32869\" fill=\"white\">\n                    <path d=\"M174.144 312.474L195.256 298.992L195.087 296.39L195.974 296.3L200.183 292.901L219.735 294.617L230.812 294.931L273.462 294.438L274.36 294.741L275.696 293.922L276.953 294.124L277.918 292.408L286.931 286.104L287.122 283.278L288.446 280.384L290.455 278.354L291.735 277.972L293.429 278.78L293.34 277.681L295.337 275.269L294.9 272.892L298.862 270.592L299.176 269.706L300.343 269.246L300.13 266.24L301.589 264.984L303.104 264.962L303.968 264.58L305.293 265.388L306.034 265.444L307.38 264.625L307.369 265.612L306.157 267.34L306.539 274.024L308.099 275.482L309.434 275.382L310.568 274.697L312.083 274.608L312.554 275.673L312.431 276.615L311.724 277.591L313.161 278.847L313.666 280.496L313.161 281.012L311.376 280.552L310.826 280.844L310.108 282.089L312.027 282.807L312.734 284.164L312.622 285.084L311.892 285.981L309.513 286.968L308.177 288.964L306.034 290.535L304.956 292.475L303.912 293.047L304.429 296.502L302.532 298.128L301.533 298.162L300.265 298.767L299.962 300.035L298.379 300.82L297.728 301.773L295.618 301.762L293.889 303.916L292.285 305.071L290.545 305.553L289.883 307.55L289.31 308.2L289.984 310.085L289.176 309.703L287.896 310.948L287.503 312.429L286.897 312.945L286.661 313.831L286.044 314.19L286.538 315.323L285.685 316.399L285.573 317.465L279.826 320.482L278.547 321.189L277.234 322.557L277.177 323.006L276.313 323.365L274.091 327.1L273.911 327.873L274.282 329.533L273.103 330.913L272.261 331.272L271.914 332.539L269.579 333.897L269.388 334.996L268.041 335.826L267.839 334.738L267.11 334.368L266.953 333.482L264.775 332.629L263.529 333.751L263.552 335.299L262.721 335.411L262.598 335.983L261.464 336.375L261.285 337.486L260.331 337.766L260.263 339.034L261.184 340.077L260.634 340.346L260.095 341.995L259.175 343.318L260.308 344.541L260.331 349.106L260.645 349.947L261.947 349.992L262.407 351.293L261.543 352.157L261.251 353.301L260.005 354.175L259.511 355.835L259.018 356.15L259.287 357.395L258.961 360.591L258.176 363.99L258.31 364.898L257.693 365.38L258.041 366.468L257.368 367.444L257.749 369.284L257.065 370.338L257.413 371.65L259.085 373.467L259.062 374.925L258.153 375.969L258.793 378.963L259.107 379.434L259.691 379.513L260.263 380.713L260.297 382.788L259.096 383.483L259.119 384.74L258.782 385.244L258.928 388.957L258.153 390.516L258.367 393.197L256.402 394.363L255.774 395.597L254.461 395.743L253.978 396.225L244.191 396.36L240.936 395.956L239.971 396.505L237.019 395.53L236.66 396.169L236.233 396.113L235.74 397.38L234.707 397.223L233.416 400.745L230.285 399.971L229.207 402.517L225.549 402.259L224.819 404.256L223.932 404.099L222.911 406.488L213.988 405.108L213.562 407.206L209.656 406.544L210.397 403.998L205.851 403.381L205.121 405.389L202.652 405.198L201.642 407.217L198.107 406.544L196.984 411.277L200.071 412.444L199.925 413.262L201.608 413.846L201.451 414.833L201.844 415.719L201.148 416.908L199.487 415.674L198.488 415.954L194.975 422L194.268 422.045L193.269 420.037L191.541 419.757L189.543 422.841L188.443 422.751L186.311 423.234L185.053 423.761L184.38 424.501L183.336 424.277L182.652 424.535L182.551 425.118L183.022 425.937L181.316 426.442L181.058 428.853L181.372 429.279L181.237 430.636L181.496 431.13L181.148 432.913L180.171 433.519L179.419 433.362L178.746 432.969L179.127 430.569L177.275 430.322L177.141 429.403L175.659 428.831L175.121 429.358L174.761 429.178L174.986 426.419L170.395 425.645L170.418 420.575L170.059 418.433L170.451 417.525L172.315 415.719L172.068 414.956L170.721 413.756L170.811 411.558L169.857 407.699L169.329 407.273L169.688 405.041L170.799 403.852L172.831 402.394L174.088 402.405L175.188 401.642L176.681 401.934L178.836 394.7L175.087 393.6L176.613 385.715L177.152 385.57L179.419 374.735L172.505 373.568L171.608 375.419L169.352 375.509L168.218 379.771L168.891 380.769L168.88 382.418L166.13 382.149L163.807 382.339L163.403 384.37L161.63 384.325L161.416 382.104L159.946 382.115L160.227 376.675L158.857 372.682L160.788 371.448L162.135 370.08L162.988 368.465L162.37 367.624L158.756 365.437L157.432 362.375L158.655 360.737L158.79 359.099L158.375 358.191L156.366 356.105L153.594 353.929L152.157 353.682L150.799 352.785L149.261 352.818L148.094 352.213L147.106 351.136L145.928 348.466L148.139 347.098L150.036 346.627L152.393 347.3L153.481 347.255L154.963 345.909L160.328 345.472L162.225 345.707L165.087 345.315L167.399 345.718L167.522 347.625L169.868 348.186L170.238 347.3L170.148 346.021L173.246 345.92L174.021 343.475L176.041 343.296L177.926 343.868L179.217 341.367L181.686 341.804L184.885 342.959L186.221 336.757L185.155 336.689L183.606 335.96L182.652 334.783L180.351 330.117L179.655 327.885L175.132 328.771L174.963 321.547L174.526 318.665L174.705 314.145L174.144 312.474Z\" />\n                </mask>\n                <path d=\"M174.144 312.474L195.256 298.992L195.087 296.39L195.974 296.3L200.183 292.901L219.735 294.617L230.812 294.931L273.462 294.438L274.36 294.741L275.696 293.922L276.953 294.124L277.918 292.408L286.931 286.104L287.122 283.278L288.446 280.384L290.455 278.354L291.735 277.972L293.429 278.78L293.34 277.681L295.337 275.269L294.9 272.892L298.862 270.592L299.176 269.706L300.343 269.246L300.13 266.24L301.589 264.984L303.104 264.962L303.968 264.58L305.293 265.388L306.034 265.444L307.38 264.625L307.369 265.612L306.157 267.34L306.539 274.024L308.099 275.482L309.434 275.382L310.568 274.697L312.083 274.608L312.554 275.673L312.431 276.615L311.724 277.591L313.161 278.847L313.666 280.496L313.161 281.012L311.376 280.552L310.826 280.844L310.108 282.089L312.027 282.807L312.734 284.164L312.622 285.084L311.892 285.981L309.513 286.968L308.177 288.964L306.034 290.535L304.956 292.475L303.912 293.047L304.429 296.502L302.532 298.128L301.533 298.162L300.265 298.767L299.962 300.035L298.379 300.82L297.728 301.773L295.618 301.762L293.889 303.916L292.285 305.071L290.545 305.553L289.883 307.55L289.31 308.2L289.984 310.085L289.176 309.703L287.896 310.948L287.503 312.429L286.897 312.945L286.661 313.831L286.044 314.19L286.538 315.323L285.685 316.399L285.573 317.465L279.826 320.482L278.547 321.189L277.234 322.557L277.177 323.006L276.313 323.365L274.091 327.1L273.911 327.873L274.282 329.533L273.103 330.913L272.261 331.272L271.914 332.539L269.579 333.897L269.388 334.996L268.041 335.826L267.839 334.738L267.11 334.368L266.953 333.482L264.775 332.629L263.529 333.751L263.552 335.299L262.721 335.411L262.598 335.983L261.464 336.375L261.285 337.486L260.331 337.766L260.263 339.034L261.184 340.077L260.634 340.346L260.095 341.995L259.175 343.318L260.308 344.541L260.331 349.106L260.645 349.947L261.947 349.992L262.407 351.293L261.543 352.157L261.251 353.301L260.005 354.175L259.511 355.835L259.018 356.15L259.287 357.395L258.961 360.591L258.176 363.99L258.31 364.898L257.693 365.38L258.041 366.468L257.368 367.444L257.749 369.284L257.065 370.338L257.413 371.65L259.085 373.467L259.062 374.925L258.153 375.969L258.793 378.963L259.107 379.434L259.691 379.513L260.263 380.713L260.297 382.788L259.096 383.483L259.119 384.74L258.782 385.244L258.928 388.957L258.153 390.516L258.367 393.197L256.402 394.363L255.774 395.597L254.461 395.743L253.978 396.225L244.191 396.36L240.936 395.956L239.971 396.505L237.019 395.53L236.66 396.169L236.233 396.113L235.74 397.38L234.707 397.223L233.416 400.745L230.285 399.971L229.207 402.517L225.549 402.259L224.819 404.256L223.932 404.099L222.911 406.488L213.988 405.108L213.562 407.206L209.656 406.544L210.397 403.998L205.851 403.381L205.121 405.389L202.652 405.198L201.642 407.217L198.107 406.544L196.984 411.277L200.071 412.444L199.925 413.262L201.608 413.846L201.451 414.833L201.844 415.719L201.148 416.908L199.487 415.674L198.488 415.954L194.975 422L194.268 422.045L193.269 420.037L191.541 419.757L189.543 422.841L188.443 422.751L186.311 423.234L185.053 423.761L184.38 424.501L183.336 424.277L182.652 424.535L182.551 425.118L183.022 425.937L181.316 426.442L181.058 428.853L181.372 429.279L181.237 430.636L181.496 431.13L181.148 432.913L180.171 433.519L179.419 433.362L178.746 432.969L179.127 430.569L177.275 430.322L177.141 429.403L175.659 428.831L175.121 429.358L174.761 429.178L174.986 426.419L170.395 425.645L170.418 420.575L170.059 418.433L170.451 417.525L172.315 415.719L172.068 414.956L170.721 413.756L170.811 411.558L169.857 407.699L169.329 407.273L169.688 405.041L170.799 403.852L172.831 402.394L174.088 402.405L175.188 401.642L176.681 401.934L178.836 394.7L175.087 393.6L176.613 385.715L177.152 385.57L179.419 374.735L172.505 373.568L171.608 375.419L169.352 375.509L168.218 379.771L168.891 380.769L168.88 382.418L166.13 382.149L163.807 382.339L163.403 384.37L161.63 384.325L161.416 382.104L159.946 382.115L160.227 376.675L158.857 372.682L160.788 371.448L162.135 370.08L162.988 368.465L162.37 367.624L158.756 365.437L157.432 362.375L158.655 360.737L158.79 359.099L158.375 358.191L156.366 356.105L153.594 353.929L152.157 353.682L150.799 352.785L149.261 352.818L148.094 352.213L147.106 351.136L145.928 348.466L148.139 347.098L150.036 346.627L152.393 347.3L153.481 347.255L154.963 345.909L160.328 345.472L162.225 345.707L165.087 345.315L167.399 345.718L167.522 347.625L169.868 348.186L170.238 347.3L170.148 346.021L173.246 345.92L174.021 343.475L176.041 343.296L177.926 343.868L179.217 341.367L181.686 341.804L184.885 342.959L186.221 336.757L185.155 336.689L183.606 335.96L182.652 334.783L180.351 330.117L179.655 327.885L175.132 328.771L174.963 321.547L174.526 318.665L174.705 314.145L174.144 312.474Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-35-inside-23_10718_32869)\" />\n                <mask id=\"path-36-inside-24_10718_32869\" fill=\"white\">\n                    <path d=\"M1106.12 436.312L1105.79 438.476L1105.24 439.116L1104 439.093L1102.36 440.047L1101.58 439.979L1096.9 443.625L1096.1 445.543L1095.5 443.939L1096.93 443.299L1098.3 440.125L1098.38 438.813L1099.73 437.052L1099.6 436.648L1102.63 435.291L1103.39 434.281L1104.97 433.339L1105 434.068L1105.35 434.225L1105.38 435.044L1106.12 436.312ZM1183.24 391.447L1182.04 390.863L1181.06 391.144L1181.09 391.884L1181.49 392.052L1179.46 394.139L1178.09 392.613L1177.18 392.568L1176.7 393.051L1176.61 395.832L1175.58 395.877L1175.15 396.315L1175.19 397.201L1173.92 398.345L1173.24 398.468L1171.92 397.133L1170.78 397.795L1170.6 398.266L1172.16 399.253L1172.42 400.173L1171.75 400.565L1170.73 399.758L1169.87 399.59L1171.24 400.453L1170.08 401.44L1169.8 402.136L1168.75 401.99L1167.85 401.261L1167.41 401.44L1167.62 402.237L1168.2 402.719L1167.14 403.201L1167.9 403.067L1167.88 404.087L1168.39 403.661L1168.53 404.11L1167.91 404.749L1166.96 404.783L1165.06 403.291L1164.86 403.493L1165.81 404.2L1166.43 405.669L1165.8 406.084L1165.16 407.553L1164.64 406.712L1164.35 406.869L1164.41 407.553L1163.99 407.834L1163.23 407.822L1162.97 407.441L1162.39 407.632L1161.61 408.585L1161.89 409.135L1161.67 409.572L1160.82 409.595L1159.8 410.402V411.21L1155.54 413.307L1154.58 414.653L1153.86 414.575L1153.95 415.158L1153.6 415.416L1154.18 415.663L1154.13 416.335L1153.22 416.661L1152.76 417.222L1152.03 421.697L1151.15 422.291L1149.66 421.674L1149.86 420.979L1148.31 420.093L1147.51 417.379L1146.83 416.93L1146.45 414.81L1143.88 412.903L1141.33 412.163L1138.79 412.028L1138.2 412.399L1136.88 411.569L1135.44 411.501L1132.99 412.152L1131.38 413.083L1130.69 412.657L1130.55 413.644L1130.21 413.453L1129.35 414.103L1127.84 414.518L1126.07 415.719L1125.27 415.382L1124.8 414.709L1124.98 416.134L1124.21 416.358L1123.5 417.468L1122.97 417.558L1123.22 417.704L1122.29 419.498L1119.72 422.415L1118.74 424.209L1117.2 424.4L1117.06 424.153L1117.77 421.529L1117.97 419.196L1118.6 418.725L1118.8 418.108L1118.32 415.304L1119.4 414.552L1119.29 413.756L1118.48 413.621L1117.17 414.317L1116.38 415.405L1115 416.089L1114.37 416.908L1111.39 418.478L1110.1 419.813L1109.63 419.42L1108.57 419.622L1108.66 420.25L1109.26 419.813L1109.74 419.925L1109.51 420.699L1110.19 421.372L1109.73 421.708L1109.15 423.402L1108.07 423.828L1107.15 424.714L1106.67 424.142L1106.52 422.336L1106.03 421.215L1105.28 420.889L1104.89 420.104L1103.89 419.487L1102.88 420.048L1103.02 421.327L1101.98 421.775L1101.33 422.583L1101.34 423.009L1101.97 423.548L1100.92 423.402L1100.77 422.908L1102.15 421.506L1101.49 421.585L1100.61 420.878L1099.23 421.17L1098.77 421.573L1097.91 423.413L1097.57 423.065L1096.4 422.976L1095.27 425.219L1095.55 427.283L1095.1 427.731L1094.04 427.933L1093.74 428.673L1093.86 429.425L1094.9 430.76V432.565L1092.84 433.081L1092.95 434.214L1094.08 434.887L1094.25 435.751L1092.5 434.674L1091.49 435.078L1092.31 436.94L1092.8 437.13L1092.57 437.669L1090.82 438.757L1090.57 439.598L1089.06 440.54L1087.78 441.875L1085.11 447.079L1084.07 451.016L1084.41 453.349L1085.25 454.796L1087.65 455.805L1086.95 457.521L1087.77 457.196L1088.42 456.187L1088.16 454.392L1088.64 453.528L1089.77 453.181L1092.59 455.144L1093.91 455.177L1094.78 456.568L1094.03 457.488L1093.99 458.621L1093.35 458.912L1092.96 460.191L1091.43 460.942L1090.55 461.963L1090.31 463.735L1091.01 466.797L1090.39 470.678L1091.61 471.889L1090.67 471.463L1091.57 471.912L1092.76 471.16L1093.23 471.396L1094.09 471.183L1094.06 471.598L1094.5 471.934L1094.09 472.966L1094.4 473.684L1094.2 475.591L1095.05 477.206L1095.11 479.247L1093.64 479.976L1092.39 481.827L1090.7 480.975L1089.26 478.675L1089.87 478.036L1090.13 476.982L1091.75 476.488V475.995L1092.8 475.366L1093.08 474.469L1092.78 474.278L1092.23 474.088L1091.97 474.379L1091.47 475.838L1089.85 474.895L1088.73 475.815L1087.48 476.208L1087.44 476.656L1088.44 477.251L1088.4 477.666L1088.77 477.643L1088.97 478.182L1085.79 479.786L1084.74 480.728L1084.75 481.603L1082.13 488.243L1082 490.441L1082.37 493.032L1083.14 495.107L1085.37 498.124L1084.97 498.595L1085.24 499.526L1084.11 500.311L1081.68 502.992L1079.95 502.801L1078.39 503.261L1077.69 502.678L1077.71 501.893L1077.12 501.725L1074.65 502.263L1071.89 504.158L1070.3 505.987L1069.04 506.806L1067.97 508.353L1066.89 511.875L1066.84 514.354L1067.62 515.442L1067.69 516.732L1067.54 517.023L1066.8 516.653L1066.68 516.137L1066.22 516.519L1066.77 516.844L1066.81 517.954L1067.4 518.212L1067.35 518.986H1067.84L1067.27 519.94L1067.63 520.557L1067.74 520.007L1068.18 519.872L1068.02 520.321L1068.54 521.443L1068.33 522.06L1065.99 520.635L1066.85 519.749L1066.55 519.67L1065.78 520.422L1064.64 519.996L1063.8 520.343L1063.16 521.342L1062.69 521.106L1060.77 521.902L1059.12 523.159L1057.63 524.908L1057.47 523.675L1056.89 522.71L1056.26 522.576L1055.34 523.159L1055.27 523.663L1055.74 523.877L1055.29 524.056L1055.46 524.819L1056.41 524.852L1056.29 524.561L1057.07 524.482L1057.05 525.088L1056.74 525.155L1057.17 525.469L1056.52 526.355L1055.94 526.12L1055.85 526.389L1055.91 526.86L1056.83 527.432L1056.29 527.993L1056.41 528.318L1056.06 528.464L1055.12 528.004L1055.3 528.666L1056.21 529.574L1055.97 529.989L1056.2 530.247L1055.17 531.201L1056.04 530.819L1056.47 531.077L1056.34 531.75L1055.85 532.031L1056.37 532.165L1056.45 532.536L1055.14 533.567L1055.29 534.285L1054.99 534.857L1054.79 534.667L1054.42 534.969L1054.6 535.62L1054.12 536.405L1054.17 537.022L1052.81 539.018L1052.19 539.333L1051.23 541.351L1050.11 542.316L1048.46 542.978L1047.46 544.963L1046.92 544.974L1045.98 546.556L1044.63 547.464L1041.17 551.065L1042.06 549.483L1041.97 548.429L1041.52 548.283L1041.62 546.915L1040.27 545.782L1039.77 542.753L1039.9 538.873L1039.53 534.184L1037.03 525.346L1035.88 515.498L1033.77 504.08L1032.28 492.718L1033.07 482.377L1033.83 480.402L1035.82 471.979L1036.84 470.151L1037.38 469.848L1036.53 470.914L1037.49 470.375L1037.68 469.478L1039.69 468.009L1040.24 466.999L1040.31 465.889L1041.26 466.494L1041.78 466.326V465.765L1043.81 461.503L1043.95 460.034L1043.61 458.43L1042.91 456.916L1042.12 456.59L1042.72 455.48L1043.16 455.446L1043.96 454.583L1044.35 455.446L1045.34 455.85L1046.37 455.962L1047.46 455.592L1048.2 455.054L1048.65 454L1048.55 453.439L1049.27 452.799L1049.37 452.16L1051.96 452.721V452.418H1053L1054.55 451.353L1057.32 448.436L1060.63 445.901L1061.53 444.354L1064.3 441.314L1065.12 439.598L1065.48 439.688L1065.82 439.273L1066.13 437.893L1065.8 437.4L1066.98 434.999L1068.06 434.102L1069.65 431.915L1070.58 431.724L1071.42 430.827L1072.05 428.337L1075.15 427.327L1075.65 426.015L1077.01 425.107L1078.27 423.682L1080.13 420.62L1082.35 419.33L1083.56 417.939L1083.76 416.56L1083.33 416.369L1083.82 414.485L1084.5 414.294L1084.95 413.453L1085 413.812L1085.55 413.509L1085.89 412.858L1087.54 412.533L1088.38 411.501L1089.89 411.535L1090.65 410.795L1091.5 409.034L1092.29 408.697L1093.27 409.101L1093.25 408.675L1093.78 408.215L1094.95 408.316L1094.92 409.045L1095.56 408.058L1097.37 407.161L1098.57 407.721L1097.91 407.407L1098.5 406.308L1096.27 404.884L1096.42 404.469L1097.21 404.099L1097.27 403.19L1097.66 402.708L1099.87 401.16L1100.53 399.264L1099.69 397.739L1098.9 397.638L1098.46 398.087L1098.27 397.234L1099.08 395.529L1099.24 394.161L1100.75 393.567L1100.94 391.548L1100.68 390.863L1101.08 390L1100.88 388.43L1101.25 387.813L1100.98 386.534L1101.4 385.895L1101.62 383.472L1103.9 381.991L1104.6 380.545L1106.23 380.309L1107.31 380.859L1109.4 381.094L1109.1 380.522L1110.05 380.13L1110.25 379.715L1109.18 379.759L1106.87 378.402L1106.55 378.627L1105.24 376.484L1103.87 376.226L1102.54 376.776L1100.66 376.933L1099.67 378.167L1098.58 377.741L1094.64 379.075L1094.25 380.466L1093.27 381.072L1094 380.915L1094.2 381.633L1095.29 382.395L1094.22 382.709L1094.16 383.236L1092.79 384.324L1093.39 385.951L1093.13 386.859L1093.79 387.117L1092.76 388.755L1092.71 389.854L1092.05 391.436L1092.8 392.243L1094.93 393.118L1094.9 393.881L1093.99 394.228L1094.01 394.856L1093.68 394.453L1093.1 394.666L1092.8 395.271L1093.15 395.81L1092.5 396.382L1091.9 395.283L1091.01 394.89L1091.71 394.172L1090.91 393.039L1089.22 393.869L1089.34 394.486L1090.22 394.542L1090.34 395.081L1087.7 393.746L1087.93 392.669L1087.1 391.828L1086.39 390.056L1086.86 389.607L1087.46 389.708L1088.53 388.441L1088.12 387.252L1086.28 386.871L1085.71 386.287L1085.89 385.603L1088.38 384.807L1090.18 383.607L1090.2 381.554L1090.55 380.545L1089.59 378.638L1090.59 377.729L1090.78 376.944L1088.9 376.114L1089.5 375.239L1087.66 373.467L1086.49 373.164L1086.42 372.155L1086.98 369.743L1087.52 369.07L1088.19 369.384L1089 369.16L1089.75 368.05L1090.74 367.601L1090.8 367.186L1090.12 366.513L1090.51 365.638L1090.12 364.146L1091.37 363.72L1092.72 361.78L1092.64 360.378L1092.14 359.469L1091.29 359.11L1091.24 358.336L1090.46 357.708L1091.23 355.79L1091.92 355.207L1091.8 352.919L1090.88 351.394L1091.08 350.496L1092.06 349.801L1093.83 349.565L1094.49 349.016L1094.06 348.466L1094.18 347.961L1096.27 346.436L1096.29 345.842L1095.52 344.955L1095.53 344.148L1094.09 342.656L1094.04 340.267L1093.99 339.516L1093.39 338.899L1093.43 338.237L1093.83 337.934L1094.7 338.091L1096.45 335.691L1096.94 336.117L1097.91 336.207L1098.56 336.813L1099.94 336.756L1100.68 336.106L1101.74 336.117L1104.93 338.473L1105.9 338.484L1107.25 340.727L1107.9 340.233L1107.52 338.641L1107.88 337.979L1109.17 337.542L1109.91 337.822L1110.56 339.235L1113.52 339.403L1114.47 341.736L1114.17 342.836L1114.74 343.183L1115.63 342.993L1116.46 341.804L1118.81 342.454L1120.13 343.946L1121.46 343.531L1122.45 343.711L1123.76 343.172L1124.59 341.961L1125.14 341.781L1126.37 344.013L1127.2 344.922L1128.48 345.572L1128.59 347.378L1129.13 347.614L1130.27 347.232L1130.41 348.175L1131.15 348.421L1132.41 348.096L1133.2 347.367L1133.63 347.67L1135.17 347.3L1135.46 348.814L1136 349.577L1137.58 349.935L1138.2 353.098L1139.36 354.478L1141.31 354.669L1142.07 355.061L1142 356.116L1143.15 356.822L1144.06 360.277L1143.52 361.04L1143.61 361.488L1142.76 362.206L1141.38 362.554L1140 364.393L1138.91 364.808L1138.55 365.806L1137.9 366.255L1137.91 367.511L1136.92 368.633L1135.91 368.846L1135.63 369.441L1134.86 369.743L1134.77 370.528L1136.87 371.74L1137.4 372.57L1138.82 373.153L1140.08 372.85L1143.85 375.632L1144.8 377.303L1145.54 377.269L1146.24 377.942L1147.1 378.01L1147.43 378.952L1147.19 380.231L1148.01 381.083L1147.81 381.79L1148.44 382.519L1148.75 384.235L1149.23 384.65L1150.3 383.719L1154.14 385.098L1154.37 384.504L1155.77 384.291L1155.8 383.618L1156.56 383.517L1156.83 382.743L1157.3 382.507L1157.57 382.698L1157.46 383.764L1158.33 383.135L1158.61 383.214L1158.44 384.022L1162.05 382.743L1162.61 381.745L1164.14 380.915L1165.1 381.318L1165.5 382.048L1166.81 381.991L1167.29 381.509L1168.37 381.274L1169.87 381.857L1170.82 382.676L1173.32 381.016L1178.09 379.401L1178.97 379.681L1179.35 380.432L1180.37 380.511L1181.08 381.06L1181.48 382.373L1180.13 383.943L1180.98 384.437L1181.14 386.512L1181.69 386.915L1182.65 386.68L1182.98 388.116L1183.64 388.654L1183.83 389.719L1184.4 390.224L1184.3 391.032L1183.24 391.447ZM1121.71 500.513L1120.23 498.988L1120.38 498.405L1119.64 498.494L1119.42 498.147L1119.36 498.461L1118.65 497.249L1117.76 496.655L1116.17 492.841L1114.36 492.045L1116.17 490.935L1117.36 491.529L1118.38 491.417L1118.73 491.821L1118.26 492.314L1118.29 493.57L1119.87 496.565L1121.09 497.26L1121.49 497.933L1121.71 500.513Z\" />\n                </mask>\n                <path d=\"M1106.12 436.312L1105.79 438.476L1105.24 439.116L1104 439.093L1102.36 440.047L1101.58 439.979L1096.9 443.625L1096.1 445.543L1095.5 443.939L1096.93 443.299L1098.3 440.125L1098.38 438.813L1099.73 437.052L1099.6 436.648L1102.63 435.291L1103.39 434.281L1104.97 433.339L1105 434.068L1105.35 434.225L1105.38 435.044L1106.12 436.312ZM1183.24 391.447L1182.04 390.863L1181.06 391.144L1181.09 391.884L1181.49 392.052L1179.46 394.139L1178.09 392.613L1177.18 392.568L1176.7 393.051L1176.61 395.832L1175.58 395.877L1175.15 396.315L1175.19 397.201L1173.92 398.345L1173.24 398.468L1171.92 397.133L1170.78 397.795L1170.6 398.266L1172.16 399.253L1172.42 400.173L1171.75 400.565L1170.73 399.758L1169.87 399.59L1171.24 400.453L1170.08 401.44L1169.8 402.136L1168.75 401.99L1167.85 401.261L1167.41 401.44L1167.62 402.237L1168.2 402.719L1167.14 403.201L1167.9 403.067L1167.88 404.087L1168.39 403.661L1168.53 404.11L1167.91 404.749L1166.96 404.783L1165.06 403.291L1164.86 403.493L1165.81 404.2L1166.43 405.669L1165.8 406.084L1165.16 407.553L1164.64 406.712L1164.35 406.869L1164.41 407.553L1163.99 407.834L1163.23 407.822L1162.97 407.441L1162.39 407.632L1161.61 408.585L1161.89 409.135L1161.67 409.572L1160.82 409.595L1159.8 410.402V411.21L1155.54 413.307L1154.58 414.653L1153.86 414.575L1153.95 415.158L1153.6 415.416L1154.18 415.663L1154.13 416.335L1153.22 416.661L1152.76 417.222L1152.03 421.697L1151.15 422.291L1149.66 421.674L1149.86 420.979L1148.31 420.093L1147.51 417.379L1146.83 416.93L1146.45 414.81L1143.88 412.903L1141.33 412.163L1138.79 412.028L1138.2 412.399L1136.88 411.569L1135.44 411.501L1132.99 412.152L1131.38 413.083L1130.69 412.657L1130.55 413.644L1130.21 413.453L1129.35 414.103L1127.84 414.518L1126.07 415.719L1125.27 415.382L1124.8 414.709L1124.98 416.134L1124.21 416.358L1123.5 417.468L1122.97 417.558L1123.22 417.704L1122.29 419.498L1119.72 422.415L1118.74 424.209L1117.2 424.4L1117.06 424.153L1117.77 421.529L1117.97 419.196L1118.6 418.725L1118.8 418.108L1118.32 415.304L1119.4 414.552L1119.29 413.756L1118.48 413.621L1117.17 414.317L1116.38 415.405L1115 416.089L1114.37 416.908L1111.39 418.478L1110.1 419.813L1109.63 419.42L1108.57 419.622L1108.66 420.25L1109.26 419.813L1109.74 419.925L1109.51 420.699L1110.19 421.372L1109.73 421.708L1109.15 423.402L1108.07 423.828L1107.15 424.714L1106.67 424.142L1106.52 422.336L1106.03 421.215L1105.28 420.889L1104.89 420.104L1103.89 419.487L1102.88 420.048L1103.02 421.327L1101.98 421.775L1101.33 422.583L1101.34 423.009L1101.97 423.548L1100.92 423.402L1100.77 422.908L1102.15 421.506L1101.49 421.585L1100.61 420.878L1099.23 421.17L1098.77 421.573L1097.91 423.413L1097.57 423.065L1096.4 422.976L1095.27 425.219L1095.55 427.283L1095.1 427.731L1094.04 427.933L1093.74 428.673L1093.86 429.425L1094.9 430.76V432.565L1092.84 433.081L1092.95 434.214L1094.08 434.887L1094.25 435.751L1092.5 434.674L1091.49 435.078L1092.31 436.94L1092.8 437.13L1092.57 437.669L1090.82 438.757L1090.57 439.598L1089.06 440.54L1087.78 441.875L1085.11 447.079L1084.07 451.016L1084.41 453.349L1085.25 454.796L1087.65 455.805L1086.95 457.521L1087.77 457.196L1088.42 456.187L1088.16 454.392L1088.64 453.528L1089.77 453.181L1092.59 455.144L1093.91 455.177L1094.78 456.568L1094.03 457.488L1093.99 458.621L1093.35 458.912L1092.96 460.191L1091.43 460.942L1090.55 461.963L1090.31 463.735L1091.01 466.797L1090.39 470.678L1091.61 471.889L1090.67 471.463L1091.57 471.912L1092.76 471.16L1093.23 471.396L1094.09 471.183L1094.06 471.598L1094.5 471.934L1094.09 472.966L1094.4 473.684L1094.2 475.591L1095.05 477.206L1095.11 479.247L1093.64 479.976L1092.39 481.827L1090.7 480.975L1089.26 478.675L1089.87 478.036L1090.13 476.982L1091.75 476.488V475.995L1092.8 475.366L1093.08 474.469L1092.78 474.278L1092.23 474.088L1091.97 474.379L1091.47 475.838L1089.85 474.895L1088.73 475.815L1087.48 476.208L1087.44 476.656L1088.44 477.251L1088.4 477.666L1088.77 477.643L1088.97 478.182L1085.79 479.786L1084.74 480.728L1084.75 481.603L1082.13 488.243L1082 490.441L1082.37 493.032L1083.14 495.107L1085.37 498.124L1084.97 498.595L1085.24 499.526L1084.11 500.311L1081.68 502.992L1079.95 502.801L1078.39 503.261L1077.69 502.678L1077.71 501.893L1077.12 501.725L1074.65 502.263L1071.89 504.158L1070.3 505.987L1069.04 506.806L1067.97 508.353L1066.89 511.875L1066.84 514.354L1067.62 515.442L1067.69 516.732L1067.54 517.023L1066.8 516.653L1066.68 516.137L1066.22 516.519L1066.77 516.844L1066.81 517.954L1067.4 518.212L1067.35 518.986H1067.84L1067.27 519.94L1067.63 520.557L1067.74 520.007L1068.18 519.872L1068.02 520.321L1068.54 521.443L1068.33 522.06L1065.99 520.635L1066.85 519.749L1066.55 519.67L1065.78 520.422L1064.64 519.996L1063.8 520.343L1063.16 521.342L1062.69 521.106L1060.77 521.902L1059.12 523.159L1057.63 524.908L1057.47 523.675L1056.89 522.71L1056.26 522.576L1055.34 523.159L1055.27 523.663L1055.74 523.877L1055.29 524.056L1055.46 524.819L1056.41 524.852L1056.29 524.561L1057.07 524.482L1057.05 525.088L1056.74 525.155L1057.17 525.469L1056.52 526.355L1055.94 526.12L1055.85 526.389L1055.91 526.86L1056.83 527.432L1056.29 527.993L1056.41 528.318L1056.06 528.464L1055.12 528.004L1055.3 528.666L1056.21 529.574L1055.97 529.989L1056.2 530.247L1055.17 531.201L1056.04 530.819L1056.47 531.077L1056.34 531.75L1055.85 532.031L1056.37 532.165L1056.45 532.536L1055.14 533.567L1055.29 534.285L1054.99 534.857L1054.79 534.667L1054.42 534.969L1054.6 535.62L1054.12 536.405L1054.17 537.022L1052.81 539.018L1052.19 539.333L1051.23 541.351L1050.11 542.316L1048.46 542.978L1047.46 544.963L1046.92 544.974L1045.98 546.556L1044.63 547.464L1041.17 551.065L1042.06 549.483L1041.97 548.429L1041.52 548.283L1041.62 546.915L1040.27 545.782L1039.77 542.753L1039.9 538.873L1039.53 534.184L1037.03 525.346L1035.88 515.498L1033.77 504.08L1032.28 492.718L1033.07 482.377L1033.83 480.402L1035.82 471.979L1036.84 470.151L1037.38 469.848L1036.53 470.914L1037.49 470.375L1037.68 469.478L1039.69 468.009L1040.24 466.999L1040.31 465.889L1041.26 466.494L1041.78 466.326V465.765L1043.81 461.503L1043.95 460.034L1043.61 458.43L1042.91 456.916L1042.12 456.59L1042.72 455.48L1043.16 455.446L1043.96 454.583L1044.35 455.446L1045.34 455.85L1046.37 455.962L1047.46 455.592L1048.2 455.054L1048.65 454L1048.55 453.439L1049.27 452.799L1049.37 452.16L1051.96 452.721V452.418H1053L1054.55 451.353L1057.32 448.436L1060.63 445.901L1061.53 444.354L1064.3 441.314L1065.12 439.598L1065.48 439.688L1065.82 439.273L1066.13 437.893L1065.8 437.4L1066.98 434.999L1068.06 434.102L1069.65 431.915L1070.58 431.724L1071.42 430.827L1072.05 428.337L1075.15 427.327L1075.65 426.015L1077.01 425.107L1078.27 423.682L1080.13 420.62L1082.35 419.33L1083.56 417.939L1083.76 416.56L1083.33 416.369L1083.82 414.485L1084.5 414.294L1084.95 413.453L1085 413.812L1085.55 413.509L1085.89 412.858L1087.54 412.533L1088.38 411.501L1089.89 411.535L1090.65 410.795L1091.5 409.034L1092.29 408.697L1093.27 409.101L1093.25 408.675L1093.78 408.215L1094.95 408.316L1094.92 409.045L1095.56 408.058L1097.37 407.161L1098.57 407.721L1097.91 407.407L1098.5 406.308L1096.27 404.884L1096.42 404.469L1097.21 404.099L1097.27 403.19L1097.66 402.708L1099.87 401.16L1100.53 399.264L1099.69 397.739L1098.9 397.638L1098.46 398.087L1098.27 397.234L1099.08 395.529L1099.24 394.161L1100.75 393.567L1100.94 391.548L1100.68 390.863L1101.08 390L1100.88 388.43L1101.25 387.813L1100.98 386.534L1101.4 385.895L1101.62 383.472L1103.9 381.991L1104.6 380.545L1106.23 380.309L1107.31 380.859L1109.4 381.094L1109.1 380.522L1110.05 380.13L1110.25 379.715L1109.18 379.759L1106.87 378.402L1106.55 378.627L1105.24 376.484L1103.87 376.226L1102.54 376.776L1100.66 376.933L1099.67 378.167L1098.58 377.741L1094.64 379.075L1094.25 380.466L1093.27 381.072L1094 380.915L1094.2 381.633L1095.29 382.395L1094.22 382.709L1094.16 383.236L1092.79 384.324L1093.39 385.951L1093.13 386.859L1093.79 387.117L1092.76 388.755L1092.71 389.854L1092.05 391.436L1092.8 392.243L1094.93 393.118L1094.9 393.881L1093.99 394.228L1094.01 394.856L1093.68 394.453L1093.1 394.666L1092.8 395.271L1093.15 395.81L1092.5 396.382L1091.9 395.283L1091.01 394.89L1091.71 394.172L1090.91 393.039L1089.22 393.869L1089.34 394.486L1090.22 394.542L1090.34 395.081L1087.7 393.746L1087.93 392.669L1087.1 391.828L1086.39 390.056L1086.86 389.607L1087.46 389.708L1088.53 388.441L1088.12 387.252L1086.28 386.871L1085.71 386.287L1085.89 385.603L1088.38 384.807L1090.18 383.607L1090.2 381.554L1090.55 380.545L1089.59 378.638L1090.59 377.729L1090.78 376.944L1088.9 376.114L1089.5 375.239L1087.66 373.467L1086.49 373.164L1086.42 372.155L1086.98 369.743L1087.52 369.07L1088.19 369.384L1089 369.16L1089.75 368.05L1090.74 367.601L1090.8 367.186L1090.12 366.513L1090.51 365.638L1090.12 364.146L1091.37 363.72L1092.72 361.78L1092.64 360.378L1092.14 359.469L1091.29 359.11L1091.24 358.336L1090.46 357.708L1091.23 355.79L1091.92 355.207L1091.8 352.919L1090.88 351.394L1091.08 350.496L1092.06 349.801L1093.83 349.565L1094.49 349.016L1094.06 348.466L1094.18 347.961L1096.27 346.436L1096.29 345.842L1095.52 344.955L1095.53 344.148L1094.09 342.656L1094.04 340.267L1093.99 339.516L1093.39 338.899L1093.43 338.237L1093.83 337.934L1094.7 338.091L1096.45 335.691L1096.94 336.117L1097.91 336.207L1098.56 336.813L1099.94 336.756L1100.68 336.106L1101.74 336.117L1104.93 338.473L1105.9 338.484L1107.25 340.727L1107.9 340.233L1107.52 338.641L1107.88 337.979L1109.17 337.542L1109.91 337.822L1110.56 339.235L1113.52 339.403L1114.47 341.736L1114.17 342.836L1114.74 343.183L1115.63 342.993L1116.46 341.804L1118.81 342.454L1120.13 343.946L1121.46 343.531L1122.45 343.711L1123.76 343.172L1124.59 341.961L1125.14 341.781L1126.37 344.013L1127.2 344.922L1128.48 345.572L1128.59 347.378L1129.13 347.614L1130.27 347.232L1130.41 348.175L1131.15 348.421L1132.41 348.096L1133.2 347.367L1133.63 347.67L1135.17 347.3L1135.46 348.814L1136 349.577L1137.58 349.935L1138.2 353.098L1139.36 354.478L1141.31 354.669L1142.07 355.061L1142 356.116L1143.15 356.822L1144.06 360.277L1143.52 361.04L1143.61 361.488L1142.76 362.206L1141.38 362.554L1140 364.393L1138.91 364.808L1138.55 365.806L1137.9 366.255L1137.91 367.511L1136.92 368.633L1135.91 368.846L1135.63 369.441L1134.86 369.743L1134.77 370.528L1136.87 371.74L1137.4 372.57L1138.82 373.153L1140.08 372.85L1143.85 375.632L1144.8 377.303L1145.54 377.269L1146.24 377.942L1147.1 378.01L1147.43 378.952L1147.19 380.231L1148.01 381.083L1147.81 381.79L1148.44 382.519L1148.75 384.235L1149.23 384.65L1150.3 383.719L1154.14 385.098L1154.37 384.504L1155.77 384.291L1155.8 383.618L1156.56 383.517L1156.83 382.743L1157.3 382.507L1157.57 382.698L1157.46 383.764L1158.33 383.135L1158.61 383.214L1158.44 384.022L1162.05 382.743L1162.61 381.745L1164.14 380.915L1165.1 381.318L1165.5 382.048L1166.81 381.991L1167.29 381.509L1168.37 381.274L1169.87 381.857L1170.82 382.676L1173.32 381.016L1178.09 379.401L1178.97 379.681L1179.35 380.432L1180.37 380.511L1181.08 381.06L1181.48 382.373L1180.13 383.943L1180.98 384.437L1181.14 386.512L1181.69 386.915L1182.65 386.68L1182.98 388.116L1183.64 388.654L1183.83 389.719L1184.4 390.224L1184.3 391.032L1183.24 391.447ZM1121.71 500.513L1120.23 498.988L1120.38 498.405L1119.64 498.494L1119.42 498.147L1119.36 498.461L1118.65 497.249L1117.76 496.655L1116.17 492.841L1114.36 492.045L1116.17 490.935L1117.36 491.529L1118.38 491.417L1118.73 491.821L1118.26 492.314L1118.29 493.57L1119.87 496.565L1121.09 497.26L1121.49 497.933L1121.71 500.513Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-36-inside-24_10718_32869)\" />\n                <path d=\"M61.6712 531.605L63.1752 531.324L63.5343 530.797L64.7353 531.212L64.8138 530.506L65.5658 530.909L65.7342 530.236L66.2954 530.427L66.7668 532.58L67.1259 532.782L72.3674 531.313L72.8275 531.448L73.9611 533.276L75.0162 533.444L75.308 533.96L76.1273 534.016L77.2833 534.891L79.674 535.317L81.3688 537.112L81.7167 537L82.1208 536.035L82.8503 536.136L83.3778 536.787L84.0063 535.777L84.343 535.856L84.9154 537.101L86.2062 537.661L87.452 537.325L88.1928 537.504L88.9111 537.056L90.112 537.841L90.4487 538.682L90.2804 539.602L91.3691 540.174L90.5722 540.948L89.9324 540.51L87.8785 541.026L89.1243 543.292L89.4386 544.851L89.1468 545.838L86.4531 543.954L85.6001 544.021L84.5114 544.761L83.288 544.458L81.6045 544.571L81.077 544.986L79.4046 545.356L78.5965 546.646L76.565 546.993L74.9937 548.317L72.8724 547.857L72.1317 547.33L71.0654 547.722L70.392 546.982L69.6849 547.778L70.1788 548.048L69.988 548.631L69.3707 548.788L68.8319 549.708L68.136 549.382L67.4626 549.898L66.3403 550.089L65.9474 549.326L65.1842 549.158L65.4424 548.721L64.7241 548.317L63.6017 548.665L62.9283 546.556L61.8396 546.388L60.504 547.15L59.5163 547.005L59.2581 546.242L57.3164 545.995L56.7103 546.444L56.1604 546.085L56.744 544.75L55.7788 544.212L56.542 542.63L54.7238 540.892L57.3838 540.073L57.3501 538.693L56.6206 538.189L57.3164 537.336L56.3849 537.022L56.5869 535.934L57.5858 535.171L59.202 535.227L59.505 534.364L59.1683 533.612L59.5836 533.321L60.2234 533.691L60.5152 533.523L61.6712 531.605Z\" fill=\"#3C484F\" />\n                <path d=\"M64.9837 531.24L65.0214 530.901L65.4476 531.13L65.7304 531.281L65.8084 530.97L65.9108 530.56L66.0813 530.618L66.5225 532.634L66.5465 532.743L66.6443 532.798L67.0034 533L67.0937 533.051L67.1934 533.023L72.3659 531.573L72.6655 531.661L73.7487 533.408L73.8089 533.505L73.9218 533.523L74.8579 533.672L75.0904 534.083L75.1566 534.2L75.2909 534.209L76.0359 534.261L77.1325 535.09L77.1804 535.127L77.2395 535.137L79.5489 535.549L81.187 537.284L81.2953 537.398L81.4455 537.35L81.7934 537.238L81.9029 537.202L81.9473 537.096L82.277 536.309L82.7183 536.37L83.1836 536.944L83.4046 537.217L83.59 536.919L84.1239 536.061L84.167 536.071L84.6883 537.205L84.7282 537.292L84.8158 537.33L86.1066 537.891L86.1869 537.926L86.2714 537.903L87.4554 537.583L88.1339 537.747L88.2361 537.772L88.3252 537.716L88.908 537.352L89.9092 538.007L90.1898 538.708L90.0344 539.557L90.0013 539.738L90.1641 539.823L90.9475 540.235L90.5446 540.626L90.0735 540.304L89.9807 540.24L89.8715 540.268L87.8176 540.784L87.5033 540.863L87.6594 541.147L88.8868 543.379L89.1813 544.84L89.0055 545.434L86.5964 543.749L86.5229 543.697L86.4334 543.705L85.5804 543.772L85.5143 543.777L85.4595 543.814L84.4631 544.492L83.3481 544.216L83.3103 544.206L83.2714 544.209L81.5878 544.321L81.5107 544.326L81.4499 544.374L80.9672 544.754L79.3506 545.112L79.2484 545.134L79.1928 545.223L78.4441 546.418L76.5229 546.747L76.4559 546.758L76.404 546.802L74.9266 548.047L72.9756 547.624L72.2766 547.126L72.1691 547.05L72.0453 547.095L71.1371 547.43L70.5769 546.814L70.3898 546.608L70.2051 546.816L69.498 547.612L69.2893 547.847L69.5652 547.998L69.8765 548.168L69.7931 548.422L69.309 548.546L69.2078 548.571L69.1549 548.662L68.7314 549.385L68.2419 549.156L68.1045 549.092L67.984 549.184L67.3597 549.662L66.4787 549.812L66.1697 549.212L66.1159 549.107L66.0012 549.082L65.5748 548.988L65.6577 548.848L65.7874 548.628L65.5649 548.503L64.8466 548.099L64.7528 548.046L64.6501 548.078L63.7644 548.352L63.1664 546.48L63.1193 546.332L62.9664 546.309L61.8777 546.141L61.7914 546.127L61.7156 546.171L60.455 546.89L59.704 546.78L59.4949 546.162L59.4448 546.014L59.2896 545.994L57.3479 545.747L57.2484 545.734L57.1677 545.794L56.7014 546.139L56.4742 545.991L56.9731 544.85L57.064 544.642L56.8658 544.532L56.1063 544.108L56.7671 542.739L56.8462 542.575L56.7148 542.45L55.2044 541.005L57.4573 540.312L57.6383 540.256L57.6337 540.067L57.6 538.687L57.5969 538.56L57.4923 538.488L56.9854 538.137L57.5101 537.494L57.7384 537.215L57.3963 537.099L56.6703 536.855L56.8151 536.074L57.6665 535.424L59.1933 535.477L59.377 535.484L59.4379 535.31L59.7409 534.447L59.7739 534.353L59.7332 534.262L59.4808 533.698L59.5966 533.617L60.0982 533.907L60.2231 533.98L60.3482 533.907L60.64 533.739L60.696 533.707L60.7293 533.652L61.8274 531.83L63.221 531.57L63.3232 531.551L63.3818 531.465L63.6333 531.096L64.6536 531.448L64.9492 531.551L64.9837 531.24Z\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" strokeWidth=\"0.5\" />\n                <mask id=\"path-39-inside-25_10718_32869\" fill=\"white\">\n                    <path d=\"M159.598 427.451L159.172 431.388L160.855 431.668L160.676 432.779L161.024 433.34L160.732 433.541L161.248 434.618L162.034 434.988L162.303 434.416L162.494 435.381L163.28 436.57L163.594 438.477L161.237 438.241L160.979 438.409L161.416 439.037L161.035 439.385L161.517 440.137L160.541 440.686L159.901 440.507L158.813 441.572L159.026 442.705L158.061 442.918L157.724 442.694L157.252 443.131L156.254 443.311L156.052 443.075L155.311 444.668L155.546 445.812L154.054 446.507L154.671 446.878L154.087 447.618L154.469 448.795L154.166 449.356L153.683 449.401L153.212 450.399L153.706 451.173L150.058 451.869L149.474 451.712L149.228 452.138L148.88 452.093L148.599 453.181L148.139 453.585L147.589 453.562L146.264 451.869L145.277 452.138L144.312 451.241L141.607 451.375L141.236 451.902L141.528 454.392L141.102 454.83L141.281 455.581L140.72 455.963L140.552 457.006L139.384 456.871L137.6 459.653L136.601 459.709L135.097 460.786L132.28 460.673L132.134 459.967L131.629 459.518L130.203 459.215L129.362 459.574L128.318 460.898L128.093 457.97L127.498 459.036L127.824 460.561L127.588 461.088L126.724 461.649L125.467 461.526L124.592 460.64L125.287 459.967L124.861 458.8L125.142 457.421L124.199 457.096L123.873 457.881L122.515 458.071L122.19 457.768L121.483 458.071L121.247 458.632L120.304 458.8L119.866 458.52L119.451 458.856L118.149 458.083L118.003 457.544L115.298 456.725L115.568 458.475L115.22 460.371L112.167 461.324L111.583 461.032V461.649L111.067 462.322L110.607 462.3V462.771L109.675 462.221L108.149 462.423L107.879 462.849L107.083 462.659L106.297 463.13L105.747 462.457L105.612 460.225L106.095 459.944L105.927 459.294L106.578 459.126L106.488 458.408L106.847 458.755L107.049 458.296L107.621 458.599L107.857 458.15L107.184 456.927L107.891 455.525L107.273 454L108.474 453.091L108.385 451.454L109.687 450.512L109.35 449.682L109.922 449.368L110.674 448.123L111.482 447.853L112.066 447.091L111.235 446.025L111.022 444.78L110.124 444.343L110.517 443.961L110.82 444.13L110.618 443.457L111.415 442.649L112.01 442.537L112.627 441.359L111.763 440.338L112.257 439.363L112.593 439.553L112.571 438.701L112.032 438.32L112.672 437.703L112.661 437.276L113.054 437.041L113.379 437.938L113.817 437.254L115.624 436.054L116.926 435.639L118.037 435.818L118.419 435.145L118.677 435.437L119.126 435.302L119.26 433.34L118.149 432.588L118.968 430.356L120.102 430.659L120.338 432.095L120.955 432.88L121.449 432.33L123.346 431.915L123.918 433.306L124.311 433.317L125.108 434.73L125.534 434.585L125.568 433.766L125.905 434.057L127.061 433.721L127.027 433.351L127.723 432.835L128.497 433.519L128.722 433.328L128.991 433.755L129.328 433.62L129.283 432.801L130.563 432.263L130.854 434.158L131.483 433.833L131.371 433.373L132.852 432.644L132.875 433.553L133.66 433.474L134.569 433.945L135.838 433.53L136.017 434.214L136.96 434.439L137.005 434.899L138.554 434.529L142.493 435.145L143.043 434.069L144.772 434.114L145.142 433.541L147.959 433.979L148.172 433.53L148.745 434.013L150.047 434.125L151.023 431.859L151.663 431.971L151.977 431.422L153.717 431.22L153.986 429.683L153.638 429.212L154.009 427.709L155.704 427.574L155.861 428.057L156.534 427.922L156.994 427.35L159.598 427.451Z\" />\n                </mask>\n                <path d=\"M159.598 427.451L159.172 431.388L160.855 431.668L160.676 432.779L161.024 433.34L160.732 433.541L161.248 434.618L162.034 434.988L162.303 434.416L162.494 435.381L163.28 436.57L163.594 438.477L161.237 438.241L160.979 438.409L161.416 439.037L161.035 439.385L161.517 440.137L160.541 440.686L159.901 440.507L158.813 441.572L159.026 442.705L158.061 442.918L157.724 442.694L157.252 443.131L156.254 443.311L156.052 443.075L155.311 444.668L155.546 445.812L154.054 446.507L154.671 446.878L154.087 447.618L154.469 448.795L154.166 449.356L153.683 449.401L153.212 450.399L153.706 451.173L150.058 451.869L149.474 451.712L149.228 452.138L148.88 452.093L148.599 453.181L148.139 453.585L147.589 453.562L146.264 451.869L145.277 452.138L144.312 451.241L141.607 451.375L141.236 451.902L141.528 454.392L141.102 454.83L141.281 455.581L140.72 455.963L140.552 457.006L139.384 456.871L137.6 459.653L136.601 459.709L135.097 460.786L132.28 460.673L132.134 459.967L131.629 459.518L130.203 459.215L129.362 459.574L128.318 460.898L128.093 457.97L127.498 459.036L127.824 460.561L127.588 461.088L126.724 461.649L125.467 461.526L124.592 460.64L125.287 459.967L124.861 458.8L125.142 457.421L124.199 457.096L123.873 457.881L122.515 458.071L122.19 457.768L121.483 458.071L121.247 458.632L120.304 458.8L119.866 458.52L119.451 458.856L118.149 458.083L118.003 457.544L115.298 456.725L115.568 458.475L115.22 460.371L112.167 461.324L111.583 461.032V461.649L111.067 462.322L110.607 462.3V462.771L109.675 462.221L108.149 462.423L107.879 462.849L107.083 462.659L106.297 463.13L105.747 462.457L105.612 460.225L106.095 459.944L105.927 459.294L106.578 459.126L106.488 458.408L106.847 458.755L107.049 458.296L107.621 458.599L107.857 458.15L107.184 456.927L107.891 455.525L107.273 454L108.474 453.091L108.385 451.454L109.687 450.512L109.35 449.682L109.922 449.368L110.674 448.123L111.482 447.853L112.066 447.091L111.235 446.025L111.022 444.78L110.124 444.343L110.517 443.961L110.82 444.13L110.618 443.457L111.415 442.649L112.01 442.537L112.627 441.359L111.763 440.338L112.257 439.363L112.593 439.553L112.571 438.701L112.032 438.32L112.672 437.703L112.661 437.276L113.054 437.041L113.379 437.938L113.817 437.254L115.624 436.054L116.926 435.639L118.037 435.818L118.419 435.145L118.677 435.437L119.126 435.302L119.26 433.34L118.149 432.588L118.968 430.356L120.102 430.659L120.338 432.095L120.955 432.88L121.449 432.33L123.346 431.915L123.918 433.306L124.311 433.317L125.108 434.73L125.534 434.585L125.568 433.766L125.905 434.057L127.061 433.721L127.027 433.351L127.723 432.835L128.497 433.519L128.722 433.328L128.991 433.755L129.328 433.62L129.283 432.801L130.563 432.263L130.854 434.158L131.483 433.833L131.371 433.373L132.852 432.644L132.875 433.553L133.66 433.474L134.569 433.945L135.838 433.53L136.017 434.214L136.96 434.439L137.005 434.899L138.554 434.529L142.493 435.145L143.043 434.069L144.772 434.114L145.142 433.541L147.959 433.979L148.172 433.53L148.745 434.013L150.047 434.125L151.023 431.859L151.663 431.971L151.977 431.422L153.717 431.22L153.986 429.683L153.638 429.212L154.009 427.709L155.704 427.574L155.861 428.057L156.534 427.922L156.994 427.35L159.598 427.451Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-39-inside-25_10718_32869)\" />\n                <mask id=\"path-40-inside-26_10718_32869\" fill=\"white\">\n                    <path d=\"M279.579 479.292L279.669 477.52L280.623 476.881L282.542 473.819L283.44 473.157L283.821 473.18L284.551 474.391L285.337 473.438L286.942 472.495L288.367 473.236L289.792 473.135L290.073 473.516L290.488 472.854L291.364 472.462L293.709 474.279L296.336 474.593L297.2 474.29L297.009 473L298.199 471.957L298.132 470.656L298.457 470.353L299.007 470.465L300.129 469.299L302.239 469.332L303.216 470.308L303.62 471.722L303.44 473.572L304.686 475.714L304.383 476.365L304.63 476.825L308.57 477.307L308.962 478.339L311.521 481.177L313.587 480.246L315.371 482.13L316.976 480.807L317.605 481.883L318.39 482.007L319.266 481.424L319.748 482.231L321.6 482.265L322.734 485.338L324.417 485.742L325.764 485.293L326.606 486.247L328.884 485.674L329.3 487.301L332.846 490.778L332.903 492.393L332.588 493.391L329.042 493.414L329.244 494.255L329.928 495.074L329.378 495.724L329.232 496.622L327.796 496.835L326.55 496.364L325.955 496.846L325.708 497.676L324.698 498.091L324.013 498.293L322.094 497.9L321.825 498.54L320.287 498.831L319.95 499.19L317.941 499.302L317.436 499.874L314.294 500.368L311.679 501.355L311.14 501.175L311.084 500.042L310.231 500.312L309.546 501.557L307.425 500.906L307.088 501.377L307.346 501.983L306.347 501.871L305.09 502.645L305.259 505.168L304.372 505.202L303.295 504.103L301.499 504.944L301.398 504.305L300.59 504.406L299.68 504.978L299.254 504.877L298.917 505.348L296.055 505.505L295.674 505.998L295.393 505.594L295.112 506.088L293.9 506.043L291.532 507.041L290.421 507.154L290.309 506.256L289.871 506.223L288.255 504.798L288.603 504.125L288.333 503.407L289.691 502.544L289.018 499.964L287.301 499.852L285.078 500.648L283.608 500.469L283.9 499.885L283.215 499.459L280.813 500.446L279.68 499.302L279.994 498.573L278.973 496.162L279.018 495.365L279.882 495.13L280.443 495.747L280.858 495.735L281.363 494.412L279.781 491.664L281.015 491.159L280.623 489.656L282.205 489.847L282.991 489.555L283.72 489.118L283.967 488.187L283.193 487.974L283.821 487.222L283.395 485.551L283.687 485.114L281.913 483.398L282.273 482.702L281.262 482.646L280.948 481.132L279.579 479.292Z\" />\n                </mask>\n                <path d=\"M279.579 479.292L279.669 477.52L280.623 476.881L282.542 473.819L283.44 473.157L283.821 473.18L284.551 474.391L285.337 473.438L286.942 472.495L288.367 473.236L289.792 473.135L290.073 473.516L290.488 472.854L291.364 472.462L293.709 474.279L296.336 474.593L297.2 474.29L297.009 473L298.199 471.957L298.132 470.656L298.457 470.353L299.007 470.465L300.129 469.299L302.239 469.332L303.216 470.308L303.62 471.722L303.44 473.572L304.686 475.714L304.383 476.365L304.63 476.825L308.57 477.307L308.962 478.339L311.521 481.177L313.587 480.246L315.371 482.13L316.976 480.807L317.605 481.883L318.39 482.007L319.266 481.424L319.748 482.231L321.6 482.265L322.734 485.338L324.417 485.742L325.764 485.293L326.606 486.247L328.884 485.674L329.3 487.301L332.846 490.778L332.903 492.393L332.588 493.391L329.042 493.414L329.244 494.255L329.928 495.074L329.378 495.724L329.232 496.622L327.796 496.835L326.55 496.364L325.955 496.846L325.708 497.676L324.698 498.091L324.013 498.293L322.094 497.9L321.825 498.54L320.287 498.831L319.95 499.19L317.941 499.302L317.436 499.874L314.294 500.368L311.679 501.355L311.14 501.175L311.084 500.042L310.231 500.312L309.546 501.557L307.425 500.906L307.088 501.377L307.346 501.983L306.347 501.871L305.09 502.645L305.259 505.168L304.372 505.202L303.295 504.103L301.499 504.944L301.398 504.305L300.59 504.406L299.68 504.978L299.254 504.877L298.917 505.348L296.055 505.505L295.674 505.998L295.393 505.594L295.112 506.088L293.9 506.043L291.532 507.041L290.421 507.154L290.309 506.256L289.871 506.223L288.255 504.798L288.603 504.125L288.333 503.407L289.691 502.544L289.018 499.964L287.301 499.852L285.078 500.648L283.608 500.469L283.9 499.885L283.215 499.459L280.813 500.446L279.68 499.302L279.994 498.573L278.973 496.162L279.018 495.365L279.882 495.13L280.443 495.747L280.858 495.735L281.363 494.412L279.781 491.664L281.015 491.159L280.623 489.656L282.205 489.847L282.991 489.555L283.72 489.118L283.967 488.187L283.193 487.974L283.821 487.222L283.395 485.551L283.687 485.114L281.913 483.398L282.273 482.702L281.262 482.646L280.948 481.132L279.579 479.292Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-40-inside-26_10718_32869)\" />\n                <mask id=\"path-41-inside-27_10718_32869\" fill=\"white\">\n                    <path d=\"M159.183 407.194L159.71 405.187L160.204 404.558L160.114 403.908L161.719 404.166L162.494 403.661L165.805 404.558L166.231 404.962L166.332 406.746L169.329 407.273L169.857 407.699L170.811 411.557L170.721 413.756L172.068 414.956L172.315 415.719L170.451 417.524L170.059 418.433L170.418 420.575L170.395 425.645L174.986 426.419L174.761 429.178L175.121 429.358L175.659 428.83L177.141 429.402L177.275 430.322L179.127 430.569L178.746 432.969L179.419 433.362L180.171 433.519L181.148 432.913L181.496 431.13L181.237 430.636L181.372 429.279L181.058 428.853L181.316 426.441L183.022 425.937L182.551 425.118L182.652 424.534L183.336 424.277L184.38 424.501L185.053 423.761L186.311 423.233L188.443 422.751L189.543 422.841L191.541 419.756L193.269 420.037L194.268 422.045L194.975 422L198.488 415.954L199.487 415.674L201.148 416.907L202.574 417.715L209.678 418.882L209.858 417.749L210.475 417.48L211.833 419.454L212.271 421.057L211.373 425.836L210.363 425.981L210.082 428.236L208.578 431.332L210.015 434.528L210.991 434.539L212.26 435.268L213.057 435.067L213.539 435.482L212.877 436.895L213.236 439.172L214.1 440.304L212.944 440.944L212.72 441.639L213.068 442.234L212.821 442.727L213.135 444.903L212.282 445.015L211.878 445.486L211.339 445.273L210.7 445.643L210.419 445.296L210.082 445.419L209.992 446.002L208.758 445.913L207.815 444.084L206.199 444.679L206.019 445.845L205.626 446.249L202.338 445.991L200.374 445.15L199.656 445.172L198.297 445.812L197.209 447.102L196.187 449.737L197.478 450.971L197.534 451.947L198.443 452.407L197.938 453.427L198.241 456.209L197.792 457.521L196.906 458.419L196.782 459.103L195.694 459.753L195.727 460.37L195.009 460.628L194.403 460.337L193.191 460.483L192.54 460.954L191.709 462.961L194.077 468.278L195.076 469.321L194.964 470.039L194.111 470.768L193.729 472.125L192.36 472.069L192.08 472.843L192.326 473.819L192.035 474.492L193.258 475.68L193.46 476.499L194.796 477.419L194.01 478.339L194.818 478.944L194.234 479.763L193.965 480.425L193.404 480.447L192.495 479.73L191.9 479.92L191.058 479.326L190.194 478.036L190.497 476.724L190.216 475.804L189.711 475.254L189.128 475.568L189.352 476.522L188.028 476.129L187.276 474.649L187.41 474.009L185.805 471.654L185.143 472.349L184.526 472.013L184.055 472.473L183.336 472.181L183.875 470.308L183.538 469.31L182.842 468.872L182.36 469.063L180.777 468.603L181.103 467.504L180.766 466.943L180.878 466.427L179.745 465.799L178.476 466.102L177.691 466.719L176.905 466.371L176.22 464.498L176.198 463.634L176.703 462.793L176.378 462.277L175.132 462.636L174.941 463.444L175.345 464.184L174.694 464.733L174.537 465.709L174.211 465.889L173.325 465.541L173.628 464.733L173.111 464.375L172.068 464.868L171.08 464.453L170.238 465.395L169.733 464.767H168.936L168.656 465.687L168.05 465.911L168.016 466.663L167.185 466.943L165.681 467.044L164.727 466.147L162.842 468.379L162.707 469.287L161.731 468.951L159.868 469.534L160.058 468.861L159.598 468.255L156.68 467.919L156.972 465.485L156.534 464.79L157.309 464.139L156.399 462.625L156.254 461.043L156.848 459.776L157.286 459.495L158.813 459.787L160.631 458.609L161.91 459.473L162.404 459.249L163.01 458.06L163.448 454.841L164.873 453.214L161.663 452.126L159.306 451.857L154.794 451.566L153.829 451.958L153.706 451.173L153.212 450.399L153.683 449.401L154.166 449.356L154.469 448.795L154.087 447.617L154.671 446.877L154.054 446.507L155.546 445.812L155.311 444.668L156.052 443.075L156.254 443.31L157.252 443.131L157.724 442.694L158.061 442.918L159.026 442.705L158.813 441.572L159.901 440.506L160.541 440.686L161.517 440.136L161.035 439.385L161.416 439.037L160.979 438.409L161.237 438.241L163.594 438.476L163.28 436.57L162.494 435.381L162.303 434.416L162.034 434.988L161.248 434.618L160.732 433.541L161.024 433.339L160.676 432.778L160.855 431.668L159.172 431.388L159.598 427.451L159.722 425.791L159.475 425.208L157.69 424.478L158.633 421.764L158.947 418.713L157.353 420.295L156.422 420.542L153.919 419.297L153.212 417.356L155.861 416.919L156.601 417.109L157.006 416.762L157.713 413.116L159.16 411.591L158.622 408.854L159.183 407.194Z\" />\n                </mask>\n                <path d=\"M159.183 407.194L159.71 405.187L160.204 404.558L160.114 403.908L161.719 404.166L162.494 403.661L165.805 404.558L166.231 404.962L166.332 406.746L169.329 407.273L169.857 407.699L170.811 411.557L170.721 413.756L172.068 414.956L172.315 415.719L170.451 417.524L170.059 418.433L170.418 420.575L170.395 425.645L174.986 426.419L174.761 429.178L175.121 429.358L175.659 428.83L177.141 429.402L177.275 430.322L179.127 430.569L178.746 432.969L179.419 433.362L180.171 433.519L181.148 432.913L181.496 431.13L181.237 430.636L181.372 429.279L181.058 428.853L181.316 426.441L183.022 425.937L182.551 425.118L182.652 424.534L183.336 424.277L184.38 424.501L185.053 423.761L186.311 423.233L188.443 422.751L189.543 422.841L191.541 419.756L193.269 420.037L194.268 422.045L194.975 422L198.488 415.954L199.487 415.674L201.148 416.907L202.574 417.715L209.678 418.882L209.858 417.749L210.475 417.48L211.833 419.454L212.271 421.057L211.373 425.836L210.363 425.981L210.082 428.236L208.578 431.332L210.015 434.528L210.991 434.539L212.26 435.268L213.057 435.067L213.539 435.482L212.877 436.895L213.236 439.172L214.1 440.304L212.944 440.944L212.72 441.639L213.068 442.234L212.821 442.727L213.135 444.903L212.282 445.015L211.878 445.486L211.339 445.273L210.7 445.643L210.419 445.296L210.082 445.419L209.992 446.002L208.758 445.913L207.815 444.084L206.199 444.679L206.019 445.845L205.626 446.249L202.338 445.991L200.374 445.15L199.656 445.172L198.297 445.812L197.209 447.102L196.187 449.737L197.478 450.971L197.534 451.947L198.443 452.407L197.938 453.427L198.241 456.209L197.792 457.521L196.906 458.419L196.782 459.103L195.694 459.753L195.727 460.37L195.009 460.628L194.403 460.337L193.191 460.483L192.54 460.954L191.709 462.961L194.077 468.278L195.076 469.321L194.964 470.039L194.111 470.768L193.729 472.125L192.36 472.069L192.08 472.843L192.326 473.819L192.035 474.492L193.258 475.68L193.46 476.499L194.796 477.419L194.01 478.339L194.818 478.944L194.234 479.763L193.965 480.425L193.404 480.447L192.495 479.73L191.9 479.92L191.058 479.326L190.194 478.036L190.497 476.724L190.216 475.804L189.711 475.254L189.128 475.568L189.352 476.522L188.028 476.129L187.276 474.649L187.41 474.009L185.805 471.654L185.143 472.349L184.526 472.013L184.055 472.473L183.336 472.181L183.875 470.308L183.538 469.31L182.842 468.872L182.36 469.063L180.777 468.603L181.103 467.504L180.766 466.943L180.878 466.427L179.745 465.799L178.476 466.102L177.691 466.719L176.905 466.371L176.22 464.498L176.198 463.634L176.703 462.793L176.378 462.277L175.132 462.636L174.941 463.444L175.345 464.184L174.694 464.733L174.537 465.709L174.211 465.889L173.325 465.541L173.628 464.733L173.111 464.375L172.068 464.868L171.08 464.453L170.238 465.395L169.733 464.767H168.936L168.656 465.687L168.05 465.911L168.016 466.663L167.185 466.943L165.681 467.044L164.727 466.147L162.842 468.379L162.707 469.287L161.731 468.951L159.868 469.534L160.058 468.861L159.598 468.255L156.68 467.919L156.972 465.485L156.534 464.79L157.309 464.139L156.399 462.625L156.254 461.043L156.848 459.776L157.286 459.495L158.813 459.787L160.631 458.609L161.91 459.473L162.404 459.249L163.01 458.06L163.448 454.841L164.873 453.214L161.663 452.126L159.306 451.857L154.794 451.566L153.829 451.958L153.706 451.173L153.212 450.399L153.683 449.401L154.166 449.356L154.469 448.795L154.087 447.617L154.671 446.877L154.054 446.507L155.546 445.812L155.311 444.668L156.052 443.075L156.254 443.31L157.252 443.131L157.724 442.694L158.061 442.918L159.026 442.705L158.813 441.572L159.901 440.506L160.541 440.686L161.517 440.136L161.035 439.385L161.416 439.037L160.979 438.409L161.237 438.241L163.594 438.476L163.28 436.57L162.494 435.381L162.303 434.416L162.034 434.988L161.248 434.618L160.732 433.541L161.024 433.339L160.676 432.778L160.855 431.668L159.172 431.388L159.598 427.451L159.722 425.791L159.475 425.208L157.69 424.478L158.633 421.764L158.947 418.713L157.353 420.295L156.422 420.542L153.919 419.297L153.212 417.356L155.861 416.919L156.601 417.109L157.006 416.762L157.713 413.116L159.16 411.591L158.622 408.854L159.183 407.194Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-41-inside-27_10718_32869)\" />\n                <mask id=\"path-42-inside-28_10718_32869\" fill=\"white\">\n                    <path d=\"M469.686 109.898L470.426 109.146L470.83 107.071L472.233 106.443L474.467 108.473L473.917 109.718L473.502 109.864L473.243 108.888L472.2 108.35L471.829 108.698L472.604 109.056L472.839 109.561L472.39 110.055L471.762 109.898L470.988 110.672L470.224 110.829L470.168 110.559L470.527 110.503L470.393 109.976L469.753 110.234L469.686 109.898ZM693.25 111.389L693.508 113.049L693.306 114.339L693.104 114.53L692.958 114.081L691.185 118.467L690.455 118.332L689.658 118.758L688.368 121.764L683.351 120.217L681.286 117.67L678.794 116.874L677.627 115.539L677.817 114.115L678.446 113.453L679.535 113.285L680.859 114.16L682.038 113.229L681.768 112.814L682.172 111.322L681.577 110.559L681.847 107.879L687.38 108.911L691.05 109.169L692.52 110.144L693.25 111.389ZM697.044 64.9991L697.133 67.7022L696.774 69.7548L696.067 71.4036L695.506 74.4768L694.17 77.1126L693.272 77.079L692.835 76.6303L694.327 74.5329L694.541 73.2879L692.262 72.2897L690.904 72.256L689.614 72.7944L690.848 71.9195L690.814 71.527L690.22 71.1344L690.309 70.7418L689.097 70.1025L686.583 67.4106L685.584 66.8049L684.439 66.9844L683.732 66.6928L684.395 67.2872L685.158 67.3658L685.674 69.2725L686.987 69.3174L688.491 70.5175L688.805 71.4709L688.57 72.0429L687.773 72.0093L686.864 71.2129L686.594 71.8747L687.245 72.357L688.166 72.4355L688.121 73.2431L688.727 73.9609L688.738 74.4993L687.93 75.4639L688.053 76.7537L688.974 77.0229L689.782 76.4285L689.838 75.834L689.434 75.3853L689.614 74.7797L691.623 72.9739L691.959 73.0412L692.375 73.5908L692.229 74.6899L692.509 75.0376L691.971 75.7779L692.824 77.6398L694.024 78.1221L695.45 78.1333L695.708 79.2886L695.618 81.1954L694.877 81.0383L694.013 81.9693L694.642 81.6776L695.349 82.0141L694.922 85.2444L693.901 87.4876L691.555 90.3253L689.917 93.163L689.266 93.7351L689.086 93.5668L688.929 94.5314L687.941 95.8549L686.549 96.584L685.988 97.4589L686.303 96.5055L683.328 97.8514L682.834 97.6608L683.081 98.1991L681.656 101.407L681.263 101.699L680.837 101.183L681.431 102.158L680.399 103.516L680.118 104.749L678.255 103.583L677.088 103.807L675.258 105.624L673.62 108.182L672.935 108.013L670.073 109.83L668.547 109.157L667.256 109.415L668.883 109.696L669.052 110.974L666.717 113.857L666.01 113.958L667.031 113.173L666.403 112.735L664.753 114.586L663.967 114.653L663.833 115.293L663.507 114.474L663.002 114.384L662.71 114.855L662.205 114.642L662.116 114.99H661.577L661.117 115.719L660.589 115.887L661.375 115.865L661.813 115.091L663.608 115.629L664.989 114.765L665.157 116.055L664.618 118.456L661.813 121.82L659.276 122.179L658.255 122.83L657.301 124.367L657.514 124.602L656.234 125.903L653.844 130.356L653.148 130.02L652.867 129.29H652.003L652.777 129.515L652.923 131.253L651.262 133.822L649.915 133.934L648.266 135.19L646.503 134.977L645.617 135.336L643.765 134.899L642.878 135.516L641.138 134.697L640.016 135L639.971 134.685L638.905 134.45L635.976 134.742L635.392 133.833L634.561 134.282L634.483 134.697L635.448 135.033L635.661 135.459L638.86 135.168L641.958 136.929V138.981L640.555 140.372L640.409 142.806L639.601 144.062L638.68 144.343L635.919 143.894L634.539 145.318L633.776 148.111L633.45 148.223L633.877 148.381L633.91 148.762L632.811 149.839L632.754 152.564L631.621 154.045L631.25 155.75L628.231 158.228L627.502 158.453L627.996 159.462L629.264 159.72L630.005 159.372L632.451 156.501L633.349 157.084L632.889 156.31L633.428 154.897L635.257 153.439L635.1 149.94L635.268 149.289L636.088 148.549L636.301 147.663L637.064 147.708L638.422 148.695L639.848 149.087L642.654 148.257L644.449 148.571L647.693 148.448L648.299 148.179L649.725 146.507L650.432 146.227L651.442 149.154L652.609 150.018L653.563 150.063L652.744 149.267L652.845 146.294L654.169 145.431L653.664 145.352L653.103 145.756L651.24 145.33L651.06 145.79L651.33 144.724L656.717 143.199L659.68 141.785L659.938 141.505L659.399 140.866L659.478 139.609L660.073 140.91L660.982 141.572L661.7 140.944L661.319 140.709L661.498 140.047L663.653 140.529L664.259 140.282L665.572 138.835L666.459 138.701L666.874 137.445L666.19 137.534L666.448 136.839L667.133 136.918L668.738 136.088L668.535 135.426L669.287 134.629L670.208 134.786L672.093 134.013L672.385 133.519L672.778 133.665L672.845 133.025L672.43 132.353L672.812 131.051L671.947 130.939L670.96 130.21L670.399 131.253L668.996 131.938L667.862 133.351L666.448 132.779L663.844 133.104L663.507 133.452L663.631 134.248L662.98 133.631L662.205 132.016L661.88 129.459L662.744 129.122L664.349 127.698L665.348 124.232L668.289 123.705L670.051 124.411L672.105 125.926L673.025 127.058L673.743 127.148L674.439 126.385L674.54 125.858L674.159 125.757L674.136 125.107L674.765 123.716L676.156 122.852L677.728 122.763L678.323 124.019L676.639 124.748L675.797 124.692L675.303 125.163L675.921 127.922L673.811 129.515L673.171 130.468L672.879 132.958L674.282 133.272L675.023 135.358L674.574 135.717L673.665 135.112L672.857 135.168L671.128 140.226L667.211 140.282L666.717 141.157L670.051 142.828L670.219 144.376L668.558 146.171L669.4 147.506L671.128 146.833L672.598 147.248L672.924 147.932L672.408 148.941L673.104 150.141L673.014 151.297L671.959 151.521L671.375 152.62L672.733 152.889L671.779 155.514L671.431 157.735L671.925 161.986L672.655 161.874L673.216 162.266L673.014 163.623L674.607 164.005L675.438 165.003L675.416 166.584L674.607 167.448L674.203 168.502L674.877 169.658L676.504 169.579L677.155 170.533L678.367 170.488L679.243 171.609L678.906 174.2L679.793 174.458L680.32 175.513L681.858 176.051L682.206 181.098L681.959 184.586L682.711 191.327L682.487 193.784L682.756 194.625L684.439 195.444L685.854 197.362L687.111 197.53L687.818 198.035L687.807 199.268L686.651 199.538L686.415 200.884L686.718 201.68L686.325 202.734L685.158 202.869L684.742 204.08L684.294 204.316L683.654 203.261L683.138 203.239L681.735 205.213L678.356 206.189L677.559 207.669L675.909 207.871L673.541 209.643L670.567 210.597L669.591 211.797L668.322 212.033L667.335 212.851L666.908 213.704L667.211 214.59L666.639 215.038L666.583 216.474L668.042 217.596L668.423 218.628L663.002 219.503L662.643 220.108L662.957 221.23L662.531 222.576L660.993 223.193L660.858 224.55L661.431 225.212L661.206 227.107L662.295 227.69L662.239 228.307L661.633 228.98L661.42 231.179L660.466 233.68L658.995 234.196L657.413 233.927L657.02 233.343L657.087 232.177L656.425 232.009L652.284 232.278L650.488 233.792L649.792 235.553L649.321 235.901L647.85 235.766L645.606 236.54L644.753 237.381L641.913 239.097L639.028 239.378L637.614 238.48L636.458 239.411L635.818 240.757L635.055 241.195L634.763 242.709L637.861 248.171L640.779 254.318L641.228 259.387L641.015 269.639L640.05 281.203L639.926 286.71L639.556 288.471L638.77 289.279L637.311 288.774L635.863 290.21L634.157 290.456L633.607 293.159L632.923 293.574L629.87 293.552L629.679 294.203L631.172 295.683L632.036 295.212L632.945 295.403L633.114 296.435L634.685 296.154L634.662 297.22L634.045 298.252L634.393 298.622L635.224 298.397L635.381 299.429L636.032 300.237L635.706 301.717L636.166 304.286L635.134 306.17L635.022 311.072L637.143 312.418L637.569 313.584L637.513 320.763L639.107 321.682L640.386 323.611L641.621 323.589L641.924 324.015L640.544 325.036L640.263 326.752L639.59 326.449L638.669 326.584L637.805 327.212L637.12 328.782L637.771 329.904H636.885L636.043 331.283L635.145 331.586L634.864 332.439L633.888 332.528L633.562 333.089L633.641 334.031L634.258 334.558L634.27 335.388L635.066 336.05L634.191 336.353L633.697 335.579L633.181 335.646L632.912 336.555L633.192 337.306L632.339 338.832L632.653 339.74L632.373 340.2L631.228 340.155L631.576 341.658L631.228 342.107L632.339 343.801L633.372 342.735L634.449 343.038L634.573 343.902L634.225 344.518L634.73 345.158L635.886 344.631L637.996 344.373L638.366 343.969L638.232 343.24L638.916 342.847L639.679 345.034L641.105 344.922L641.565 345.921L643.686 346.111L643.944 347.782H645.067L645.662 347.278L646.492 347.401L649.006 349.095H650.005L650.106 348.411L651.352 348.983L651.857 350.665L652.923 351.91L651.88 354.12L651.24 353.402L648.064 353.548L646.649 353.951L646.335 355.196L645.74 355.6L644.483 355.387L643.293 354.164L642.407 355.252L639.354 353.604L639.017 353.94L639.556 356.43L638.815 358.337L638.68 360.625L637.67 362.016L638.018 363.014L639.421 364.91L638.984 365.639L638.153 366.087L637.289 365.459L636.627 365.796L636.312 366.928L637.031 367.736L636.638 369.71L636.065 370.125L634.853 370.249L635.089 372.413L636.582 373.838L637.693 375.767L637.322 376.698L637.884 377.483L639.938 378.077L639.343 379.087L639.444 379.995L637.266 382.317L637.087 383.17L636.391 384.044L636.447 384.605L636.952 385.054L636.324 387.948L632.53 391.593L633.024 393.769L631.89 394.633L630.364 394.655L629.982 395.418L627.524 397.313L627.378 397.964L624.729 399.164L624.617 399.96L625.235 400.622L625.493 401.755L623.057 403.123L623.001 403.852L622.137 404.245L621.8 405.12L621.867 407.621L620.936 408.092L620.992 408.832L621.643 409.012L621.924 409.64L621.16 411.423L621.823 412.96L623.832 415.293L626.088 416.594L627.49 416.403L628.097 417.076L628.86 416.919L628.703 420.127L629.084 421.013L628.635 422.303L629.286 422.931L629.331 423.604L625.829 423.469L625.1 424.95L623.248 426.408L623.899 427.462L624.056 428.539L625.392 430.042L626.536 430.02L626.66 431.254L626.267 431.983L627.603 433.385L627.794 435.415L627.266 435.964L625.942 436.413L623.226 438.959L623.023 439.643L623.461 440.63L624.067 441.079L622.305 442.627L621.329 442.638L620.812 443.042L619.589 442.795L619.679 441.449L618.994 441.326L618.871 440.552L617.737 440.406L616.536 440.989L616.334 438.656L613.034 437.725L611.587 435.931L611.553 435.112L610.666 434.024L610.7 433.071L611.71 433.059L611.676 432.566L610.228 432.375L609.454 432.734L608.388 432.184L607.479 433.082L607.277 433.743L606.165 433.519L604.448 434.36L603.808 436.278L605.021 438.701L605.223 440.821L604.706 441.763L603.315 442.526L601.856 444.5L598.814 445.274L598.152 445.879L596.951 448.571L595.918 448.796L593.786 450.568L593.685 451.218L594.347 451.633L592.978 453.271L592.955 454.168L590.868 454.056L591.35 455.615L590.89 457.141L591.294 458.352L591.956 458.756L592.147 459.832L591.788 460.203L591.058 460.023L590.464 460.977L589.936 460.943L589.554 460.057L587.893 459.115L587.703 458.296L588.062 457.791L587.422 457.118L587.714 456.266L587.096 455.727L587.186 455.133L585.581 454.796L585.155 454.415L584.863 453.136L585.48 451.903L584.571 450.994L583.539 451.431L582.697 450.994L581.608 451.241L581.316 452.475L580.508 453.002L579.992 455.357L578.331 455.738L577.59 455.581L577.018 456.277L575.154 456.367L574.661 455.514L567.825 455.256L563.168 466.484L565.401 467.684L565.177 468.435L564.245 468.94L564.133 469.602L564.447 470.106L566.782 470.252L566.434 473.348L567.522 473.505L567.668 473.83L567.332 474.851L567.534 475.905L564.694 476.275L564.829 478.732L563.976 478.664L563.863 480.044L562.943 480.975L562.494 480.437L561.495 480.302L561.181 481.412L560.148 481.536L559.834 483.51L558.364 484.867L558.487 486.269L558.151 486.74L558.925 487.402L558.768 489.959L559.52 491.305L557.488 492.225L557.904 493.492L557.208 496.274L557.791 496.924L557.892 497.923L556.501 501.658L556.557 502.364L553.01 501.949L552.034 503.733L550.474 504.013L549.71 505.023L549.576 506.469L550.485 506.638L551.091 507.546L552.752 508.735L552.797 509.531L553.661 510.047L554.828 512.122L555.569 512.582L556.377 513.861L558.229 514.298L557.971 515.353L555.805 516.138L554.346 515.431L554.144 516.149L553.392 516.328L552.909 517.024L551.315 516.598L550.462 516.912L550.182 516.486L547.443 518L545.917 517.147L544.705 518.123L544.626 517.876L542.202 518.157L541.394 518.863L542.056 519.48V519.963L541.439 520.434L540.608 524.191L538.857 524.404L537.937 524.886L536.747 527.567L536.096 527.937L536.04 528.924L534.805 530.124L534.783 531.493L533.919 532.132L533.582 533.826L532.134 534.106L531.405 534.622L527.398 538.447L525.939 538.368L523.873 539.165L522.807 538.918L520.36 539.636L519.541 539.411L518.733 538.357L517.611 538.649L515.804 537.909L513.682 538.234L513.211 537.594L512.582 537.426L511.067 538.077L509.911 535.733L508.317 534.375L510.315 530.506L511.92 528.935L512.695 528.622L513.031 527.848L514.67 526.692L515.916 525.088L516.006 524.034L515.546 522.296L516.118 521.881V522.217L516.399 522.206L516.23 521.892L516.847 521.914L518.037 521.219L519.496 519.48L519.541 518.628L518.722 517.349L516.511 516.441L516.387 515.196L515.411 513.143L515.355 512.347L516.466 510.317L516.455 509.083L514.749 506.088L514.008 503.149L511.561 501.231L512.044 498.943L511.438 498.282L510.428 498.394L510.181 497.373L508.362 497.844L508.564 497.048L508.183 495.814L506.522 495.119L506.252 493.93L505.714 494.58L503.907 494.849L501.92 496.016L501.19 495.242L500.225 495.511L499.776 496.42L499.417 496.05L498.239 496.184L497.812 494.984L496.925 494.872L497.161 494.199L496.353 493.459L496.23 491.989L495.197 491.171L494.692 491.215L493.693 490.071L496.308 486.83L498.182 486.392L498.755 485.607L500.034 485.024L500.169 483.981L499.35 483.6L498.631 481.659L498.699 480.538L497.565 479.203L497.217 477.734L496.095 477.655L495.646 476.702L494.389 476.724L493.412 475.243L493.547 474.627L492.616 473.864L492.896 473.023L493.637 472.967L494.007 472.585L494.119 471.677L493.536 469.232L494.456 467.067L494.086 466.259L492.739 466.405L492.896 465.799L494.176 464.566L495.68 461.122L497.374 460.303L497.038 459.07L499.563 458.262L499.743 455.548L499.597 454.415L498.665 453.473L497.947 453.271L496.241 453.551L494.535 452.744L493.682 451.678L489.204 450.736L489.091 449.682L488.227 448.268L487.946 444.253L491.055 440.653L492.795 437.983L495.04 436.805L494.894 435.852L493.356 434.203L493.222 432.891L493.008 432.532L491.83 432.588L487.509 433.216L486.117 430.951L484.422 426.554L481.706 426.464L481.549 424.187L481.179 423.447L480.258 423.066L475.14 422.079L471.47 422.337L468.821 423.054L461.593 423.245L461.055 421.507L461.694 420.306L461.683 417.973L462.424 417.323L463.064 415.82L459.618 409.113L458.675 408.406L458.462 407.486L460.976 405.624L469.798 400.588L469.73 398.345L470.898 397.414L472.233 397.078L471.841 395.732L469.742 395.249L467.71 393.388L466.195 393.208L464.096 391.997L462.581 391.671L461.941 391.088L460.561 388.262L460.572 385.009L461.144 383.506L463.816 380.366L464.152 378.066L464.814 376.496L466.711 374.6L467.306 373.109L468.563 372.032L468.776 370.574L469.225 370.215L469.427 369.329L468.765 367.646L469.192 367.052L469.012 366.244L469.383 364.237L468.9 363.945L468.137 364.08L467.25 362.038L465.679 361.152L465.443 360.311L466.992 358.707L467.329 355.611L468.507 354.95L469.989 353.334L472.2 351.708L472.233 347.76L471.627 345.921L471.829 345.225L471.055 343.565L471.885 342.073L471.021 338.058L470.258 337.979L470.033 337.52L469.012 337.093L467.329 338.305L466.543 338.17L465.78 337.273L464.624 336.869L465.297 336.073L465.095 335.467L462.188 336.017L459.842 335.781L459.517 335.299L460.056 334.132L459.169 332.024L459.775 330.689L461.694 328.883L460.841 324.711L459.764 323.757L457.878 323.129L459.315 322.277L458.933 321.368L456.105 319.417L454.466 319.809L453.479 319.506L452.985 318.845L452.715 316.713L451.627 315.3L451.357 314.369L452.109 313.584L452.132 312.597L453.243 311.812L451.402 308.077L449.326 305.576L449.247 304.667L450.134 303.209L450.908 302.592L451.211 301.605L450.302 298.913L449.012 298.083L448.866 296.917L441.727 290.355L443.243 288.55L443.052 286.239L443.703 284.893L443.647 284.119L441.413 281.842L441.076 279.689L439.943 278.848L438.585 275.999L438.921 275.617L439.718 275.651L441.166 275.068L442.266 275.561L443.613 275.113L443.725 272.05L444.859 270.671L445.117 268.831L446.453 267.878L446.621 264.468L446.138 261.541L447.934 260.33L447.799 259.096L447.429 257.985L445.487 256.023L444.915 253.005L443.815 250.897L444.702 249.786L444.14 248.71L442.535 248.553L439.909 247.577L439.752 246.747L440.964 245.053V243.819L438.675 242.137L438.102 243.101L438.27 244.503L438.012 245.569L437.328 246.287L436.508 246.478L435.431 246.186L433.534 247.352L432.546 247.263L429.92 245.244L428.865 245.367L426.766 244.492L424.297 244.705L423.343 244.178L422.468 242.642L421.85 242.507L420.335 237.448L417.148 236.753L417.428 234.79L416.485 232.996L416.194 231.672L417.911 229.978L419.493 227.399L419.572 225.784L419.931 225.234L420.492 225.369L421.121 225.615L421.255 226.277L422.468 223.911L426.452 219.951L426.508 219.155L427.473 218.673L429.224 218.706L430.549 219.749L431.469 219.839L431.839 219.2L431.705 218.729L430.481 217.327L431.817 213.636L430.414 212.066L431.11 209.61L430.246 207.759L430.01 204.619L429.393 203.452L426.654 202.611L423.859 201.254L421.087 197.44L420.144 197.362L419.426 196.722L418.854 194.109L419.044 193.167L419.707 192.875L419.965 192.023L419.808 189.555L423.018 189.465L424.544 188.725L425.621 187.11L426.284 183.734L428.034 183.151L428.259 182.556L427.754 181.233L425.195 179.371L423.624 178.866L422.827 177.879L420.402 178.294L418.573 178.014L416.227 176.253L413.803 173.74L413.938 172.249L412.411 169.422L417.798 169.691L419.976 170.151L423.433 173.785L424.566 174.481L424.342 175.154L424.993 174.626L429.112 176.612L430.021 179.046L431.076 179.214L431.839 180.694L434.252 183.409L434.926 185.764L437.62 187.368L439.101 187.559L442.266 187.076L446.026 185.495L447.126 185.372L447.867 185.394L448.506 186.347L450.156 186.661L450.751 187.491L450.83 188.288L449.741 190.408L448.192 191.372L448.383 194.546L446.15 195.533L442.289 198.36L442.951 203.003L441.907 204.596L442.569 205.179L442.401 206.043L442.255 205.572L442.12 205.931L443.68 210.967L442.446 212.403L442.12 214.253L441.043 215.285L441.649 216.788L441.593 217.528L440.942 218.762L439.651 219.57L439.741 220.142L439.18 220.714L439.685 220.557L439.808 221.611L438.82 223.664H439.213L439.954 221.611L440.044 219.547L440.785 219.312L441.615 217.865L441.593 219.57L441.828 219.536L441.862 220.355L442.468 220.77L442.558 221.6L442.333 221.948L442.244 221.701L440.919 221.69L440.526 221.993L441.862 221.914L442.232 222.217L443.119 223.731L443.287 224.752L442.434 225.212L441.986 225.929L442.042 227.455L442.3 227.612L442.188 225.907L442.715 225.189L443.445 224.898L443.725 225.335L444.062 224.64L445.723 225.245L448.405 228.105L447.99 229.092L446.542 228.902L445.947 228.296L446.004 228.655L446.554 229.07L448.069 229.283L449.528 230.124L449.977 231.156L451.773 233.164L452.502 235.16L455.252 235.228L455.162 235.631L455.297 234.97L456.082 234.992L457.811 238.581L458.72 239.064L459.708 238.761L460.83 237.695L460.549 237.247L459.652 237.706L459.27 235.968L456.958 235.329L455.723 233.455L455.88 233.276L456.296 233.803L456.116 233.31L454.736 232.704L454.017 231.796L452.94 229.777L452.626 228.341L451.896 227.533L449.562 226.838L449.842 225.29L448.271 221.791L448.731 220.703L448.753 220.983L450.033 221.488L451.054 221.432L452.345 220.635L452.805 221.308L452.715 220.523L453.187 220.31L454.691 217.843L454.309 216.799L454.623 216.373L454.118 216.508L454.59 216.048L454.522 215.543L453.871 214.59L452.581 208.69L452.648 207.759L451.773 204.675L450.897 203.385L450.201 203.239L449.685 201.781L450.347 202.129L450.549 201.31L449.64 198.685L451.009 197.171L451.885 192.729L452.839 192.135L453.389 191.215L453.77 189.69L453.636 188.77L452.401 186.852L451.582 186.168L451.896 184.844L450.841 183.398L449.82 182.781L446.778 182.231L446.43 181.895L445.981 182.164L445.936 182.725L444.466 178.429L442.434 176.735L442.603 176.421L443.186 176.836L444.163 175.658L443.736 175.546L443.882 175.154L443.512 174.974L442.547 172.731L439.662 171.239L440.077 170.286L439.415 170.97L437.956 170.69L437.518 170.263L436.564 170.533L436.295 170.118L434.724 170.151L432.401 168.435L431.682 168.267L431.188 167.616L430.481 165.81L430.638 165.238L431.211 164.98L430.93 164.094L431.794 163.074L431.323 162.513L430.38 163.107L429.931 162.805L429.763 161.223L429.853 159.944L431.458 158.139L431.143 158.195L430.897 157.51L431.379 154.695L430.695 152.474L430.807 151.936L429.875 151.016L428.405 150.355L429.314 149.973L429.191 148.919L427.541 148.392L427.35 147.595L426.744 147.909L427.451 147.315L429.022 147.483L428.977 146.878L429.662 147.371L430.739 147.102L429.83 146.732L429.505 146.059L429.819 145.969L428.405 144.735L427.844 144.993L427.047 144.421L427.832 142.638L428.304 142.941L428.809 142.615L428.618 142.021L429.46 141.617L430.156 140.473L429.482 140.395L429.617 139.643L429.976 139.408L429.774 138.835L429.202 139.06L429.123 139.766L428.887 139.733L428.775 138.914L428.315 138.454L428.843 137.714L428.528 137.276L430.38 136.805L431.177 137.546L431.671 137.512L431.66 136.94L433.13 136.76L433.029 136.446L434.881 136.637L435.521 136.334L435.588 135.83L439.629 134.876L443.186 134.506L443.725 135.1L443.815 135.807L444.017 135.459L443.602 134.484L452.21 134.674L459.629 132.678L462.547 131.354L464.006 131.68L465.252 132.711L467.059 132.868L468.541 132.409L468.631 130.771L469.955 129.582L471.93 129.492L473.367 128.348L476.936 127.687L477.273 128.068L478.732 127.361L478.889 127.687L479.675 127.574L480.079 128.102L481.369 128.573L482.267 127.844H481.908L481.56 126.027L481.145 125.129L480.236 124.647L479.922 123.447L481.212 122.796L483.109 122.83L483.053 122.381L484.187 121.921L479.652 122.583L479.046 121.854L479.372 121.248L478.159 120.609L478.799 119.117L477.946 117.413L477.385 116.975L475.915 116.885L475.006 116.044L473.726 116.212L472.188 115.517L471.616 114.608L471.683 113.554L472.188 112.623L473.266 112.455L473.569 112.926L473.838 112.612L474.916 114.754L475.118 113.98L474.736 112.376L473.03 111.535L474.276 111.322L474.377 111.053L474.927 111.378L474.949 110.773L475.376 110.391L475.701 110.728L476.173 110.088L476.925 110.055L478.148 111.457L477.778 112.242L478.395 111.894L478.911 112.87L479.113 112.264H480.415L480.213 113.274L478.429 114.878L479.338 115.326L479.518 114.317L480.505 113.767L480.326 114.665L480.696 115.169L480.303 115.977L480.64 116.145L481.089 115.674L481.179 114.62L480.584 113.105L480.775 112.724L482.267 113.689L483.513 113.543L483.536 112.735L482.952 112.466L483.098 111.154L482.649 111.232L483.087 113.319L482.626 113.588L480.876 112.029L481.403 110.739L481.987 110.503L481.571 110.178L481.594 109.662L480.819 111.266L479.282 111.647L478.642 111.457L478.597 111.087L478.99 110.862L478.115 110.683L478.339 109.651L477.991 109.83L477.643 109L477.093 109.157L477.138 108.552L478.676 107.565L476.835 107.677L476.453 107.385L476.532 106.981L475.421 106.69L475.724 105.826L474.77 105.68L474.714 105.994L473.995 105.905L474.029 105.613L472.694 105.658L472.469 105.209L472.144 105.781L471.65 105.568L470.684 106.151L471.425 105.299L470.46 104.66L471.537 103.774L471.021 103.179L471.145 102.607L472.121 102.035L472.828 102.607L473.142 101.127L473.535 101.295L473.76 100.958L472.75 100.184L472.57 99.2086L473.434 99.1076L473.816 100.297L474.433 99.5339L474.467 100.061L475.657 100.835L475.69 101.497L474.826 101.205L474.444 101.598L474.994 102.08L475.376 103.246L475.926 102.271L476.577 102.136L476.914 102.472L476.7 103.19L477.643 102.607L477.576 103.886L477.015 104.402L478.115 104.166L478.44 104.559L478.002 104.974L478.025 105.927L478.833 105.434L480.236 106.308L479.484 105.075L479.686 104.267L480.146 103.987L479.865 103.729L478.855 103.875L478.519 103.123L479.091 102.585L478.833 102.349L479.394 102.215L479.147 101.912L479.417 101.508L479.888 101.934L480.438 101.889L481.1 102.596L480.898 101.822L481.426 101.07L480.763 101.104L481.134 98.4795L481.886 98.4683L481.605 98.0085L483.681 95.6755L482.941 95.7876L482.099 94.509L482.492 94.1389L483.917 93.9594L484.411 94.7558L483.884 95.4063L484.602 95.496L485.051 96.0232L485.533 94.9128L486.252 94.8679L486.544 94.094L486.398 93.0397L484.097 92.849L483.659 93.1855L481.19 91.5143L479.978 91.4245L479.955 92.2433L479.417 90.8301L480.213 89.8879L482.211 89.372L488.137 90.6394L489.181 90.359L490.012 89.5514L489.978 89.9889L490.539 89.787L491.302 89.2935L491.19 88.7551L491.639 88.7327L490.887 88.1494L492.784 85.2444L493.401 85.5697L493.76 86.624L494.232 86.6913L493.379 85.1547L493.469 84.0667L494.726 83.3601L496.241 83.6068L495.657 83.0572L495.803 82.732L495.208 83.1133L494.692 82.9339L495.579 81.958L497.285 81.5991L497.543 82.8441L497.296 83.1133L498.441 83.0012L497.722 82.7544L497.217 81.0832L495.927 81.2739L495.04 81.801L494.546 81.5991L497.307 80.1635L497.689 80.2868L499.069 77.9202L500.315 77.9987L500.865 78.6493L499.271 78.3128L499.148 79.5017L500.405 79.7933L500.023 80.4775L500.607 80.6682L501.336 79.9952L501.594 80.3093L502.694 80.399L502.268 79.5466L502.403 78.7278L503.951 78.3016L504.804 78.4586L505.018 78.0324L505.366 78.2343L504.299 77.0005L504.389 76.6864L505.702 75.8676L506.466 75.834L506.993 75.1162L508.374 75.6097L509.642 74.6563L510.102 74.9031L510.45 74.4544L510.225 74.0394L511.505 73.5908L512.178 72.9626L512.066 73.8039L512.627 74.9031L513.873 73.3103L514.749 72.7383L514.423 73.759L514.704 74.2076L515.579 74.1964L516.702 73.1197L517.162 73.8712L518.273 74.2637L517.858 72.2336L518.34 71.8074L518.374 70.8316L519.294 70.9998L518.991 71.6055L520.888 71.0559L520.832 71.5382L521.337 71.8186L521.763 70.697L524.177 70.6297L524.12 69.8109L524.704 69.2501L525.77 69.4744L526.085 69.1379L528.711 68.6556L529.912 67.8705L530.821 68.0387L531.977 67.7247L534.39 66.3002L535.479 66.132L538.206 64.3374L538.049 63.3055L537.712 64.2476L534.177 65.7394L533.649 65.3917L533.324 63.8326L532.819 64.8421L533.223 65.8179L532.751 66.1768L531.483 64.214L530.967 64.0233L531.292 62.8344L531.73 62.5316L531.102 62.4643L530.787 63.1709L529.811 63.4513L528.576 64.4271L530.148 65.3805L529.227 65.717L528.363 65.358L527.746 65.6721L528.284 64.6178L527.869 64.2252L527.88 63.3616L527.342 63.2158L528.655 62.2399L528.587 60.8267L528.206 60.3332L529.396 59.7387L529.137 60.7706L529.721 61.2305L529.598 61.7128L530.72 61.0174L531.068 60.4005L530.72 60.0191L531.393 59.4583L530.114 58.8414L530.81 58.1685L531.304 59.0097L532.168 58.1572L532.796 58.6844L532.538 59.2228L531.719 59.6939L532.291 60.0191L532.527 60.6585L532.078 61.3987L532.269 61.6231L532.83 61.5557L533.346 60.9276V60.0079L533.683 60.5575L534.895 59.7163L535.153 60.2659L537.084 60.3668L536.691 59.806L535.95 59.548L535.737 58.9872L534.615 58.8414L534.323 58.2918L534.581 57.9778L536.343 58.303L537.409 58.1012L537.634 57.7086L538.419 58.6395L539.34 57.8095L540.215 57.6525L540.036 58.3367L540.72 58.6507L540.743 59.6153L541.405 59.2452L542.224 59.3125L541.764 58.3816L542.505 58.1124L543.313 58.3703L542.954 57.9105L543.324 57.4618L541.36 57.4843L541.236 57.0132L541.764 56.7664L543.863 56.8113L544.514 58.1572L545.546 58.7517L546.523 57.9329L547.252 58.4937L548.509 56.5421L548.891 56.9235L550.07 57.0468L550.26 57.4618L551.82 57.3385L553.627 58.6956L554.065 58.3928L554.133 58.7629L555.131 59.1331L554.368 59.7051L553.987 59.2901L553.078 60.1201L553.414 60.6024L554.144 60.6585L551.641 64.3934L549.912 66.132L550.709 67.5789L551.068 67.4218L551.798 65.5151L553.874 63.3616L554.48 64.1916L555.064 63.6756L555.805 63.8775L556.041 63.5859L555.726 63.4737L555.861 62.9017L555.311 62.6549L556.276 62.3297L556.523 61.8025L557.567 61.7801L557.163 62.8232L558.42 62.5989L558.723 62.8793L558.409 63.7766L556.478 66.4012L556.77 66.5918L558.038 65.9525L558.611 65.2683L559.408 65.773L559.655 65.0552L560.687 64.3822L560.912 63.1933H561.271L563.403 61.1744L564.189 61.2417L562.618 62.3185L562.438 62.711L563.19 63.5298L562.427 64.1355L562.46 64.4495L563.504 64.4383L563.852 62.969L564.627 62.7559L564.941 62.2736L565.525 62.1614L566.804 63.0924L567.163 62.6886L567.96 62.8905L567.388 61.208L566.378 61.2417L565.637 60.5799L567.668 59.077L567.971 59.1555L567.825 59.6602L568.499 59.8172L568.319 60.1986L568.6 60.5575L569.475 60.0416L569.722 60.2659L570.16 59.5368L570.867 59.6939L571.069 59.0209L570.115 58.9536L569.857 58.4264L569.475 58.8078L568.858 58.4376V58.0226L569.442 57.5404L570.059 57.6861L569.98 57.316L570.676 56.6879L572.551 56.3963L574.56 54.2876L575.963 53.3903L576.299 53.6595L575.648 55.3308L576.782 55.4429L576.95 54.7363L578.129 55.2074L579.868 55.3195L579.992 55.8355L578.768 57.159L578.836 57.4618L579.251 57.9666L580.834 57.8208L582.012 56.9459L581.81 58.2133L580.699 58.8639L580.845 59.1443L582.091 59.2116L582.394 58.303L583.325 57.5404L583.236 56.8786L582.079 55.5663L581.754 53.9399L580.261 52.7735L580.239 52.022L579.61 50.9228L577.916 50.6872L577.332 48.186L576.198 46.5148L576.288 45.797L576.692 45.281L577.309 45.2362L581.002 47.0644L582.921 47.1766L585.637 46.4475L587.299 46.5485L587.725 46.9971L591.833 45.4156L592.63 44.5744H593.09L593.247 43.9687L594.167 43.4864L594.751 39.1682L595.436 38.9102L595.739 38.0466L595.492 36.9474L593.572 35.9828L592.764 33.1002L593.831 28.9951L594.661 29.0848L594.74 29.5783L595.133 29.5447L595.559 28.7483L595.952 28.7147L595.885 26.9649L596.513 26.191L595.963 26.1798L596.075 25.6526L595.436 25.8994L596.502 23.701L599.072 19.9324L599.835 18.2724L602.125 15.5468L602.383 14.4476L603.057 14.4028L604.482 15.4235L603.741 13.8532L604.628 13.3821L605.436 13.5279L605.021 13.3597V12.6755L606.917 9.50129L606.85 9.07507L607.411 8.63764L607.804 8.78345L607.692 8.44696L609.611 7.38143L609.948 6.80939L609.813 6.38318L610.206 6.52898L611.373 4.20723L612.597 3.85953L612.754 4.95872L614.583 4.64467L618.186 0.707763L618.646 1.17886L619.488 0.51709L619.982 1.01061L620.117 1.78453L619.634 2.22196L620.655 3.2875L622.541 2.02008L623.147 1.94155L623.843 2.35655L623.854 3.71372L624.269 3.96048L623.944 4.49885L625.279 6.33831L625.908 5.7102L628.254 7.40385L629.421 7.6506L630.24 7.52723L630.813 6.91033L632.766 6.93277L632.44 7.35899L633.046 8.8171L632.912 10.1406L633.327 11.3968L633.72 11.5875L633.562 12.1595L634.909 13.1241L634.943 13.7634L635.852 13.8308L635.313 14.6271L634.573 14.8402L634.011 14.2794L632.227 13.7522L631.61 14.2682L629.567 14.5934L629.623 15.3562L630.072 15.1094L630.15 14.6047L631.913 14.313L632.07 14.5374L630.218 17.0722L629.657 16.7806L629.365 17.3639L628.961 17.2405L627.547 18.1041L628.501 17.6443L630.15 17.5545L630.308 18.2387L629.219 19.8539L624.988 22.1195L624.079 21.7494L623.158 21.884L621.721 23.3757L620.375 23.443L619.286 24.5647L619.915 25.0021L620.992 25.0806L621.632 24.632L623.091 24.7553L623.562 23.9253L624.325 25.0918L626.02 25.6526L627.131 24.5198L627.715 25.103L628.467 25.1928L630.454 24.0936L631.733 24.3403L632.867 22.9944L632.395 24.0039L632.474 25.3834L631.419 26.2695L631.868 26.8864L630.936 27.1444L630.049 26.8303L629.208 27.3687L629.297 27.7837L629.803 27.4921L630.409 28.681L631.104 28.5128L631.486 27.9856L632.743 27.9744L635.022 25.5741L636.885 26.0564L637.401 27.4921L637.816 27.4248L638.377 26.5836L638.871 27.7949L639.59 27.4921L638.815 27.1668L638.995 26.5836L639.668 26.5724L639.399 25.7985L640.297 25.8097L641.15 26.707L640.981 27.1556L642.07 27.0659L641.486 27.7837L641.677 27.9632L644.158 27.3126L643.383 27.8959L644.27 28.7483L644.158 29.5335L644.573 30.1391L645.763 30.6775L645.471 31.2495L643.406 31.7767L644.64 32.3936L643.35 33.3806L643.372 33.8405L643.967 33.403L644.102 33.6386L643.473 34.6817L641.868 35.1528L641.823 36.8689L641.284 37.0259L640.768 37.8783L639.724 37.6203L639.825 38.9663L640.285 39.157L640.297 39.5047L639.769 40.5478L639.825 41.5909L639.309 42.2414L639.477 42.8471L638.725 44.0024L638.31 43.722L637.917 42.4097L636.963 42.7686L637.704 43.9575L637.221 44.608L638.007 45.5614L638.344 45.5166L638.254 45.9989L639.399 45.6736L639.78 45.2249L640.521 46.7952L640.701 45.2922L641.823 45.3932L644.382 44.3949L645.291 44.5071L646.582 45.3932L647.177 45.3371L648.636 44.2155L649.579 42.6003L649.792 40.7384L649.321 39.5944L649.287 37.4633L649.781 36.981L651.431 37.1268L651.273 36.6557L651.801 36.3978L653.316 37.4521L655.011 37.9344L657.087 37.4185L658.378 36.4202L659.635 36.566L661.218 35.4556L661.689 35.6687L661.307 36.0725L663.159 36.2407L664.338 37.5643L665.281 37.7549L665.112 38.1924L666.223 37.497L666.459 38.8541L666.695 37.6203L669.018 36.1622L670.881 35.6463L671.622 35.7584L671.555 36.5324L673.171 36.9137L674.125 36.7343L673.811 36.3866L675.202 35.579L676.078 36.1062L675.315 37.2726L675.764 37.6203L675.64 38.4728L676.381 37.9905L678.468 38.4952L678.749 38.0353L680.174 38.8653L680.287 39.5271L678.884 38.3718L679.164 38.9326L678.424 40.5926L679.378 40.559L678.682 41.1198L679.77 41.0749L681.33 42.2639L681.981 42.9817L682.161 44.1706L683.07 44.7426L683.744 46.8176L684.294 47.2887L684.754 46.7055L685.012 47.5018L686.673 49.2179L687.425 50.519L688.368 51.1471L687.795 52.0332L687.75 55.1289L687.245 55.084L686.392 54.0745L685.618 54.1755L686.415 55.1289L686.224 55.5438L687.055 55.757L686.774 56.1607L687.638 56.1383L687.571 55.7682L688.222 55.5887L688.132 56.4636L688.626 57.6413L688.794 58.7405L688.458 59.4247L687.447 60.0864L686.785 59.9294L686.628 60.2883L687.672 60.3107L687.481 60.5575L687.941 60.6585L687.975 60.0528L688.873 60.4005L689.288 61.0398L689.097 59.907L690.332 59.3798L690.231 58.4601L689.793 58.1124L690.197 57.2599L690.781 57.0805L691.174 57.4282L691.219 56.9571L691.757 57.0468L692.621 57.9666L691.151 55.8691L689.928 55.5775L689.49 54.2091L689.782 53.8726L691.342 54.1418L691.488 53.5249H692.116L692.554 54.6578L692.195 54.8933L693.059 55.3868L693.486 56.587L693.822 58.4825L693.553 59.2116L694.182 61.3651L694.429 64.4047L694.092 64.9094L694.518 65.6721L694.395 66.0759L694.776 66.6143L694.395 64.6963L694.833 64.3598L695.383 64.6739L695.899 63.8326L696.482 64.7412L696.741 64.4047L697.044 64.9991ZM420.638 159.384L420.391 160.258L419.662 160.202L419.056 160.64L418.045 160.146L416.485 160.101L415.071 159.563L414.678 158.812L413.141 157.802L413.096 156.378L415.902 152.598L416.8 150.59L417.765 149.749L418.607 149.872L417.518 150.175L419.134 152.071L420.245 154.617L420.223 154.953L419.852 154.863L420.425 157.544L420.144 158.049L420.638 159.384ZM443.512 224.684L442.962 223.125L443.703 224.471L443.512 224.684Z\" />\n                </mask>\n                <path d=\"M469.686 109.898L470.426 109.146L470.83 107.071L472.233 106.443L474.467 108.473L473.917 109.718L473.502 109.864L473.243 108.888L472.2 108.35L471.829 108.698L472.604 109.056L472.839 109.561L472.39 110.055L471.762 109.898L470.988 110.672L470.224 110.829L470.168 110.559L470.527 110.503L470.393 109.976L469.753 110.234L469.686 109.898ZM693.25 111.389L693.508 113.049L693.306 114.339L693.104 114.53L692.958 114.081L691.185 118.467L690.455 118.332L689.658 118.758L688.368 121.764L683.351 120.217L681.286 117.67L678.794 116.874L677.627 115.539L677.817 114.115L678.446 113.453L679.535 113.285L680.859 114.16L682.038 113.229L681.768 112.814L682.172 111.322L681.577 110.559L681.847 107.879L687.38 108.911L691.05 109.169L692.52 110.144L693.25 111.389ZM697.044 64.9991L697.133 67.7022L696.774 69.7548L696.067 71.4036L695.506 74.4768L694.17 77.1126L693.272 77.079L692.835 76.6303L694.327 74.5329L694.541 73.2879L692.262 72.2897L690.904 72.256L689.614 72.7944L690.848 71.9195L690.814 71.527L690.22 71.1344L690.309 70.7418L689.097 70.1025L686.583 67.4106L685.584 66.8049L684.439 66.9844L683.732 66.6928L684.395 67.2872L685.158 67.3658L685.674 69.2725L686.987 69.3174L688.491 70.5175L688.805 71.4709L688.57 72.0429L687.773 72.0093L686.864 71.2129L686.594 71.8747L687.245 72.357L688.166 72.4355L688.121 73.2431L688.727 73.9609L688.738 74.4993L687.93 75.4639L688.053 76.7537L688.974 77.0229L689.782 76.4285L689.838 75.834L689.434 75.3853L689.614 74.7797L691.623 72.9739L691.959 73.0412L692.375 73.5908L692.229 74.6899L692.509 75.0376L691.971 75.7779L692.824 77.6398L694.024 78.1221L695.45 78.1333L695.708 79.2886L695.618 81.1954L694.877 81.0383L694.013 81.9693L694.642 81.6776L695.349 82.0141L694.922 85.2444L693.901 87.4876L691.555 90.3253L689.917 93.163L689.266 93.7351L689.086 93.5668L688.929 94.5314L687.941 95.8549L686.549 96.584L685.988 97.4589L686.303 96.5055L683.328 97.8514L682.834 97.6608L683.081 98.1991L681.656 101.407L681.263 101.699L680.837 101.183L681.431 102.158L680.399 103.516L680.118 104.749L678.255 103.583L677.088 103.807L675.258 105.624L673.62 108.182L672.935 108.013L670.073 109.83L668.547 109.157L667.256 109.415L668.883 109.696L669.052 110.974L666.717 113.857L666.01 113.958L667.031 113.173L666.403 112.735L664.753 114.586L663.967 114.653L663.833 115.293L663.507 114.474L663.002 114.384L662.71 114.855L662.205 114.642L662.116 114.99H661.577L661.117 115.719L660.589 115.887L661.375 115.865L661.813 115.091L663.608 115.629L664.989 114.765L665.157 116.055L664.618 118.456L661.813 121.82L659.276 122.179L658.255 122.83L657.301 124.367L657.514 124.602L656.234 125.903L653.844 130.356L653.148 130.02L652.867 129.29H652.003L652.777 129.515L652.923 131.253L651.262 133.822L649.915 133.934L648.266 135.19L646.503 134.977L645.617 135.336L643.765 134.899L642.878 135.516L641.138 134.697L640.016 135L639.971 134.685L638.905 134.45L635.976 134.742L635.392 133.833L634.561 134.282L634.483 134.697L635.448 135.033L635.661 135.459L638.86 135.168L641.958 136.929V138.981L640.555 140.372L640.409 142.806L639.601 144.062L638.68 144.343L635.919 143.894L634.539 145.318L633.776 148.111L633.45 148.223L633.877 148.381L633.91 148.762L632.811 149.839L632.754 152.564L631.621 154.045L631.25 155.75L628.231 158.228L627.502 158.453L627.996 159.462L629.264 159.72L630.005 159.372L632.451 156.501L633.349 157.084L632.889 156.31L633.428 154.897L635.257 153.439L635.1 149.94L635.268 149.289L636.088 148.549L636.301 147.663L637.064 147.708L638.422 148.695L639.848 149.087L642.654 148.257L644.449 148.571L647.693 148.448L648.299 148.179L649.725 146.507L650.432 146.227L651.442 149.154L652.609 150.018L653.563 150.063L652.744 149.267L652.845 146.294L654.169 145.431L653.664 145.352L653.103 145.756L651.24 145.33L651.06 145.79L651.33 144.724L656.717 143.199L659.68 141.785L659.938 141.505L659.399 140.866L659.478 139.609L660.073 140.91L660.982 141.572L661.7 140.944L661.319 140.709L661.498 140.047L663.653 140.529L664.259 140.282L665.572 138.835L666.459 138.701L666.874 137.445L666.19 137.534L666.448 136.839L667.133 136.918L668.738 136.088L668.535 135.426L669.287 134.629L670.208 134.786L672.093 134.013L672.385 133.519L672.778 133.665L672.845 133.025L672.43 132.353L672.812 131.051L671.947 130.939L670.96 130.21L670.399 131.253L668.996 131.938L667.862 133.351L666.448 132.779L663.844 133.104L663.507 133.452L663.631 134.248L662.98 133.631L662.205 132.016L661.88 129.459L662.744 129.122L664.349 127.698L665.348 124.232L668.289 123.705L670.051 124.411L672.105 125.926L673.025 127.058L673.743 127.148L674.439 126.385L674.54 125.858L674.159 125.757L674.136 125.107L674.765 123.716L676.156 122.852L677.728 122.763L678.323 124.019L676.639 124.748L675.797 124.692L675.303 125.163L675.921 127.922L673.811 129.515L673.171 130.468L672.879 132.958L674.282 133.272L675.023 135.358L674.574 135.717L673.665 135.112L672.857 135.168L671.128 140.226L667.211 140.282L666.717 141.157L670.051 142.828L670.219 144.376L668.558 146.171L669.4 147.506L671.128 146.833L672.598 147.248L672.924 147.932L672.408 148.941L673.104 150.141L673.014 151.297L671.959 151.521L671.375 152.62L672.733 152.889L671.779 155.514L671.431 157.735L671.925 161.986L672.655 161.874L673.216 162.266L673.014 163.623L674.607 164.005L675.438 165.003L675.416 166.584L674.607 167.448L674.203 168.502L674.877 169.658L676.504 169.579L677.155 170.533L678.367 170.488L679.243 171.609L678.906 174.2L679.793 174.458L680.32 175.513L681.858 176.051L682.206 181.098L681.959 184.586L682.711 191.327L682.487 193.784L682.756 194.625L684.439 195.444L685.854 197.362L687.111 197.53L687.818 198.035L687.807 199.268L686.651 199.538L686.415 200.884L686.718 201.68L686.325 202.734L685.158 202.869L684.742 204.08L684.294 204.316L683.654 203.261L683.138 203.239L681.735 205.213L678.356 206.189L677.559 207.669L675.909 207.871L673.541 209.643L670.567 210.597L669.591 211.797L668.322 212.033L667.335 212.851L666.908 213.704L667.211 214.59L666.639 215.038L666.583 216.474L668.042 217.596L668.423 218.628L663.002 219.503L662.643 220.108L662.957 221.23L662.531 222.576L660.993 223.193L660.858 224.55L661.431 225.212L661.206 227.107L662.295 227.69L662.239 228.307L661.633 228.98L661.42 231.179L660.466 233.68L658.995 234.196L657.413 233.927L657.02 233.343L657.087 232.177L656.425 232.009L652.284 232.278L650.488 233.792L649.792 235.553L649.321 235.901L647.85 235.766L645.606 236.54L644.753 237.381L641.913 239.097L639.028 239.378L637.614 238.48L636.458 239.411L635.818 240.757L635.055 241.195L634.763 242.709L637.861 248.171L640.779 254.318L641.228 259.387L641.015 269.639L640.05 281.203L639.926 286.71L639.556 288.471L638.77 289.279L637.311 288.774L635.863 290.21L634.157 290.456L633.607 293.159L632.923 293.574L629.87 293.552L629.679 294.203L631.172 295.683L632.036 295.212L632.945 295.403L633.114 296.435L634.685 296.154L634.662 297.22L634.045 298.252L634.393 298.622L635.224 298.397L635.381 299.429L636.032 300.237L635.706 301.717L636.166 304.286L635.134 306.17L635.022 311.072L637.143 312.418L637.569 313.584L637.513 320.763L639.107 321.682L640.386 323.611L641.621 323.589L641.924 324.015L640.544 325.036L640.263 326.752L639.59 326.449L638.669 326.584L637.805 327.212L637.12 328.782L637.771 329.904H636.885L636.043 331.283L635.145 331.586L634.864 332.439L633.888 332.528L633.562 333.089L633.641 334.031L634.258 334.558L634.27 335.388L635.066 336.05L634.191 336.353L633.697 335.579L633.181 335.646L632.912 336.555L633.192 337.306L632.339 338.832L632.653 339.74L632.373 340.2L631.228 340.155L631.576 341.658L631.228 342.107L632.339 343.801L633.372 342.735L634.449 343.038L634.573 343.902L634.225 344.518L634.73 345.158L635.886 344.631L637.996 344.373L638.366 343.969L638.232 343.24L638.916 342.847L639.679 345.034L641.105 344.922L641.565 345.921L643.686 346.111L643.944 347.782H645.067L645.662 347.278L646.492 347.401L649.006 349.095H650.005L650.106 348.411L651.352 348.983L651.857 350.665L652.923 351.91L651.88 354.12L651.24 353.402L648.064 353.548L646.649 353.951L646.335 355.196L645.74 355.6L644.483 355.387L643.293 354.164L642.407 355.252L639.354 353.604L639.017 353.94L639.556 356.43L638.815 358.337L638.68 360.625L637.67 362.016L638.018 363.014L639.421 364.91L638.984 365.639L638.153 366.087L637.289 365.459L636.627 365.796L636.312 366.928L637.031 367.736L636.638 369.71L636.065 370.125L634.853 370.249L635.089 372.413L636.582 373.838L637.693 375.767L637.322 376.698L637.884 377.483L639.938 378.077L639.343 379.087L639.444 379.995L637.266 382.317L637.087 383.17L636.391 384.044L636.447 384.605L636.952 385.054L636.324 387.948L632.53 391.593L633.024 393.769L631.89 394.633L630.364 394.655L629.982 395.418L627.524 397.313L627.378 397.964L624.729 399.164L624.617 399.96L625.235 400.622L625.493 401.755L623.057 403.123L623.001 403.852L622.137 404.245L621.8 405.12L621.867 407.621L620.936 408.092L620.992 408.832L621.643 409.012L621.924 409.64L621.16 411.423L621.823 412.96L623.832 415.293L626.088 416.594L627.49 416.403L628.097 417.076L628.86 416.919L628.703 420.127L629.084 421.013L628.635 422.303L629.286 422.931L629.331 423.604L625.829 423.469L625.1 424.95L623.248 426.408L623.899 427.462L624.056 428.539L625.392 430.042L626.536 430.02L626.66 431.254L626.267 431.983L627.603 433.385L627.794 435.415L627.266 435.964L625.942 436.413L623.226 438.959L623.023 439.643L623.461 440.63L624.067 441.079L622.305 442.627L621.329 442.638L620.812 443.042L619.589 442.795L619.679 441.449L618.994 441.326L618.871 440.552L617.737 440.406L616.536 440.989L616.334 438.656L613.034 437.725L611.587 435.931L611.553 435.112L610.666 434.024L610.7 433.071L611.71 433.059L611.676 432.566L610.228 432.375L609.454 432.734L608.388 432.184L607.479 433.082L607.277 433.743L606.165 433.519L604.448 434.36L603.808 436.278L605.021 438.701L605.223 440.821L604.706 441.763L603.315 442.526L601.856 444.5L598.814 445.274L598.152 445.879L596.951 448.571L595.918 448.796L593.786 450.568L593.685 451.218L594.347 451.633L592.978 453.271L592.955 454.168L590.868 454.056L591.35 455.615L590.89 457.141L591.294 458.352L591.956 458.756L592.147 459.832L591.788 460.203L591.058 460.023L590.464 460.977L589.936 460.943L589.554 460.057L587.893 459.115L587.703 458.296L588.062 457.791L587.422 457.118L587.714 456.266L587.096 455.727L587.186 455.133L585.581 454.796L585.155 454.415L584.863 453.136L585.48 451.903L584.571 450.994L583.539 451.431L582.697 450.994L581.608 451.241L581.316 452.475L580.508 453.002L579.992 455.357L578.331 455.738L577.59 455.581L577.018 456.277L575.154 456.367L574.661 455.514L567.825 455.256L563.168 466.484L565.401 467.684L565.177 468.435L564.245 468.94L564.133 469.602L564.447 470.106L566.782 470.252L566.434 473.348L567.522 473.505L567.668 473.83L567.332 474.851L567.534 475.905L564.694 476.275L564.829 478.732L563.976 478.664L563.863 480.044L562.943 480.975L562.494 480.437L561.495 480.302L561.181 481.412L560.148 481.536L559.834 483.51L558.364 484.867L558.487 486.269L558.151 486.74L558.925 487.402L558.768 489.959L559.52 491.305L557.488 492.225L557.904 493.492L557.208 496.274L557.791 496.924L557.892 497.923L556.501 501.658L556.557 502.364L553.01 501.949L552.034 503.733L550.474 504.013L549.71 505.023L549.576 506.469L550.485 506.638L551.091 507.546L552.752 508.735L552.797 509.531L553.661 510.047L554.828 512.122L555.569 512.582L556.377 513.861L558.229 514.298L557.971 515.353L555.805 516.138L554.346 515.431L554.144 516.149L553.392 516.328L552.909 517.024L551.315 516.598L550.462 516.912L550.182 516.486L547.443 518L545.917 517.147L544.705 518.123L544.626 517.876L542.202 518.157L541.394 518.863L542.056 519.48V519.963L541.439 520.434L540.608 524.191L538.857 524.404L537.937 524.886L536.747 527.567L536.096 527.937L536.04 528.924L534.805 530.124L534.783 531.493L533.919 532.132L533.582 533.826L532.134 534.106L531.405 534.622L527.398 538.447L525.939 538.368L523.873 539.165L522.807 538.918L520.36 539.636L519.541 539.411L518.733 538.357L517.611 538.649L515.804 537.909L513.682 538.234L513.211 537.594L512.582 537.426L511.067 538.077L509.911 535.733L508.317 534.375L510.315 530.506L511.92 528.935L512.695 528.622L513.031 527.848L514.67 526.692L515.916 525.088L516.006 524.034L515.546 522.296L516.118 521.881V522.217L516.399 522.206L516.23 521.892L516.847 521.914L518.037 521.219L519.496 519.48L519.541 518.628L518.722 517.349L516.511 516.441L516.387 515.196L515.411 513.143L515.355 512.347L516.466 510.317L516.455 509.083L514.749 506.088L514.008 503.149L511.561 501.231L512.044 498.943L511.438 498.282L510.428 498.394L510.181 497.373L508.362 497.844L508.564 497.048L508.183 495.814L506.522 495.119L506.252 493.93L505.714 494.58L503.907 494.849L501.92 496.016L501.19 495.242L500.225 495.511L499.776 496.42L499.417 496.05L498.239 496.184L497.812 494.984L496.925 494.872L497.161 494.199L496.353 493.459L496.23 491.989L495.197 491.171L494.692 491.215L493.693 490.071L496.308 486.83L498.182 486.392L498.755 485.607L500.034 485.024L500.169 483.981L499.35 483.6L498.631 481.659L498.699 480.538L497.565 479.203L497.217 477.734L496.095 477.655L495.646 476.702L494.389 476.724L493.412 475.243L493.547 474.627L492.616 473.864L492.896 473.023L493.637 472.967L494.007 472.585L494.119 471.677L493.536 469.232L494.456 467.067L494.086 466.259L492.739 466.405L492.896 465.799L494.176 464.566L495.68 461.122L497.374 460.303L497.038 459.07L499.563 458.262L499.743 455.548L499.597 454.415L498.665 453.473L497.947 453.271L496.241 453.551L494.535 452.744L493.682 451.678L489.204 450.736L489.091 449.682L488.227 448.268L487.946 444.253L491.055 440.653L492.795 437.983L495.04 436.805L494.894 435.852L493.356 434.203L493.222 432.891L493.008 432.532L491.83 432.588L487.509 433.216L486.117 430.951L484.422 426.554L481.706 426.464L481.549 424.187L481.179 423.447L480.258 423.066L475.14 422.079L471.47 422.337L468.821 423.054L461.593 423.245L461.055 421.507L461.694 420.306L461.683 417.973L462.424 417.323L463.064 415.82L459.618 409.113L458.675 408.406L458.462 407.486L460.976 405.624L469.798 400.588L469.73 398.345L470.898 397.414L472.233 397.078L471.841 395.732L469.742 395.249L467.71 393.388L466.195 393.208L464.096 391.997L462.581 391.671L461.941 391.088L460.561 388.262L460.572 385.009L461.144 383.506L463.816 380.366L464.152 378.066L464.814 376.496L466.711 374.6L467.306 373.109L468.563 372.032L468.776 370.574L469.225 370.215L469.427 369.329L468.765 367.646L469.192 367.052L469.012 366.244L469.383 364.237L468.9 363.945L468.137 364.08L467.25 362.038L465.679 361.152L465.443 360.311L466.992 358.707L467.329 355.611L468.507 354.95L469.989 353.334L472.2 351.708L472.233 347.76L471.627 345.921L471.829 345.225L471.055 343.565L471.885 342.073L471.021 338.058L470.258 337.979L470.033 337.52L469.012 337.093L467.329 338.305L466.543 338.17L465.78 337.273L464.624 336.869L465.297 336.073L465.095 335.467L462.188 336.017L459.842 335.781L459.517 335.299L460.056 334.132L459.169 332.024L459.775 330.689L461.694 328.883L460.841 324.711L459.764 323.757L457.878 323.129L459.315 322.277L458.933 321.368L456.105 319.417L454.466 319.809L453.479 319.506L452.985 318.845L452.715 316.713L451.627 315.3L451.357 314.369L452.109 313.584L452.132 312.597L453.243 311.812L451.402 308.077L449.326 305.576L449.247 304.667L450.134 303.209L450.908 302.592L451.211 301.605L450.302 298.913L449.012 298.083L448.866 296.917L441.727 290.355L443.243 288.55L443.052 286.239L443.703 284.893L443.647 284.119L441.413 281.842L441.076 279.689L439.943 278.848L438.585 275.999L438.921 275.617L439.718 275.651L441.166 275.068L442.266 275.561L443.613 275.113L443.725 272.05L444.859 270.671L445.117 268.831L446.453 267.878L446.621 264.468L446.138 261.541L447.934 260.33L447.799 259.096L447.429 257.985L445.487 256.023L444.915 253.005L443.815 250.897L444.702 249.786L444.14 248.71L442.535 248.553L439.909 247.577L439.752 246.747L440.964 245.053V243.819L438.675 242.137L438.102 243.101L438.27 244.503L438.012 245.569L437.328 246.287L436.508 246.478L435.431 246.186L433.534 247.352L432.546 247.263L429.92 245.244L428.865 245.367L426.766 244.492L424.297 244.705L423.343 244.178L422.468 242.642L421.85 242.507L420.335 237.448L417.148 236.753L417.428 234.79L416.485 232.996L416.194 231.672L417.911 229.978L419.493 227.399L419.572 225.784L419.931 225.234L420.492 225.369L421.121 225.615L421.255 226.277L422.468 223.911L426.452 219.951L426.508 219.155L427.473 218.673L429.224 218.706L430.549 219.749L431.469 219.839L431.839 219.2L431.705 218.729L430.481 217.327L431.817 213.636L430.414 212.066L431.11 209.61L430.246 207.759L430.01 204.619L429.393 203.452L426.654 202.611L423.859 201.254L421.087 197.44L420.144 197.362L419.426 196.722L418.854 194.109L419.044 193.167L419.707 192.875L419.965 192.023L419.808 189.555L423.018 189.465L424.544 188.725L425.621 187.11L426.284 183.734L428.034 183.151L428.259 182.556L427.754 181.233L425.195 179.371L423.624 178.866L422.827 177.879L420.402 178.294L418.573 178.014L416.227 176.253L413.803 173.74L413.938 172.249L412.411 169.422L417.798 169.691L419.976 170.151L423.433 173.785L424.566 174.481L424.342 175.154L424.993 174.626L429.112 176.612L430.021 179.046L431.076 179.214L431.839 180.694L434.252 183.409L434.926 185.764L437.62 187.368L439.101 187.559L442.266 187.076L446.026 185.495L447.126 185.372L447.867 185.394L448.506 186.347L450.156 186.661L450.751 187.491L450.83 188.288L449.741 190.408L448.192 191.372L448.383 194.546L446.15 195.533L442.289 198.36L442.951 203.003L441.907 204.596L442.569 205.179L442.401 206.043L442.255 205.572L442.12 205.931L443.68 210.967L442.446 212.403L442.12 214.253L441.043 215.285L441.649 216.788L441.593 217.528L440.942 218.762L439.651 219.57L439.741 220.142L439.18 220.714L439.685 220.557L439.808 221.611L438.82 223.664H439.213L439.954 221.611L440.044 219.547L440.785 219.312L441.615 217.865L441.593 219.57L441.828 219.536L441.862 220.355L442.468 220.77L442.558 221.6L442.333 221.948L442.244 221.701L440.919 221.69L440.526 221.993L441.862 221.914L442.232 222.217L443.119 223.731L443.287 224.752L442.434 225.212L441.986 225.929L442.042 227.455L442.3 227.612L442.188 225.907L442.715 225.189L443.445 224.898L443.725 225.335L444.062 224.64L445.723 225.245L448.405 228.105L447.99 229.092L446.542 228.902L445.947 228.296L446.004 228.655L446.554 229.07L448.069 229.283L449.528 230.124L449.977 231.156L451.773 233.164L452.502 235.16L455.252 235.228L455.162 235.631L455.297 234.97L456.082 234.992L457.811 238.581L458.72 239.064L459.708 238.761L460.83 237.695L460.549 237.247L459.652 237.706L459.27 235.968L456.958 235.329L455.723 233.455L455.88 233.276L456.296 233.803L456.116 233.31L454.736 232.704L454.017 231.796L452.94 229.777L452.626 228.341L451.896 227.533L449.562 226.838L449.842 225.29L448.271 221.791L448.731 220.703L448.753 220.983L450.033 221.488L451.054 221.432L452.345 220.635L452.805 221.308L452.715 220.523L453.187 220.31L454.691 217.843L454.309 216.799L454.623 216.373L454.118 216.508L454.59 216.048L454.522 215.543L453.871 214.59L452.581 208.69L452.648 207.759L451.773 204.675L450.897 203.385L450.201 203.239L449.685 201.781L450.347 202.129L450.549 201.31L449.64 198.685L451.009 197.171L451.885 192.729L452.839 192.135L453.389 191.215L453.77 189.69L453.636 188.77L452.401 186.852L451.582 186.168L451.896 184.844L450.841 183.398L449.82 182.781L446.778 182.231L446.43 181.895L445.981 182.164L445.936 182.725L444.466 178.429L442.434 176.735L442.603 176.421L443.186 176.836L444.163 175.658L443.736 175.546L443.882 175.154L443.512 174.974L442.547 172.731L439.662 171.239L440.077 170.286L439.415 170.97L437.956 170.69L437.518 170.263L436.564 170.533L436.295 170.118L434.724 170.151L432.401 168.435L431.682 168.267L431.188 167.616L430.481 165.81L430.638 165.238L431.211 164.98L430.93 164.094L431.794 163.074L431.323 162.513L430.38 163.107L429.931 162.805L429.763 161.223L429.853 159.944L431.458 158.139L431.143 158.195L430.897 157.51L431.379 154.695L430.695 152.474L430.807 151.936L429.875 151.016L428.405 150.355L429.314 149.973L429.191 148.919L427.541 148.392L427.35 147.595L426.744 147.909L427.451 147.315L429.022 147.483L428.977 146.878L429.662 147.371L430.739 147.102L429.83 146.732L429.505 146.059L429.819 145.969L428.405 144.735L427.844 144.993L427.047 144.421L427.832 142.638L428.304 142.941L428.809 142.615L428.618 142.021L429.46 141.617L430.156 140.473L429.482 140.395L429.617 139.643L429.976 139.408L429.774 138.835L429.202 139.06L429.123 139.766L428.887 139.733L428.775 138.914L428.315 138.454L428.843 137.714L428.528 137.276L430.38 136.805L431.177 137.546L431.671 137.512L431.66 136.94L433.13 136.76L433.029 136.446L434.881 136.637L435.521 136.334L435.588 135.83L439.629 134.876L443.186 134.506L443.725 135.1L443.815 135.807L444.017 135.459L443.602 134.484L452.21 134.674L459.629 132.678L462.547 131.354L464.006 131.68L465.252 132.711L467.059 132.868L468.541 132.409L468.631 130.771L469.955 129.582L471.93 129.492L473.367 128.348L476.936 127.687L477.273 128.068L478.732 127.361L478.889 127.687L479.675 127.574L480.079 128.102L481.369 128.573L482.267 127.844H481.908L481.56 126.027L481.145 125.129L480.236 124.647L479.922 123.447L481.212 122.796L483.109 122.83L483.053 122.381L484.187 121.921L479.652 122.583L479.046 121.854L479.372 121.248L478.159 120.609L478.799 119.117L477.946 117.413L477.385 116.975L475.915 116.885L475.006 116.044L473.726 116.212L472.188 115.517L471.616 114.608L471.683 113.554L472.188 112.623L473.266 112.455L473.569 112.926L473.838 112.612L474.916 114.754L475.118 113.98L474.736 112.376L473.03 111.535L474.276 111.322L474.377 111.053L474.927 111.378L474.949 110.773L475.376 110.391L475.701 110.728L476.173 110.088L476.925 110.055L478.148 111.457L477.778 112.242L478.395 111.894L478.911 112.87L479.113 112.264H480.415L480.213 113.274L478.429 114.878L479.338 115.326L479.518 114.317L480.505 113.767L480.326 114.665L480.696 115.169L480.303 115.977L480.64 116.145L481.089 115.674L481.179 114.62L480.584 113.105L480.775 112.724L482.267 113.689L483.513 113.543L483.536 112.735L482.952 112.466L483.098 111.154L482.649 111.232L483.087 113.319L482.626 113.588L480.876 112.029L481.403 110.739L481.987 110.503L481.571 110.178L481.594 109.662L480.819 111.266L479.282 111.647L478.642 111.457L478.597 111.087L478.99 110.862L478.115 110.683L478.339 109.651L477.991 109.83L477.643 109L477.093 109.157L477.138 108.552L478.676 107.565L476.835 107.677L476.453 107.385L476.532 106.981L475.421 106.69L475.724 105.826L474.77 105.68L474.714 105.994L473.995 105.905L474.029 105.613L472.694 105.658L472.469 105.209L472.144 105.781L471.65 105.568L470.684 106.151L471.425 105.299L470.46 104.66L471.537 103.774L471.021 103.179L471.145 102.607L472.121 102.035L472.828 102.607L473.142 101.127L473.535 101.295L473.76 100.958L472.75 100.184L472.57 99.2086L473.434 99.1076L473.816 100.297L474.433 99.5339L474.467 100.061L475.657 100.835L475.69 101.497L474.826 101.205L474.444 101.598L474.994 102.08L475.376 103.246L475.926 102.271L476.577 102.136L476.914 102.472L476.7 103.19L477.643 102.607L477.576 103.886L477.015 104.402L478.115 104.166L478.44 104.559L478.002 104.974L478.025 105.927L478.833 105.434L480.236 106.308L479.484 105.075L479.686 104.267L480.146 103.987L479.865 103.729L478.855 103.875L478.519 103.123L479.091 102.585L478.833 102.349L479.394 102.215L479.147 101.912L479.417 101.508L479.888 101.934L480.438 101.889L481.1 102.596L480.898 101.822L481.426 101.07L480.763 101.104L481.134 98.4795L481.886 98.4683L481.605 98.0085L483.681 95.6755L482.941 95.7876L482.099 94.509L482.492 94.1389L483.917 93.9594L484.411 94.7558L483.884 95.4063L484.602 95.496L485.051 96.0232L485.533 94.9128L486.252 94.8679L486.544 94.094L486.398 93.0397L484.097 92.849L483.659 93.1855L481.19 91.5143L479.978 91.4245L479.955 92.2433L479.417 90.8301L480.213 89.8879L482.211 89.372L488.137 90.6394L489.181 90.359L490.012 89.5514L489.978 89.9889L490.539 89.787L491.302 89.2935L491.19 88.7551L491.639 88.7327L490.887 88.1494L492.784 85.2444L493.401 85.5697L493.76 86.624L494.232 86.6913L493.379 85.1547L493.469 84.0667L494.726 83.3601L496.241 83.6068L495.657 83.0572L495.803 82.732L495.208 83.1133L494.692 82.9339L495.579 81.958L497.285 81.5991L497.543 82.8441L497.296 83.1133L498.441 83.0012L497.722 82.7544L497.217 81.0832L495.927 81.2739L495.04 81.801L494.546 81.5991L497.307 80.1635L497.689 80.2868L499.069 77.9202L500.315 77.9987L500.865 78.6493L499.271 78.3128L499.148 79.5017L500.405 79.7933L500.023 80.4775L500.607 80.6682L501.336 79.9952L501.594 80.3093L502.694 80.399L502.268 79.5466L502.403 78.7278L503.951 78.3016L504.804 78.4586L505.018 78.0324L505.366 78.2343L504.299 77.0005L504.389 76.6864L505.702 75.8676L506.466 75.834L506.993 75.1162L508.374 75.6097L509.642 74.6563L510.102 74.9031L510.45 74.4544L510.225 74.0394L511.505 73.5908L512.178 72.9626L512.066 73.8039L512.627 74.9031L513.873 73.3103L514.749 72.7383L514.423 73.759L514.704 74.2076L515.579 74.1964L516.702 73.1197L517.162 73.8712L518.273 74.2637L517.858 72.2336L518.34 71.8074L518.374 70.8316L519.294 70.9998L518.991 71.6055L520.888 71.0559L520.832 71.5382L521.337 71.8186L521.763 70.697L524.177 70.6297L524.12 69.8109L524.704 69.2501L525.77 69.4744L526.085 69.1379L528.711 68.6556L529.912 67.8705L530.821 68.0387L531.977 67.7247L534.39 66.3002L535.479 66.132L538.206 64.3374L538.049 63.3055L537.712 64.2476L534.177 65.7394L533.649 65.3917L533.324 63.8326L532.819 64.8421L533.223 65.8179L532.751 66.1768L531.483 64.214L530.967 64.0233L531.292 62.8344L531.73 62.5316L531.102 62.4643L530.787 63.1709L529.811 63.4513L528.576 64.4271L530.148 65.3805L529.227 65.717L528.363 65.358L527.746 65.6721L528.284 64.6178L527.869 64.2252L527.88 63.3616L527.342 63.2158L528.655 62.2399L528.587 60.8267L528.206 60.3332L529.396 59.7387L529.137 60.7706L529.721 61.2305L529.598 61.7128L530.72 61.0174L531.068 60.4005L530.72 60.0191L531.393 59.4583L530.114 58.8414L530.81 58.1685L531.304 59.0097L532.168 58.1572L532.796 58.6844L532.538 59.2228L531.719 59.6939L532.291 60.0191L532.527 60.6585L532.078 61.3987L532.269 61.6231L532.83 61.5557L533.346 60.9276V60.0079L533.683 60.5575L534.895 59.7163L535.153 60.2659L537.084 60.3668L536.691 59.806L535.95 59.548L535.737 58.9872L534.615 58.8414L534.323 58.2918L534.581 57.9778L536.343 58.303L537.409 58.1012L537.634 57.7086L538.419 58.6395L539.34 57.8095L540.215 57.6525L540.036 58.3367L540.72 58.6507L540.743 59.6153L541.405 59.2452L542.224 59.3125L541.764 58.3816L542.505 58.1124L543.313 58.3703L542.954 57.9105L543.324 57.4618L541.36 57.4843L541.236 57.0132L541.764 56.7664L543.863 56.8113L544.514 58.1572L545.546 58.7517L546.523 57.9329L547.252 58.4937L548.509 56.5421L548.891 56.9235L550.07 57.0468L550.26 57.4618L551.82 57.3385L553.627 58.6956L554.065 58.3928L554.133 58.7629L555.131 59.1331L554.368 59.7051L553.987 59.2901L553.078 60.1201L553.414 60.6024L554.144 60.6585L551.641 64.3934L549.912 66.132L550.709 67.5789L551.068 67.4218L551.798 65.5151L553.874 63.3616L554.48 64.1916L555.064 63.6756L555.805 63.8775L556.041 63.5859L555.726 63.4737L555.861 62.9017L555.311 62.6549L556.276 62.3297L556.523 61.8025L557.567 61.7801L557.163 62.8232L558.42 62.5989L558.723 62.8793L558.409 63.7766L556.478 66.4012L556.77 66.5918L558.038 65.9525L558.611 65.2683L559.408 65.773L559.655 65.0552L560.687 64.3822L560.912 63.1933H561.271L563.403 61.1744L564.189 61.2417L562.618 62.3185L562.438 62.711L563.19 63.5298L562.427 64.1355L562.46 64.4495L563.504 64.4383L563.852 62.969L564.627 62.7559L564.941 62.2736L565.525 62.1614L566.804 63.0924L567.163 62.6886L567.96 62.8905L567.388 61.208L566.378 61.2417L565.637 60.5799L567.668 59.077L567.971 59.1555L567.825 59.6602L568.499 59.8172L568.319 60.1986L568.6 60.5575L569.475 60.0416L569.722 60.2659L570.16 59.5368L570.867 59.6939L571.069 59.0209L570.115 58.9536L569.857 58.4264L569.475 58.8078L568.858 58.4376V58.0226L569.442 57.5404L570.059 57.6861L569.98 57.316L570.676 56.6879L572.551 56.3963L574.56 54.2876L575.963 53.3903L576.299 53.6595L575.648 55.3308L576.782 55.4429L576.95 54.7363L578.129 55.2074L579.868 55.3195L579.992 55.8355L578.768 57.159L578.836 57.4618L579.251 57.9666L580.834 57.8208L582.012 56.9459L581.81 58.2133L580.699 58.8639L580.845 59.1443L582.091 59.2116L582.394 58.303L583.325 57.5404L583.236 56.8786L582.079 55.5663L581.754 53.9399L580.261 52.7735L580.239 52.022L579.61 50.9228L577.916 50.6872L577.332 48.186L576.198 46.5148L576.288 45.797L576.692 45.281L577.309 45.2362L581.002 47.0644L582.921 47.1766L585.637 46.4475L587.299 46.5485L587.725 46.9971L591.833 45.4156L592.63 44.5744H593.09L593.247 43.9687L594.167 43.4864L594.751 39.1682L595.436 38.9102L595.739 38.0466L595.492 36.9474L593.572 35.9828L592.764 33.1002L593.831 28.9951L594.661 29.0848L594.74 29.5783L595.133 29.5447L595.559 28.7483L595.952 28.7147L595.885 26.9649L596.513 26.191L595.963 26.1798L596.075 25.6526L595.436 25.8994L596.502 23.701L599.072 19.9324L599.835 18.2724L602.125 15.5468L602.383 14.4476L603.057 14.4028L604.482 15.4235L603.741 13.8532L604.628 13.3821L605.436 13.5279L605.021 13.3597V12.6755L606.917 9.50129L606.85 9.07507L607.411 8.63764L607.804 8.78345L607.692 8.44696L609.611 7.38143L609.948 6.80939L609.813 6.38318L610.206 6.52898L611.373 4.20723L612.597 3.85953L612.754 4.95872L614.583 4.64467L618.186 0.707763L618.646 1.17886L619.488 0.51709L619.982 1.01061L620.117 1.78453L619.634 2.22196L620.655 3.2875L622.541 2.02008L623.147 1.94155L623.843 2.35655L623.854 3.71372L624.269 3.96048L623.944 4.49885L625.279 6.33831L625.908 5.7102L628.254 7.40385L629.421 7.6506L630.24 7.52723L630.813 6.91033L632.766 6.93277L632.44 7.35899L633.046 8.8171L632.912 10.1406L633.327 11.3968L633.72 11.5875L633.562 12.1595L634.909 13.1241L634.943 13.7634L635.852 13.8308L635.313 14.6271L634.573 14.8402L634.011 14.2794L632.227 13.7522L631.61 14.2682L629.567 14.5934L629.623 15.3562L630.072 15.1094L630.15 14.6047L631.913 14.313L632.07 14.5374L630.218 17.0722L629.657 16.7806L629.365 17.3639L628.961 17.2405L627.547 18.1041L628.501 17.6443L630.15 17.5545L630.308 18.2387L629.219 19.8539L624.988 22.1195L624.079 21.7494L623.158 21.884L621.721 23.3757L620.375 23.443L619.286 24.5647L619.915 25.0021L620.992 25.0806L621.632 24.632L623.091 24.7553L623.562 23.9253L624.325 25.0918L626.02 25.6526L627.131 24.5198L627.715 25.103L628.467 25.1928L630.454 24.0936L631.733 24.3403L632.867 22.9944L632.395 24.0039L632.474 25.3834L631.419 26.2695L631.868 26.8864L630.936 27.1444L630.049 26.8303L629.208 27.3687L629.297 27.7837L629.803 27.4921L630.409 28.681L631.104 28.5128L631.486 27.9856L632.743 27.9744L635.022 25.5741L636.885 26.0564L637.401 27.4921L637.816 27.4248L638.377 26.5836L638.871 27.7949L639.59 27.4921L638.815 27.1668L638.995 26.5836L639.668 26.5724L639.399 25.7985L640.297 25.8097L641.15 26.707L640.981 27.1556L642.07 27.0659L641.486 27.7837L641.677 27.9632L644.158 27.3126L643.383 27.8959L644.27 28.7483L644.158 29.5335L644.573 30.1391L645.763 30.6775L645.471 31.2495L643.406 31.7767L644.64 32.3936L643.35 33.3806L643.372 33.8405L643.967 33.403L644.102 33.6386L643.473 34.6817L641.868 35.1528L641.823 36.8689L641.284 37.0259L640.768 37.8783L639.724 37.6203L639.825 38.9663L640.285 39.157L640.297 39.5047L639.769 40.5478L639.825 41.5909L639.309 42.2414L639.477 42.8471L638.725 44.0024L638.31 43.722L637.917 42.4097L636.963 42.7686L637.704 43.9575L637.221 44.608L638.007 45.5614L638.344 45.5166L638.254 45.9989L639.399 45.6736L639.78 45.2249L640.521 46.7952L640.701 45.2922L641.823 45.3932L644.382 44.3949L645.291 44.5071L646.582 45.3932L647.177 45.3371L648.636 44.2155L649.579 42.6003L649.792 40.7384L649.321 39.5944L649.287 37.4633L649.781 36.981L651.431 37.1268L651.273 36.6557L651.801 36.3978L653.316 37.4521L655.011 37.9344L657.087 37.4185L658.378 36.4202L659.635 36.566L661.218 35.4556L661.689 35.6687L661.307 36.0725L663.159 36.2407L664.338 37.5643L665.281 37.7549L665.112 38.1924L666.223 37.497L666.459 38.8541L666.695 37.6203L669.018 36.1622L670.881 35.6463L671.622 35.7584L671.555 36.5324L673.171 36.9137L674.125 36.7343L673.811 36.3866L675.202 35.579L676.078 36.1062L675.315 37.2726L675.764 37.6203L675.64 38.4728L676.381 37.9905L678.468 38.4952L678.749 38.0353L680.174 38.8653L680.287 39.5271L678.884 38.3718L679.164 38.9326L678.424 40.5926L679.378 40.559L678.682 41.1198L679.77 41.0749L681.33 42.2639L681.981 42.9817L682.161 44.1706L683.07 44.7426L683.744 46.8176L684.294 47.2887L684.754 46.7055L685.012 47.5018L686.673 49.2179L687.425 50.519L688.368 51.1471L687.795 52.0332L687.75 55.1289L687.245 55.084L686.392 54.0745L685.618 54.1755L686.415 55.1289L686.224 55.5438L687.055 55.757L686.774 56.1607L687.638 56.1383L687.571 55.7682L688.222 55.5887L688.132 56.4636L688.626 57.6413L688.794 58.7405L688.458 59.4247L687.447 60.0864L686.785 59.9294L686.628 60.2883L687.672 60.3107L687.481 60.5575L687.941 60.6585L687.975 60.0528L688.873 60.4005L689.288 61.0398L689.097 59.907L690.332 59.3798L690.231 58.4601L689.793 58.1124L690.197 57.2599L690.781 57.0805L691.174 57.4282L691.219 56.9571L691.757 57.0468L692.621 57.9666L691.151 55.8691L689.928 55.5775L689.49 54.2091L689.782 53.8726L691.342 54.1418L691.488 53.5249H692.116L692.554 54.6578L692.195 54.8933L693.059 55.3868L693.486 56.587L693.822 58.4825L693.553 59.2116L694.182 61.3651L694.429 64.4047L694.092 64.9094L694.518 65.6721L694.395 66.0759L694.776 66.6143L694.395 64.6963L694.833 64.3598L695.383 64.6739L695.899 63.8326L696.482 64.7412L696.741 64.4047L697.044 64.9991ZM420.638 159.384L420.391 160.258L419.662 160.202L419.056 160.64L418.045 160.146L416.485 160.101L415.071 159.563L414.678 158.812L413.141 157.802L413.096 156.378L415.902 152.598L416.8 150.59L417.765 149.749L418.607 149.872L417.518 150.175L419.134 152.071L420.245 154.617L420.223 154.953L419.852 154.863L420.425 157.544L420.144 158.049L420.638 159.384ZM443.512 224.684L442.962 223.125L443.703 224.471L443.512 224.684Z\" fill=\"#69BFF3\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-42-inside-28_10718_32869)\" />\n                <mask id=\"path-43-inside-29_10718_32869\" fill=\"white\">\n                    <path d=\"M10.648 410.279L10.1766 410.144L9.50314 410.413L9.55926 410.694L8.96441 410.503L8.88584 411.479L7.65124 411.939L7.62879 412.937L7.04516 412.466L5.70954 413.117L4.03721 412.567L7.10128 408.619L7.64001 408.439L10.0307 405.613L10.9959 405.736L11.5122 404.132L12.3764 402.831L13.3192 402.461L15.4741 400.622L16.3384 399.332L17.2138 400.397L18.2913 400.846L18.8974 401.799H20.2218L21.3441 402.551L22.2981 402.607L42.9946 410.671L44.2068 410.75L45.6097 408.866L46.2944 409.023L47.0014 408.608L47.5065 407.127L48.6289 405.905L49.5043 405.456V404.727L50.5706 404.85L51.996 405.792L52.2878 405.478L53.1969 403.224L52.1531 402.753L51.1991 403.302L49.9757 402.349L49.7288 401.665L52.1643 400.33L55.0264 400.689L55.6774 400.386L57.7986 402.338L58.068 400.812L60.4586 399.175L63.2982 400.622L64.8471 399.68L64.8247 401.463L65.6552 402.046L65.9695 402.113L66.8674 400.981L67.451 401.598L67.7428 402.742L67.3163 403.93L66.2164 404.85L66.2613 405.4L66.8674 405.882L66.5194 406.779L66.0144 407.374L65.0828 406.925L64.589 407.093L63.6686 408.282L64.4206 409.998L64.791 412.029L63.9604 416.033L63.3431 416.896L63.186 418.747L63.9155 419.342L63.8931 419.981L63.4217 420.441L66.149 421.461L65.5879 422.134L65.5093 424.95L65.7225 425.454L67.2714 425.791L67.4173 427.182L66.4745 426.497L66.5194 428.034L65.3858 429.425L66.048 430.188L65.3522 431.175L65.094 432.33L64.1849 432.319L63.388 433.149L62.6922 432.936L62.3105 433.575L61.6483 432.823L60.4474 434.349L60.4811 434.999L60.178 435.134L60.4137 435.65L59.1679 435.706L56.8895 434.562L55.5651 434.775L55.1723 435.47L54.6111 435.28L53.8367 434.629L53.1296 434.517L51.5021 431.646L50.2226 431.96L49.4931 431.691L48.6738 432.678L46.9453 431.489L46.4627 430.704L45.7107 431.904L44.3976 432.947L44.1731 433.9L44.4986 434.91L44.0047 435.807L43.2527 436.099L40.806 434.629L40.4468 432.857L37.7868 430.995L37.3603 431.107L36.9787 432.734L36.5522 432.846L36.1369 432.801L35.3625 431.836L34.2289 431.713L34.6666 433.889L34.0718 434.338L34.0605 435.179L33.0841 436.727L32.0291 437.142L31.0863 436.469L30.2108 436.446L29.4588 438.51L27.9773 439.744L27.6294 441.37L27.1804 441.561L26.2489 441.191L24.8796 442.01L23.3195 441.045L23.0726 441.213L22.8257 441.662L23.1399 442.178L22.6685 442.941L23.0726 444.04L23.0501 445.307L22.0737 445.991L21.2094 445.666L20.3228 446.148L19.3912 446.047L18.6841 445.61L18.2127 444.477L16.0802 443.804L15.9006 442.458L13.813 440.394L12.9039 440.473L8.99808 439.407L8.24609 439.486L7.17984 437.669L6.12481 437.153L4.93511 436.996L3.81274 438.095L3.39746 437.478L3.56582 436.816L4.93511 433.115L5.93401 432.308L6.65233 432.296L6.70845 431.724L7.37064 431.208L6.04625 429.593L6.4503 427.821L5.69832 426.082L5.90034 425.185L6.47275 424.58L7.17984 424.77L7.47166 426.228L8.62769 426.666L9.16643 426.329L9.49192 423.974L10.1766 423.615L11.5571 424.838L13.4427 424.277L14.262 423.267L14.2508 422.931L13.6447 422.605L14.0936 422.471L14.1946 421.888L14.7334 421.428L15.5639 421.282L19.3351 422.28L19.178 423.391L20.0422 424.008L20.5809 423.951V424.31L22.2981 426.183L23.7011 427.361L24.7112 427.529L25.9234 427.081L26.3611 426.094L27.2814 426.105L27.9998 425.309L27.8988 424.781L25.9571 423.593L26.0132 421.428L24.6214 420.385L24.8796 419.14L22.8369 418.68L18.8861 416.908L18.1005 417.076L17.0455 418.579L14.913 418.601L13.9477 418.276L13.712 417.345L12.6121 416.571L12.2305 415.506L11.9162 416.078L10.6929 415.506L9.30112 412.354L9.71639 412.343L10.2776 413.487L11.4561 414.148L11.0071 412.814L11.2091 412.197L10.9398 411.647L10.6143 412.208L10.1653 411.468L10.3561 410.784L10.7041 411.423L11.3999 411.614L10.9285 410.604L11.7815 410.447L11.5683 410.066L11.8713 409.426L11.4448 408.664L11.1418 408.72L11.2765 409.213L10.9285 409.269L11.0183 410.189L10.648 410.279Z\" />\n                </mask>\n                <path d=\"M10.648 410.279L10.1766 410.144L9.50314 410.413L9.55926 410.694L8.96441 410.503L8.88584 411.479L7.65124 411.939L7.62879 412.937L7.04516 412.466L5.70954 413.117L4.03721 412.567L7.10128 408.619L7.64001 408.439L10.0307 405.613L10.9959 405.736L11.5122 404.132L12.3764 402.831L13.3192 402.461L15.4741 400.622L16.3384 399.332L17.2138 400.397L18.2913 400.846L18.8974 401.799H20.2218L21.3441 402.551L22.2981 402.607L42.9946 410.671L44.2068 410.75L45.6097 408.866L46.2944 409.023L47.0014 408.608L47.5065 407.127L48.6289 405.905L49.5043 405.456V404.727L50.5706 404.85L51.996 405.792L52.2878 405.478L53.1969 403.224L52.1531 402.753L51.1991 403.302L49.9757 402.349L49.7288 401.665L52.1643 400.33L55.0264 400.689L55.6774 400.386L57.7986 402.338L58.068 400.812L60.4586 399.175L63.2982 400.622L64.8471 399.68L64.8247 401.463L65.6552 402.046L65.9695 402.113L66.8674 400.981L67.451 401.598L67.7428 402.742L67.3163 403.93L66.2164 404.85L66.2613 405.4L66.8674 405.882L66.5194 406.779L66.0144 407.374L65.0828 406.925L64.589 407.093L63.6686 408.282L64.4206 409.998L64.791 412.029L63.9604 416.033L63.3431 416.896L63.186 418.747L63.9155 419.342L63.8931 419.981L63.4217 420.441L66.149 421.461L65.5879 422.134L65.5093 424.95L65.7225 425.454L67.2714 425.791L67.4173 427.182L66.4745 426.497L66.5194 428.034L65.3858 429.425L66.048 430.188L65.3522 431.175L65.094 432.33L64.1849 432.319L63.388 433.149L62.6922 432.936L62.3105 433.575L61.6483 432.823L60.4474 434.349L60.4811 434.999L60.178 435.134L60.4137 435.65L59.1679 435.706L56.8895 434.562L55.5651 434.775L55.1723 435.47L54.6111 435.28L53.8367 434.629L53.1296 434.517L51.5021 431.646L50.2226 431.96L49.4931 431.691L48.6738 432.678L46.9453 431.489L46.4627 430.704L45.7107 431.904L44.3976 432.947L44.1731 433.9L44.4986 434.91L44.0047 435.807L43.2527 436.099L40.806 434.629L40.4468 432.857L37.7868 430.995L37.3603 431.107L36.9787 432.734L36.5522 432.846L36.1369 432.801L35.3625 431.836L34.2289 431.713L34.6666 433.889L34.0718 434.338L34.0605 435.179L33.0841 436.727L32.0291 437.142L31.0863 436.469L30.2108 436.446L29.4588 438.51L27.9773 439.744L27.6294 441.37L27.1804 441.561L26.2489 441.191L24.8796 442.01L23.3195 441.045L23.0726 441.213L22.8257 441.662L23.1399 442.178L22.6685 442.941L23.0726 444.04L23.0501 445.307L22.0737 445.991L21.2094 445.666L20.3228 446.148L19.3912 446.047L18.6841 445.61L18.2127 444.477L16.0802 443.804L15.9006 442.458L13.813 440.394L12.9039 440.473L8.99808 439.407L8.24609 439.486L7.17984 437.669L6.12481 437.153L4.93511 436.996L3.81274 438.095L3.39746 437.478L3.56582 436.816L4.93511 433.115L5.93401 432.308L6.65233 432.296L6.70845 431.724L7.37064 431.208L6.04625 429.593L6.4503 427.821L5.69832 426.082L5.90034 425.185L6.47275 424.58L7.17984 424.77L7.47166 426.228L8.62769 426.666L9.16643 426.329L9.49192 423.974L10.1766 423.615L11.5571 424.838L13.4427 424.277L14.262 423.267L14.2508 422.931L13.6447 422.605L14.0936 422.471L14.1946 421.888L14.7334 421.428L15.5639 421.282L19.3351 422.28L19.178 423.391L20.0422 424.008L20.5809 423.951V424.31L22.2981 426.183L23.7011 427.361L24.7112 427.529L25.9234 427.081L26.3611 426.094L27.2814 426.105L27.9998 425.309L27.8988 424.781L25.9571 423.593L26.0132 421.428L24.6214 420.385L24.8796 419.14L22.8369 418.68L18.8861 416.908L18.1005 417.076L17.0455 418.579L14.913 418.601L13.9477 418.276L13.712 417.345L12.6121 416.571L12.2305 415.506L11.9162 416.078L10.6929 415.506L9.30112 412.354L9.71639 412.343L10.2776 413.487L11.4561 414.148L11.0071 412.814L11.2091 412.197L10.9398 411.647L10.6143 412.208L10.1653 411.468L10.3561 410.784L10.7041 411.423L11.3999 411.614L10.9285 410.604L11.7815 410.447L11.5683 410.066L11.8713 409.426L11.4448 408.664L11.1418 408.72L11.2765 409.213L10.9285 409.269L11.0183 410.189L10.648 410.279Z\" fill=\"#3C484F\" />\n                <path d=\"M3.32704 436.816V436.828H3.82704V436.816H3.32704ZM10.648 410.279L10.5107 410.76L10.6375 410.796L10.7657 410.765L10.648 410.279ZM10.1766 410.144L10.3138 409.664L10.1496 409.617L9.99098 409.68L10.1766 410.144ZM9.50314 410.413L9.31756 409.949L8.93122 410.104L9.01287 410.512L9.50314 410.413ZM9.55926 410.694L9.40665 411.17L10.2164 411.43L10.0495 410.596L9.55926 410.694ZM8.96441 410.503L9.11702 410.027L8.51662 409.835L8.46602 410.463L8.96441 410.503ZM8.88584 411.479L9.06036 411.948L9.35868 411.836L9.38423 411.519L8.88584 411.479ZM7.65124 411.939L7.47672 411.47L7.15898 411.589L7.15136 411.928L7.65124 411.939ZM7.62879 412.937L7.31475 413.326L8.10581 413.965L8.12866 412.948L7.62879 412.937ZM7.04516 412.466L7.35919 412.077L7.11191 411.877L6.82622 412.017L7.04516 412.466ZM5.70954 413.117L5.55344 413.592L5.74612 413.655L5.92847 413.566L5.70954 413.117ZM4.03721 412.567L3.64221 412.26L3.20747 412.821L3.88111 413.042L4.03721 412.567ZM7.10128 408.619L6.94328 408.144L6.79931 408.192L6.70628 408.312L7.10128 408.619ZM7.64001 408.439L7.79801 408.914L7.93115 408.869L8.02178 408.762L7.64001 408.439ZM10.0307 405.613L10.0941 405.117L9.82444 405.082L9.64889 405.29L10.0307 405.613ZM10.9959 405.736L10.9325 406.232L11.3446 406.285L11.4718 405.89L10.9959 405.736ZM11.5122 404.132L11.0957 403.856L11.0574 403.913L11.0362 403.979L11.5122 404.132ZM12.3764 402.831L12.1937 402.366L12.0471 402.423L11.9599 402.555L12.3764 402.831ZM13.3192 402.461L13.5019 402.927L13.58 402.896L13.6438 402.841L13.3192 402.461ZM15.4741 400.622L15.7988 401.002L15.8512 400.957L15.8895 400.9L15.4741 400.622ZM16.3384 399.332L16.7247 399.014L16.2975 398.495L15.923 399.054L16.3384 399.332ZM17.2138 400.397L16.8275 400.715L16.9066 400.811L17.0216 400.859L17.2138 400.397ZM18.2913 400.846L18.7132 400.578L18.6288 400.445L18.4835 400.384L18.2913 400.846ZM18.8974 401.799L18.4754 402.068L18.6227 402.299H18.8974V401.799ZM20.2218 401.799L20.4999 401.384L20.3737 401.299H20.2218V401.799ZM21.3441 402.551L21.0659 402.966L21.179 403.042L21.3148 403.05L21.3441 402.551ZM22.2981 402.607L22.4797 402.141L22.4062 402.112L22.3275 402.108L22.2981 402.607ZM42.9946 410.671L42.8131 411.137L42.8851 411.165L42.9623 411.17L42.9946 410.671ZM44.2068 410.75L44.1744 411.249L44.4455 411.266L44.6078 411.049L44.2068 410.75ZM45.6097 408.866L45.7215 408.378L45.4035 408.305L45.2087 408.567L45.6097 408.866ZM46.2944 409.023L46.1826 409.51L46.3762 409.554L46.5474 409.454L46.2944 409.023ZM47.0014 408.608L47.2545 409.039L47.4147 408.945L47.4747 408.769L47.0014 408.608ZM47.5065 407.127L47.1382 406.789L47.0672 406.866L47.0333 406.966L47.5065 407.127ZM48.6289 405.905L48.4009 405.46L48.3211 405.5L48.2606 405.566L48.6289 405.905ZM49.5043 405.456L49.7324 405.901L50.0043 405.762V405.456H49.5043ZM49.5043 404.727L49.5618 404.23L49.0043 404.166V404.727H49.5043ZM50.5706 404.85L50.8463 404.433L50.7467 404.367L50.628 404.354L50.5706 404.85ZM51.996 405.792L51.7203 406.21L52.0738 406.443L52.3623 406.133L51.996 405.792ZM52.2878 405.478L52.6541 405.819L52.717 405.751L52.7515 405.665L52.2878 405.478ZM53.1969 403.224L53.6606 403.411L53.8402 402.966L53.4026 402.768L53.1969 403.224ZM52.1531 402.753L52.3588 402.297L52.1254 402.192L51.9035 402.32L52.1531 402.753ZM51.1991 403.302L50.8918 403.697L51.1572 403.904L51.4487 403.736L51.1991 403.302ZM49.9757 402.349L49.5054 402.519L49.5544 402.655L49.6684 402.743L49.9757 402.349ZM49.7288 401.665L49.4885 401.226L49.1132 401.432L49.2585 401.835L49.7288 401.665ZM52.1643 400.33L52.2266 399.834L52.066 399.814L51.9241 399.892L52.1643 400.33ZM55.0264 400.689L54.9642 401.185L55.1069 401.203L55.2373 401.142L55.0264 400.689ZM55.6774 400.386L56.0159 400.018L55.7697 399.792L55.4664 399.933L55.6774 400.386ZM57.7986 402.338L57.4601 402.706L58.1322 403.324L58.291 402.425L57.7986 402.338ZM58.068 400.812L57.7854 400.4L57.6121 400.519L57.5756 400.725L58.068 400.812ZM60.4586 399.175L60.6856 398.729L60.4211 398.594L60.1761 398.762L60.4586 399.175ZM63.2982 400.622L63.0712 401.067L63.3198 401.194L63.5581 401.049L63.2982 400.622ZM64.8471 399.68L65.3471 399.686L65.3584 398.783L64.5872 399.252L64.8471 399.68ZM64.8247 401.463L64.3247 401.457L64.3214 401.721L64.5373 401.872L64.8247 401.463ZM65.6552 402.046L65.3679 402.455L65.4511 402.514L65.5505 402.535L65.6552 402.046ZM65.9695 402.113L65.8648 402.602L66.1684 402.667L66.3613 402.424L65.9695 402.113ZM66.8674 400.981L67.2306 400.637L66.834 400.218L66.4755 400.67L66.8674 400.981ZM67.451 401.598L67.9355 401.474L67.9034 401.348L67.8142 401.254L67.451 401.598ZM67.7428 402.742L68.2134 402.91L68.2651 402.766L68.2273 402.618L67.7428 402.742ZM67.3163 403.93L67.637 404.314L67.7411 404.227L67.7869 404.099L67.3163 403.93ZM66.2164 404.85L65.8956 404.467L65.697 404.633L65.718 404.891L66.2164 404.85ZM66.2613 405.4L65.7629 405.441L65.7806 405.656L65.9499 405.791L66.2613 405.4ZM66.8674 405.882L67.3335 406.063L67.4665 405.72L67.1787 405.491L66.8674 405.882ZM66.5194 406.779L66.9005 407.103L66.9551 407.039L66.9856 406.96L66.5194 406.779ZM66.0144 407.374L65.7974 407.824L66.1453 407.992L66.3954 407.698L66.0144 407.374ZM65.0828 406.925L65.2997 406.475L65.1153 406.386L64.9216 406.452L65.0828 406.925ZM64.589 407.093L64.4278 406.62L64.2855 406.669L64.1936 406.787L64.589 407.093ZM63.6686 408.282L63.2732 407.976L63.0915 408.211L63.2107 408.483L63.6686 408.282ZM64.4206 409.998L64.9125 409.909L64.902 409.851L64.8786 409.798L64.4206 409.998ZM64.791 412.029L65.2806 412.13L65.3004 412.035L65.2829 411.939L64.791 412.029ZM63.9604 416.033L64.3672 416.324L64.4286 416.238L64.45 416.134L63.9604 416.033ZM63.3431 416.896L62.9364 416.606L62.8565 416.717L62.8449 416.854L63.3431 416.896ZM63.186 418.747L62.6878 418.705L62.6654 418.968L62.8701 419.135L63.186 418.747ZM63.9155 419.342L64.4152 419.359L64.4239 419.111L64.2314 418.954L63.9155 419.342ZM63.8931 419.981L64.2422 420.339L64.3857 420.199L64.3928 419.998L63.8931 419.981ZM63.4217 420.441L63.0725 420.083L62.5087 420.633L63.2464 420.909L63.4217 420.441ZM66.149 421.461L66.5331 421.782L66.9845 421.24L66.3243 420.993L66.149 421.461ZM65.5879 422.134L65.2038 421.814L65.0929 421.947L65.0881 422.12L65.5879 422.134ZM65.5093 424.95L65.0095 424.936L65.0065 425.044L65.0487 425.144L65.5093 424.95ZM65.7225 425.454L65.262 425.649L65.3629 425.888L65.6164 425.943L65.7225 425.454ZM67.2714 425.791L67.7687 425.739L67.731 425.379L67.3776 425.302L67.2714 425.791ZM67.4173 427.182L67.1236 427.586L68.0316 428.245L67.9146 427.13L67.4173 427.182ZM66.4745 426.497L66.7682 426.093L65.945 425.495L65.9747 426.512L66.4745 426.497ZM66.5194 428.034L66.907 428.35L67.0247 428.206L67.0192 428.02L66.5194 428.034ZM65.3858 429.425L64.9983 429.109L64.7325 429.435L65.0083 429.753L65.3858 429.425ZM66.048 430.188L66.4567 430.476L66.6824 430.156L66.4256 429.86L66.048 430.188ZM65.3522 431.175L64.9435 430.887L64.886 430.968L64.8642 431.066L65.3522 431.175ZM65.094 432.33L65.0878 432.83L65.4935 432.835L65.582 432.439L65.094 432.33ZM64.1849 432.319L64.1911 431.819L63.9743 431.816L63.8242 431.972L64.1849 432.319ZM63.388 433.149L63.2416 433.627L63.5357 433.717L63.7487 433.495L63.388 433.149ZM62.6922 432.936L62.8386 432.458L62.4637 432.343L62.2628 432.679L62.6922 432.936ZM62.3105 433.575L61.9354 433.905L62.3886 434.42L62.7399 433.831L62.3105 433.575ZM61.6483 432.823L62.0235 432.493L61.6267 432.043L61.2555 432.514L61.6483 432.823ZM60.4474 434.349L60.0546 434.04L59.9384 434.187L59.9481 434.375L60.4474 434.349ZM60.4811 434.999L60.684 435.456L60.9982 435.317L60.9804 434.974L60.4811 434.999ZM60.178 435.134L59.9751 434.677L59.5133 434.882L59.7233 435.342L60.178 435.134ZM60.4137 435.65L60.4362 436.149L61.1764 436.116L60.8685 435.442L60.4137 435.65ZM59.1679 435.706L58.9435 436.153L59.0601 436.211L59.1904 436.206L59.1679 435.706ZM56.8895 434.562L57.1139 434.115L56.9695 434.043L56.8101 434.068L56.8895 434.562ZM55.5651 434.775L55.4857 434.281L55.2481 434.32L55.1298 434.529L55.5651 434.775ZM55.1723 435.47L55.0114 435.944L55.4038 436.077L55.6076 435.716L55.1723 435.47ZM54.6111 435.28L54.2895 435.663L54.3614 435.723L54.4503 435.753L54.6111 435.28ZM53.8367 434.629L54.1583 434.246L54.052 434.157L53.915 434.135L53.8367 434.629ZM53.1296 434.517L52.6946 434.764L52.8134 434.973L53.0513 435.011L53.1296 434.517ZM51.5021 431.646L51.9371 431.399L51.7505 431.07L51.3829 431.16L51.5021 431.646ZM50.2226 431.96L50.0495 432.429L50.1932 432.482L50.3418 432.445L50.2226 431.96ZM49.4931 431.691L49.6662 431.222L49.3343 431.099L49.1084 431.371L49.4931 431.691ZM48.6738 432.678L48.3904 433.09L48.7668 433.348L49.0585 432.997L48.6738 432.678ZM46.9453 431.489L46.5194 431.751L46.5748 431.841L46.662 431.901L46.9453 431.489ZM46.4627 430.704L46.8887 430.442L46.4668 429.755L46.039 430.438L46.4627 430.704ZM45.7107 431.904L46.0217 432.295L46.0889 432.242L46.1344 432.169L45.7107 431.904ZM44.3976 432.947L44.0866 432.555L43.9506 432.663L43.9109 432.832L44.3976 432.947ZM44.1731 433.9L43.6864 433.786L43.6545 433.921L43.6972 434.054L44.1731 433.9ZM44.4986 434.91L44.9366 435.151L45.0407 434.962L44.9744 434.756L44.4986 434.91ZM44.0047 435.807L44.1855 436.273L44.3551 436.207L44.4428 436.048L44.0047 435.807ZM43.2527 436.099L42.9953 436.527L43.2052 436.653L43.4335 436.565L43.2527 436.099ZM40.806 434.629L40.3159 434.729L40.3597 434.944L40.5486 435.058L40.806 434.629ZM40.4468 432.857L40.9369 432.758L40.8972 432.562L40.7335 432.448L40.4468 432.857ZM37.7868 430.995L38.0735 430.586L37.8837 430.453L37.6596 430.512L37.7868 430.995ZM37.3603 431.107L37.2331 430.624L36.9422 430.7L36.8735 430.993L37.3603 431.107ZM36.9787 432.734L37.1059 433.217L37.3968 433.141L37.4655 432.848L36.9787 432.734ZM36.5522 432.846L36.4985 433.343L36.5902 433.353L36.6794 433.329L36.5522 432.846ZM36.1369 432.801L35.747 433.114L35.8769 433.276L36.0832 433.298L36.1369 432.801ZM35.3625 431.836L35.7524 431.523L35.6226 431.362L35.4166 431.339L35.3625 431.836ZM34.2289 431.713L34.283 431.216L33.604 431.142L33.7387 431.812L34.2289 431.713ZM34.6666 433.889L34.9677 434.288L35.2188 434.099L35.1568 433.79L34.6666 433.889ZM34.0718 434.338L33.7707 433.939L33.5751 434.086L33.5718 434.331L34.0718 434.338ZM34.0605 435.179L34.4834 435.446L34.5586 435.326L34.5605 435.186L34.0605 435.179ZM33.0841 436.727L33.2671 437.192L33.4196 437.132L33.507 436.994L33.0841 436.727ZM32.0291 437.142L31.7386 437.549L31.9595 437.706L32.2121 437.607L32.0291 437.142ZM31.0863 436.469L31.3768 436.062L31.2521 435.973L31.0991 435.969L31.0863 436.469ZM30.2108 436.446L30.2236 435.947L29.8641 435.937L29.741 436.275L30.2108 436.446ZM29.4588 438.51L29.7788 438.894L29.8824 438.808L29.9286 438.681L29.4588 438.51ZM27.9773 439.744L27.6574 439.36L27.5245 439.47L27.4884 439.639L27.9773 439.744ZM27.6294 441.37L27.8249 441.83L28.064 441.729L28.1183 441.475L27.6294 441.37ZM27.1804 441.561L26.9958 442.026L27.1868 442.101L27.3759 442.021L27.1804 441.561ZM26.2489 441.191L26.4335 440.726L26.2041 440.635L25.9923 440.762L26.2489 441.191ZM24.8796 442.01L24.6166 442.435L24.8752 442.595L25.1362 442.439L24.8796 442.01ZM23.3195 441.045L23.5824 440.62L23.3062 440.449L23.0379 440.632L23.3195 441.045ZM23.0726 441.213L22.791 440.8L22.6922 440.867L22.6345 440.972L23.0726 441.213ZM22.8257 441.662L22.3876 441.421L22.2479 441.675L22.3986 441.922L22.8257 441.662ZM23.1399 442.178L23.5652 442.441L23.7265 442.18L23.5669 441.918L23.1399 442.178ZM22.6685 442.941L22.2432 442.678L22.1153 442.885L22.1992 443.113L22.6685 442.941ZM23.0726 444.04L23.5725 444.049L23.5741 443.955L23.5419 443.867L23.0726 444.04ZM23.0501 445.307L23.337 445.717L23.5455 445.571L23.55 445.316L23.0501 445.307ZM22.0737 445.991L21.8975 446.459L22.1445 446.552L22.3606 446.401L22.0737 445.991ZM21.2094 445.666L21.3856 445.198L21.1715 445.118L20.9705 445.227L21.2094 445.666ZM20.3228 446.148L20.2689 446.645L20.4243 446.662L20.5617 446.588L20.3228 446.148ZM19.3912 446.047L19.1281 446.473L19.2246 446.532L19.3374 446.545L19.3912 446.047ZM18.6841 445.61L18.2225 445.802L18.2843 445.951L18.4211 446.035L18.6841 445.61ZM18.2127 444.477L18.6743 444.285L18.585 444.07L18.3632 444L18.2127 444.477ZM16.0802 443.804L15.5846 443.87L15.6266 444.185L15.9298 444.281L16.0802 443.804ZM15.9006 442.458L16.3962 442.392L16.3737 442.223L16.2522 442.103L15.9006 442.458ZM13.813 440.394L14.1646 440.039L14.0002 439.876L13.77 439.896L13.813 440.394ZM12.9039 440.473L12.7723 440.955L12.8582 440.979L12.9469 440.971L12.9039 440.473ZM8.99808 439.407L9.12967 438.925L9.03931 438.9L8.94615 438.91L8.99808 439.407ZM8.24609 439.486L7.81485 439.739L7.9778 440.017L8.29802 439.983L8.24609 439.486ZM7.17984 437.669L7.61108 437.416L7.53484 437.286L7.39951 437.22L7.17984 437.669ZM6.12481 437.153L6.34448 436.704L6.27115 436.668L6.19022 436.657L6.12481 437.153ZM4.93511 436.996L5.00051 436.5L4.75918 436.468L4.58527 436.639L4.93511 436.996ZM3.81274 438.095L3.39797 438.374L3.73342 438.873L4.16258 438.452L3.81274 438.095ZM3.39746 437.478L2.9129 437.355L2.85773 437.572L2.98269 437.757L3.39746 437.478ZM3.56582 436.816L3.09688 436.643L3.08774 436.668L3.08125 436.693L3.56582 436.816ZM4.93511 433.115L4.62077 432.726L4.51386 432.813L4.46617 432.942L4.93511 433.115ZM5.93401 432.308L5.9262 431.808L5.75378 431.81L5.61967 431.919L5.93401 432.308ZM6.65233 432.296L6.66014 432.796L7.10637 432.789L7.14994 432.345L6.65233 432.296ZM6.70845 431.724L6.40113 431.33L6.23179 431.462L6.21084 431.675L6.70845 431.724ZM7.37064 431.208L7.67796 431.603L8.08231 431.288L7.75728 430.891L7.37064 431.208ZM6.04625 429.593L5.55876 429.482L5.50431 429.721L5.65961 429.91L6.04625 429.593ZM6.4503 427.821L6.93779 427.932L6.97416 427.773L6.90921 427.623L6.4503 427.821ZM5.69832 426.082L5.21053 425.973L5.17476 426.132L5.23941 426.281L5.69832 426.082ZM5.90034 425.185L5.53696 424.842L5.4427 424.942L5.41256 425.075L5.90034 425.185ZM6.47275 424.58L6.60292 424.097L6.31453 424.019L6.10936 424.236L6.47275 424.58ZM7.17984 424.77L7.67012 424.672L7.60929 424.368L7.31001 424.287L7.17984 424.77ZM7.47166 426.228L6.98138 426.326L7.03572 426.598L7.2947 426.696L7.47166 426.228ZM8.62769 426.666L8.45074 427.133L8.68244 427.221L8.89256 427.09L8.62769 426.666ZM9.16643 426.329L9.4313 426.753L9.62971 426.629L9.66173 426.398L9.16643 426.329ZM9.49192 423.974L9.2598 423.531L9.03185 423.65L8.99662 423.905L9.49192 423.974ZM10.1766 423.615L10.508 423.241L10.2499 423.012L9.94444 423.172L10.1766 423.615ZM11.5571 424.838L11.2256 425.212L11.4335 425.396L11.6996 425.317L11.5571 424.838ZM13.4427 424.277L13.5852 424.756L13.7334 424.712L13.8309 424.592L13.4427 424.277ZM14.262 423.267L14.6502 423.582L14.7679 423.437L14.7617 423.251L14.262 423.267ZM14.2508 422.931L14.7505 422.914L14.7409 422.626L14.4872 422.49L14.2508 422.931ZM13.6447 422.605L13.5011 422.127L12.3422 422.474L13.4083 423.046L13.6447 422.605ZM14.0936 422.471L14.2372 422.95L14.5335 422.861L14.5863 422.556L14.0936 422.471ZM14.1946 421.888L13.87 421.507L13.7328 421.624L13.702 421.802L14.1946 421.888ZM14.7334 421.428L14.6469 420.935L14.5125 420.959L14.4088 421.048L14.7334 421.428ZM15.5639 421.282L15.6919 420.799L15.5857 420.771L15.4775 420.79L15.5639 421.282ZM19.3351 422.28L19.8302 422.35L19.8924 421.911L19.463 421.797L19.3351 422.28ZM19.178 423.391L18.6829 423.321L18.6403 423.621L18.8875 423.798L19.178 423.391ZM20.0422 424.008L19.7517 424.414L19.9057 424.524L20.0939 424.505L20.0422 424.008ZM20.5809 423.951H21.0809V423.397L20.5292 423.454L20.5809 423.951ZM20.5809 424.31H20.0809V424.505L20.2124 424.648L20.5809 424.31ZM22.2981 426.183L21.9296 426.521L21.9517 426.545L21.9767 426.566L22.2981 426.183ZM23.7011 427.361L23.3796 427.744L23.4842 427.832L23.6189 427.854L23.7011 427.361ZM24.7112 427.529L24.6291 428.023L24.7602 428.044L24.8848 427.998L24.7112 427.529ZM25.9234 427.081L26.0969 427.55L26.2949 427.476L26.3805 427.283L25.9234 427.081ZM26.3611 426.094L26.3672 425.594L26.0376 425.59L25.904 425.891L26.3611 426.094ZM27.2814 426.105L27.2753 426.605L27.5013 426.608L27.6527 426.44L27.2814 426.105ZM27.9998 425.309L28.371 425.643L28.5376 425.459L28.4908 425.214L27.9998 425.309ZM27.8988 424.781L28.3898 424.687L28.3482 424.47L28.1598 424.355L27.8988 424.781ZM25.9571 423.593L25.4572 423.58L25.4497 423.868L25.696 424.019L25.9571 423.593ZM26.0132 421.428L26.513 421.441L26.5197 421.183L26.313 421.028L26.0132 421.428ZM24.6214 420.385L24.1319 420.283L24.0674 420.594L24.3216 420.785L24.6214 420.385ZM24.8796 419.14L25.3692 419.241L25.469 418.76L24.9894 418.652L24.8796 419.14ZM22.8369 418.68L22.6322 419.136L22.6781 419.157L22.7271 419.168L22.8369 418.68ZM18.8861 416.908L19.0908 416.451L18.9415 416.384L18.7814 416.419L18.8861 416.908ZM18.1005 417.076L17.9958 416.587L17.8039 416.628L17.6912 416.789L18.1005 417.076ZM17.0455 418.579L17.0507 419.079L17.3073 419.076L17.4547 418.866L17.0455 418.579ZM14.913 418.601L14.7533 419.075L14.8335 419.102L14.9182 419.101L14.913 418.601ZM13.9477 418.276L13.463 418.399L13.5299 418.663L13.7881 418.75L13.9477 418.276ZM13.712 417.345L14.1967 417.222L14.1513 417.043L13.9997 416.936L13.712 417.345ZM12.6121 416.571L12.1414 416.74L12.1948 416.889L12.3244 416.98L12.6121 416.571ZM12.2305 415.506L12.7012 415.337L12.3269 414.292L11.7923 415.265L12.2305 415.506ZM11.9162 416.078L11.7045 416.531L12.1289 416.729L12.3545 416.318L11.9162 416.078ZM10.6929 415.506L10.2355 415.708L10.3112 415.879L10.4811 415.959L10.6929 415.506ZM9.30112 412.354L9.2876 411.854L8.54273 411.874L8.84373 412.556L9.30112 412.354ZM9.71639 412.343L10.1653 412.122L10.0239 411.834L9.70288 411.843L9.71639 412.343ZM10.2776 413.487L9.82868 413.707L9.89716 413.847L10.0328 413.923L10.2776 413.487ZM11.4561 414.148L11.2112 414.584L12.3442 415.221L11.93 413.989L11.4561 414.148ZM11.0071 412.814L10.5319 412.658L10.4803 412.816L10.5332 412.973L11.0071 412.814ZM11.2091 412.197L11.6843 412.352L11.7476 412.159L11.6581 411.977L11.2091 412.197ZM10.9398 411.647L11.3887 411.427L10.977 410.587L10.5073 411.396L10.9398 411.647ZM10.6143 412.208L10.1868 412.467L10.6237 413.188L11.0467 412.459L10.6143 412.208ZM10.1653 411.468L9.68372 411.333L9.62556 411.542L9.73782 411.727L10.1653 411.468ZM10.3561 410.784L10.7953 410.545L10.2058 409.461L9.87453 410.649L10.3561 410.784ZM10.7041 411.423L10.2649 411.662L10.3667 411.849L10.5719 411.905L10.7041 411.423ZM11.3999 411.614L11.2678 412.096L12.3104 412.382L11.853 411.402L11.3999 411.614ZM10.9285 410.604L10.838 410.112L10.2018 410.23L10.4755 410.816L10.9285 410.604ZM11.7815 410.447L11.8721 410.939L12.5587 410.812L12.2179 410.203L11.7815 410.447ZM11.5683 410.066L11.1165 409.852L11.006 410.085L11.1319 410.31L11.5683 410.066ZM11.8713 409.426L12.3232 409.641L12.4336 409.408L12.3077 409.182L11.8713 409.426ZM11.4448 408.664L11.8812 408.42L11.7063 408.107L11.3539 408.172L11.4448 408.664ZM11.1418 408.72L11.0508 408.228L10.5163 408.327L10.6594 408.851L11.1418 408.72ZM11.2765 409.213L11.356 409.707L11.9053 409.618L11.7588 409.082L11.2765 409.213ZM10.9285 409.269L10.849 408.776L10.3853 408.85L10.4309 409.318L10.9285 409.269ZM11.0183 410.189L11.1361 410.675L11.5582 410.573L11.516 410.141L11.0183 410.189ZM10.7852 409.798L10.3138 409.664L10.0393 410.625L10.5107 410.76L10.7852 409.798ZM9.99098 409.68L9.31756 409.949L9.68873 410.878L10.3621 410.609L9.99098 409.68ZM9.01287 410.512L9.06898 410.792L10.0495 410.596L9.99342 410.315L9.01287 410.512ZM9.71187 410.218L9.11702 410.027L8.8118 410.979L9.40665 411.17L9.71187 410.218ZM8.46602 410.463L8.38746 411.439L9.38423 411.519L9.4628 410.543L8.46602 410.463ZM8.71133 411.01L7.47672 411.47L7.82575 412.407L9.06036 411.948L8.71133 411.01ZM7.15136 411.928L7.12891 412.926L8.12866 412.948L8.15111 411.95L7.15136 411.928ZM7.94282 412.548L7.35919 412.077L6.73112 412.855L7.31475 413.326L7.94282 412.548ZM6.82622 412.017L5.49061 412.667L5.92847 413.566L7.26409 412.916L6.82622 412.017ZM5.86564 412.642L4.19331 412.092L3.88111 413.042L5.55344 413.592L5.86564 412.642ZM4.43221 412.874L7.49628 408.925L6.70628 408.312L3.64221 412.26L4.43221 412.874ZM7.25927 409.093L7.79801 408.914L7.48202 407.965L6.94328 408.144L7.25927 409.093ZM8.02178 408.762L10.4124 405.936L9.64889 405.29L7.25825 408.117L8.02178 408.762ZM9.96723 406.109L10.9325 406.232L11.0593 405.24L10.0941 405.117L9.96723 406.109ZM11.4718 405.89L11.9881 404.286L11.0362 403.979L10.5199 405.583L11.4718 405.89ZM11.9287 404.409L12.7929 403.108L11.9599 402.555L11.0957 403.856L11.9287 404.409ZM12.5591 403.297L13.5019 402.927L13.1365 401.996L12.1937 402.366L12.5591 403.297ZM13.6438 402.841L15.7988 401.002L15.1495 400.241L12.9946 402.081L13.6438 402.841ZM15.8895 400.9L16.7537 399.61L15.923 399.054L15.0588 400.343L15.8895 400.9ZM15.952 399.649L16.8275 400.715L17.6001 400.08L16.7247 399.014L15.952 399.649ZM17.0216 400.859L18.0991 401.308L18.4835 400.384L17.406 399.936L17.0216 400.859ZM17.8693 401.114L18.4754 402.068L19.3193 401.531L18.7132 400.578L17.8693 401.114ZM18.8974 402.299H20.2218V401.299H18.8974V402.299ZM19.9436 402.215L21.0659 402.966L21.6223 402.135L20.4999 401.384L19.9436 402.215ZM21.3148 403.05L22.2688 403.106L22.3275 402.108L21.3735 402.052L21.3148 403.05ZM22.1166 403.073L42.8131 411.137L43.1761 410.206L22.4797 402.141L22.1166 403.073ZM42.9623 411.17L44.1744 411.249L44.2391 410.251L43.0269 410.172L42.9623 411.17ZM44.6078 411.049L46.0108 409.164L45.2087 408.567L43.8057 410.451L44.6078 411.049ZM45.4979 409.353L46.1826 409.51L46.4061 408.535L45.7215 408.378L45.4979 409.353ZM46.5474 409.454L47.2545 409.039L46.7484 408.176L46.0413 408.591L46.5474 409.454ZM47.4747 408.769L47.9797 407.289L47.0333 406.966L46.5282 408.446L47.4747 408.769ZM47.8748 407.465L48.9972 406.243L48.2606 405.566L47.1382 406.789L47.8748 407.465ZM48.8569 406.35L49.7324 405.901L49.2763 405.011L48.4009 405.46L48.8569 406.35ZM50.0043 405.456V404.727H49.0043V405.456H50.0043ZM49.4469 405.224L50.5131 405.347L50.628 404.354L49.5618 404.23L49.4469 405.224ZM50.2949 405.267L51.7203 406.21L52.2717 405.375L50.8463 404.433L50.2949 405.267ZM52.3623 406.133L52.6541 405.819L51.9215 405.138L51.6297 405.452L52.3623 406.133ZM52.7515 405.665L53.6606 403.411L52.7332 403.037L51.8241 405.291L52.7515 405.665ZM53.4026 402.768L52.3588 402.297L51.9474 403.209L52.9912 403.68L53.4026 402.768ZM51.9035 402.32L50.9495 402.869L51.4487 403.736L52.4027 403.186L51.9035 402.32ZM51.5064 402.908L50.2831 401.955L49.6684 402.743L50.8918 403.697L51.5064 402.908ZM50.446 402.179L50.1991 401.495L49.2585 401.835L49.5054 402.519L50.446 402.179ZM49.9691 402.103L52.4046 400.769L51.9241 399.892L49.4885 401.226L49.9691 402.103ZM52.1021 400.826L54.9642 401.185L55.0886 400.193L52.2266 399.834L52.1021 400.826ZM55.2373 401.142L55.8883 400.84L55.4664 399.933L54.8155 400.236L55.2373 401.142ZM55.3388 400.754L57.4601 402.706L58.1372 401.97L56.0159 400.018L55.3388 400.754ZM58.291 402.425L58.5604 400.899L57.5756 400.725L57.3062 402.251L58.291 402.425ZM58.3506 401.225L60.7412 399.587L60.1761 398.762L57.7854 400.4L58.3506 401.225ZM60.2316 399.62L63.0712 401.067L63.5252 400.176L60.6856 398.729L60.2316 399.62ZM63.5581 401.049L65.1069 400.107L64.5872 399.252L63.0384 400.195L63.5581 401.049ZM64.3471 399.673L64.3247 401.457L65.3246 401.469L65.3471 399.686L64.3471 399.673ZM64.5373 401.872L65.3679 402.455L65.9425 401.637L65.112 401.054L64.5373 401.872ZM65.5505 402.535L65.8648 402.602L66.0742 401.625L65.7599 401.557L65.5505 402.535ZM66.3613 402.424L67.2592 401.291L66.4755 400.67L65.5776 401.803L66.3613 402.424ZM66.5041 401.324L67.0878 401.941L67.8142 401.254L67.2306 400.637L66.5041 401.324ZM66.9665 401.721L67.2583 402.865L68.2273 402.618L67.9355 401.474L66.9665 401.721ZM67.2722 402.573L66.8457 403.762L67.7869 404.099L68.2134 402.91L67.2722 402.573ZM66.9956 403.547L65.8956 404.467L66.5371 405.234L67.637 404.314L66.9956 403.547ZM65.718 404.891L65.7629 405.441L66.7596 405.359L66.7147 404.809L65.718 404.891ZM65.9499 405.791L66.556 406.273L67.1787 405.491L66.5726 405.009L65.9499 405.791ZM66.4012 405.701L66.0532 406.599L66.9856 406.96L67.3335 406.063L66.4012 405.701ZM66.1384 406.456L65.6333 407.05L66.3954 407.698L66.9005 407.103L66.1384 406.456ZM66.2313 406.923L65.2997 406.475L64.8659 407.376L65.7974 407.824L66.2313 406.923ZM64.9216 406.452L64.4278 406.62L64.7502 407.567L65.244 407.399L64.9216 406.452ZM64.1936 406.787L63.2732 407.976L64.064 408.588L64.9843 407.4L64.1936 406.787ZM63.2107 408.483L63.9626 410.199L64.8786 409.798L64.1266 408.082L63.2107 408.483ZM63.9287 410.088L64.2991 412.118L65.2829 411.939L64.9125 409.909L63.9287 410.088ZM64.3014 411.927L63.4709 415.931L64.45 416.134L65.2806 412.13L64.3014 411.927ZM63.5537 415.742L62.9364 416.606L63.7499 417.187L64.3672 416.324L63.5537 415.742ZM62.8449 416.854L62.6878 418.705L63.6842 418.789L63.8413 416.939L62.8449 416.854ZM62.8701 419.135L63.5997 419.729L64.2314 418.954L63.5018 418.36L62.8701 419.135ZM63.4158 419.324L63.3934 419.963L64.3928 419.998L64.4152 419.359L63.4158 419.324ZM63.5439 419.623L63.0725 420.083L63.7709 420.799L64.2422 420.339L63.5439 419.623ZM63.2464 420.909L65.9738 421.93L66.3243 420.993L63.5969 419.972L63.2464 420.909ZM65.765 421.141L65.2038 421.814L65.9719 422.455L66.5331 421.782L65.765 421.141ZM65.0881 422.12L65.0095 424.936L66.0091 424.964L66.0877 422.148L65.0881 422.12ZM65.0487 425.144L65.262 425.649L66.1831 425.26L65.9699 424.755L65.0487 425.144ZM65.6164 425.943L67.1652 426.28L67.3776 425.302L65.8287 424.966L65.6164 425.943ZM66.7741 425.843L66.92 427.234L67.9146 427.13L67.7687 425.739L66.7741 425.843ZM67.711 426.777L66.7682 426.093L66.1808 426.902L67.1236 427.586L67.711 426.777ZM65.9747 426.512L66.0196 428.049L67.0192 428.02L66.9743 426.483L65.9747 426.512ZM66.1319 427.718L64.9983 429.109L65.7734 429.741L66.907 428.35L66.1319 427.718ZM65.0083 429.753L65.6705 430.515L66.4256 429.86L65.7634 429.097L65.0083 429.753ZM65.6394 429.9L64.9435 430.887L65.7608 431.463L66.4567 430.476L65.6394 429.9ZM64.8642 431.066L64.6061 432.221L65.582 432.439L65.8401 431.284L64.8642 431.066ZM65.1002 431.83L64.1911 431.819L64.1787 432.819L65.0878 432.83L65.1002 431.83ZM63.8242 431.972L63.0273 432.802L63.7487 433.495L64.5456 432.665L63.8242 431.972ZM63.5344 432.671L62.8386 432.458L62.5457 433.414L63.2416 433.627L63.5344 432.671ZM62.2628 432.679L61.8812 433.319L62.7399 433.831L63.1215 433.192L62.2628 432.679ZM62.6857 433.244L62.0235 432.493L61.2732 433.154L61.9354 433.905L62.6857 433.244ZM61.2555 432.514L60.0546 434.04L60.8403 434.658L62.0412 433.133L61.2555 432.514ZM59.9481 434.375L59.9818 435.025L60.9804 434.974L60.9467 434.323L59.9481 434.375ZM60.2781 434.542L59.9751 434.677L60.381 435.591L60.684 435.456L60.2781 434.542ZM59.7233 435.342L59.9589 435.858L60.8685 435.442L60.6328 434.926L59.7233 435.342ZM60.3913 435.15L59.1454 435.207L59.1904 436.206L60.4362 436.149L60.3913 435.15ZM59.3923 435.259L57.1139 434.115L56.6651 435.009L58.9435 436.153L59.3923 435.259ZM56.8101 434.068L55.4857 434.281L55.6446 435.269L56.9689 435.056L56.8101 434.068ZM55.1298 434.529L54.7369 435.225L55.6076 435.716L56.0005 435.021L55.1298 434.529ZM55.3331 434.997L54.7719 434.806L54.4503 435.753L55.0114 435.944L55.3331 434.997ZM54.9327 434.897L54.1583 434.246L53.5151 435.012L54.2895 435.663L54.9327 434.897ZM53.915 434.135L53.2079 434.023L53.0513 435.011L53.7584 435.123L53.915 434.135ZM53.5646 434.271L51.9371 431.399L51.0672 431.892L52.6946 434.764L53.5646 434.271ZM51.3829 431.16L50.1034 431.474L50.3418 432.445L51.6213 432.131L51.3829 431.16ZM50.3958 431.491L49.6662 431.222L49.32 432.16L50.0495 432.429L50.3958 431.491ZM49.1084 431.371L48.2891 432.358L49.0585 432.997L49.8778 432.01L49.1084 431.371ZM48.9571 432.266L47.2287 431.077L46.662 431.901L48.3904 433.09L48.9571 432.266ZM47.3713 431.227L46.8887 430.442L46.0368 430.965L46.5194 431.751L47.3713 431.227ZM46.039 430.438L45.287 431.638L46.1344 432.169L46.8864 430.969L46.039 430.438ZM45.3997 431.512L44.0866 432.555L44.7085 433.338L46.0217 432.295L45.3997 431.512ZM43.9109 432.832L43.6864 433.786L44.6598 434.015L44.8842 433.061L43.9109 432.832ZM43.6972 434.054L44.0227 435.063L44.9744 434.756L44.649 433.747L43.6972 434.054ZM44.0605 434.669L43.5667 435.566L44.4428 436.048L44.9366 435.151L44.0605 434.669ZM43.824 435.341L43.072 435.632L43.4335 436.565L44.1855 436.273L43.824 435.341ZM43.5102 435.67L41.0634 434.201L40.5486 435.058L42.9953 436.527L43.5102 435.67ZM41.296 434.53L40.9369 432.758L39.9568 432.956L40.3159 434.729L41.296 434.53ZM40.7335 432.448L38.0735 430.586L37.5001 431.405L40.1601 433.267L40.7335 432.448ZM37.6596 430.512L37.2331 430.624L37.4875 431.591L37.914 431.479L37.6596 430.512ZM36.8735 430.993L36.4919 432.619L37.4655 432.848L37.8471 431.222L36.8735 430.993ZM36.8515 432.25L36.425 432.362L36.6794 433.329L37.1059 433.217L36.8515 432.25ZM36.6059 432.349L36.1906 432.304L36.0832 433.298L36.4985 433.343L36.6059 432.349ZM36.5268 432.488L35.7524 431.523L34.9726 432.149L35.747 433.114L36.5268 432.488ZM35.4166 431.339L34.283 431.216L34.1748 432.21L35.3084 432.333L35.4166 431.339ZM33.7387 431.812L34.1764 433.988L35.1568 433.79L34.7191 431.614L33.7387 431.812ZM34.3655 433.49L33.7707 433.939L34.3729 434.737L34.9677 434.288L34.3655 433.49ZM33.5718 434.331L33.5606 435.172L34.5605 435.186L34.5717 434.344L33.5718 434.331ZM33.6377 434.912L32.6612 436.46L33.507 436.994L34.4834 435.446L33.6377 434.912ZM32.9011 436.261L31.846 436.676L32.2121 437.607L33.2671 437.192L32.9011 436.261ZM32.3196 436.735L31.3768 436.062L30.7958 436.876L31.7386 437.549L32.3196 436.735ZM31.0991 435.969L30.2236 435.947L30.198 436.946L31.0735 436.969L31.0991 435.969ZM29.741 436.275L28.9891 438.339L29.9286 438.681L30.6806 436.618L29.741 436.275ZM29.1389 438.126L27.6574 439.36L28.2973 440.128L29.7788 438.894L29.1389 438.126ZM27.4884 439.639L27.1404 441.266L28.1183 441.475L28.4663 439.848L27.4884 439.639ZM27.4339 440.91L26.9849 441.101L27.3759 442.021L27.8249 441.83L27.4339 440.91ZM27.3651 441.096L26.4335 440.726L26.0642 441.655L26.9958 442.026L27.3651 441.096ZM25.9923 440.762L24.623 441.58L25.1362 442.439L26.5055 441.62L25.9923 440.762ZM25.1425 441.584L23.5824 440.62L23.0565 441.47L24.6166 442.435L25.1425 441.584ZM23.0379 440.632L22.791 440.8L23.3541 441.626L23.6011 441.458L23.0379 440.632ZM22.6345 440.972L22.3876 441.421L23.2637 441.903L23.5106 441.454L22.6345 440.972ZM22.3986 441.922L22.7129 442.438L23.5669 441.918L23.2527 441.402L22.3986 441.922ZM22.7146 441.915L22.2432 442.678L23.0938 443.203L23.5652 442.441L22.7146 441.915ZM22.1992 443.113L22.6033 444.212L23.5419 443.867L23.1378 442.768L22.1992 443.113ZM22.5726 444.031L22.5502 445.298L23.55 445.316L23.5725 444.049L22.5726 444.031ZM22.7632 444.898L21.7867 445.582L22.3606 446.401L23.337 445.717L22.7632 444.898ZM22.2498 445.523L21.3856 445.198L21.0333 446.134L21.8975 446.459L22.2498 445.523ZM20.9705 445.227L20.0839 445.709L20.5617 446.588L21.4484 446.105L20.9705 445.227ZM20.3766 445.651L19.445 445.55L19.3374 446.545L20.2689 446.645L20.3766 445.651ZM19.6543 445.622L18.9472 445.185L18.4211 446.035L19.1281 446.473L19.6543 445.622ZM19.1457 445.418L18.6743 444.285L17.7511 444.669L18.2225 445.802L19.1457 445.418ZM18.3632 444L16.2307 443.327L15.9298 444.281L18.0623 444.954L18.3632 444ZM16.5758 443.738L16.3962 442.392L15.405 442.524L15.5846 443.87L16.5758 443.738ZM16.2522 442.103L14.1646 440.039L13.4615 440.75L15.5491 442.814L16.2522 442.103ZM13.77 439.896L12.8609 439.975L12.9469 440.971L13.8561 440.893L13.77 439.896ZM13.0355 439.991L9.12967 438.925L8.86648 439.89L12.7723 440.955L13.0355 439.991ZM8.94615 438.91L8.19416 438.989L8.29802 439.983L9.05 439.905L8.94615 438.91ZM8.67732 439.233L7.61108 437.416L6.74861 437.922L7.81485 439.739L8.67732 439.233ZM7.39951 437.22L6.34448 436.704L5.90515 437.602L6.96018 438.118L7.39951 437.22ZM6.19022 436.657L5.00051 436.5L4.8697 437.492L6.05941 437.649L6.19022 436.657ZM4.58527 436.639L3.4629 437.738L4.16258 438.452L5.28495 437.353L4.58527 436.639ZM4.22751 437.816L3.81223 437.199L2.98269 437.757L3.39797 438.374L4.22751 437.816ZM3.88203 437.601L4.05038 436.94L3.08125 436.693L2.9129 437.355L3.88203 437.601ZM4.03476 436.99L5.40405 433.289L4.46617 432.942L3.09688 436.643L4.03476 436.99ZM5.24945 433.504L6.24835 432.696L5.61967 431.919L4.62077 432.726L5.24945 433.504ZM5.94183 432.807L6.66014 432.796L6.64452 431.796L5.9262 431.808L5.94183 432.807ZM7.14994 432.345L7.20606 431.773L6.21084 431.675L6.15472 432.248L7.14994 432.345ZM7.01576 432.119L7.67796 431.603L7.06333 430.814L6.40113 431.33L7.01576 432.119ZM7.75728 430.891L6.43289 429.276L5.65961 429.91L6.98401 431.525L7.75728 430.891ZM6.53374 429.704L6.93779 427.932L5.96281 427.71L5.55876 429.482L6.53374 429.704ZM6.90921 427.623L6.15723 425.884L5.23941 426.281L5.99139 428.02L6.90921 427.623ZM6.18611 426.192L6.38813 425.295L5.41256 425.075L5.21053 425.973L6.18611 426.192ZM6.26373 425.529L6.83614 424.923L6.10936 424.236L5.53696 424.842L6.26373 425.529ZM6.34258 425.062L7.04967 425.253L7.31001 424.287L6.60292 424.097L6.34258 425.062ZM6.68957 424.868L6.98138 426.326L7.96193 426.13L7.67012 424.672L6.68957 424.868ZM7.2947 426.696L8.45074 427.133L8.80465 426.198L7.64861 425.761L7.2947 426.696ZM8.89256 427.09L9.4313 426.753L8.90157 425.905L8.36283 426.242L8.89256 427.09ZM9.66173 426.398L9.98721 424.042L8.99662 423.905L8.67114 426.261L9.66173 426.398ZM9.72404 424.417L10.4087 424.058L9.94444 423.172L9.2598 423.531L9.72404 424.417ZM9.84508 423.989L11.2256 425.212L11.8886 424.463L10.508 423.241L9.84508 423.989ZM11.6996 425.317L13.5852 424.756L13.3001 423.797L11.4145 424.358L11.6996 425.317ZM13.8309 424.592L14.6502 423.582L13.8738 422.952L13.0544 423.962L13.8309 424.592ZM14.7617 423.251L14.7505 422.914L13.751 422.947L13.7623 423.284L14.7617 423.251ZM14.4872 422.49L13.8811 422.165L13.4083 423.046L14.0143 423.371L14.4872 422.49ZM13.7883 423.084L14.2372 422.95L13.95 421.992L13.5011 422.127L13.7883 423.084ZM14.5863 422.556L14.6873 421.973L13.702 421.802L13.601 422.386L14.5863 422.556ZM14.5192 422.268L15.058 421.808L14.4088 421.048L13.87 421.507L14.5192 422.268ZM14.8198 421.92L15.6504 421.774L15.4775 420.79L14.6469 420.935L14.8198 421.92ZM15.436 421.765L19.2071 422.764L19.463 421.797L15.6919 420.799L15.436 421.765ZM18.84 422.21L18.6829 423.321L19.673 423.461L19.8302 422.35L18.84 422.21ZM18.8875 423.798L19.7517 424.414L20.3327 423.601L19.4684 422.984L18.8875 423.798ZM20.0939 424.505L20.6327 424.449L20.5292 423.454L19.9904 423.51L20.0939 424.505ZM20.0809 423.951V424.31H21.0809V423.951H20.0809ZM20.2124 424.648L21.9296 426.521L22.6667 425.846L20.9495 423.972L20.2124 424.648ZM21.9767 426.566L23.3796 427.744L24.0226 426.978L22.6196 425.801L21.9767 426.566ZM23.6189 427.854L24.6291 428.023L24.7934 427.036L23.7833 426.868L23.6189 427.854ZM24.8848 427.998L26.0969 427.55L25.7498 426.612L24.5377 427.061L24.8848 427.998ZM26.3805 427.283L26.8182 426.296L25.904 425.891L25.4663 426.878L26.3805 427.283ZM26.355 426.594L27.2753 426.605L27.2875 425.605L26.3672 425.594L26.355 426.594ZM27.6527 426.44L28.371 425.643L27.6285 424.974L26.9102 425.77L27.6527 426.44ZM28.4908 425.214L28.3898 424.687L27.4077 424.876L27.5087 425.403L28.4908 425.214ZM28.1598 424.355L26.2181 423.166L25.696 424.019L27.6377 425.208L28.1598 424.355ZM26.4569 423.605L26.513 421.441L25.5133 421.415L25.4572 423.58L26.4569 423.605ZM26.313 421.028L24.9213 419.985L24.3216 420.785L25.7133 421.828L26.313 421.028ZM25.111 420.486L25.3692 419.241L24.39 419.038L24.1319 420.283L25.111 420.486ZM24.9894 418.652L22.9467 418.192L22.7271 419.168L24.7698 419.627L24.9894 418.652ZM23.0415 418.224L19.0908 416.451L18.6815 417.364L22.6322 419.136L23.0415 418.224ZM18.7814 416.419L17.9958 416.587L18.2052 417.565L18.9909 417.397L18.7814 416.419ZM17.6912 416.789L16.6362 418.292L17.4547 418.866L18.5097 417.363L17.6912 416.789ZM17.0402 418.079L14.9077 418.101L14.9182 419.101L17.0507 419.079L17.0402 418.079ZM15.0726 418.127L14.1074 417.802L13.7881 418.75L14.7533 419.075L15.0726 418.127ZM14.4324 418.153L14.1967 417.222L13.2273 417.468L13.463 418.399L14.4324 418.153ZM13.9997 416.936L12.8998 416.162L12.3244 416.98L13.4243 417.754L13.9997 416.936ZM13.0828 416.403L12.7012 415.337L11.7598 415.674L12.1414 416.74L13.0828 416.403ZM11.7923 415.265L11.478 415.837L12.3545 416.318L12.6687 415.746L11.7923 415.265ZM12.128 415.625L10.9046 415.053L10.4811 415.959L11.7045 416.531L12.128 415.625ZM11.1502 415.304L9.75851 412.152L8.84373 412.556L10.2355 415.708L11.1502 415.304ZM9.31463 412.854L9.72991 412.842L9.70288 411.843L9.2876 411.854L9.31463 412.854ZM9.26749 412.563L9.82868 413.707L10.7265 413.267L10.1653 412.122L9.26749 412.563ZM10.0328 413.923L11.2112 414.584L11.7009 413.713L10.5224 413.051L10.0328 413.923ZM11.93 413.989L11.481 412.654L10.5332 412.973L10.9822 414.308L11.93 413.989ZM11.4823 412.969L11.6843 412.352L10.734 412.041L10.5319 412.658L11.4823 412.969ZM11.6581 411.977L11.3887 411.427L10.4908 411.867L10.7602 412.417L11.6581 411.977ZM10.5073 411.396L10.1818 411.957L11.0467 412.459L11.3722 411.898L10.5073 411.396ZM11.0418 411.949L10.5929 411.209L9.73782 411.727L10.1868 412.467L11.0418 411.949ZM10.647 411.602L10.8378 410.918L9.87453 410.649L9.68372 411.333L10.647 411.602ZM9.91698 411.023L10.2649 411.662L11.1432 411.184L10.7953 410.545L9.91698 411.023ZM10.5719 411.905L11.2678 412.096L11.5321 411.131L10.8362 410.941L10.5719 411.905ZM11.853 411.402L11.3816 410.393L10.4755 410.816L10.9469 411.825L11.853 411.402ZM11.0191 411.096L11.8721 410.939L11.691 409.955L10.838 410.112L11.0191 411.096ZM12.2179 410.203L12.0047 409.822L11.1319 410.31L11.3452 410.691L12.2179 410.203ZM12.0201 410.28L12.3232 409.641L11.4195 409.212L11.1165 409.852L12.0201 410.28ZM12.3077 409.182L11.8812 408.42L11.0084 408.908L11.4349 409.67L12.3077 409.182ZM11.3539 408.172L11.0508 408.228L11.2328 409.211L11.5358 409.155L11.3539 408.172ZM10.6594 408.851L10.7941 409.345L11.7588 409.082L11.6242 408.588L10.6594 408.851ZM11.1969 408.72L10.849 408.776L11.0081 409.763L11.356 409.707L11.1969 408.72ZM10.4309 409.318L10.5207 410.238L11.516 410.141L11.4262 409.221L10.4309 409.318ZM10.9006 409.703L10.5302 409.793L10.7657 410.765L11.1361 410.675L10.9006 409.703Z\" fill=\"#FDFDFD\" fillOpacity=\"0.6\" mask=\"url(#path-43-inside-29_10718_32869)\" />\n                <mask id=\"path-45-inside-30_10718_32869\" fill=\"white\">\n                    <path d=\"M93.5244 515.812L93.9172 516.037L94.4896 515.779L94.8712 516.093L95.8589 518.224L96.8915 517.798L97.4526 518.056L98.7209 517.798L98.9454 516.553L100.393 515.667L100.584 516.115L101.011 515.801L101.953 516.362V517.338L101.628 517.416L102.279 518.145L103.188 518.325L103.85 519.11L103.289 520.781L103.671 522.923L103.469 523.495L103.985 523.809L103.188 524.808L103.738 525.997L103.446 526.356L102.739 526.277L102.335 527.141L103.21 529.474L105.489 530.707L105.231 531.347L105.601 531.818L107.105 532.255L108.744 533.657L108.699 534.386L107.902 534.779L107.15 537.359L102.324 537.123L101.83 537.74L100.595 537.751L99.0015 537.157L98.8107 535.923L98.0699 535.553L95.7691 535.452L95.5783 536.63L95.062 536.854L94.2763 536.372L93.7937 535.441L93.1652 535.216L92.7499 535.542L92.054 535.205L91.5714 536.271L90.6399 535.99L88.9114 537.056L88.1931 537.505L87.4523 537.325L86.2065 537.662L84.9158 537.101L84.3434 535.856L84.3322 534.297L85.881 533.085L86.2963 533.298L86.6891 533.007L86.9136 532.311L86.2851 531.537L86.3412 531.1L85.8361 531.111L85.6453 530.651L86.0494 530.27L85.1066 529.978L84.9719 529.653L85.4433 529.373L84.4556 528.509L83.7822 528.576L83.7373 528.094L84.3658 528.072L85.2637 526.4L84.9046 525.604L85.23 524.662L84.7699 524.101L85.028 523.114L85.5106 523.103L85.4433 522.452L86.1728 522.464L86.2851 522.778L88.4176 522.621L88.7992 523.978L89.4726 523.72L89.495 523.294L89.8767 523.451L90.2695 522.43L90.595 522.396L90.696 523.148L91.2684 523.08L91.2347 522.508L91.5378 522.598L91.9081 521.869L90.9205 520.927L91.5153 520.759L90.4939 519.065L92.7948 518.392L92.2785 517.192L92.5816 517.046L92.0316 516.743L93.0081 516.003L93.4907 516.328L93.5244 515.812Z\" />\n                </mask>\n                <path d=\"M93.5244 515.812L93.9172 516.037L94.4896 515.779L94.8712 516.093L95.8589 518.224L96.8915 517.798L97.4526 518.056L98.7209 517.798L98.9454 516.553L100.393 515.667L100.584 516.115L101.011 515.801L101.953 516.362V517.338L101.628 517.416L102.279 518.145L103.188 518.325L103.85 519.11L103.289 520.781L103.671 522.923L103.469 523.495L103.985 523.809L103.188 524.808L103.738 525.997L103.446 526.356L102.739 526.277L102.335 527.141L103.21 529.474L105.489 530.707L105.231 531.347L105.601 531.818L107.105 532.255L108.744 533.657L108.699 534.386L107.902 534.779L107.15 537.359L102.324 537.123L101.83 537.74L100.595 537.751L99.0015 537.157L98.8107 535.923L98.0699 535.553L95.7691 535.452L95.5783 536.63L95.062 536.854L94.2763 536.372L93.7937 535.441L93.1652 535.216L92.7499 535.542L92.054 535.205L91.5714 536.271L90.6399 535.99L88.9114 537.056L88.1931 537.505L87.4523 537.325L86.2065 537.662L84.9158 537.101L84.3434 535.856L84.3322 534.297L85.881 533.085L86.2963 533.298L86.6891 533.007L86.9136 532.311L86.2851 531.537L86.3412 531.1L85.8361 531.111L85.6453 530.651L86.0494 530.27L85.1066 529.978L84.9719 529.653L85.4433 529.373L84.4556 528.509L83.7822 528.576L83.7373 528.094L84.3658 528.072L85.2637 526.4L84.9046 525.604L85.23 524.662L84.7699 524.101L85.028 523.114L85.5106 523.103L85.4433 522.452L86.1728 522.464L86.2851 522.778L88.4176 522.621L88.7992 523.978L89.4726 523.72L89.495 523.294L89.8767 523.451L90.2695 522.43L90.595 522.396L90.696 523.148L91.2684 523.08L91.2347 522.508L91.5378 522.598L91.9081 521.869L90.9205 520.927L91.5153 520.759L90.4939 519.065L92.7948 518.392L92.2785 517.192L92.5816 517.046L92.0316 516.743L93.0081 516.003L93.4907 516.328L93.5244 515.812Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-45-inside-30_10718_32869)\" />\n                <mask id=\"path-46-inside-31_10718_32869\" fill=\"white\">\n                    <path d=\"M78.2486 485.663L78.2374 485.674L78.7313 486.123L79.3486 485.921L79.1578 485.764L79.371 486.089L78.4058 486.325L78.0578 486.011L78.4058 485.831L77.9344 485.955L77.9007 485.629L77.4518 485.955L78.2486 485.618V485.663ZM85.2971 484.654L85.6338 484.665L85.2859 484.811L85.2971 484.654ZM78.0129 493.032L78.0466 492.595L78.6303 492.303L77.261 490.991L76.8232 490.149L76.913 489.185L77.8783 489.05L78.1925 489.892L78.8884 489.779L79.6067 490.116L79.1465 489.746L79.5281 489.611L79.169 487.817L80.2352 487.536L80.976 486.908H81.7504L81.6382 486.426L81.0658 486.672L81.3352 486.28L81.5596 486.426L81.3801 485.136L80.976 485.45L80.875 485.012L81.3464 485.113L81.5596 484.541L81.2341 484.665L81.0658 484.306L81.7055 483.936L81.1107 482.747L81.7841 482.792L81.5372 483.341L81.8402 483.846L82.7157 483.397L82.581 482.904L83.0299 482.713L82.8953 483.364L83.9727 483.543L85.1512 484.553L85.1961 485.685L86.2287 486.213L86.195 486.773L85.8022 486.729L85.6899 486.28L85.3532 486.381L84.287 487.962L83.1983 488.198L83.0412 488.938L83.2993 489.387L82.7606 489.634L82.6932 490.138L81.9637 489.499L81.5484 489.69L81.3801 490.026L82.1545 490.8L81.627 491.552L81.8065 491.854L81.4474 491.832L81.6382 492.763L80.9311 493.189L80.5719 492.662L80.5607 492.92L80.1118 492.752L79.7077 493.055L79.7751 493.985L79.2924 494.232L78.9221 494.277L78.7649 494.333L78.0915 493.425L78.1027 493.413L78.114 493.391L78.0803 493.335L78.0578 493.312H78.0466L77.9568 493.111L78.0129 493.032ZM81.8739 482.298L82.0086 482.321L81.3127 482.668L81.5596 482.321L81.8739 482.298ZM79.573 482.579L79.4496 481.838L79.921 481.76L80.5495 482.321L80.1006 482.422L80.0332 482.814L79.573 482.579Z\" />\n                </mask>\n                <path d=\"M78.2486 485.663L78.2374 485.674L78.7313 486.123L79.3486 485.921L79.1578 485.764L79.371 486.089L78.4058 486.325L78.0578 486.011L78.4058 485.831L77.9344 485.955L77.9007 485.629L77.4518 485.955L78.2486 485.618V485.663ZM85.2971 484.654L85.6338 484.665L85.2859 484.811L85.2971 484.654ZM78.0129 493.032L78.0466 492.595L78.6303 492.303L77.261 490.991L76.8232 490.149L76.913 489.185L77.8783 489.05L78.1925 489.892L78.8884 489.779L79.6067 490.116L79.1465 489.746L79.5281 489.611L79.169 487.817L80.2352 487.536L80.976 486.908H81.7504L81.6382 486.426L81.0658 486.672L81.3352 486.28L81.5596 486.426L81.3801 485.136L80.976 485.45L80.875 485.012L81.3464 485.113L81.5596 484.541L81.2341 484.665L81.0658 484.306L81.7055 483.936L81.1107 482.747L81.7841 482.792L81.5372 483.341L81.8402 483.846L82.7157 483.397L82.581 482.904L83.0299 482.713L82.8953 483.364L83.9727 483.543L85.1512 484.553L85.1961 485.685L86.2287 486.213L86.195 486.773L85.8022 486.729L85.6899 486.28L85.3532 486.381L84.287 487.962L83.1983 488.198L83.0412 488.938L83.2993 489.387L82.7606 489.634L82.6932 490.138L81.9637 489.499L81.5484 489.69L81.3801 490.026L82.1545 490.8L81.627 491.552L81.8065 491.854L81.4474 491.832L81.6382 492.763L80.9311 493.189L80.5719 492.662L80.5607 492.92L80.1118 492.752L79.7077 493.055L79.7751 493.985L79.2924 494.232L78.9221 494.277L78.7649 494.333L78.0915 493.425L78.1027 493.413L78.114 493.391L78.0803 493.335L78.0578 493.312H78.0466L77.9568 493.111L78.0129 493.032ZM81.8739 482.298L82.0086 482.321L81.3127 482.668L81.5596 482.321L81.8739 482.298ZM79.573 482.579L79.4496 481.838L79.921 481.76L80.5495 482.321L80.1006 482.422L80.0332 482.814L79.573 482.579Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-46-inside-31_10718_32869)\" />\n                <mask id=\"path-47-inside-32_10718_32869\" fill=\"white\">\n                    <path d=\"M156.68 467.919L159.598 468.256L160.058 468.861L159.868 469.534L161.731 468.951L162.707 469.287L162.842 468.379L164.727 466.147L165.681 467.044L167.185 466.943L168.016 466.663L168.05 465.911L168.656 465.687L168.936 464.767H169.733L170.238 465.395L171.08 464.453L172.068 464.868L173.111 464.375L173.628 464.734L173.325 465.541L174.211 465.889L174.537 465.71L174.694 464.734L175.345 464.184L174.941 463.444L175.132 462.636L176.378 462.277L176.703 462.793L176.198 463.635L176.22 464.498L176.905 466.371L177.691 466.719L178.476 466.102L179.745 465.799L180.878 466.427L180.766 466.943L181.103 467.504L180.777 468.603L182.36 469.063L182.842 468.872L183.538 469.31L183.875 470.308L183.336 472.181L183.482 472.832L184.167 472.922L184.47 473.426L184.414 473.763L183.493 474.122L182.921 475.131L182.427 474.615L181.428 475.299L181.092 474.783L181.473 474.2L180.822 473.819L179.644 474.256L179.184 475.277L178.263 475.154L177.724 476.253L175.67 475.77L174.526 476.477L173.931 477.531L174.133 478.137L175.379 478.159L175.289 478.608L174.649 479.517L173.841 479.494L173.201 480.75L172.202 480.448L171.72 481.984L170.014 483.297L170.148 484.216L166.905 482.489L165.951 480.01L163.526 479.606L162.617 479.079L161.933 477.262L161.45 476.847L160.103 476.982L157.163 478.967L156.366 479.943L155.805 480.044L154.839 479.539L151.787 481.558L151.27 480.134L151.36 479.337L149.531 477.991L150.327 476.959L150.249 476.028L148.835 475.097L147.802 475.311L147.589 474.682L147.914 473.393L148.666 472.529L149.834 472.596L149.699 470.028L150.327 469.187L152.741 468.671L153.493 467.717L155.176 468.267L155.805 468.099L156.231 467.358L156.68 467.919Z\" />\n                </mask>\n                <path d=\"M156.68 467.919L159.598 468.256L160.058 468.861L159.868 469.534L161.731 468.951L162.707 469.287L162.842 468.379L164.727 466.147L165.681 467.044L167.185 466.943L168.016 466.663L168.05 465.911L168.656 465.687L168.936 464.767H169.733L170.238 465.395L171.08 464.453L172.068 464.868L173.111 464.375L173.628 464.734L173.325 465.541L174.211 465.889L174.537 465.71L174.694 464.734L175.345 464.184L174.941 463.444L175.132 462.636L176.378 462.277L176.703 462.793L176.198 463.635L176.22 464.498L176.905 466.371L177.691 466.719L178.476 466.102L179.745 465.799L180.878 466.427L180.766 466.943L181.103 467.504L180.777 468.603L182.36 469.063L182.842 468.872L183.538 469.31L183.875 470.308L183.336 472.181L183.482 472.832L184.167 472.922L184.47 473.426L184.414 473.763L183.493 474.122L182.921 475.131L182.427 474.615L181.428 475.299L181.092 474.783L181.473 474.2L180.822 473.819L179.644 474.256L179.184 475.277L178.263 475.154L177.724 476.253L175.67 475.77L174.526 476.477L173.931 477.531L174.133 478.137L175.379 478.159L175.289 478.608L174.649 479.517L173.841 479.494L173.201 480.75L172.202 480.448L171.72 481.984L170.014 483.297L170.148 484.216L166.905 482.489L165.951 480.01L163.526 479.606L162.617 479.079L161.933 477.262L161.45 476.847L160.103 476.982L157.163 478.967L156.366 479.943L155.805 480.044L154.839 479.539L151.787 481.558L151.27 480.134L151.36 479.337L149.531 477.991L150.327 476.959L150.249 476.028L148.835 475.097L147.802 475.311L147.589 474.682L147.914 473.393L148.666 472.529L149.834 472.596L149.699 470.028L150.327 469.187L152.741 468.671L153.493 467.717L155.176 468.267L155.805 468.099L156.231 467.358L156.68 467.919Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-47-inside-32_10718_32869)\" />\n                <mask id=\"path-48-inside-33_10718_32869\" fill=\"white\">\n                    <path d=\"M1056.56 308.312L1057.64 308.402L1057.93 309.333L1059.74 310.488L1061.94 310.612L1061.85 311.341L1060.35 313.393L1059.8 314.818L1059.73 319.528L1061.03 321.009L1066.17 322.882L1066.83 323.914L1069.09 324.396L1069.84 326.696L1073.17 330.644L1078.54 331.62L1080.37 332.943L1081.59 333.156L1083.37 336.824L1084.99 337.957L1088.8 338.607L1090.48 340.368L1094.05 340.222L1094.1 342.611L1095.54 344.103L1095.53 344.911L1096.3 345.797L1096.28 346.391L1094.19 347.917L1094.07 348.421L1094.5 348.971L1093.85 349.521L1092.07 349.756L1091.1 350.452L1090.89 351.349L1091.81 352.874L1091.93 355.162L1091.24 355.746L1090.47 357.664L1091.25 358.292L1091.3 359.066L1092.15 359.425L1092.66 360.333L1092.73 361.735L1091.38 363.675L1090.13 364.102L1090.52 365.593L1090.13 366.468L1090.82 367.141L1090.75 367.556L1089.76 368.005L1089.01 369.115L1088.2 369.34L1087.53 369.026L1086.99 369.699L1086.43 372.11L1086.51 373.12L1087.67 373.422L1089.51 375.195L1088.91 376.069L1090.79 376.899L1090.6 377.685L1089.6 378.593L1090.56 380.5L1090.21 381.509L1090.19 383.562L1088.39 384.762L1085.9 385.558L1085.72 386.243L1086.29 386.826L1088.13 387.207L1088.54 388.396L1087.47 389.663L1086.88 389.562L1086.4 390.011L1087.11 391.783L1087.94 392.625L1087.71 393.701L1087.21 393.769L1087.06 394.7L1086.54 394.677L1086.84 395.081L1086.27 395.765L1085.85 395.642L1085.99 396.292L1085.27 396.685L1085.02 397.638L1084.22 397.683L1084.64 397.93L1084.32 398.491L1083.62 398.614L1083.23 397.705L1083.39 399.265L1083.07 399.309L1082.73 398.681L1082.41 399.904L1081.17 400.7L1080.57 400.655L1080.97 401.003L1080.82 401.766L1080.06 401.575L1079.33 402.338L1079.76 402.865L1078.59 403.953L1077.82 403.998L1077.3 405.467L1075.53 406.589L1074.47 409.561L1073.68 408.753L1073.27 409.561L1072.49 409.168L1071.84 409.92L1071.4 409.797L1071.48 409.045L1070.84 409.449L1071.15 409.651L1071.1 410.279L1070.49 410.772L1070.39 411.311L1069.36 411.916L1069.31 410.548L1069.77 410.436L1069.74 409.853L1070.14 409.55L1070.1 408.563L1069.54 407.8L1069.8 407.497L1070.12 407.677L1070.3 406.499L1071.16 406.488L1070.83 406.095L1071.5 405.097L1071.56 404.312L1071.02 404.099L1070.25 404.514L1069.67 404.2L1067.6 405.86L1067.19 405.759L1067.3 406.241L1066.4 406.039L1068.09 403.033L1067.87 401.956L1067.39 401.362L1067.68 401.149L1067.44 400.678L1066.3 400.925L1066.82 400.027L1067.31 400.005L1067.81 400.465L1068.12 400.106L1067.32 399.691L1067.93 399.253L1067.89 398.625H1068.67L1068.93 397.548L1068.4 397.369L1070.3 395.72L1070.12 395.014L1070.74 393.701L1070.26 393.298L1071.44 392.041L1071.34 391.402L1071.03 391.38L1071.38 390.931L1071.2 389.551L1070.69 389.08L1068.41 390.729L1067.23 392.983L1066.48 392.759L1066.38 393.152H1065.92L1065.67 392.759L1065.7 393.41L1064.71 393.914L1064.32 393.69L1064.25 393.107L1064.73 390.897L1064.25 391.492L1063.47 391.727L1062.86 391.065L1063.31 390.437L1063.05 389.989L1061.6 389.417L1060.2 389.361L1059.82 389.843L1059.22 389.742L1058.79 391.166L1058.11 391.189L1057.67 390.819L1056.57 390.92L1055.93 391.671L1055.23 391.088L1054.11 391.11L1052.34 392.692L1050.6 391.783L1047.93 391.66L1047 392.613L1046.78 393.522L1046.1 393.23L1044.38 394.027L1043.2 395.945L1042.54 396.281L1041.39 396.27L1041.03 398.681L1041.16 401.586L1040.87 401.777L1040.65 401.34L1039.89 401.687L1036.85 404.536L1036.16 405.647L1035.38 405.781L1035.22 406.05L1035.7 406.42L1035.29 406.981L1035.19 409.572L1034.45 409.314L1033.69 410.604L1032.88 410.716L1031.7 411.849L1031.36 412.825L1030.5 412.713L1029.11 414.474L1027.69 415.169L1026.41 416.324L1024.42 419.6L1023.83 419.566L1023.1 420.059L1023.7 422.987L1022.4 422.807L1021.55 423.155L1021.59 425.309L1022.75 427.843L1022.09 427.204L1021.98 426.531L1021.6 426.497L1020.95 428.55L1020.62 428.449L1020.34 428.819L1020.79 429.728L1022.21 430.075L1022.55 428.797L1022.93 428.539L1023.1 428.999L1022.81 429.492L1023.19 429.806L1023.17 430.457L1024 430.446L1023.41 429.313L1023.69 428.853L1023.23 428.73L1023.09 428.292L1024.2 428.898L1025 428.449L1026.13 429.672L1027.11 429.582L1027.59 429.156L1028.51 430.816L1029.51 431.522L1029.58 432.151L1029.06 432.375L1029.43 433.272L1028.92 433.474L1029.29 434.237L1026.47 433.878L1026.14 434.136L1026.26 434.966L1025.21 434.652L1024.08 433.575L1022.95 433.9L1022.44 433.687L1022.69 433.9L1022.42 433.979L1022.62 435.257L1022.43 435.033L1022.01 435.628L1021.58 435.325L1021.12 435.47L1020.11 436.211L1019.28 435.852L1018.48 434.315L1017.24 434.08L1017.54 433.564L1017.96 433.553L1017.98 433.025L1016.89 433.979L1014.73 432.958L1014.54 434.607L1014.26 434.349L1013.89 434.865L1014.55 434.887L1014.46 435.583H1012.7L1011.87 435.919L1011.32 436.828L1010.98 438.42L1010.23 438.095L1009.52 438.42L1009.01 437.882L1008.12 437.736L1007.87 437.164L1006.99 436.626L1005.08 437.164L1004.84 438.241L1004.24 438.734L1002.41 438.835L1001.13 439.43L999.443 439.071L998.4 439.497L998.534 439.183L997.648 437.949L997.535 436.973L996.447 435.302L997.378 435.605L999.342 434.36L1000.36 434.629L1000.84 434.394L1001.67 434.943L1004.3 434.685L1005.26 433.878H1006.16L1006.24 433.384L1005.03 432.285L1004.77 432.543L1004.75 432.173L1003.72 432.823L1002.82 432.139L1001.52 432.251L1001.36 431.825L1001.79 431.377L1001.16 430.726L1001.04 429.975L1000.34 429.145L999.735 429.01L998.86 427.451L998.512 427.462L998.052 428.18L996.671 427.799L994.898 428.068L994.696 428.427L995.134 428.774L994.864 429.245L995.257 429.391L995.089 429.829L993.641 430.176L993.551 429.29L991.542 429.346L993.63 428.629L993.731 428.113L992.159 428.438L991.205 427.888L991.216 427.283L990.622 427.215L990.06 426.643L988.77 426.61L984.583 425.051L983.405 425.14L981.946 425.802L979.869 427.271L980.285 427.339L980.386 428.494L981.216 428.752L981.306 429.694L980.285 429.302L978.927 429.84L978.365 429.313L978.882 428.617L978.478 428.303L977.209 429.717L977.355 431.287L977.95 431.522L978.623 430.816L978.657 431.522L978.994 431.41L978.859 431.085L979.364 431.051L978.87 431.96L979.173 432.543L978.904 433.283L978.197 432.554L977.804 432.666L977.602 433.238L977.254 433.216L977.131 432.756L976.053 433.205L974.785 432.969L974.987 432.532L974.639 431.029L973.73 430.558L970.397 430.917L969.487 431.377L970.194 432.184L969.79 432.835L968.477 432.128L967.714 432.588L967.736 433.25L965.75 431.691L964.695 431.949L964.111 431.343L963.056 431.141L964.931 430.412L964.953 428.371L965.593 426.789L965.413 424.905L964.908 424.411L965.323 423.963L965.2 423.234L964.257 422.852L964.201 421.854L963.561 421.91L962.585 422.886L962.203 422.763L961.294 421.248L961.799 420.43L961.507 419.566L959.891 419.207L959.072 417.468L958.118 417.177L957.007 417.827L955.929 417.536L954.773 418.153L952.225 415.393L952.82 415.102L952.057 413.935L952.315 413.251L953.078 413.038V412.051L954.291 411.165H954.852L955.458 409.83L956.03 409.774L956.558 409.168L957.119 409.023L958.724 410.346L959.577 410.324L959.981 409.595L959.566 408.832L959.588 406.454L959.947 405.938L961.238 405.792L961.788 404.211L961.62 403.818L962.08 403.235L962.136 401.855L961.305 399.321L961.575 398.177L960.688 397.066L960.845 395.081L959.566 393.488L959.599 392.692L957.265 389.529L955.099 388.037L953.931 387.835L953.46 386.77L952.989 387.151L953.135 388.116L952.753 388.654L952.091 388.755L951.855 389.293L951.204 389.282L951.496 388.407L950.946 388.542L950.643 388.026L950.205 387.936L949.622 388.822L948.174 387.97L947.545 386.96L945.547 387.196L945.446 386.153L946.041 385.962L946.614 385.166L947.051 385.368L947.736 384.123L948.488 384.01L948.825 383.068L948.623 381.722L949.262 380.433L948.769 379.614L949.666 378.75L949.969 379.064L950.867 378.795L951.159 378.346L950.587 377.651L951.103 375.789L950.407 375.318L950.317 374.6L951.013 373.512L950.867 371.359L949.296 370.091L949.846 369.441L949.835 368.644L949.105 367.646L949.431 366.614L950.475 365.257L950.373 364.461L951.058 362.924L950.89 361.993L952.102 360.355L952.663 358.46L952.293 356.273L952.517 355.499L956.412 353.873L957.388 352.527L958.185 349.678L958.657 349.308L960.003 349.958L962.473 349.577L965.166 351.652L966.064 351.708L966.3 350.597L967.13 350.833L968.545 349.913L969.027 350.407L968.466 351.966L969.824 353.031L969.532 353.693L970.935 353.94L971.732 353.671L971.631 352.56L971.968 351.618L973.82 348.758L972.091 346.548L971.8 345.068L972.72 344.597L974.37 342.735L975.29 343.206L975.436 344.238L976.626 344.855L977.546 344.215L978.489 345.023L978.848 344.171L979.993 344.507L980.879 345.46L981.968 345.573L981.789 344.754L982.72 345.169L985.515 343.094L985.908 342.275L987.041 342.454L987.03 343.183L988.321 343.901L988.265 344.585L987.468 345.281L987.793 345.976L987.659 347.008L988.904 348.051L989.196 348.982L990.363 348.825L991.587 349.588L992.462 349.622L992.361 347.075L992.821 346.324L994.572 346.75L995.885 346.593L996.716 345.909L997.086 346.38L997.928 345.707L998.815 346.862L999.421 346.649L1000.3 344.709L1001.07 344.698L1002.84 343.89L1004.37 344.563L1003.9 345.73L1004.45 346.055L1006.42 345.561L1006.79 344.653L1005.89 343.24L1006.12 342.757L1007.21 342.555L1008 341.064L1009.6 340.133L1009.97 339.258L1009.83 338.719L1008.58 338.069L1007.54 333.908L1008.57 333.336L1008.66 331.261L1009.33 330.386L1009.32 329.758L1010.5 329.444L1011.53 328.602L1012.87 329.04L1013.53 328.804L1013.54 328.086L1014.05 327.559H1014.98L1015.65 326.628L1015.81 325.697L1014.89 324.867L1015.11 323.802L1016.34 322.276L1016.04 321.603L1016.38 320.033L1015.81 319.82L1016.04 318.115L1017.26 317.734L1017.84 317.095L1019.31 317.24L1020.36 316.971L1020.8 317.498L1020.63 318.598L1021.67 318.553L1023.13 316.343L1023.2 314.885L1022.16 313.943L1021.94 313.057L1023.34 312.171L1023.37 311.24L1024.62 310.466L1025.35 310.679L1025.85 311.262L1026.69 311.318L1027.05 312.35L1028.13 312.058L1028.68 311.027L1029.59 310.836L1030.08 311.789L1031.88 311.509L1033.61 312.047L1034.99 311.15L1035.4 312.507L1036.47 313.371L1038.34 313.281L1039.15 313.696L1039.98 313.146L1040.16 312.025L1041.29 310.735L1041.64 310.881L1041.91 312.473L1043.93 313.786L1044.02 314.616L1043.4 315.165L1044.89 316.354L1047.35 316.489L1047.71 316.007L1047.73 314.896L1048.69 314.268L1049.62 312.743L1051.2 312.53L1053.03 311.7L1054.14 311.991L1054.71 313.068L1055.35 312.821L1056.34 313.057L1056.81 312.53L1055.54 310.051L1056.56 308.312Z\" />\n                </mask>\n                <path d=\"M1056.56 308.312L1057.64 308.402L1057.93 309.333L1059.74 310.488L1061.94 310.612L1061.85 311.341L1060.35 313.393L1059.8 314.818L1059.73 319.528L1061.03 321.009L1066.17 322.882L1066.83 323.914L1069.09 324.396L1069.84 326.696L1073.17 330.644L1078.54 331.62L1080.37 332.943L1081.59 333.156L1083.37 336.824L1084.99 337.957L1088.8 338.607L1090.48 340.368L1094.05 340.222L1094.1 342.611L1095.54 344.103L1095.53 344.911L1096.3 345.797L1096.28 346.391L1094.19 347.917L1094.07 348.421L1094.5 348.971L1093.85 349.521L1092.07 349.756L1091.1 350.452L1090.89 351.349L1091.81 352.874L1091.93 355.162L1091.24 355.746L1090.47 357.664L1091.25 358.292L1091.3 359.066L1092.15 359.425L1092.66 360.333L1092.73 361.735L1091.38 363.675L1090.13 364.102L1090.52 365.593L1090.13 366.468L1090.82 367.141L1090.75 367.556L1089.76 368.005L1089.01 369.115L1088.2 369.34L1087.53 369.026L1086.99 369.699L1086.43 372.11L1086.51 373.12L1087.67 373.422L1089.51 375.195L1088.91 376.069L1090.79 376.899L1090.6 377.685L1089.6 378.593L1090.56 380.5L1090.21 381.509L1090.19 383.562L1088.39 384.762L1085.9 385.558L1085.72 386.243L1086.29 386.826L1088.13 387.207L1088.54 388.396L1087.47 389.663L1086.88 389.562L1086.4 390.011L1087.11 391.783L1087.94 392.625L1087.71 393.701L1087.21 393.769L1087.06 394.7L1086.54 394.677L1086.84 395.081L1086.27 395.765L1085.85 395.642L1085.99 396.292L1085.27 396.685L1085.02 397.638L1084.22 397.683L1084.64 397.93L1084.32 398.491L1083.62 398.614L1083.23 397.705L1083.39 399.265L1083.07 399.309L1082.73 398.681L1082.41 399.904L1081.17 400.7L1080.57 400.655L1080.97 401.003L1080.82 401.766L1080.06 401.575L1079.33 402.338L1079.76 402.865L1078.59 403.953L1077.82 403.998L1077.3 405.467L1075.53 406.589L1074.47 409.561L1073.68 408.753L1073.27 409.561L1072.49 409.168L1071.84 409.92L1071.4 409.797L1071.48 409.045L1070.84 409.449L1071.15 409.651L1071.1 410.279L1070.49 410.772L1070.39 411.311L1069.36 411.916L1069.31 410.548L1069.77 410.436L1069.74 409.853L1070.14 409.55L1070.1 408.563L1069.54 407.8L1069.8 407.497L1070.12 407.677L1070.3 406.499L1071.16 406.488L1070.83 406.095L1071.5 405.097L1071.56 404.312L1071.02 404.099L1070.25 404.514L1069.67 404.2L1067.6 405.86L1067.19 405.759L1067.3 406.241L1066.4 406.039L1068.09 403.033L1067.87 401.956L1067.39 401.362L1067.68 401.149L1067.44 400.678L1066.3 400.925L1066.82 400.027L1067.31 400.005L1067.81 400.465L1068.12 400.106L1067.32 399.691L1067.93 399.253L1067.89 398.625H1068.67L1068.93 397.548L1068.4 397.369L1070.3 395.72L1070.12 395.014L1070.74 393.701L1070.26 393.298L1071.44 392.041L1071.34 391.402L1071.03 391.38L1071.38 390.931L1071.2 389.551L1070.69 389.08L1068.41 390.729L1067.23 392.983L1066.48 392.759L1066.38 393.152H1065.92L1065.67 392.759L1065.7 393.41L1064.71 393.914L1064.32 393.69L1064.25 393.107L1064.73 390.897L1064.25 391.492L1063.47 391.727L1062.86 391.065L1063.31 390.437L1063.05 389.989L1061.6 389.417L1060.2 389.361L1059.82 389.843L1059.22 389.742L1058.79 391.166L1058.11 391.189L1057.67 390.819L1056.57 390.92L1055.93 391.671L1055.23 391.088L1054.11 391.11L1052.34 392.692L1050.6 391.783L1047.93 391.66L1047 392.613L1046.78 393.522L1046.1 393.23L1044.38 394.027L1043.2 395.945L1042.54 396.281L1041.39 396.27L1041.03 398.681L1041.16 401.586L1040.87 401.777L1040.65 401.34L1039.89 401.687L1036.85 404.536L1036.16 405.647L1035.38 405.781L1035.22 406.05L1035.7 406.42L1035.29 406.981L1035.19 409.572L1034.45 409.314L1033.69 410.604L1032.88 410.716L1031.7 411.849L1031.36 412.825L1030.5 412.713L1029.11 414.474L1027.69 415.169L1026.41 416.324L1024.42 419.6L1023.83 419.566L1023.1 420.059L1023.7 422.987L1022.4 422.807L1021.55 423.155L1021.59 425.309L1022.75 427.843L1022.09 427.204L1021.98 426.531L1021.6 426.497L1020.95 428.55L1020.62 428.449L1020.34 428.819L1020.79 429.728L1022.21 430.075L1022.55 428.797L1022.93 428.539L1023.1 428.999L1022.81 429.492L1023.19 429.806L1023.17 430.457L1024 430.446L1023.41 429.313L1023.69 428.853L1023.23 428.73L1023.09 428.292L1024.2 428.898L1025 428.449L1026.13 429.672L1027.11 429.582L1027.59 429.156L1028.51 430.816L1029.51 431.522L1029.58 432.151L1029.06 432.375L1029.43 433.272L1028.92 433.474L1029.29 434.237L1026.47 433.878L1026.14 434.136L1026.26 434.966L1025.21 434.652L1024.08 433.575L1022.95 433.9L1022.44 433.687L1022.69 433.9L1022.42 433.979L1022.62 435.257L1022.43 435.033L1022.01 435.628L1021.58 435.325L1021.12 435.47L1020.11 436.211L1019.28 435.852L1018.48 434.315L1017.24 434.08L1017.54 433.564L1017.96 433.553L1017.98 433.025L1016.89 433.979L1014.73 432.958L1014.54 434.607L1014.26 434.349L1013.89 434.865L1014.55 434.887L1014.46 435.583H1012.7L1011.87 435.919L1011.32 436.828L1010.98 438.42L1010.23 438.095L1009.52 438.42L1009.01 437.882L1008.12 437.736L1007.87 437.164L1006.99 436.626L1005.08 437.164L1004.84 438.241L1004.24 438.734L1002.41 438.835L1001.13 439.43L999.443 439.071L998.4 439.497L998.534 439.183L997.648 437.949L997.535 436.973L996.447 435.302L997.378 435.605L999.342 434.36L1000.36 434.629L1000.84 434.394L1001.67 434.943L1004.3 434.685L1005.26 433.878H1006.16L1006.24 433.384L1005.03 432.285L1004.77 432.543L1004.75 432.173L1003.72 432.823L1002.82 432.139L1001.52 432.251L1001.36 431.825L1001.79 431.377L1001.16 430.726L1001.04 429.975L1000.34 429.145L999.735 429.01L998.86 427.451L998.512 427.462L998.052 428.18L996.671 427.799L994.898 428.068L994.696 428.427L995.134 428.774L994.864 429.245L995.257 429.391L995.089 429.829L993.641 430.176L993.551 429.29L991.542 429.346L993.63 428.629L993.731 428.113L992.159 428.438L991.205 427.888L991.216 427.283L990.622 427.215L990.06 426.643L988.77 426.61L984.583 425.051L983.405 425.14L981.946 425.802L979.869 427.271L980.285 427.339L980.386 428.494L981.216 428.752L981.306 429.694L980.285 429.302L978.927 429.84L978.365 429.313L978.882 428.617L978.478 428.303L977.209 429.717L977.355 431.287L977.95 431.522L978.623 430.816L978.657 431.522L978.994 431.41L978.859 431.085L979.364 431.051L978.87 431.96L979.173 432.543L978.904 433.283L978.197 432.554L977.804 432.666L977.602 433.238L977.254 433.216L977.131 432.756L976.053 433.205L974.785 432.969L974.987 432.532L974.639 431.029L973.73 430.558L970.397 430.917L969.487 431.377L970.194 432.184L969.79 432.835L968.477 432.128L967.714 432.588L967.736 433.25L965.75 431.691L964.695 431.949L964.111 431.343L963.056 431.141L964.931 430.412L964.953 428.371L965.593 426.789L965.413 424.905L964.908 424.411L965.323 423.963L965.2 423.234L964.257 422.852L964.201 421.854L963.561 421.91L962.585 422.886L962.203 422.763L961.294 421.248L961.799 420.43L961.507 419.566L959.891 419.207L959.072 417.468L958.118 417.177L957.007 417.827L955.929 417.536L954.773 418.153L952.225 415.393L952.82 415.102L952.057 413.935L952.315 413.251L953.078 413.038V412.051L954.291 411.165H954.852L955.458 409.83L956.03 409.774L956.558 409.168L957.119 409.023L958.724 410.346L959.577 410.324L959.981 409.595L959.566 408.832L959.588 406.454L959.947 405.938L961.238 405.792L961.788 404.211L961.62 403.818L962.08 403.235L962.136 401.855L961.305 399.321L961.575 398.177L960.688 397.066L960.845 395.081L959.566 393.488L959.599 392.692L957.265 389.529L955.099 388.037L953.931 387.835L953.46 386.77L952.989 387.151L953.135 388.116L952.753 388.654L952.091 388.755L951.855 389.293L951.204 389.282L951.496 388.407L950.946 388.542L950.643 388.026L950.205 387.936L949.622 388.822L948.174 387.97L947.545 386.96L945.547 387.196L945.446 386.153L946.041 385.962L946.614 385.166L947.051 385.368L947.736 384.123L948.488 384.01L948.825 383.068L948.623 381.722L949.262 380.433L948.769 379.614L949.666 378.75L949.969 379.064L950.867 378.795L951.159 378.346L950.587 377.651L951.103 375.789L950.407 375.318L950.317 374.6L951.013 373.512L950.867 371.359L949.296 370.091L949.846 369.441L949.835 368.644L949.105 367.646L949.431 366.614L950.475 365.257L950.373 364.461L951.058 362.924L950.89 361.993L952.102 360.355L952.663 358.46L952.293 356.273L952.517 355.499L956.412 353.873L957.388 352.527L958.185 349.678L958.657 349.308L960.003 349.958L962.473 349.577L965.166 351.652L966.064 351.708L966.3 350.597L967.13 350.833L968.545 349.913L969.027 350.407L968.466 351.966L969.824 353.031L969.532 353.693L970.935 353.94L971.732 353.671L971.631 352.56L971.968 351.618L973.82 348.758L972.091 346.548L971.8 345.068L972.72 344.597L974.37 342.735L975.29 343.206L975.436 344.238L976.626 344.855L977.546 344.215L978.489 345.023L978.848 344.171L979.993 344.507L980.879 345.46L981.968 345.573L981.789 344.754L982.72 345.169L985.515 343.094L985.908 342.275L987.041 342.454L987.03 343.183L988.321 343.901L988.265 344.585L987.468 345.281L987.793 345.976L987.659 347.008L988.904 348.051L989.196 348.982L990.363 348.825L991.587 349.588L992.462 349.622L992.361 347.075L992.821 346.324L994.572 346.75L995.885 346.593L996.716 345.909L997.086 346.38L997.928 345.707L998.815 346.862L999.421 346.649L1000.3 344.709L1001.07 344.698L1002.84 343.89L1004.37 344.563L1003.9 345.73L1004.45 346.055L1006.42 345.561L1006.79 344.653L1005.89 343.24L1006.12 342.757L1007.21 342.555L1008 341.064L1009.6 340.133L1009.97 339.258L1009.83 338.719L1008.58 338.069L1007.54 333.908L1008.57 333.336L1008.66 331.261L1009.33 330.386L1009.32 329.758L1010.5 329.444L1011.53 328.602L1012.87 329.04L1013.53 328.804L1013.54 328.086L1014.05 327.559H1014.98L1015.65 326.628L1015.81 325.697L1014.89 324.867L1015.11 323.802L1016.34 322.276L1016.04 321.603L1016.38 320.033L1015.81 319.82L1016.04 318.115L1017.26 317.734L1017.84 317.095L1019.31 317.24L1020.36 316.971L1020.8 317.498L1020.63 318.598L1021.67 318.553L1023.13 316.343L1023.2 314.885L1022.16 313.943L1021.94 313.057L1023.34 312.171L1023.37 311.24L1024.62 310.466L1025.35 310.679L1025.85 311.262L1026.69 311.318L1027.05 312.35L1028.13 312.058L1028.68 311.027L1029.59 310.836L1030.08 311.789L1031.88 311.509L1033.61 312.047L1034.99 311.15L1035.4 312.507L1036.47 313.371L1038.34 313.281L1039.15 313.696L1039.98 313.146L1040.16 312.025L1041.29 310.735L1041.64 310.881L1041.91 312.473L1043.93 313.786L1044.02 314.616L1043.4 315.165L1044.89 316.354L1047.35 316.489L1047.71 316.007L1047.73 314.896L1048.69 314.268L1049.62 312.743L1051.2 312.53L1053.03 311.7L1054.14 311.991L1054.71 313.068L1055.35 312.821L1056.34 313.057L1056.81 312.53L1055.54 310.051L1056.56 308.312Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-48-inside-33_10718_32869)\" />\n                <mask id=\"path-49-inside-34_10718_32869\" fill=\"white\">\n                    <path d=\"M37.6634 230.281L38.3817 229.945L39.4255 230.427L39.8857 231.223L40.5479 231.358L42.108 232.67L42.007 233.455L43.264 233.859L43.5559 233.5L45.3517 233.882L45.5425 234.308L46.6087 234.588L46.8668 235.026L46.6648 236.887L45.5986 238.346L44.7343 238.772L42.0294 237.942L41.4346 237.28L40.952 237.538L39.448 237.246L39.2011 236.506L39.5602 235.9L38.9766 234.588L38.6287 234.869L39.1001 235.474L38.7297 236.697L38.2695 237.168L37.5736 237.235L38.3481 237.964L37.9889 239.142L38.9766 238.088L40.0092 238.705L41.1989 238.873L41.457 239.153L41.1091 239.849L42.007 240.084L42.0182 240.578L41.2213 240.88L39.998 242.294L41.2887 241.845L41.5131 240.959L41.9958 241.071L42.2539 240.566L42.3325 240.88L42.6916 240.701L42.7702 241.879L43.2977 240.948L44.3976 240.959L45.0262 241.251L44.4425 242.215L44.3752 243.113L45.1945 241.576L46.4965 241.385L45.1272 243.012L45.3292 243.303L44.5211 245.03L45.1159 244.963L45.7108 243.404L48.1239 242.44L48.3484 242.013L49.9421 242.731L49.0891 243.673L49.684 243.494L49.785 243.853L49.0891 245.266L47.9443 245.232L48.0902 245.558L47.6974 245.939L50.1105 246.062L48.1576 246.69L49.8299 247.049L49.8187 248.216L49.2238 248.451L48.7188 249.405L46.8668 249.921L46.2495 250.459L47.125 250.224L48.1127 250.448L48.4157 249.932L49.6166 249.786L49.5493 249.091L49.9309 248.889L50.5819 247.352L50.4135 246.332L50.8849 245.726L50.3574 245.939L50.4921 244.963L51.8389 244.851L51.9624 245.154L52.5236 244.728L53.1297 244.918L53.5337 244.604L54.6224 244.952L57.1028 244.986L57.2263 245.591L57.9334 245.95L61.1546 246.702L61.3005 247.285L61.7943 246.825L62.9167 247.083L63.2422 247.565L63.6238 247.296L63.9942 247.543L64.2186 247.206L63.2646 246.13H64.3533L64.9594 246.668L66.0369 246.69L68.2816 247.722L68.5847 247.442L69.3591 248.429L70.2345 248.788L70.5376 248.519L70.8518 249.091L72.3446 249.394L72.8721 250.773L73.0405 250.437L73.3211 250.964L73.5006 250.784L74.6679 251.345L78.2146 254.542L79.5839 255.248L79.9094 255.944L80.4593 256.123L80.5379 256.617L81.0991 256.572L81.5929 257.458L82.4347 257.626L83.557 258.647L86.015 261.238L87.1935 263.324L87.4629 263.223L88.7761 264.491L90.4035 266.835L90.8188 266.958L91.3126 265.534L92.4237 267.014L93.3329 267.07L93.4002 267.676L94.8368 269.269L94.7807 269.717L95.499 269.426L99.4498 273.273L99.1692 272.611L99.4385 272.342L100.022 272.88L100.965 272.768L100.224 270.031L101.549 272.084L102.087 273.789L102.39 273.946L102.491 273.665L103.457 274.888L105.353 276.043L105.297 277.12L104.759 276.705L104.456 276.974L105.533 278.668L105.858 278.556L106.364 279.262L106.857 278.589L106.7 277.928L107.16 277.883L107.318 278.219L107.452 277.815L108.462 279.431L109.428 279.318L109.966 279.812L110.584 281.472L110.056 282.964L110.326 283.951L110.045 284.859L110.887 285.409L111.156 286.093L110.853 289.189L111.302 289.884L112.222 290.389L112.739 289.974L112.997 290.422L112.604 291.555L113.311 292.161L112.851 292.879L112.952 294.864L112.29 294.931L112.57 295.593L111.863 298.229L107.912 303.119L107.755 304.106L106.981 304.51L106.835 305.43L105.959 306.495L103.939 307.74L102.143 309.681L97.9009 311.083L95.0052 312.821L93.2992 312.732L91.5258 313.595L88.6414 313.786L87.1711 313.27L85.4202 313.147L83.5009 312.541L80.8634 310.78L77.0473 309.187L73.9608 309.041L66.1267 307.045L64.8584 306.406L64.5666 305.441L63.635 305.419L61.3342 302.985L60.5597 302.715L59.6169 302.873L58.8986 303.725L57.7763 303.938L57.0916 302.973L57.0804 301.706L54.2745 300.887L53.5898 301.022L53.2531 300.797L53.1521 300.057L52.8491 300.349L52.4675 299.878L52.6246 299.384L51.1543 298.577L50.8737 297.702L50.8625 298.857L50.4921 298.655L50.7727 299.956L49.9983 300.371L47.3719 298.195L45.7557 296.591L44.1619 294.18L44.1507 293.372L45.5425 292.711L43.9262 292.969L42.86 292.094L41.8948 292.363L41.3111 292.105L40.6938 291.331L40.0316 291.892L39.0327 291.656L38.696 292.363L37.2369 291.69L38.7521 292.823L39.3807 292.531L39.2235 292.015L40.0316 292.34L40.6826 292.901L40.1214 293.047L40.5367 293.608L41.1989 293.585L42.0182 294.057L42.31 296.244L41.1652 297.018H42.209L43.5446 298.307L43.4885 298.711L44.2517 299.384L43.4436 299.597L43.6569 299.833L46.2944 301.123L47.9892 301.347L48.4606 301.852L48.3484 302.368L47.8994 301.863L46.9117 301.684L46.474 302.884L44.5997 302.334L44.6446 302.861L42.5008 302.57L42.1753 302.805L41.8499 304.802L40.099 304.992L41.4346 306.159L40.2 305.721L40.4244 306.776L40.1775 307.146L36.6645 307.023L35.7666 304.701L34.6218 304.196L34.4759 302.087L32.6352 301.975L32.7138 301.583L30.4129 301.885L27.2142 301.661L26.0918 302.065L22.8257 302.379L20.0984 302.188L17.0792 302.895L14.4416 298.061L14.06 295.268L18.0893 288.19L18.9423 287.574L18.9536 287.058L21.4564 283.715L22.0737 280.406L19.3239 277.872L16.518 271.905L10.996 269.269L9.31242 261.586L11.501 257.402L12.152 254.34L9.6379 254.116L9.17773 253.588L13.1397 250.246L14.0151 251.155L14.8345 250.448L15.8221 248.844L16.2374 247.442L16.2823 244.705L17.7751 244.122L18.2128 244.458L20.4239 242.058L21.6809 242.182L22.6798 241.049L23.3645 238.884L22.7247 236.394L23.3532 236.36L24.7225 237.493L26.0133 239.209L28.3702 239.232L29.3804 238.211L29.2681 235.889L28.8641 235.396L28.9988 234.756L28.561 233.579L29.2906 234.14L29.9528 233.781L30.166 234.184L30.6711 234.05L33.2637 235.474V236.45L31.8832 238.503L32.4444 238.177L32.9832 237.078L33.4994 236.876L33.6902 235.968L35.5758 236.271L36.2941 236.775L36.3166 236.372L35.3738 235.373L35.7442 232.973L36.1146 232.547L36.7319 232.906L38.1685 234.476L38.1909 233.971L38.6062 234.061L38.0675 232.614L37.4277 231.975L37.7532 231.526L37.0349 230.707L37.1808 229.81L37.7757 229.866L37.6634 230.281Z\" />\n                </mask>\n                <path d=\"M37.6634 230.281L38.3817 229.945L39.4255 230.427L39.8857 231.223L40.5479 231.358L42.108 232.67L42.007 233.455L43.264 233.859L43.5559 233.5L45.3517 233.882L45.5425 234.308L46.6087 234.588L46.8668 235.026L46.6648 236.887L45.5986 238.346L44.7343 238.772L42.0294 237.942L41.4346 237.28L40.952 237.538L39.448 237.246L39.2011 236.506L39.5602 235.9L38.9766 234.588L38.6287 234.869L39.1001 235.474L38.7297 236.697L38.2695 237.168L37.5736 237.235L38.3481 237.964L37.9889 239.142L38.9766 238.088L40.0092 238.705L41.1989 238.873L41.457 239.153L41.1091 239.849L42.007 240.084L42.0182 240.578L41.2213 240.88L39.998 242.294L41.2887 241.845L41.5131 240.959L41.9958 241.071L42.2539 240.566L42.3325 240.88L42.6916 240.701L42.7702 241.879L43.2977 240.948L44.3976 240.959L45.0262 241.251L44.4425 242.215L44.3752 243.113L45.1945 241.576L46.4965 241.385L45.1272 243.012L45.3292 243.303L44.5211 245.03L45.1159 244.963L45.7108 243.404L48.1239 242.44L48.3484 242.013L49.9421 242.731L49.0891 243.673L49.684 243.494L49.785 243.853L49.0891 245.266L47.9443 245.232L48.0902 245.558L47.6974 245.939L50.1105 246.062L48.1576 246.69L49.8299 247.049L49.8187 248.216L49.2238 248.451L48.7188 249.405L46.8668 249.921L46.2495 250.459L47.125 250.224L48.1127 250.448L48.4157 249.932L49.6166 249.786L49.5493 249.091L49.9309 248.889L50.5819 247.352L50.4135 246.332L50.8849 245.726L50.3574 245.939L50.4921 244.963L51.8389 244.851L51.9624 245.154L52.5236 244.728L53.1297 244.918L53.5337 244.604L54.6224 244.952L57.1028 244.986L57.2263 245.591L57.9334 245.95L61.1546 246.702L61.3005 247.285L61.7943 246.825L62.9167 247.083L63.2422 247.565L63.6238 247.296L63.9942 247.543L64.2186 247.206L63.2646 246.13H64.3533L64.9594 246.668L66.0369 246.69L68.2816 247.722L68.5847 247.442L69.3591 248.429L70.2345 248.788L70.5376 248.519L70.8518 249.091L72.3446 249.394L72.8721 250.773L73.0405 250.437L73.3211 250.964L73.5006 250.784L74.6679 251.345L78.2146 254.542L79.5839 255.248L79.9094 255.944L80.4593 256.123L80.5379 256.617L81.0991 256.572L81.5929 257.458L82.4347 257.626L83.557 258.647L86.015 261.238L87.1935 263.324L87.4629 263.223L88.7761 264.491L90.4035 266.835L90.8188 266.958L91.3126 265.534L92.4237 267.014L93.3329 267.07L93.4002 267.676L94.8368 269.269L94.7807 269.717L95.499 269.426L99.4498 273.273L99.1692 272.611L99.4385 272.342L100.022 272.88L100.965 272.768L100.224 270.031L101.549 272.084L102.087 273.789L102.39 273.946L102.491 273.665L103.457 274.888L105.353 276.043L105.297 277.12L104.759 276.705L104.456 276.974L105.533 278.668L105.858 278.556L106.364 279.262L106.857 278.589L106.7 277.928L107.16 277.883L107.318 278.219L107.452 277.815L108.462 279.431L109.428 279.318L109.966 279.812L110.584 281.472L110.056 282.964L110.326 283.951L110.045 284.859L110.887 285.409L111.156 286.093L110.853 289.189L111.302 289.884L112.222 290.389L112.739 289.974L112.997 290.422L112.604 291.555L113.311 292.161L112.851 292.879L112.952 294.864L112.29 294.931L112.57 295.593L111.863 298.229L107.912 303.119L107.755 304.106L106.981 304.51L106.835 305.43L105.959 306.495L103.939 307.74L102.143 309.681L97.9009 311.083L95.0052 312.821L93.2992 312.732L91.5258 313.595L88.6414 313.786L87.1711 313.27L85.4202 313.147L83.5009 312.541L80.8634 310.78L77.0473 309.187L73.9608 309.041L66.1267 307.045L64.8584 306.406L64.5666 305.441L63.635 305.419L61.3342 302.985L60.5597 302.715L59.6169 302.873L58.8986 303.725L57.7763 303.938L57.0916 302.973L57.0804 301.706L54.2745 300.887L53.5898 301.022L53.2531 300.797L53.1521 300.057L52.8491 300.349L52.4675 299.878L52.6246 299.384L51.1543 298.577L50.8737 297.702L50.8625 298.857L50.4921 298.655L50.7727 299.956L49.9983 300.371L47.3719 298.195L45.7557 296.591L44.1619 294.18L44.1507 293.372L45.5425 292.711L43.9262 292.969L42.86 292.094L41.8948 292.363L41.3111 292.105L40.6938 291.331L40.0316 291.892L39.0327 291.656L38.696 292.363L37.2369 291.69L38.7521 292.823L39.3807 292.531L39.2235 292.015L40.0316 292.34L40.6826 292.901L40.1214 293.047L40.5367 293.608L41.1989 293.585L42.0182 294.057L42.31 296.244L41.1652 297.018H42.209L43.5446 298.307L43.4885 298.711L44.2517 299.384L43.4436 299.597L43.6569 299.833L46.2944 301.123L47.9892 301.347L48.4606 301.852L48.3484 302.368L47.8994 301.863L46.9117 301.684L46.474 302.884L44.5997 302.334L44.6446 302.861L42.5008 302.57L42.1753 302.805L41.8499 304.802L40.099 304.992L41.4346 306.159L40.2 305.721L40.4244 306.776L40.1775 307.146L36.6645 307.023L35.7666 304.701L34.6218 304.196L34.4759 302.087L32.6352 301.975L32.7138 301.583L30.4129 301.885L27.2142 301.661L26.0918 302.065L22.8257 302.379L20.0984 302.188L17.0792 302.895L14.4416 298.061L14.06 295.268L18.0893 288.19L18.9423 287.574L18.9536 287.058L21.4564 283.715L22.0737 280.406L19.3239 277.872L16.518 271.905L10.996 269.269L9.31242 261.586L11.501 257.402L12.152 254.34L9.6379 254.116L9.17773 253.588L13.1397 250.246L14.0151 251.155L14.8345 250.448L15.8221 248.844L16.2374 247.442L16.2823 244.705L17.7751 244.122L18.2128 244.458L20.4239 242.058L21.6809 242.182L22.6798 241.049L23.3645 238.884L22.7247 236.394L23.3532 236.36L24.7225 237.493L26.0133 239.209L28.3702 239.232L29.3804 238.211L29.2681 235.889L28.8641 235.396L28.9988 234.756L28.561 233.579L29.2906 234.14L29.9528 233.781L30.166 234.184L30.6711 234.05L33.2637 235.474V236.45L31.8832 238.503L32.4444 238.177L32.9832 237.078L33.4994 236.876L33.6902 235.968L35.5758 236.271L36.2941 236.775L36.3166 236.372L35.3738 235.373L35.7442 232.973L36.1146 232.547L36.7319 232.906L38.1685 234.476L38.1909 233.971L38.6062 234.061L38.0675 232.614L37.4277 231.975L37.7532 231.526L37.0349 230.707L37.1808 229.81L37.7757 229.866L37.6634 230.281Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-49-inside-34_10718_32869)\" />\n                <mask id=\"path-50-inside-35_10718_32869\" fill=\"white\">\n                    <path d=\"M122.066 498.371L123.267 499.324L124.378 498.707L124.692 498.719L125.096 499.515L125.68 499.526L126.656 498.797L127.42 499.313L127.767 498.068L128.946 497.485L129.081 496.969L129.687 496.868L130.585 497.328L131.483 497.047L131.426 498.393L134.244 498.988L134.199 499.706L134.49 499.952L135.444 499.773L135.691 500.042L135.534 500.805L136.533 501.736L137.555 501.781L138.879 502.779L139.53 502.184L140.091 502.532L139.586 503.553L141.371 502.913L142.01 503.407L143.133 503.126L143.739 503.396L143.997 502.913L142.774 501.68L143.492 500.805L143.279 499.47L143.772 498.864L144.3 499.549L144.85 497.889L146.343 497.361L146.017 495.814L146.567 494.692L148.06 493.559L148.857 493.761L148.34 495.881L148.778 496.352L150.372 496.116L151.472 495.298L151.685 496.217L151.977 496.195L152.572 494.883L153.01 495.084L153.301 495.769L152.785 496.599L153.919 497.563L154.424 499.324L155.019 501.265L154.222 501.926L154.85 501.96L155.187 502.431L154.536 503.115L155.759 503.059L155.108 504.08L155.299 504.36L156.152 504.383L156.13 505.482L155.4 505.673L153.537 507.119L150.619 507.983L149.339 510.159L148.823 510.854L147.05 510.922L145.243 511.516L144.85 511.281L144.648 510.372L143.346 510.653L141.64 510.484L139.676 511.651L139.777 512.514L140.742 513.737L140.506 514.13L139.272 514.466L138.823 513.928L137.072 514.197L135.007 513.58L134.311 512.851L134.154 511.516L132.627 510.675L131.729 510.585L131.561 510.058L131.123 509.946L130.158 510.428L128.576 509.71L127.947 510.742L128.452 511.729L128.115 512.436L127.442 512.548L126.926 512.223L126.039 512.615L124.513 512.458L123.401 513.12L122.953 512.268L122.425 512.784L122.571 513.759L121.213 512.526L121.594 511.662L122.593 510.754L120.652 508.959L121.056 508.308L121.493 509.116L122.111 508.667L122.84 509.161L123.009 508.892L122.694 508.376L123.222 508.062L124.288 508.106L123.963 507.344L122.694 507.422L122.245 506.749L121.449 507.131L121.651 507.49L120.764 507.893L119.967 506.671L120.775 506.985L122.459 505.942L122.593 505.246L123.693 505.056L123.345 504.372L122.807 504.181L123.098 503.216L123.604 503.508V502.689L124.277 502.263L123.682 501.87L123.581 500.726L122.874 500.894L122.706 500.412L122.459 500.704L121.617 499.93L121.168 499.077L121.617 498.618L122.133 498.696L122.066 498.371Z\" />\n                </mask>\n                <path d=\"M122.066 498.371L123.267 499.324L124.378 498.707L124.692 498.719L125.096 499.515L125.68 499.526L126.656 498.797L127.42 499.313L127.767 498.068L128.946 497.485L129.081 496.969L129.687 496.868L130.585 497.328L131.483 497.047L131.426 498.393L134.244 498.988L134.199 499.706L134.49 499.952L135.444 499.773L135.691 500.042L135.534 500.805L136.533 501.736L137.555 501.781L138.879 502.779L139.53 502.184L140.091 502.532L139.586 503.553L141.371 502.913L142.01 503.407L143.133 503.126L143.739 503.396L143.997 502.913L142.774 501.68L143.492 500.805L143.279 499.47L143.772 498.864L144.3 499.549L144.85 497.889L146.343 497.361L146.017 495.814L146.567 494.692L148.06 493.559L148.857 493.761L148.34 495.881L148.778 496.352L150.372 496.116L151.472 495.298L151.685 496.217L151.977 496.195L152.572 494.883L153.01 495.084L153.301 495.769L152.785 496.599L153.919 497.563L154.424 499.324L155.019 501.265L154.222 501.926L154.85 501.96L155.187 502.431L154.536 503.115L155.759 503.059L155.108 504.08L155.299 504.36L156.152 504.383L156.13 505.482L155.4 505.673L153.537 507.119L150.619 507.983L149.339 510.159L148.823 510.854L147.05 510.922L145.243 511.516L144.85 511.281L144.648 510.372L143.346 510.653L141.64 510.484L139.676 511.651L139.777 512.514L140.742 513.737L140.506 514.13L139.272 514.466L138.823 513.928L137.072 514.197L135.007 513.58L134.311 512.851L134.154 511.516L132.627 510.675L131.729 510.585L131.561 510.058L131.123 509.946L130.158 510.428L128.576 509.71L127.947 510.742L128.452 511.729L128.115 512.436L127.442 512.548L126.926 512.223L126.039 512.615L124.513 512.458L123.401 513.12L122.953 512.268L122.425 512.784L122.571 513.759L121.213 512.526L121.594 511.662L122.593 510.754L120.652 508.959L121.056 508.308L121.493 509.116L122.111 508.667L122.84 509.161L123.009 508.892L122.694 508.376L123.222 508.062L124.288 508.106L123.963 507.344L122.694 507.422L122.245 506.749L121.449 507.131L121.651 507.49L120.764 507.893L119.967 506.671L120.775 506.985L122.459 505.942L122.593 505.246L123.693 505.056L123.345 504.372L122.807 504.181L123.098 503.216L123.604 503.508V502.689L124.277 502.263L123.682 501.87L123.581 500.726L122.874 500.894L122.706 500.412L122.459 500.704L121.617 499.93L121.168 499.077L121.617 498.618L122.133 498.696L122.066 498.371Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-50-inside-35_10718_32869)\" />\n                <mask id=\"path-51-inside-36_10718_32869\" fill=\"white\">\n                    <path d=\"M63.2987 482.882L64.8251 481.02L64.365 480.65L64.9823 479.808L64.6119 479.079L66.1383 478.619L65.8353 477.89L66.2393 476.757L65.4312 476.814L65.5322 475.726L66.1271 476.118L66.3852 475.524L66.5872 475.759L67.0362 475.423L67.126 475.737L67.5076 475.221L68.181 475.625L68.3045 476.623L68.7646 476.365L70.5941 476.825L70.9196 477.352L71.3573 476.23L72.1205 476.376L73.7143 475.176L74.4663 475.355L74.6346 474.963L76.812 473.864L76.7671 473.561L78.3945 474.301L79.2139 474.256L79.1241 472.798L79.4271 472.349L79.3486 471.643L78.9221 471.228L79.921 470.645L81.0995 471.093L81.8178 470.577L82.2667 470.79L82.8616 469.983L82.8167 468.895L84.1298 468.211L85.6226 469.388L86.3746 469.557L86.947 471.071L88.7877 470.847L89.6743 471.878L89.0122 472.035L89.4723 473.752L88.7652 474.413L89.2591 474.638L88.9785 474.907L89.2815 475.479L89.7417 475.456V476.309L90.1233 476.399L89.7417 478.216L90.3365 479.079L90.7518 479.001L90.5386 479.461L90.9314 481.065L91.4701 481.805L91.1334 482.018L91.2681 482.265L92.3119 482.276L93.1537 483.083L94.8821 482.803L94.6689 483.027L95.0505 482.938L94.8372 483.341L95.4096 484.183L96.6218 484.328L97.1942 484.003L96.8912 484.429L97.1605 485.293L98.2941 485.259L98.4176 485.686L98.7319 485.069L99.7757 485.001L100.449 484.317L101.672 484.452L101.852 485.831L103.199 486.942L102.918 488.849L103.805 488.837L104.063 489.252L103.637 490.352L104.265 491.597L103.917 491.641L103.659 492.516L102.368 493.346L100.786 493.548L100.236 494.546L100.92 494.3L101.302 494.636L100.864 496.105L100.584 495.892L99.8767 496.162L99.3492 495.859L99.192 496.509L98.6757 496.532L98.0135 497.238L98.1033 497.676L97.4973 498.248L97.587 498.775L96.9361 499.695L97.3289 499.796L96.2514 500.368L96.229 501.287L95.6454 501.063L95.3086 501.433L94.5005 501.411L94.2536 501.803L93.7934 501.444L92.9853 501.736L92.7609 502.644L93.1761 502.802L92.7272 503.609L94.1414 504.192L94.1975 504.697L93.7822 504.82L93.6251 505.37L92.9517 504.888L92.7047 505.516L92.1323 505.348L92.065 506.48L91.6722 506.682L90.1682 506.009L90.0111 505.471L90.4039 505.056L89.7305 504.349L89.2815 502.689L90.0223 502.544L90.3141 501.635L90.1009 501.153L89.5172 501.332L88.6979 500.928L88.3051 501.321L87.2725 500.289L86.6664 500.132L86.7562 499.594L85.8807 498.326L84.5339 498.595V499.807L83.8942 500.244L83.1534 499.919L82.7044 500.121L82.5249 499.246L81.9749 498.618L80.8076 498.461L80.774 498.719L80.0332 498.371L79.7638 498.147L79.8087 496.767L79.068 495.511L79.371 495.388L79.3598 494.905L78.8323 494.681L78.8547 494.255L79.1914 494.143L79.3149 494.131L79.7975 493.885L79.7302 492.954L80.1342 492.651L80.5832 492.819L80.5944 492.561L80.9536 493.088L81.6606 492.662L81.4698 491.731L81.829 491.754L81.6494 491.451L82.1769 490.699L81.4025 489.925L81.5709 489.589L81.9861 489.398L82.7157 490.037L82.783 489.533L83.3217 489.286L83.0636 488.837L83.2207 488.097L84.3094 487.862L85.3757 486.28L85.7124 486.179L85.8246 486.628L86.2175 486.673L86.2511 486.112L85.2185 485.585L85.1737 484.452L83.9952 483.442L82.9177 483.263L83.0524 482.612L82.6034 482.803L82.7381 483.297L81.8627 483.745L81.5596 483.24L81.8065 482.691L81.1331 482.646L81.728 483.835L81.0882 484.205L81.2566 484.564L81.5821 484.441L81.3688 485.013L80.8974 484.912L80.9985 485.349L81.4025 485.035L81.5821 486.325L81.3576 486.179L81.0882 486.572L81.6606 486.325L81.7729 486.807H80.9985L80.2577 487.435L79.1914 487.716L79.5506 489.51L79.169 489.645L79.6292 490.015L78.9108 489.679L78.215 489.791L77.9007 488.95L76.9355 489.084L76.8457 490.049L77.2834 490.89L78.6527 492.202L78.0691 492.494L78.0354 492.931L78.0242 492.943L76.6886 493.458L76.4865 492.785L75.2519 492.741L74.9938 491.574L74.5224 492.101L73.5235 492.079L73.4112 492.741L73.1194 492.718L72.5133 493.941L72.345 493.66L71.5032 493.907L71.2114 493.47L70.5268 493.559L70.0217 492.999L69.0901 493.099L68.3045 492.258L67.2719 492.382L66.3291 493.245L65.4761 493.2L65.0945 492.729L64.365 491.911L64.8027 490.408L64.6231 488.366L65.3751 488.119L65.3302 487.648L64.8027 487.065L64.8476 485.248L64.466 485.158L63.2987 482.882ZM80.022 482.814L79.573 482.568L79.4496 481.827L79.921 481.749L80.5495 482.309L80.1006 482.41L80.022 482.814ZM81.7504 482.175L82.0086 482.321L81.3127 482.668L81.5596 482.321L81.7504 482.175ZM78.2374 485.674L78.7313 486.123L79.3486 485.921L79.1578 485.764L79.371 486.089L78.4058 486.325L78.0578 486.011L78.4058 485.831L77.9344 485.955L77.9007 485.63L77.4518 485.955L78.2486 485.618L78.2374 485.674ZM85.2073 484.71L85.6338 484.654L85.2859 484.8L85.2073 484.71Z\" />\n                </mask>\n                <path d=\"M63.2987 482.882L64.8251 481.02L64.365 480.65L64.9823 479.808L64.6119 479.079L66.1383 478.619L65.8353 477.89L66.2393 476.757L65.4312 476.814L65.5322 475.726L66.1271 476.118L66.3852 475.524L66.5872 475.759L67.0362 475.423L67.126 475.737L67.5076 475.221L68.181 475.625L68.3045 476.623L68.7646 476.365L70.5941 476.825L70.9196 477.352L71.3573 476.23L72.1205 476.376L73.7143 475.176L74.4663 475.355L74.6346 474.963L76.812 473.864L76.7671 473.561L78.3945 474.301L79.2139 474.256L79.1241 472.798L79.4271 472.349L79.3486 471.643L78.9221 471.228L79.921 470.645L81.0995 471.093L81.8178 470.577L82.2667 470.79L82.8616 469.983L82.8167 468.895L84.1298 468.211L85.6226 469.388L86.3746 469.557L86.947 471.071L88.7877 470.847L89.6743 471.878L89.0122 472.035L89.4723 473.752L88.7652 474.413L89.2591 474.638L88.9785 474.907L89.2815 475.479L89.7417 475.456V476.309L90.1233 476.399L89.7417 478.216L90.3365 479.079L90.7518 479.001L90.5386 479.461L90.9314 481.065L91.4701 481.805L91.1334 482.018L91.2681 482.265L92.3119 482.276L93.1537 483.083L94.8821 482.803L94.6689 483.027L95.0505 482.938L94.8372 483.341L95.4096 484.183L96.6218 484.328L97.1942 484.003L96.8912 484.429L97.1605 485.293L98.2941 485.259L98.4176 485.686L98.7319 485.069L99.7757 485.001L100.449 484.317L101.672 484.452L101.852 485.831L103.199 486.942L102.918 488.849L103.805 488.837L104.063 489.252L103.637 490.352L104.265 491.597L103.917 491.641L103.659 492.516L102.368 493.346L100.786 493.548L100.236 494.546L100.92 494.3L101.302 494.636L100.864 496.105L100.584 495.892L99.8767 496.162L99.3492 495.859L99.192 496.509L98.6757 496.532L98.0135 497.238L98.1033 497.676L97.4973 498.248L97.587 498.775L96.9361 499.695L97.3289 499.796L96.2514 500.368L96.229 501.287L95.6454 501.063L95.3086 501.433L94.5005 501.411L94.2536 501.803L93.7934 501.444L92.9853 501.736L92.7609 502.644L93.1761 502.802L92.7272 503.609L94.1414 504.192L94.1975 504.697L93.7822 504.82L93.6251 505.37L92.9517 504.888L92.7047 505.516L92.1323 505.348L92.065 506.48L91.6722 506.682L90.1682 506.009L90.0111 505.471L90.4039 505.056L89.7305 504.349L89.2815 502.689L90.0223 502.544L90.3141 501.635L90.1009 501.153L89.5172 501.332L88.6979 500.928L88.3051 501.321L87.2725 500.289L86.6664 500.132L86.7562 499.594L85.8807 498.326L84.5339 498.595V499.807L83.8942 500.244L83.1534 499.919L82.7044 500.121L82.5249 499.246L81.9749 498.618L80.8076 498.461L80.774 498.719L80.0332 498.371L79.7638 498.147L79.8087 496.767L79.068 495.511L79.371 495.388L79.3598 494.905L78.8323 494.681L78.8547 494.255L79.1914 494.143L79.3149 494.131L79.7975 493.885L79.7302 492.954L80.1342 492.651L80.5832 492.819L80.5944 492.561L80.9536 493.088L81.6606 492.662L81.4698 491.731L81.829 491.754L81.6494 491.451L82.1769 490.699L81.4025 489.925L81.5709 489.589L81.9861 489.398L82.7157 490.037L82.783 489.533L83.3217 489.286L83.0636 488.837L83.2207 488.097L84.3094 487.862L85.3757 486.28L85.7124 486.179L85.8246 486.628L86.2175 486.673L86.2511 486.112L85.2185 485.585L85.1737 484.452L83.9952 483.442L82.9177 483.263L83.0524 482.612L82.6034 482.803L82.7381 483.297L81.8627 483.745L81.5596 483.24L81.8065 482.691L81.1331 482.646L81.728 483.835L81.0882 484.205L81.2566 484.564L81.5821 484.441L81.3688 485.013L80.8974 484.912L80.9985 485.349L81.4025 485.035L81.5821 486.325L81.3576 486.179L81.0882 486.572L81.6606 486.325L81.7729 486.807H80.9985L80.2577 487.435L79.1914 487.716L79.5506 489.51L79.169 489.645L79.6292 490.015L78.9108 489.679L78.215 489.791L77.9007 488.95L76.9355 489.084L76.8457 490.049L77.2834 490.89L78.6527 492.202L78.0691 492.494L78.0354 492.931L78.0242 492.943L76.6886 493.458L76.4865 492.785L75.2519 492.741L74.9938 491.574L74.5224 492.101L73.5235 492.079L73.4112 492.741L73.1194 492.718L72.5133 493.941L72.345 493.66L71.5032 493.907L71.2114 493.47L70.5268 493.559L70.0217 492.999L69.0901 493.099L68.3045 492.258L67.2719 492.382L66.3291 493.245L65.4761 493.2L65.0945 492.729L64.365 491.911L64.8027 490.408L64.6231 488.366L65.3751 488.119L65.3302 487.648L64.8027 487.065L64.8476 485.248L64.466 485.158L63.2987 482.882ZM80.022 482.814L79.573 482.568L79.4496 481.827L79.921 481.749L80.5495 482.309L80.1006 482.41L80.022 482.814ZM81.7504 482.175L82.0086 482.321L81.3127 482.668L81.5596 482.321L81.7504 482.175ZM78.2374 485.674L78.7313 486.123L79.3486 485.921L79.1578 485.764L79.371 486.089L78.4058 486.325L78.0578 486.011L78.4058 485.831L77.9344 485.955L77.9007 485.63L77.4518 485.955L78.2486 485.618L78.2374 485.674ZM85.2073 484.71L85.6338 484.654L85.2859 484.8L85.2073 484.71Z\" fill=\"#3C484F\" />\n                <path d=\"M78.3487 493.492L78.3599 493.47L77.9129 493.245L77.9017 493.268L78.3487 493.492ZM78.8605 494.008L78.7034 494.064L78.8714 494.535L79.0285 494.479L78.8605 494.008ZM63.2987 482.882L62.912 482.565L62.7043 482.818L62.8538 483.11L63.2987 482.882ZM64.8251 481.02L65.2118 481.337L65.5318 480.946L65.1385 480.63L64.8251 481.02ZM64.365 480.65L63.9618 480.354L63.6789 480.739L64.0516 481.039L64.365 480.65ZM64.9823 479.808L65.3854 480.104L65.5674 479.856L65.428 479.582L64.9823 479.808ZM64.6119 479.079L64.4677 478.6L63.8954 478.773L64.1661 479.306L64.6119 479.079ZM66.1383 478.619L66.2825 479.098L66.8124 478.938L66.6 478.427L66.1383 478.619ZM65.8353 477.89L65.3643 477.722L65.2995 477.904L65.3736 478.082L65.8353 477.89ZM66.2393 476.757L66.7103 476.925L66.967 476.206L66.2047 476.259L66.2393 476.757ZM65.4312 476.814L64.9333 476.767L64.879 477.353L65.4659 477.312L65.4312 476.814ZM65.5322 475.726L65.8076 475.308L65.1115 474.849L65.0344 475.679L65.5322 475.726ZM66.1271 476.118L65.8517 476.535L66.3486 476.863L66.5857 476.317L66.1271 476.118ZM66.3852 475.524L66.7648 475.198L66.2447 474.592L65.9266 475.325L66.3852 475.524ZM66.5872 475.759L66.2077 476.085L66.5125 476.44L66.8871 476.159L66.5872 475.759ZM67.0362 475.423L67.5169 475.285L67.3173 474.587L66.7363 475.023L67.0362 475.423ZM67.126 475.737L66.6453 475.874L66.9243 476.85L67.528 476.034L67.126 475.737ZM67.5076 475.221L67.7647 474.792L67.3755 474.559L67.1056 474.924L67.5076 475.221ZM68.181 475.625L68.6772 475.563L68.6473 475.321L68.4382 475.196L68.181 475.625ZM68.3045 476.623L67.8082 476.684L67.8996 477.423L68.5489 477.059L68.3045 476.623ZM68.7646 476.365L68.8865 475.88L68.6937 475.832L68.5202 475.929L68.7646 476.365ZM70.5941 476.825L71.0195 476.562L70.9129 476.389L70.716 476.34L70.5941 476.825ZM70.9196 477.352L70.4942 477.615L71.0209 478.468L71.3854 477.534L70.9196 477.352ZM71.3573 476.23L71.4511 475.739L71.0427 475.661L70.8915 476.049L71.3573 476.23ZM72.1205 476.376L72.0267 476.867L72.2443 476.909L72.4213 476.776L72.1205 476.376ZM73.7143 475.176L73.8303 474.69L73.6015 474.635L73.4135 474.777L73.7143 475.176ZM74.4663 475.355L74.3502 475.842L74.7598 475.939L74.9258 475.553L74.4663 475.355ZM74.6346 474.963L74.4093 474.517L74.2468 474.599L74.1751 474.766L74.6346 474.963ZM76.812 473.864L77.0373 474.31L77.3595 474.147L77.3066 473.79L76.812 473.864ZM76.7671 473.561L76.9742 473.106L76.1378 472.725L76.2725 473.634L76.7671 473.561ZM78.3945 474.301L78.1875 474.756L78.2993 474.807L78.4219 474.8L78.3945 474.301ZM79.2139 474.256L79.2412 474.756L79.7439 474.728L79.7129 474.226L79.2139 474.256ZM79.1241 472.798L78.7097 472.518L78.6146 472.659L78.625 472.829L79.1241 472.798ZM79.4271 472.349L79.8415 472.629L79.9444 472.477L79.9241 472.294L79.4271 472.349ZM79.3486 471.643L79.8455 471.588L79.8257 471.409L79.6973 471.284L79.3486 471.643ZM78.9221 471.228L78.67 470.796L78.1021 471.128L78.5734 471.586L78.9221 471.228ZM79.921 470.645L80.0988 470.177L79.8754 470.092L79.6689 470.213L79.921 470.645ZM81.0995 471.093L80.9216 471.561L81.1728 471.656L81.3911 471.499L81.0995 471.093ZM81.8178 470.577L82.0322 470.126L81.7657 469.999L81.5261 470.171L81.8178 470.577ZM82.2667 470.79L82.0523 471.242L82.4248 471.419L82.6693 471.087L82.2667 470.79ZM82.8616 469.983L83.2642 470.279L83.3684 470.138L83.3612 469.962L82.8616 469.983ZM82.8167 468.895L82.5856 468.452L82.304 468.598L82.3171 468.916L82.8167 468.895ZM84.1298 468.211L84.4396 467.818L84.1856 467.618L83.8988 467.767L84.1298 468.211ZM85.6226 469.388L85.3129 469.781L85.4023 469.852L85.5135 469.876L85.6226 469.388ZM86.3746 469.557L86.8423 469.38L86.7469 469.128L86.4837 469.069L86.3746 469.557ZM86.947 471.071L86.4793 471.248L86.618 471.615L87.0075 471.567L86.947 471.071ZM88.7877 470.847L89.1669 470.521L88.9926 470.318L88.7272 470.35L88.7877 470.847ZM89.6743 471.878L89.7897 472.365L90.5888 472.175L90.0536 471.553L89.6743 471.878ZM89.0122 472.035L88.8968 471.549L88.3959 471.668L88.5292 472.165L89.0122 472.035ZM89.4723 473.752L89.814 474.117L90.0329 473.912L89.9553 473.622L89.4723 473.752ZM88.7652 474.413L88.4236 474.048L87.8776 474.559L88.5584 474.869L88.7652 474.413ZM89.2591 474.638L89.6052 474.998L90.1377 474.488L89.4659 474.182L89.2591 474.638ZM88.9785 474.907L88.6323 474.546L88.36 474.807L88.5367 475.141L88.9785 474.907ZM89.2815 475.479L88.8397 475.713L88.9884 475.994L89.3059 475.978L89.2815 475.479ZM89.7417 475.456H90.2417V474.931L89.7173 474.957L89.7417 475.456ZM89.7417 476.309H89.2417V476.705L89.6272 476.796L89.7417 476.309ZM90.1233 476.399L90.6126 476.501L90.7129 476.024L90.2378 475.912L90.1233 476.399ZM89.7417 478.216L89.2524 478.113L89.2083 478.323L89.3299 478.499L89.7417 478.216ZM90.3365 479.079L89.9248 479.363L90.1095 479.631L90.4294 479.571L90.3365 479.079ZM90.7518 479.001L91.2054 479.211L91.6146 478.329L90.6589 478.509L90.7518 479.001ZM90.5386 479.461L90.085 479.25L90.0112 479.409L90.0529 479.58L90.5386 479.461ZM90.9314 481.065L90.4457 481.183L90.4692 481.279L90.5271 481.359L90.9314 481.065ZM91.4701 481.805L91.7375 482.227L92.1884 481.942L91.8744 481.511L91.4701 481.805ZM91.1334 482.018L90.866 481.595L90.47 481.846L90.6945 482.257L91.1334 482.018ZM91.2681 482.265L90.8292 482.504L90.9696 482.761L91.2627 482.765L91.2681 482.265ZM92.3119 482.276L92.6581 481.915L92.5152 481.778L92.3173 481.776L92.3119 482.276ZM93.1537 483.083L92.8076 483.444L92.9876 483.617L93.2338 483.577L93.1537 483.083ZM94.8821 482.803L95.2445 483.147L96.2671 482.072L94.8021 482.309L94.8821 482.803ZM94.6689 483.027L94.3065 482.683L93.1515 483.898L94.7834 483.514L94.6689 483.027ZM95.0505 482.938L95.4926 483.171L96.0058 482.199L94.936 482.451L95.0505 482.938ZM94.8372 483.341L94.3951 483.108L94.2546 483.374L94.4239 483.623L94.8372 483.341ZM95.4096 484.183L94.9963 484.464L95.1242 484.652L95.35 484.679L95.4096 484.183ZM96.6218 484.328L96.5621 484.825L96.7256 484.844L96.8688 484.763L96.6218 484.328ZM97.1942 484.003L97.6017 484.293L96.9472 483.568L97.1942 484.003ZM96.8912 484.429L96.4837 484.14L96.3401 484.342L96.4139 484.578L96.8912 484.429ZM97.1605 485.293L96.6832 485.442L96.7962 485.804L97.1754 485.793L97.1605 485.293ZM98.2941 485.259L98.7744 485.12L98.6666 484.748L98.2793 484.76L98.2941 485.259ZM98.4176 485.686L97.9373 485.825L98.2891 487.039L98.8631 485.913L98.4176 485.686ZM98.7319 485.069L98.6997 484.57L98.4156 484.588L98.2863 484.842L98.7319 485.069ZM99.7757 485.001L99.8078 485.5L99.9982 485.488L100.132 485.352L99.7757 485.001ZM100.449 484.317L100.504 483.82L100.263 483.794L100.093 483.966L100.449 484.317ZM101.672 484.452L102.168 484.387L102.118 483.998L101.727 483.955L101.672 484.452ZM101.852 485.831L101.356 485.896L101.382 486.092L101.534 486.217L101.852 485.831ZM103.199 486.942L103.694 487.015L103.735 486.735L103.517 486.556L103.199 486.942ZM102.918 488.849L102.424 488.776L102.338 489.356L102.925 489.349L102.918 488.849ZM103.805 488.837L104.23 488.573L104.081 488.334L103.799 488.337L103.805 488.837ZM104.063 489.252L104.529 489.433L104.62 489.2L104.488 488.988L104.063 489.252ZM103.637 490.352L103.17 490.171L103.09 490.378L103.19 490.577L103.637 490.352ZM104.265 491.597L104.329 492.092L105.03 492.002L104.711 491.371L104.265 491.597ZM103.917 491.641L103.853 491.145L103.53 491.187L103.438 491.5L103.917 491.641ZM103.659 492.516L103.929 492.937L104.086 492.836L104.139 492.658L103.659 492.516ZM102.368 493.346L102.432 493.842L102.544 493.828L102.639 493.767L102.368 493.346ZM100.786 493.548L100.723 493.052L100.47 493.084L100.348 493.307L100.786 493.548ZM100.236 494.546L99.7979 494.305L99.1582 495.466L100.405 495.017L100.236 494.546ZM100.92 494.3L101.251 493.925L101.029 493.729L100.751 493.829L100.92 494.3ZM101.302 494.636L101.781 494.779L101.873 494.472L101.633 494.261L101.302 494.636ZM100.864 496.105L100.562 496.504L101.137 496.94L101.344 496.248L100.864 496.105ZM100.584 495.892L100.886 495.494L100.665 495.326L100.406 495.425L100.584 495.892ZM99.8767 496.162L99.6277 496.595L99.8332 496.713L100.055 496.629L99.8767 496.162ZM99.3492 495.859L99.5981 495.425L99.0197 495.093L98.8631 495.741L99.3492 495.859ZM99.192 496.509L99.2137 497.009L99.5897 496.992L99.678 496.627L99.192 496.509ZM98.6757 496.532L98.6541 496.032L98.4503 496.041L98.3109 496.19L98.6757 496.532ZM98.0135 497.238L97.6487 496.896L97.4717 497.085L97.5238 497.339L98.0135 497.238ZM98.1033 497.676L98.4465 498.039L98.6491 497.848L98.5931 497.575L98.1033 497.676ZM97.4973 498.248L97.1541 497.884L96.9594 498.068L97.0044 498.332L97.4973 498.248ZM97.587 498.775L97.9952 499.064L98.1147 498.895L98.0799 498.691L97.587 498.775ZM96.9361 499.695L96.528 499.406L96.1086 499.998L96.8116 500.179L96.9361 499.695ZM97.3289 499.796L97.5634 500.237L98.7025 499.632L97.4534 499.311L97.3289 499.796ZM96.2514 500.368L96.017 499.926L95.7587 500.063L95.7516 500.355L96.2514 500.368ZM96.229 501.287L96.0496 501.754L96.7115 502.009L96.7288 501.3L96.229 501.287ZM95.6454 501.063L95.8248 500.596L95.5056 500.474L95.2755 500.727L95.6454 501.063ZM95.3086 501.433L95.2948 501.933L95.5241 501.939L95.6785 501.77L95.3086 501.433ZM94.5005 501.411L94.5144 500.911L94.2292 500.903L94.0773 501.145L94.5005 501.411ZM94.2536 501.803L93.9461 502.198L94.3823 502.538L94.6768 502.07L94.2536 501.803ZM93.7934 501.444L94.1009 501.05L93.8833 500.88L93.6237 500.974L93.7934 501.444ZM92.9853 501.736L92.8156 501.266L92.5641 501.356L92.4999 501.616L92.9853 501.736ZM92.7609 502.644L92.2755 502.525L92.169 502.955L92.584 503.112L92.7609 502.644ZM93.1761 502.802L93.6131 503.044L93.8944 502.539L93.353 502.334L93.1761 502.802ZM92.7272 503.609L92.2902 503.366L92.0172 503.857L92.5365 504.071L92.7272 503.609ZM94.1414 504.192L94.6383 504.137L94.6056 503.843L94.332 503.73L94.1414 504.192ZM94.1975 504.697L94.3399 505.176L94.7406 505.057L94.6944 504.642L94.1975 504.697ZM93.7822 504.82L93.6398 504.341L93.3769 504.419L93.3015 504.683L93.7822 504.82ZM93.6251 505.37L93.334 505.777L93.9108 506.19L94.1058 505.507L93.6251 505.37ZM92.9517 504.888L93.2428 504.481L92.7211 504.108L92.4863 504.705L92.9517 504.888ZM92.7047 505.516L92.5638 505.996L93.0027 506.125L93.1701 505.699L92.7047 505.516ZM92.1323 505.348L92.2733 504.868L91.6705 504.691L91.6332 505.318L92.1323 505.348ZM92.065 506.48L92.2936 506.925L92.5472 506.795L92.5641 506.51L92.065 506.48ZM91.6722 506.682L91.4679 507.139L91.6872 507.237L91.9008 507.127L91.6722 506.682ZM90.1682 506.009L89.6882 506.149L89.753 506.371L89.964 506.466L90.1682 506.009ZM90.0111 505.471L89.6479 505.127L89.4507 505.336L89.5311 505.611L90.0111 505.471ZM90.4039 505.056L90.767 505.4L91.0935 505.055L90.7658 504.711L90.4039 505.056ZM89.7305 504.349L89.2478 504.48L89.2809 504.602L89.3685 504.694L89.7305 504.349ZM89.2815 502.689L89.1849 502.199L88.6589 502.302L88.7989 502.82L89.2815 502.689ZM90.0223 502.544L90.1188 503.034L90.4081 502.977L90.4983 502.696L90.0223 502.544ZM90.3141 501.635L90.7901 501.788L90.8483 501.607L90.7714 501.433L90.3141 501.635ZM90.1009 501.153L90.5582 500.951L90.3785 500.544L89.9539 500.675L90.1009 501.153ZM89.5172 501.332L89.2962 501.781L89.4744 501.869L89.6642 501.81L89.5172 501.332ZM88.6979 500.928L88.9189 500.48L88.5977 500.322L88.3445 500.575L88.6979 500.928ZM88.3051 501.321L87.9516 501.675L88.305 502.028L88.6585 501.675L88.3051 501.321ZM87.2725 500.289L87.6259 499.935L87.5296 499.839L87.3979 499.805L87.2725 500.289ZM86.6664 500.132L86.1732 500.05L86.0979 500.501L86.541 500.616L86.6664 500.132ZM86.7562 499.594L87.2494 499.676L87.2827 499.476L87.1676 499.31L86.7562 499.594ZM85.8807 498.326L86.2921 498.042L86.1052 497.772L85.7827 497.836L85.8807 498.326ZM84.5339 498.595L84.4359 498.105L84.0339 498.185V498.595H84.5339ZM84.5339 499.807L84.8161 500.22L85.0339 500.071V499.807H84.5339ZM83.8942 500.244L83.6931 500.702L83.9473 500.814L84.1764 500.657L83.8942 500.244ZM83.1534 499.919L83.3544 499.461L83.151 499.372L82.9483 499.463L83.1534 499.919ZM82.7044 500.121L82.2146 500.221L82.3402 500.833L82.9095 500.577L82.7044 500.121ZM82.5249 499.246L83.0147 499.145L82.9881 499.016L82.901 498.917L82.5249 499.246ZM81.9749 498.618L82.3511 498.289L82.2275 498.147L82.0416 498.122L81.9749 498.618ZM80.8076 498.461L80.8743 497.965L80.3768 497.898L80.3118 498.396L80.8076 498.461ZM80.774 498.719L80.5615 499.171L81.1812 499.462L81.2698 498.784L80.774 498.719ZM80.0332 498.371L79.7132 498.755L79.7626 498.796L79.8208 498.824L80.0332 498.371ZM79.7638 498.147L79.2641 498.131L79.2562 498.375L79.4439 498.531L79.7638 498.147ZM79.8087 496.767L80.3085 496.783L80.3132 496.638L80.2394 496.513L79.8087 496.767ZM79.068 495.511L78.8795 495.048L78.3432 495.266L78.6373 495.765L79.068 495.511ZM79.371 495.388L79.5595 495.851L79.8789 495.721L79.8709 495.376L79.371 495.388ZM79.3598 494.905L79.8597 494.894L79.8521 494.571L79.5555 494.445L79.3598 494.905ZM78.8323 494.681L78.333 494.655L78.3146 495.004L78.6366 495.141L78.8323 494.681ZM78.8547 494.255L78.6967 493.78L78.3733 493.888L78.3554 494.228L78.8547 494.255ZM79.1914 494.143L79.1464 493.645L79.0885 493.65L79.0334 493.668L79.1914 494.143ZM79.3149 494.131L79.3599 494.629L79.4563 494.621L79.5425 494.577L79.3149 494.131ZM79.7975 493.885L80.0252 494.33L80.3201 494.179L80.2962 493.849L79.7975 493.885ZM79.7302 492.954L79.4303 492.554L79.2118 492.717L79.2315 492.99L79.7302 492.954ZM80.1342 492.651L80.3096 492.183L80.0534 492.087L79.8344 492.251L80.1342 492.651ZM80.5832 492.819L80.4077 493.287L81.0528 493.529L81.0827 492.841L80.5832 492.819ZM80.5944 492.561L81.0076 492.28L80.1603 491.036L80.0949 492.539L80.5944 492.561ZM80.9536 493.088L80.5403 493.37L80.8066 493.761L81.2117 493.517L80.9536 493.088ZM81.6606 492.662L81.9188 493.09L82.2214 492.908L82.1505 492.562L81.6606 492.662ZM81.4698 491.731L81.501 491.232L80.8488 491.191L80.98 491.832L81.4698 491.731ZM81.829 491.754L81.7978 492.253L82.7412 492.312L82.2591 491.499L81.829 491.754ZM81.6494 491.451L81.2402 491.163L81.0546 491.428L81.2193 491.706L81.6494 491.451ZM82.1769 490.699L82.5862 490.987L82.8276 490.643L82.5304 490.346L82.1769 490.699ZM81.4025 489.925L80.9553 489.702L80.794 490.024L81.0491 490.279L81.4025 489.925ZM81.5709 489.589L81.3622 489.134L81.2024 489.208L81.1237 489.365L81.5709 489.589ZM81.9861 489.398L82.3157 489.022L82.072 488.809L81.7775 488.944L81.9861 489.398ZM82.7157 490.037L82.3861 490.414L83.0879 491.028L83.2113 490.104L82.7157 490.037ZM82.783 489.533L82.5748 489.078L82.3239 489.193L82.2874 489.467L82.783 489.533ZM83.3217 489.286L83.5299 489.741L84.0287 489.512L83.7551 489.037L83.3217 489.286ZM83.0636 488.837L82.5745 488.734L82.5348 488.921L82.6302 489.087L83.0636 488.837ZM83.2207 488.097L83.115 487.608L82.7988 487.677L82.7316 487.993L83.2207 488.097ZM84.3094 487.862L84.4152 488.35L84.6116 488.308L84.724 488.141L84.3094 487.862ZM85.3757 486.28L85.2321 485.801L85.061 485.852L84.9611 486.001L85.3757 486.28ZM85.7124 486.179L86.1974 486.058L86.0704 485.55L85.5688 485.7L85.7124 486.179ZM85.8246 486.628L85.3396 486.749L85.4237 487.085L85.7679 487.125L85.8246 486.628ZM86.2175 486.673L86.1607 487.169L86.6849 487.229L86.7166 486.703L86.2175 486.673ZM86.2511 486.112L86.7502 486.142L86.7698 485.815L86.4785 485.666L86.2511 486.112ZM85.2185 485.585L84.7189 485.604L84.7305 485.897L84.9912 486.03L85.2185 485.585ZM85.1737 484.452L85.6733 484.432L85.6646 484.214L85.4989 484.072L85.1737 484.452ZM83.9952 483.442L84.3204 483.063L84.2147 482.972L84.0773 482.949L83.9952 483.442ZM82.9177 483.263L82.4281 483.162L82.3227 483.671L82.8356 483.756L82.9177 483.263ZM83.0524 482.612L83.542 482.714L83.7355 481.779L82.8569 482.152L83.0524 482.612ZM82.6034 482.803L82.408 482.343L82.0061 482.513L82.1211 482.935L82.6034 482.803ZM82.7381 483.297L82.9662 483.741L83.3273 483.556L83.2205 483.165L82.7381 483.297ZM81.8627 483.745L81.434 484.003L81.6746 484.403L82.0907 484.19L81.8627 483.745ZM81.5596 483.24L81.1035 483.036L80.9965 483.274L81.131 483.498L81.5596 483.24ZM81.8065 482.691L82.2626 482.896L82.5573 482.24L81.8398 482.192L81.8065 482.691ZM81.1331 482.646L81.1664 482.147L80.2954 482.089L80.686 482.87L81.1331 482.646ZM81.728 483.835L81.9784 484.268L82.3857 484.032L82.1751 483.611L81.728 483.835ZM81.0882 484.205L80.8379 483.772L80.4407 484.002L80.6356 484.417L81.0882 484.205ZM81.2566 484.564L80.8039 484.776L81.0006 485.196L81.4338 485.032L81.2566 484.564ZM81.5821 484.441L82.0506 484.615L82.4356 483.582L81.4049 483.973L81.5821 484.441ZM81.3688 485.013L81.2641 485.502L81.6864 485.592L81.8373 485.187L81.3688 485.013ZM80.8974 484.912L81.0022 484.423L80.2333 484.258L80.4103 485.024L80.8974 484.912ZM80.9985 485.349L80.5113 485.462L80.6874 486.224L81.3053 485.744L80.9985 485.349ZM81.4025 485.035L81.8977 484.966L81.7785 484.109L81.0956 484.64L81.4025 485.035ZM81.5821 486.325L81.3097 486.744L82.2284 487.341L82.0773 486.256L81.5821 486.325ZM81.3576 486.179L81.63 485.76L81.2212 485.494L80.9453 485.896L81.3576 486.179ZM81.0882 486.572L80.676 486.289L79.6966 487.716L81.2861 487.031L81.0882 486.572ZM81.6606 486.325L82.1476 486.212L82.0121 485.629L81.4627 485.866L81.6606 486.325ZM81.7729 486.807V487.307H82.4026L82.2599 486.694L81.7729 486.807ZM80.9985 486.807V486.307H80.815L80.6751 486.426L80.9985 486.807ZM80.2577 487.435L80.3849 487.919L80.4945 487.89L80.581 487.817L80.2577 487.435ZM79.1914 487.716L79.0643 487.232L78.6087 487.352L78.7012 487.814L79.1914 487.716ZM79.5506 489.51L79.7169 489.982L80.126 489.838L80.0409 489.412L79.5506 489.51ZM79.169 489.645L79.0027 489.173L78.1561 489.472L78.8556 490.035L79.169 489.645ZM79.6292 490.015L79.4171 490.468L79.9425 489.625L79.6292 490.015ZM78.9108 489.679L79.1229 489.226L78.9834 489.16L78.8313 489.185L78.9108 489.679ZM78.215 489.791L77.7466 489.966L77.89 490.35L78.2946 490.284L78.215 489.791ZM77.9007 488.95L78.3691 488.775L78.2288 488.399L77.8317 488.454L77.9007 488.95ZM76.9355 489.084L76.8664 488.589L76.4743 488.644L76.4376 489.038L76.9355 489.084ZM76.8457 490.049L76.3478 490.002L76.3342 490.149L76.4021 490.279L76.8457 490.049ZM77.2834 490.89L76.8399 491.121L76.8779 491.194L76.9374 491.251L77.2834 490.89ZM78.6527 492.202L78.8762 492.649L79.511 492.332L78.9987 491.841L78.6527 492.202ZM78.0691 492.494L77.8456 492.047L77.5923 492.173L77.5705 492.455L78.0691 492.494ZM78.0354 492.931L78.3891 493.285L78.5197 493.154L78.5339 492.97L78.0354 492.931ZM78.0242 492.943L78.2043 493.409L78.3031 493.371L78.3779 493.296L78.0242 492.943ZM76.6886 493.458L76.2097 493.602L76.3649 494.119L76.8687 493.925L76.6886 493.458ZM76.4865 492.785L76.9654 492.642L76.8625 492.299L76.5047 492.286L76.4865 492.785ZM75.2519 492.741L74.7637 492.849L74.8473 493.226L75.2337 493.24L75.2519 492.741ZM74.9938 491.574L75.482 491.466L75.2712 490.514L74.621 491.241L74.9938 491.574ZM74.5224 492.101L74.5111 492.601L74.7415 492.606L74.8951 492.435L74.5224 492.101ZM73.5235 492.079L73.5347 491.579L73.1028 491.569L73.0305 491.995L73.5235 492.079ZM73.4112 492.741L73.373 493.239L73.8279 493.274L73.9042 492.824L73.4112 492.741ZM73.1194 492.718L73.1577 492.22L72.8213 492.194L72.6715 492.496L73.1194 492.718ZM72.5133 493.941L72.0847 494.198L72.5553 494.982L72.9613 494.163L72.5133 493.941ZM72.345 493.66L72.7737 493.403L72.5749 493.072L72.2043 493.18L72.345 493.66ZM71.5032 493.907L71.0873 494.185L71.2912 494.49L71.6439 494.387L71.5032 493.907ZM71.2114 493.47L71.6273 493.192L71.4548 492.933L71.1464 492.974L71.2114 493.47ZM70.5268 493.559L70.1552 493.894L70.3311 494.089L70.5917 494.055L70.5268 493.559ZM70.0217 492.999L70.3932 492.664L70.2221 492.474L69.9678 492.501L70.0217 492.999ZM69.0901 493.099L68.7247 493.441L68.8954 493.623L69.144 493.597L69.0901 493.099ZM68.3045 492.258L68.6699 491.917L68.4968 491.732L68.2451 491.762L68.3045 492.258ZM67.2719 492.382L67.2125 491.885L67.0528 491.904L66.9342 492.013L67.2719 492.382ZM66.3291 493.245L66.3028 493.745L66.5122 493.756L66.6668 493.614L66.3291 493.245ZM65.4761 493.2L65.0876 493.515L65.2277 493.688L65.4499 493.7L65.4761 493.2ZM65.0945 492.729L65.483 492.415L65.4756 492.406L65.4678 492.397L65.0945 492.729ZM64.365 491.911L63.8849 491.771L63.8075 492.037L63.9916 492.243L64.365 491.911ZM64.8027 490.408L65.2827 490.547L65.309 490.457L65.3008 490.364L64.8027 490.408ZM64.6231 488.366L64.4672 487.891L64.0903 488.015L64.125 488.41L64.6231 488.366ZM65.3751 488.119L65.531 488.595L65.9107 488.47L65.8728 488.072L65.3751 488.119ZM65.3302 487.648L65.8279 487.601L65.8122 487.436L65.701 487.313L65.3302 487.648ZM64.8027 487.065L64.3028 487.053L64.2979 487.252L64.4318 487.401L64.8027 487.065ZM64.8476 485.248L65.3474 485.26L65.3575 484.854L64.962 484.761L64.8476 485.248ZM64.466 485.158L64.021 485.387L64.1265 485.592L64.3516 485.645L64.466 485.158ZM80.022 482.814L79.7812 483.252L80.3819 483.583L80.5128 482.91L80.022 482.814ZM79.573 482.568L79.0798 482.65L79.1197 482.889L79.3322 483.006L79.573 482.568ZM79.4496 481.827L79.3674 481.334L78.8741 481.416L78.9564 481.909L79.4496 481.827ZM79.921 481.749L80.2539 481.376L80.0751 481.216L79.8388 481.255L79.921 481.749ZM80.5495 482.309L80.6592 482.797L81.6081 482.584L80.8824 481.936L80.5495 482.309ZM80.1006 482.41L79.9908 481.923L79.6721 481.994L79.6098 482.315L80.1006 482.41ZM81.7504 482.175L81.9963 481.74L81.709 481.577L81.4468 481.778L81.7504 482.175ZM82.0086 482.321L82.2321 482.768L83.0731 482.348L82.2545 481.885L82.0086 482.321ZM81.3127 482.668L80.9051 482.379L81.5362 483.116L81.3127 482.668ZM81.5596 482.321L81.256 481.923L81.1958 481.969L81.152 482.031L81.5596 482.321ZM78.2374 485.674L77.7471 485.576L77.6915 485.854L77.9012 486.044L78.2374 485.674ZM78.7313 486.123L78.395 486.493L78.6103 486.689L78.8867 486.598L78.7313 486.123ZM79.3486 485.921L79.504 486.396L80.369 486.113L79.6663 485.535L79.3486 485.921ZM79.1578 485.764L79.4755 485.378L78.7396 486.038L79.1578 485.764ZM79.371 486.089L79.4896 486.575L80.1773 486.407L79.7891 485.815L79.371 486.089ZM78.4058 486.325L78.0707 486.696L78.2672 486.873L78.5243 486.811L78.4058 486.325ZM78.0578 486.011L77.8287 485.566L77.1863 485.898L77.7228 486.382L78.0578 486.011ZM78.4058 485.831L78.6349 486.276L78.2792 485.348L78.4058 485.831ZM77.9344 485.955L77.437 486.006L77.4971 486.586L78.061 486.438L77.9344 485.955ZM77.9007 485.63L78.3981 485.578L78.3089 484.716L77.6074 485.225L77.9007 485.63ZM77.4518 485.955L77.1584 485.55L77.6463 486.415L77.4518 485.955ZM78.2486 485.618L78.7389 485.716L78.9244 484.79L78.0542 485.158L78.2486 485.618ZM85.2073 484.71L85.1422 484.214L84.2156 484.336L84.8311 485.039L85.2073 484.71ZM85.6338 484.654L85.8271 485.115L85.5686 484.158L85.6338 484.654ZM85.2859 484.8L84.9097 485.129L85.1469 485.4L85.4791 485.261L85.2859 484.8ZM63.6854 483.199L65.2118 481.337L64.4385 480.703L62.912 482.565L63.6854 483.199ZM65.1385 480.63L64.6783 480.26L64.0516 481.039L64.5117 481.409L65.1385 480.63ZM64.7681 480.945L65.3854 480.104L64.5791 479.512L63.9618 480.354L64.7681 480.945ZM65.428 479.582L65.0576 478.853L64.1661 479.306L64.5365 480.035L65.428 479.582ZM64.7561 479.558L66.2825 479.098L65.9941 478.141L64.4677 478.6L64.7561 479.558ZM66.6 478.427L66.297 477.698L65.3736 478.082L65.6766 478.811L66.6 478.427ZM66.3062 478.058L66.7103 476.925L65.7684 476.589L65.3643 477.722L66.3062 478.058ZM66.2047 476.259L65.3966 476.315L65.4659 477.312L66.274 477.256L66.2047 476.259ZM65.9291 476.86L66.0301 475.772L65.0344 475.679L64.9333 476.767L65.9291 476.86ZM65.2568 476.143L65.8517 476.535L66.4025 475.701L65.8076 475.308L65.2568 476.143ZM66.5857 476.317L66.8438 475.723L65.9266 475.325L65.6684 475.919L66.5857 476.317ZM66.0057 475.849L66.2077 476.085L66.9668 475.434L66.7648 475.198L66.0057 475.849ZM66.8871 476.159L67.3361 475.823L66.7363 475.023L66.2874 475.359L66.8871 476.159ZM66.5555 475.56L66.6453 475.874L67.6067 475.599L67.5169 475.285L66.5555 475.56ZM67.528 476.034L67.9096 475.518L67.1056 474.924L66.724 475.439L67.528 476.034ZM67.2504 475.65L67.9239 476.053L68.4382 475.196L67.7647 474.792L67.2504 475.65ZM67.6848 475.686L67.8082 476.684L68.8007 476.561L68.6772 475.563L67.6848 475.686ZM68.5489 477.059L69.0091 476.801L68.5202 475.929L68.06 476.187L68.5489 477.059ZM68.6427 476.85L70.4722 477.31L70.716 476.34L68.8865 475.88L68.6427 476.85ZM70.1687 477.088L70.4942 477.615L71.345 477.089L71.0195 476.562L70.1687 477.088ZM71.3854 477.534L71.8231 476.412L70.8915 476.049L70.4538 477.17L71.3854 477.534ZM71.2635 476.721L72.0267 476.867L72.2143 475.885L71.4511 475.739L71.2635 476.721ZM72.4213 476.776L74.0151 475.575L73.4135 474.777L71.8197 475.977L72.4213 476.776ZM73.5982 475.662L74.3502 475.842L74.5823 474.869L73.8303 474.69L73.5982 475.662ZM74.9258 475.553L75.0941 475.16L74.1751 474.766L74.0067 475.158L74.9258 475.553ZM74.8599 475.409L77.0373 474.31L76.5867 473.417L74.4093 474.517L74.8599 475.409ZM77.3066 473.79L77.2617 473.488L76.2725 473.634L76.3174 473.937L77.3066 473.79ZM76.5601 474.016L78.1875 474.756L78.6016 473.846L76.9742 473.106L76.5601 474.016ZM78.4219 474.8L79.2412 474.756L79.1865 473.757L78.3672 473.802L78.4219 474.8ZM79.7129 474.226L79.6231 472.767L78.625 472.829L78.7148 474.287L79.7129 474.226ZM79.5384 473.078L79.8415 472.629L79.0128 472.07L78.7097 472.518L79.5384 473.078ZM79.9241 472.294L79.8455 471.588L78.8516 471.698L78.9302 472.405L79.9241 472.294ZM79.6973 471.284L79.2707 470.87L78.5734 471.586L78.9999 472.001L79.6973 471.284ZM79.1742 471.66L80.1731 471.076L79.6689 470.213L78.67 470.796L79.1742 471.66ZM79.7431 471.112L80.9216 471.561L81.2773 470.626L80.0988 470.177L79.7431 471.112ZM81.3911 471.499L82.1094 470.983L81.5261 470.171L80.8078 470.687L81.3911 471.499ZM81.6034 471.029L82.0523 471.242L82.4811 470.339L82.0322 470.126L81.6034 471.029ZM82.6693 471.087L83.2642 470.279L82.459 469.686L81.8641 470.494L82.6693 471.087ZM83.3612 469.962L83.3163 468.874L82.3171 468.916L82.362 470.003L83.3612 469.962ZM83.0477 469.338L84.3609 468.654L83.8988 467.767L82.5856 468.452L83.0477 469.338ZM83.8201 468.603L85.3129 469.781L85.9323 468.996L84.4396 467.818L83.8201 468.603ZM85.5135 469.876L86.2654 470.045L86.4837 469.069L85.7317 468.901L85.5135 469.876ZM85.9069 469.733L86.4793 471.248L87.4147 470.894L86.8423 469.38L85.9069 469.733ZM87.0075 471.567L88.8482 471.343L88.7272 470.35L86.8865 470.575L87.0075 471.567ZM88.4085 471.172L89.2951 472.204L90.0536 471.553L89.1669 470.521L88.4085 471.172ZM89.559 471.392L88.8968 471.549L89.1275 472.522L89.7897 472.365L89.559 471.392ZM88.5292 472.165L88.9894 473.881L89.9553 473.622L89.4951 471.906L88.5292 472.165ZM89.1307 473.386L88.4236 474.048L89.1069 474.778L89.814 474.117L89.1307 473.386ZM88.5584 474.869L89.0523 475.093L89.4659 474.182L88.972 473.958L88.5584 474.869ZM88.9129 474.277L88.6323 474.546L89.3246 475.268L89.6052 474.998L88.9129 474.277ZM88.5367 475.141L88.8397 475.713L89.7233 475.245L89.4203 474.673L88.5367 475.141ZM89.3059 475.978L89.7661 475.956L89.7173 474.957L89.2571 474.979L89.3059 475.978ZM89.2417 475.456V476.309H90.2417V475.456H89.2417ZM89.6272 476.796L90.0088 476.885L90.2378 475.912L89.8562 475.822L89.6272 476.796ZM89.634 476.296L89.2524 478.113L90.231 478.318L90.6126 476.501L89.634 476.296ZM89.3299 478.499L89.9248 479.363L90.7483 478.796L90.1535 477.932L89.3299 478.499ZM90.4294 479.571L90.8447 479.492L90.6589 478.509L90.2436 478.588L90.4294 479.571ZM90.2982 478.79L90.085 479.25L90.9922 479.671L91.2054 479.211L90.2982 478.79ZM90.0529 479.58L90.4457 481.183L91.417 480.946L91.0242 479.342L90.0529 479.58ZM90.5271 481.359L91.0659 482.099L91.8744 481.511L91.3357 480.77L90.5271 481.359ZM91.2027 481.382L90.866 481.595L91.4008 482.44L91.7375 482.227L91.2027 481.382ZM90.6945 482.257L90.8292 482.504L91.707 482.025L91.5723 481.778L90.6945 482.257ZM91.2627 482.765L92.3065 482.776L92.3173 481.776L91.2735 481.765L91.2627 482.765ZM91.9658 482.637L92.8076 483.444L93.4998 482.723L92.6581 481.915L91.9658 482.637ZM93.2338 483.577L94.9622 483.297L94.8021 482.309L93.0736 482.59L93.2338 483.577ZM94.5197 482.459L94.3065 482.683L95.0313 483.372L95.2445 483.147L94.5197 482.459ZM94.7834 483.514L95.165 483.424L94.936 482.451L94.5544 482.541L94.7834 483.514ZM94.6083 482.704L94.3951 483.108L95.2794 483.575L95.4926 483.171L94.6083 482.704ZM94.4239 483.623L94.9963 484.464L95.823 483.901L95.2506 483.06L94.4239 483.623ZM95.35 484.679L96.5621 484.825L96.6815 483.832L95.4693 483.686L95.35 484.679ZM96.8688 484.763L97.4412 484.438L96.9472 483.568L96.3748 483.894L96.8688 484.763ZM96.7867 483.713L96.4837 484.14L97.2987 484.719L97.6017 484.293L96.7867 483.713ZM96.4139 484.578L96.6832 485.442L97.6379 485.144L97.3685 484.281L96.4139 484.578ZM97.1754 485.793L98.309 485.759L98.2793 484.76L97.1457 484.793L97.1754 485.793ZM97.8139 485.398L97.9373 485.825L98.8978 485.546L98.7744 485.12L97.8139 485.398ZM98.8631 485.913L99.1774 485.296L98.2863 484.842L97.9721 485.459L98.8631 485.913ZM98.764 485.568L99.8078 485.5L99.7435 484.502L98.6997 484.57L98.764 485.568ZM100.132 485.352L100.805 484.668L100.093 483.966L99.4193 484.651L100.132 485.352ZM100.394 484.814L101.618 484.949L101.727 483.955L100.504 483.82L100.394 484.814ZM101.177 484.516L101.356 485.896L102.348 485.767L102.168 484.387L101.177 484.516ZM101.534 486.217L102.881 487.328L103.517 486.556L102.17 485.446L101.534 486.217ZM102.704 486.869L102.424 488.776L103.413 488.921L103.694 487.015L102.704 486.869ZM102.925 489.349L103.811 489.337L103.799 488.337L102.912 488.349L102.925 489.349ZM103.38 489.101L103.639 489.516L104.488 488.988L104.23 488.573L103.38 489.101ZM103.597 489.071L103.17 490.171L104.103 490.532L104.529 489.433L103.597 489.071ZM103.19 490.577L103.819 491.822L104.711 491.371L104.083 490.126L103.19 490.577ZM104.201 491.101L103.853 491.145L103.981 492.137L104.329 492.092L104.201 491.101ZM103.438 491.5L103.179 492.375L104.139 492.658L104.397 491.783L103.438 491.5ZM103.389 492.096L102.098 492.926L102.639 493.767L103.929 492.937L103.389 492.096ZM102.305 492.85L100.723 493.052L100.849 494.044L102.432 493.842L102.305 492.85ZM100.348 493.307L99.7979 494.305L100.674 494.788L101.224 493.789L100.348 493.307ZM100.405 495.017L101.09 494.77L100.751 493.829L100.066 494.076L100.405 495.017ZM100.59 494.675L100.971 495.011L101.633 494.261L101.251 493.925L100.59 494.675ZM100.823 494.493L100.385 495.963L101.344 496.248L101.781 494.779L100.823 494.493ZM101.167 495.707L100.886 495.494L100.281 496.291L100.562 496.504L101.167 495.707ZM100.406 495.425L99.6988 495.694L100.055 496.629L100.762 496.36L100.406 495.425ZM100.126 495.728L99.5981 495.425L99.1002 496.292L99.6277 496.595L100.126 495.728ZM98.8631 495.741L98.706 496.392L99.678 496.627L99.8352 495.976L98.8631 495.741ZM99.1704 496.01L98.6541 496.032L98.6974 497.031L99.2137 497.009L99.1704 496.01ZM98.3109 496.19L97.6487 496.896L98.3784 497.58L99.0406 496.874L98.3109 496.19ZM97.5238 497.339L97.6135 497.776L98.5931 497.575L98.5033 497.138L97.5238 497.339ZM97.7601 497.312L97.1541 497.884L97.8404 498.611L98.4465 498.039L97.7601 497.312ZM97.0044 498.332L97.0941 498.859L98.0799 498.691L97.9902 498.164L97.0044 498.332ZM97.1789 498.486L96.528 499.406L97.3442 499.983L97.9952 499.064L97.1789 498.486ZM96.8116 500.179L97.2044 500.28L97.4534 499.311L97.0605 499.21L96.8116 500.179ZM97.0944 499.354L96.017 499.926L96.4859 500.809L97.5634 500.237L97.0944 499.354ZM95.7516 500.355L95.7291 501.275L96.7288 501.3L96.7513 500.38L95.7516 500.355ZM96.4084 500.821L95.8248 500.596L95.466 501.53L96.0496 501.754L96.4084 500.821ZM95.2755 500.727L94.9388 501.097L95.6785 501.77L96.0152 501.4L95.2755 500.727ZM95.3225 500.933L94.5144 500.911L94.4867 501.911L95.2948 501.933L95.3225 500.933ZM94.0773 501.145L93.8304 501.537L94.6768 502.07L94.9238 501.677L94.0773 501.145ZM94.5611 501.409L94.1009 501.05L93.4859 501.839L93.9461 502.198L94.5611 501.409ZM93.6237 500.974L92.8156 501.266L93.1551 502.206L93.9632 501.915L93.6237 500.974ZM92.4999 501.616L92.2755 502.525L93.2463 502.764L93.4707 501.856L92.4999 501.616ZM92.584 503.112L92.9993 503.269L93.353 502.334L92.9377 502.177L92.584 503.112ZM92.7391 502.559L92.2902 503.366L93.1642 503.852L93.6131 503.044L92.7391 502.559ZM92.5365 504.071L93.9507 504.655L94.332 503.73L92.9178 503.147L92.5365 504.071ZM93.6444 504.248L93.7006 504.752L94.6944 504.642L94.6383 504.137L93.6444 504.248ZM94.0551 504.218L93.6398 504.341L93.9246 505.3L94.3399 505.176L94.0551 504.218ZM93.3015 504.683L93.1443 505.233L94.1058 505.507L94.263 504.958L93.3015 504.683ZM93.9162 504.964L93.2428 504.481L92.6605 505.294L93.334 505.777L93.9162 504.964ZM92.4863 504.705L92.2394 505.333L93.1701 505.699L93.417 505.071L92.4863 504.705ZM92.8457 505.036L92.2733 504.868L91.9914 505.827L92.5638 505.996L92.8457 505.036ZM91.6332 505.318L91.5659 506.451L92.5641 506.51L92.6315 505.377L91.6332 505.318ZM91.8364 506.036L91.4436 506.238L91.9008 507.127L92.2936 506.925L91.8364 506.036ZM91.8764 506.226L90.3724 505.553L89.964 506.466L91.4679 507.139L91.8764 506.226ZM90.6482 505.869L90.491 505.331L89.5311 505.611L89.6882 506.149L90.6482 505.869ZM90.3742 505.815L90.767 505.4L90.0408 504.712L89.6479 505.127L90.3742 505.815ZM90.7658 504.711L90.0924 504.004L89.3685 504.694L90.0419 505.401L90.7658 504.711ZM90.2131 504.219L89.7642 502.559L88.7989 502.82L89.2478 504.48L90.2131 504.219ZM89.3781 503.18L90.1188 503.034L89.9257 502.053L89.1849 502.199L89.3781 503.18ZM90.4983 502.696L90.7901 501.788L89.8381 501.482L89.5462 502.391L90.4983 502.696ZM90.7714 501.433L90.5582 500.951L89.6436 501.355L89.8568 501.837L90.7714 501.433ZM89.9539 500.675L89.3702 500.854L89.6642 501.81L90.2478 501.631L89.9539 500.675ZM89.7382 500.884L88.9189 500.48L88.4769 501.377L89.2962 501.781L89.7382 500.884ZM88.3445 500.575L87.9516 500.967L88.6585 501.675L89.0513 501.282L88.3445 500.575ZM88.6585 500.967L87.6259 499.935L86.919 500.643L87.9516 501.675L88.6585 500.967ZM87.3979 499.805L86.7918 499.648L86.541 500.616L87.1471 500.773L87.3979 499.805ZM87.1596 500.214L87.2494 499.676L86.263 499.511L86.1732 500.05L87.1596 500.214ZM87.1676 499.31L86.2921 498.042L85.4693 498.61L86.3448 499.878L87.1676 499.31ZM85.7827 497.836L84.4359 498.105L84.6319 499.086L85.9787 498.817L85.7827 497.836ZM84.0339 498.595V499.807H85.0339V498.595H84.0339ZM84.2517 499.394L83.612 499.831L84.1764 500.657L84.8161 500.22L84.2517 499.394ZM84.0952 499.786L83.3544 499.461L82.9524 500.377L83.6931 500.702L84.0952 499.786ZM82.9483 499.463L82.4994 499.665L82.9095 500.577L83.3585 500.375L82.9483 499.463ZM83.1942 500.02L83.0147 499.145L82.0351 499.347L82.2146 500.221L83.1942 500.02ZM82.901 498.917L82.3511 498.289L81.5987 498.947L82.1487 499.575L82.901 498.917ZM82.0416 498.122L80.8743 497.965L80.741 498.956L81.9082 499.113L82.0416 498.122ZM80.3118 498.396L80.2782 498.654L81.2698 498.784L81.3034 498.526L80.3118 498.396ZM80.9864 498.266L80.2457 497.918L79.8208 498.824L80.5615 499.171L80.9864 498.266ZM80.3532 497.987L80.0838 497.763L79.4439 498.531L79.7132 498.755L80.3532 497.987ZM80.2636 498.163L80.3085 496.783L79.309 496.751L79.2641 498.131L80.2636 498.163ZM80.2394 496.513L79.4987 495.257L78.6373 495.765L79.378 497.021L80.2394 496.513ZM79.2565 495.974L79.5595 495.851L79.1825 494.925L78.8795 495.048L79.2565 495.974ZM79.8709 495.376L79.8597 494.894L78.8599 494.917L78.8711 495.399L79.8709 495.376ZM79.5555 494.445L79.028 494.221L78.6366 495.141L79.1641 495.365L79.5555 494.445ZM79.3316 494.707L79.354 494.281L78.3554 494.228L78.333 494.655L79.3316 494.707ZM79.0128 494.729L79.3495 494.617L79.0334 493.668L78.6967 493.78L79.0128 494.729ZM79.2364 494.641L79.3599 494.629L79.2699 493.633L79.1464 493.645L79.2364 494.641ZM79.5425 494.577L80.0252 494.33L79.5699 493.439L79.0873 493.686L79.5425 494.577ZM80.2962 493.849L80.2289 492.918L79.2315 492.99L79.2988 493.921L80.2962 493.849ZM80.03 493.354L80.4341 493.051L79.8344 492.251L79.4303 492.554L80.03 493.354ZM79.9588 493.119L80.4077 493.287L80.7586 492.351L80.3096 492.183L79.9588 493.119ZM81.0827 492.841L81.0939 492.583L80.0949 492.539L80.0836 492.797L81.0827 492.841ZM80.1812 492.843L80.5403 493.37L81.3668 492.807L81.0076 492.28L80.1812 492.843ZM81.2117 493.517L81.9188 493.09L81.4025 492.234L80.6954 492.66L81.2117 493.517ZM82.1505 492.562L81.9597 491.631L80.98 491.832L81.1708 492.762L82.1505 492.562ZM81.4386 492.23L81.7978 492.253L81.8602 491.255L81.501 491.232L81.4386 492.23ZM82.2591 491.499L82.0795 491.196L81.2193 491.706L81.3989 492.009L82.2591 491.499ZM82.0586 491.738L82.5862 490.987L81.7677 490.412L81.2402 491.163L82.0586 491.738ZM82.5304 490.346L81.7559 489.572L81.0491 490.279L81.8235 491.053L82.5304 490.346ZM81.8497 490.149L82.018 489.812L81.1237 489.365L80.9553 489.702L81.8497 490.149ZM81.7795 490.043L82.1947 489.853L81.7775 488.944L81.3622 489.134L81.7795 490.043ZM81.6566 489.774L82.3861 490.414L83.0452 489.661L82.3157 489.022L81.6566 489.774ZM83.2113 490.104L83.2786 489.599L82.2874 489.467L82.2201 489.971L83.2113 490.104ZM82.9912 489.987L83.5299 489.741L83.1136 488.831L82.5748 489.078L82.9912 489.987ZM83.7551 489.037L83.497 488.588L82.6302 489.087L82.8884 489.535L83.7551 489.037ZM83.5527 488.941L83.7098 488.201L82.7316 487.993L82.5745 488.734L83.5527 488.941ZM83.3265 488.586L84.4152 488.35L84.2037 487.373L83.115 487.608L83.3265 488.586ZM84.724 488.141L85.7903 486.56L84.9611 486.001L83.8949 487.582L84.724 488.141ZM85.5193 486.759L85.856 486.658L85.5688 485.7L85.2321 485.801L85.5193 486.759ZM85.2273 486.3L85.3396 486.749L86.3097 486.506L86.1974 486.058L85.2273 486.3ZM85.7679 487.125L86.1607 487.169L86.2742 486.176L85.8813 486.131L85.7679 487.125ZM86.7166 486.703L86.7502 486.142L85.752 486.082L85.7184 486.643L86.7166 486.703ZM86.4785 485.666L85.4459 485.139L84.9912 486.03L86.0238 486.557L86.4785 485.666ZM85.7182 485.565L85.6733 484.432L84.6741 484.472L84.7189 485.604L85.7182 485.565ZM85.4989 484.072L84.3204 483.063L83.6699 483.822L84.8484 484.832L85.4989 484.072ZM84.0773 482.949L82.9998 482.77L82.8356 483.756L83.913 483.936L84.0773 482.949ZM83.4073 483.364L83.542 482.714L82.5628 482.511L82.4281 483.162L83.4073 483.364ZM82.8569 482.152L82.408 482.343L82.7989 483.263L83.2478 483.073L82.8569 482.152ZM82.1211 482.935L82.2558 483.428L83.2205 483.165L83.0858 482.671L82.1211 482.935ZM82.5101 482.852L81.6346 483.3L82.0907 484.19L82.9662 483.741L82.5101 482.852ZM82.2913 483.488L81.9883 482.983L81.131 483.498L81.434 484.003L82.2913 483.488ZM82.0157 483.445L82.2626 482.896L81.3505 482.486L81.1035 483.036L82.0157 483.445ZM81.8398 482.192L81.1664 482.147L81.0999 483.145L81.7733 483.19L81.8398 482.192ZM80.686 482.87L81.2808 484.059L82.1751 483.611L81.5803 482.422L80.686 482.87ZM81.4776 483.402L80.8379 483.772L81.3386 484.638L81.9784 484.268L81.4776 483.402ZM80.6356 484.417L80.8039 484.776L81.7093 484.352L81.5409 483.993L80.6356 484.417ZM81.4338 485.032L81.7593 484.908L81.4049 483.973L81.0794 484.096L81.4338 485.032ZM81.1136 484.266L80.9003 484.838L81.8373 485.187L82.0506 484.615L81.1136 484.266ZM81.4736 484.524L81.0022 484.423L80.7927 485.401L81.2641 485.502L81.4736 484.524ZM80.4103 485.024L80.5113 485.462L81.4856 485.237L81.3846 484.799L80.4103 485.024ZM81.3053 485.744L81.7094 485.43L81.0956 484.64L80.6916 484.954L81.3053 485.744ZM80.9073 485.104L81.0869 486.394L82.0773 486.256L81.8977 484.966L80.9073 485.104ZM81.8545 485.906L81.63 485.76L81.0852 486.598L81.3097 486.744L81.8545 485.906ZM80.9453 485.896L80.676 486.289L81.5005 486.855L81.7699 486.462L80.9453 485.896ZM81.2861 487.031L81.8586 486.784L81.4627 485.866L80.8903 486.112L81.2861 487.031ZM81.1737 486.438L81.2859 486.921L82.2599 486.694L82.1476 486.212L81.1737 486.438ZM81.7729 486.307H80.9985V487.307H81.7729V486.307ZM80.6751 486.426L79.9343 487.054L80.581 487.817L81.3218 487.189L80.6751 486.426ZM80.1305 486.952L79.0643 487.232L79.3186 488.199L80.3849 487.919L80.1305 486.952ZM78.7012 487.814L79.0603 489.608L80.0409 489.412L79.6817 487.618L78.7012 487.814ZM79.3843 489.039L79.0027 489.173L79.3353 490.116L79.7169 489.982L79.3843 489.039ZM78.8556 490.035L79.3158 490.405L79.9425 489.625L79.4823 489.255L78.8556 490.035ZM79.8413 489.562L79.1229 489.226L78.6988 490.131L79.4171 490.468L79.8413 489.562ZM78.8313 489.185L78.1354 489.297L78.2946 490.284L78.9904 490.172L78.8313 489.185ZM78.6834 489.616L78.3691 488.775L77.4323 489.125L77.7466 489.966L78.6834 489.616ZM77.8317 488.454L76.8664 488.589L77.0045 489.579L77.9698 489.445L77.8317 488.454ZM76.4376 489.038L76.3478 490.002L77.3435 490.095L77.4333 489.13L76.4376 489.038ZM76.4021 490.279L76.8399 491.121L77.727 490.659L77.2892 489.818L76.4021 490.279ZM76.9374 491.251L78.3067 492.563L78.9987 491.841L77.6294 490.529L76.9374 491.251ZM78.4292 491.755L77.8456 492.047L78.2926 492.941L78.8762 492.649L78.4292 491.755ZM77.5705 492.455L77.5369 492.893L78.5339 492.97L78.5676 492.532L77.5705 492.455ZM77.6817 492.578L77.6705 492.589L78.3779 493.296L78.3891 493.285L77.6817 492.578ZM77.844 492.476L76.5084 492.992L76.8687 493.925L78.2043 493.409L77.844 492.476ZM77.1674 493.315L76.9654 492.642L76.0076 492.929L76.2097 493.602L77.1674 493.315ZM76.5047 492.286L75.2701 492.241L75.2337 493.24L76.4684 493.285L76.5047 492.286ZM75.7401 492.633L75.482 491.466L74.5056 491.682L74.7637 492.849L75.7401 492.633ZM74.621 491.241L74.1497 491.768L74.8951 492.435L75.3665 491.907L74.621 491.241ZM74.5336 491.601L73.5347 491.579L73.5122 492.579L74.5111 492.601L74.5336 491.601ZM73.0305 491.995L72.9183 492.657L73.9042 492.824L74.0164 492.162L73.0305 491.995ZM73.4495 492.242L73.1577 492.22L73.0812 493.217L73.373 493.239L73.4495 492.242ZM72.6715 492.496L72.0654 493.719L72.9613 494.163L73.5674 492.94L72.6715 492.496ZM72.942 493.683L72.7737 493.403L71.9163 493.918L72.0847 494.198L72.942 493.683ZM72.2043 493.18L71.3625 493.427L71.6439 494.387L72.4857 494.14L72.2043 493.18ZM71.9192 493.63L71.6273 493.192L70.7955 493.747L71.0873 494.185L71.9192 493.63ZM71.1464 492.974L70.4618 493.064L70.5917 494.055L71.2764 493.965L71.1464 492.974ZM70.8983 493.225L70.3932 492.664L69.6502 493.333L70.1552 493.894L70.8983 493.225ZM69.9678 492.501L69.0363 492.602L69.144 493.597L70.0755 493.496L69.9678 492.501ZM69.4555 492.758L68.6699 491.917L67.9391 492.6L68.7247 493.441L69.4555 492.758ZM68.2451 491.762L67.2125 491.885L67.3312 492.878L68.3638 492.755L68.2451 491.762ZM66.9342 492.013L65.9914 492.877L66.6668 493.614L67.6096 492.75L66.9342 492.013ZM66.3553 492.746L65.5024 492.701L65.4499 493.7L66.3028 493.745L66.3553 492.746ZM65.8646 492.886L65.483 492.415L64.706 493.044L65.0876 493.515L65.8646 492.886ZM65.4678 492.397L64.7383 491.578L63.9916 492.243L64.7212 493.062L65.4678 492.397ZM64.845 492.05L65.2827 490.547L64.3226 490.268L63.8849 491.771L64.845 492.05ZM65.3008 490.364L65.1212 488.322L64.125 488.41L64.3046 490.451L65.3008 490.364ZM64.779 488.841L65.531 488.595L65.2192 487.644L64.4672 487.891L64.779 488.841ZM65.8728 488.072L65.8279 487.601L64.8324 487.696L64.8773 488.167L65.8728 488.072ZM65.701 487.313L65.1735 486.73L64.4318 487.401L64.9594 487.984L65.701 487.313ZM65.3025 487.077L65.3474 485.26L64.3477 485.236L64.3028 487.053L65.3025 487.077ZM64.962 484.761L64.5804 484.672L64.3516 485.645L64.7332 485.735L64.962 484.761ZM64.9109 484.93L63.7436 482.653L62.8538 483.11L64.021 485.387L64.9109 484.93ZM80.2628 482.376L79.8138 482.129L79.3322 483.006L79.7812 483.252L80.2628 482.376ZM80.0662 482.485L79.9428 481.745L78.9564 481.909L79.0798 482.65L80.0662 482.485ZM79.5317 482.32L80.0031 482.242L79.8388 481.255L79.3674 481.334L79.5317 482.32ZM79.5881 482.122L80.2166 482.683L80.8824 481.936L80.2539 481.376L79.5881 482.122ZM80.4398 481.822L79.9908 481.923L80.2103 482.898L80.6592 482.797L80.4398 481.822ZM79.6098 482.315L79.5312 482.719L80.5128 482.91L80.5913 482.506L79.6098 482.315ZM81.5045 482.61L81.7627 482.756L82.2545 481.885L81.9963 481.74L81.5045 482.61ZM81.7851 481.873L81.0892 482.221L81.5362 483.116L82.2321 482.768L81.7851 481.873ZM81.7204 482.958L81.9673 482.61L81.152 482.031L80.9051 482.379L81.7204 482.958ZM81.8632 482.718L82.054 482.572L81.4468 481.778L81.256 481.923L81.8632 482.718ZM77.9012 486.044L78.395 486.493L79.0675 485.753L78.5736 485.304L77.9012 486.044ZM78.8867 486.598L79.504 486.396L79.1931 485.446L78.5758 485.648L78.8867 486.598ZM79.6663 485.535L79.4755 485.378L78.84 486.15L79.0308 486.307L79.6663 485.535ZM78.7396 486.038L78.9529 486.364L79.7891 485.815L79.5759 485.49L78.7396 486.038ZM79.2525 485.604L78.2872 485.839L78.5243 486.811L79.4896 486.575L79.2525 485.604ZM78.7408 485.954L78.3929 485.64L77.7228 486.382L78.0707 486.696L78.7408 485.954ZM78.287 486.455L78.6349 486.276L78.1766 485.387L77.8287 485.566L78.287 486.455ZM78.2792 485.348L77.8078 485.471L78.061 486.438L78.5324 486.315L78.2792 485.348ZM78.4317 485.903L78.3981 485.578L77.4034 485.681L77.437 486.006L78.4317 485.903ZM77.6074 485.225L77.1584 485.55L77.7451 486.36L78.1941 486.034L77.6074 485.225ZM77.6463 486.415L78.4431 486.079L78.0542 485.158L77.2573 485.494L77.6463 486.415ZM77.7584 485.52L77.7471 485.576L78.7277 485.773L78.7389 485.716L77.7584 485.52ZM85.2725 485.206L85.699 485.149L85.5686 484.158L85.1422 484.214L85.2725 485.206ZM85.4406 484.193L85.0926 484.338L85.4791 485.261L85.8271 485.115L85.4406 484.193ZM85.6621 484.47L85.5836 484.38L84.8311 485.039L84.9097 485.129L85.6621 484.47Z\" fill=\"#FDFDFD\" fillOpacity=\"0.6\" mask=\"url(#path-51-inside-36_10718_32869)\" />\n                <mask id=\"path-53-inside-37_10718_32869\" fill=\"white\">\n                    <path d=\"M21.2102 445.666L22.0744 445.991L23.0509 445.307L23.0733 444.04L22.6692 442.94L23.1406 442.178L22.8376 441.662L23.0845 441.213L23.3202 441.045L24.8915 442.009L26.2496 441.191L27.2036 441.516L27.6638 441.337L28.0005 439.71L29.482 438.476L30.234 436.413L31.1095 436.435L32.0522 437.108L33.1073 436.693L34.0837 435.134L34.0949 434.293L34.6898 433.855L34.2521 431.679L35.3857 431.792L36.1601 432.767L36.5754 432.812L36.9907 432.689L37.3835 431.062L37.7988 430.95L40.4588 432.812L40.8179 434.584L43.2647 436.054L44.0167 435.762L44.5105 434.865L44.185 433.844L44.4095 432.902L45.7227 431.848L46.4747 430.647L46.9573 431.433L48.6857 432.633L49.5051 431.634L50.2346 431.904L51.5141 431.59L53.1303 434.461L53.8486 434.573L54.6118 435.224L55.1842 435.414L55.5771 434.73L56.9015 434.517L59.1799 435.661L60.4257 435.594L62.0644 436.401L61.593 436.772L61.9409 437.074L63.9499 437.68L63.6469 439.89L64.3764 439.441L64.5336 440.596L65.5998 439.071L66.2957 439.082L67.7211 439.912L68.1588 439.677L68.7312 440.439L71.1668 441.381L71.7167 442.066L71.7953 442.828L72.334 443.221L72.4014 443.894L72.8166 444.275L73.8829 444.41L73.3329 444.915L72.3565 444.668L71.8514 445.206L71.4249 444.948L70.8413 445.632L70.123 445.341L69.9209 446.317L66.9579 445.767L65.0162 446.743L64.7019 447.124L65.0498 447.842L63.9499 449.21L63.1194 449.367L62.7939 449.76L62.0307 449.154L61.6603 449.356L60.8298 448.907L60.1676 449.58L60.1227 450.399L60.4706 450.994L59.9543 451.532L58.2708 450.534L57.6871 450.713L57.3392 450.186H56.6545L55.9026 449.491L54.9485 449.637L54.87 449.255L53.568 450.68L52.0865 450.444L50.7621 452.227L52.0304 453.282L51.8284 454.605L50.9192 455.256L50.6948 456.052L51.0651 456.826L50.5152 457.342L49.8305 457.062L48.798 457.432L49.1234 457.836L48.8092 458.509L49.0561 459.148L48.3827 459.35L48.1694 459.922L48.147 460.494L48.7755 460.931L48.5398 461.694L47.698 460.685L46.6879 461.38L46.0818 460.819L45.7115 461.268L45.1727 460.931L44.7799 461.1L43.6463 462.995L42.7709 462.961L42.2995 463.668L41.5699 463.646L41.5138 464.061L40.5037 463.948L40.4027 465.137L39.6394 464.98L39.4037 465.407L38.5171 465.653L38.5732 466.147L38.1691 466.214L38.3599 466.741L38.0232 466.876L37.6978 466.08L37.1141 466.203L36.8335 466.685L36.3958 466.45L35.7673 467.358L36.1152 467.762L35.5653 467.908L35.1163 468.951L32.3328 468.502L31.8278 469.052L29.9422 468.188L29.5606 467.986L28.5729 468.536L27.7648 467.997L27.4393 467.179L28.5953 464.251L25.6547 462.221L26.171 460.819L25.8792 460.527L27.5403 458.654L26.7659 458.632L25.8792 457.993L26.418 456.591L25.6996 456.209L26.3506 455.323L26.4067 454.37L24.2742 454.336L22.8152 453.618H21.9734L21.8836 452.799L20.7612 451.779L19.3358 451.341L19.5715 450.265L19.1338 449.547L21.2102 448.021V445.666Z\" />\n                </mask>\n                <path d=\"M21.2102 445.666L22.0744 445.991L23.0509 445.307L23.0733 444.04L22.6692 442.94L23.1406 442.178L22.8376 441.662L23.0845 441.213L23.3202 441.045L24.8915 442.009L26.2496 441.191L27.2036 441.516L27.6638 441.337L28.0005 439.71L29.482 438.476L30.234 436.413L31.1095 436.435L32.0522 437.108L33.1073 436.693L34.0837 435.134L34.0949 434.293L34.6898 433.855L34.2521 431.679L35.3857 431.792L36.1601 432.767L36.5754 432.812L36.9907 432.689L37.3835 431.062L37.7988 430.95L40.4588 432.812L40.8179 434.584L43.2647 436.054L44.0167 435.762L44.5105 434.865L44.185 433.844L44.4095 432.902L45.7227 431.848L46.4747 430.647L46.9573 431.433L48.6857 432.633L49.5051 431.634L50.2346 431.904L51.5141 431.59L53.1303 434.461L53.8486 434.573L54.6118 435.224L55.1842 435.414L55.5771 434.73L56.9015 434.517L59.1799 435.661L60.4257 435.594L62.0644 436.401L61.593 436.772L61.9409 437.074L63.9499 437.68L63.6469 439.89L64.3764 439.441L64.5336 440.596L65.5998 439.071L66.2957 439.082L67.7211 439.912L68.1588 439.677L68.7312 440.439L71.1668 441.381L71.7167 442.066L71.7953 442.828L72.334 443.221L72.4014 443.894L72.8166 444.275L73.8829 444.41L73.3329 444.915L72.3565 444.668L71.8514 445.206L71.4249 444.948L70.8413 445.632L70.123 445.341L69.9209 446.317L66.9579 445.767L65.0162 446.743L64.7019 447.124L65.0498 447.842L63.9499 449.21L63.1194 449.367L62.7939 449.76L62.0307 449.154L61.6603 449.356L60.8298 448.907L60.1676 449.58L60.1227 450.399L60.4706 450.994L59.9543 451.532L58.2708 450.534L57.6871 450.713L57.3392 450.186H56.6545L55.9026 449.491L54.9485 449.637L54.87 449.255L53.568 450.68L52.0865 450.444L50.7621 452.227L52.0304 453.282L51.8284 454.605L50.9192 455.256L50.6948 456.052L51.0651 456.826L50.5152 457.342L49.8305 457.062L48.798 457.432L49.1234 457.836L48.8092 458.509L49.0561 459.148L48.3827 459.35L48.1694 459.922L48.147 460.494L48.7755 460.931L48.5398 461.694L47.698 460.685L46.6879 461.38L46.0818 460.819L45.7115 461.268L45.1727 460.931L44.7799 461.1L43.6463 462.995L42.7709 462.961L42.2995 463.668L41.5699 463.646L41.5138 464.061L40.5037 463.948L40.4027 465.137L39.6394 464.98L39.4037 465.407L38.5171 465.653L38.5732 466.147L38.1691 466.214L38.3599 466.741L38.0232 466.876L37.6978 466.08L37.1141 466.203L36.8335 466.685L36.3958 466.45L35.7673 467.358L36.1152 467.762L35.5653 467.908L35.1163 468.951L32.3328 468.502L31.8278 469.052L29.9422 468.188L29.5606 467.986L28.5729 468.536L27.7648 467.997L27.4393 467.179L28.5953 464.251L25.6547 462.221L26.171 460.819L25.8792 460.527L27.5403 458.654L26.7659 458.632L25.8792 457.993L26.418 456.591L25.6996 456.209L26.3506 455.323L26.4067 454.37L24.2742 454.336L22.8152 453.618H21.9734L21.8836 452.799L20.7612 451.779L19.3358 451.341L19.5715 450.265L19.1338 449.547L21.2102 448.021V445.666Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-53-inside-37_10718_32869)\" />\n                <mask id=\"path-54-inside-38_10718_32869\" fill=\"white\">\n                    <path d=\"M194.627 263.425L193.28 263.862L192.124 263.762L191.507 264.177L190.564 264.087L190.485 264.58L189.251 265.197L190.542 263.661L191.731 262.909L195.154 263.089L194.627 263.425ZM253.585 243.931L256.054 245.042L257.064 245.849L257.423 246.41L257.401 246.87L257.12 246.904L257.592 247.453L257.839 249.113L257.21 248.822L256.604 246.253L255.089 245.165L254.135 244.963L253.024 243.931L252.956 242.787L253.585 243.931ZM180.552 243.056L182.606 244.526H182.18L182.427 245.008L182.842 244.649L183.953 245.715L184.885 247.408L185.087 249.438L183.819 251.917L183.628 251.087L184.829 247.722L184.559 246.937L184.548 248.036L183.224 249.192L183.325 249.809L181.607 250.84L181.877 250.908L181.462 251.401L181.574 251.749L181.911 251.693L180.99 252.691L180.002 254.766L177.623 256.045L177.275 255.798L177.365 256.224L174.301 257.503L174.256 257.222L172.55 257.862L172.258 257.178L172.067 258.109L170.754 257.469L171.315 257.649L168.846 255.013L169.329 254.923L168.824 254.441L168.711 254.8L168.487 254.632L168.711 256.045L169.957 257.626L169.43 257.312L168.689 256.55L168.453 255.45L168.42 249.562L168.925 246.612L170.013 243.707L172.079 241.408L173.437 240.555L176.4 240.039L177.949 240.779L180.552 243.056ZM155.041 297.96L155.019 298.229L157.656 297.623L157.97 298.139L158.184 297.489L159.104 297.444L161.753 296.019L163.459 296.771L163.268 296.109L164.592 294.202L164.693 291.522L164.042 290.422L164.929 289.435L164.817 287.439L166.063 285.285L165.344 282.571L166.658 281.169L167.522 281.719L167.241 281.797L167.353 282.302L168.644 280.889L169.407 280.586L170.429 281.158L172.112 279.935L172.37 280.104L172.112 280.395L173.616 280.227L174.851 280.99L174.335 281.236L174.559 281.674L175.188 281.55L174.716 281.438L175.109 280.922L173.515 279.498L172.595 279.834L172.976 278.399L172.853 276.997L171.473 275.258L173.403 276.84L174.75 276.997L176.007 276.604L179.318 274.462L183.123 271.31L182.943 272.095L181.26 273.25L181.675 273.643L182.247 273.351L182.214 272.992L182.685 273.004L182.629 272.443L183.1 272.297L183.482 271.546L183.325 271.131L189.116 265.522L190.014 266.083L193.101 265.231L193.673 264.614L194.212 264.648L194.29 264.21L195.368 264.345L195.704 263.885L194.964 263.773L195.502 262.954L197.893 262.449L200.587 261.07L200.957 261.238L200.127 262.382L199.262 262.449L199.341 263.279L200.07 262.472L200.778 262.92L200.733 263.616L201.182 263.279L201.507 263.425L201.26 263.548L201.35 264.524L200.497 265.074L200.261 265.679L201.451 266.812L201.586 266.453L202.338 266.352L203.797 264.816L204.605 264.412L205.076 263.167L203.628 262.191L203.348 261.215L202.854 260.957L203.157 259.937L202.147 261.036L201.238 260.599L209.88 254.149L214.021 252.433L218.601 251.704L219.701 252.063L219.196 252.411L218.5 252.13L217.781 252.669L214.111 253.566L211.945 253.79L212.226 254.071L211.687 254.497L212.821 255.338L212.966 255.058L212.394 254.531L213.528 254.62L215.133 255.405L214.818 256.247L214.122 256.28L213.763 257.525L213.887 258.512L213.023 259.41L212.72 260.554L213.415 260.901L214.369 262.359L214.661 264.861L213.629 265.623L213.718 266.375L213.168 266.151L212.529 265.208L212.001 265.365L211.732 265.018L211.766 265.354L212.315 265.59L212.293 266.61L211.9 265.87L210.89 265.5L209.588 266.195L208.668 267.631L208.657 268.775L208.23 268.742L208.488 270.435L207.961 270.603L208.219 270.749L208.892 270.155L208.802 269.426L209.24 268.652L210.52 268.259L211.451 268.45L212.72 268.046L213.202 268.416L213.528 268.282L213.977 268.584L213.707 268.988L214.044 269.414L215.076 268.674L214.605 269.527L215.245 268.607L215.346 269.112L215.885 268.439L215.727 269.538L216.042 271.086L214.65 273.497L214.964 273.699L216.536 271.467L217.018 268.663L217.737 268.528L219.027 267.082L219.487 267.272L220.464 269.773L220.991 270.222L221.912 270.211L221.654 271.097L222.305 269.886L222.204 268.977L222.798 268.181L222.013 266.61L222.349 266.824L222.114 266.487L223.202 264.21H223.764L223.696 263.885L224.684 262.898L224.965 263.044L224.875 262.786L226.042 261.642L228.354 261.619L230.734 259.567L231.631 259.432L233.281 260.655L234.651 260.666L236.098 260.015L237.288 260.486L238.04 261.462L239.555 262.225L241.699 261.967L242.945 260.688L242.979 259.679L244.426 257.469L243.663 257.234L242.159 258.041L240.79 257.996L246.525 256.011L246.783 256.202L246.413 256.74L246.637 257.626L247.244 257.155L247.401 256.561L246.873 256.112L247.075 255.776L254.472 251.996L256.851 251.917L257.715 252.231L257.67 252.512L257.042 252.254L256.043 252.657L255.145 253.532L256.166 253.858L258.523 255.809L259.41 257.615L258.77 259.028L257.322 258.782L256.638 259.14L256.593 260.049L255.841 261.07L256.492 262.517L256.155 264.692L256.57 265.175L258.22 265.478L259.466 266.274L261.453 265.691L261.711 265.152L262.339 265.096L262.867 263.885L261.644 259.892L262.743 258.12L263.686 258.95L266.739 258.568L268.254 257.357L269.68 254.721L270.342 254.16L271.083 254.217L270.892 255.046L272.183 255.058L272.721 256.303L273.17 256.28L272.811 256.134L272.867 254.912L271.116 253.353L270.982 253.678L270.825 253.465L271.217 251.816L270.858 250.56L271.027 250.111L270.252 248.474L269.769 248.036L269.422 248.227L269.523 249.483L268.569 248.844L268.4 245.86L265.763 241.542L265.662 240.813L265.044 240.252L265.157 239.456L264.752 239.007L265.022 237.392L266.054 236.461L266.885 236.764L268.512 236.618L268.411 237.459L269.365 237.774L269.646 237.448L268.782 235.654L268.838 235.048L269.545 235.239L269.085 233.096L270.162 231.874L271.801 232.592L272.239 231.762L272.845 232.872L273.765 232.816L274.169 233.545L275.235 233.848L277.211 233.971L279.714 234.756L286.111 235.261L287.29 235.642L287.301 236.394L287.424 235.609L291.959 237.359L298.569 240.701L299.568 241.789L299.344 242.114L299.714 241.901L302.374 244.212L303.07 245.692L302.161 246.589L301.656 247.879L301.869 249.797L301.566 250.425L300.298 251.312L300.971 253.05L300.668 253.678L301.667 254.508L301.959 253.701L302.576 254.003L304.462 255.809L306 255.619L307.088 256.303L307.077 257.301L308.48 258.086L308.11 259.275L309.232 261.911L308.94 263.055L307.425 264.58L306.078 265.388L305.337 265.343L304.013 264.535L303.149 264.917L301.633 264.939L300.163 266.195L300.376 269.201L299.209 269.672L298.895 270.559L294.933 272.858L295.382 275.236L293.373 277.647L293.463 278.746L291.768 277.939L290.477 278.32L288.468 280.362L287.144 283.244L286.953 286.082L277.94 292.385L276.975 294.101L275.718 293.899L274.382 294.707L273.485 294.404L230.823 294.887L219.746 294.572L200.194 292.856L195.985 296.255L195.087 296.345L195.267 298.947L174.155 312.44L172.011 312.014L170.496 312.159L169.351 311.778L167.533 311.924L164.873 314.302L164.076 315.726L165.064 317.386L164.649 317.768L161.966 317.521L159.721 317.835L153.874 313.113L151.753 314.01L149.407 312.294L147.993 312.911L147.386 312.821L144.064 310.41L139.597 309.142L138.138 307.101L136.208 306.607L136.904 305.026L137.465 304.768L138.048 301.863L139.227 301.515L138.396 301.269L137.353 298.936L138.374 298.061L138.239 296.692L138.699 296.434L137.656 294.472L136.847 293.72L136.948 293.103L137.521 292.643L136.69 293.069L135.804 292.071L135.849 291.566L134.715 291.084L133.278 291.252L132.594 290.456L132.616 289.121L134.053 283.267L135.119 280.777L135.512 280.608L135.4 281.315L135.815 280.474L136.073 280.53L135.602 280.059L135.31 280.171L135.882 278.399L135.343 276.873L135.792 276.032L136.421 276.043L136.051 275.55L136.926 275.281L136.107 275.067L135.837 275.292L135.882 274.036L137.386 272.734L136.196 272.992L136.342 268.887L136.028 266.902L134.547 265.063L129.586 260.789L128.486 259.432L128.475 258.815L129.99 258.804L134.726 261.765L140.091 261.709L144.255 262.068L146.837 262.651L150.675 264.446L149.743 264.019L149.485 264.423L150.686 266.038L150.709 266.779L151.629 267.328L153.099 269.549L154.828 270.85L154.906 271.22L154.323 271.445L154.805 271.31L154.962 273.194L156.051 275.494L155.984 277.423L153.919 277.457L152.729 277.053L152.931 277.412L151.012 278.051L150.249 277.916L149.384 278.69L147.914 278.926L147.802 278.533L146.646 278.847L145.119 280.014L144.783 279.868L144.592 280.294L145.03 280.204L145.232 280.743L144.906 282.493L144.558 282.302L143.75 282.661L142.459 284.153L141.876 285.588L141.741 287.495L141.112 287.944L141.416 287.63L141.831 288.089L142.055 287.899L143.761 289.334L147.274 291.252L147.162 293.17L147.97 293.899L148.947 296.692L150.585 297.578L150.709 297.892L150.237 298.33L154.514 297.175L154.985 297.208L155.322 297.691L155.041 297.96ZM255.785 217.495L255.751 218.369L256.503 218.706L258.119 220.355L260.039 223.708L261.666 225.122L261.644 225.682L263.024 226.557L263.608 226.4L263.574 226.972L264.102 227.724L265.965 229.9L266.829 230.236L266.896 231.313L267.682 233.231L267.053 234.263L267.222 235.317L266.268 234.734L266.582 235.485L265.819 235.519L265.628 235.889L265.235 235.631L265.403 236.08L264.696 235.8L264.91 236.282L263.327 235.16L263.596 235.912L262.968 235.71L263.192 236.573L262.687 236.383L262.497 235.755L261.599 235.912L259.904 235.34L260.162 234.644L259.848 234.296L259.926 233.467L260.173 233.848L260.959 233.702L259.702 231.896L258.658 231.111L258.557 231.38L257.738 231.033L257.3 231.246L256.907 230.696L256.222 230.674L255.055 229.866L256.615 231.975L255.695 231.952L255.078 230.528L253.619 229.328L251.98 226.961L252.339 226.075L251.542 225.772L252.406 225.503L251.823 225.054L252.193 224.875L252.103 224.494L251.699 224.864L251.509 224.168L251.295 224.449L250.992 224.247L251.733 223.742L251.037 223.136L250.846 223.428L250.891 222.968L250.431 222.946L250.521 222.508L252.081 222.822L253.248 223.776L253.787 223.675L253.798 223.013L251.531 221.174L251.34 220.568L252.429 221.05V220.433L253.495 219.715L253.607 218.448L254.685 218.369L255.785 217.495Z\" />\n                </mask>\n                <path d=\"M194.627 263.425L193.28 263.862L192.124 263.762L191.507 264.177L190.564 264.087L190.485 264.58L189.251 265.197L190.542 263.661L191.731 262.909L195.154 263.089L194.627 263.425ZM253.585 243.931L256.054 245.042L257.064 245.849L257.423 246.41L257.401 246.87L257.12 246.904L257.592 247.453L257.839 249.113L257.21 248.822L256.604 246.253L255.089 245.165L254.135 244.963L253.024 243.931L252.956 242.787L253.585 243.931ZM180.552 243.056L182.606 244.526H182.18L182.427 245.008L182.842 244.649L183.953 245.715L184.885 247.408L185.087 249.438L183.819 251.917L183.628 251.087L184.829 247.722L184.559 246.937L184.548 248.036L183.224 249.192L183.325 249.809L181.607 250.84L181.877 250.908L181.462 251.401L181.574 251.749L181.911 251.693L180.99 252.691L180.002 254.766L177.623 256.045L177.275 255.798L177.365 256.224L174.301 257.503L174.256 257.222L172.55 257.862L172.258 257.178L172.067 258.109L170.754 257.469L171.315 257.649L168.846 255.013L169.329 254.923L168.824 254.441L168.711 254.8L168.487 254.632L168.711 256.045L169.957 257.626L169.43 257.312L168.689 256.55L168.453 255.45L168.42 249.562L168.925 246.612L170.013 243.707L172.079 241.408L173.437 240.555L176.4 240.039L177.949 240.779L180.552 243.056ZM155.041 297.96L155.019 298.229L157.656 297.623L157.97 298.139L158.184 297.489L159.104 297.444L161.753 296.019L163.459 296.771L163.268 296.109L164.592 294.202L164.693 291.522L164.042 290.422L164.929 289.435L164.817 287.439L166.063 285.285L165.344 282.571L166.658 281.169L167.522 281.719L167.241 281.797L167.353 282.302L168.644 280.889L169.407 280.586L170.429 281.158L172.112 279.935L172.37 280.104L172.112 280.395L173.616 280.227L174.851 280.99L174.335 281.236L174.559 281.674L175.188 281.55L174.716 281.438L175.109 280.922L173.515 279.498L172.595 279.834L172.976 278.399L172.853 276.997L171.473 275.258L173.403 276.84L174.75 276.997L176.007 276.604L179.318 274.462L183.123 271.31L182.943 272.095L181.26 273.25L181.675 273.643L182.247 273.351L182.214 272.992L182.685 273.004L182.629 272.443L183.1 272.297L183.482 271.546L183.325 271.131L189.116 265.522L190.014 266.083L193.101 265.231L193.673 264.614L194.212 264.648L194.29 264.21L195.368 264.345L195.704 263.885L194.964 263.773L195.502 262.954L197.893 262.449L200.587 261.07L200.957 261.238L200.127 262.382L199.262 262.449L199.341 263.279L200.07 262.472L200.778 262.92L200.733 263.616L201.182 263.279L201.507 263.425L201.26 263.548L201.35 264.524L200.497 265.074L200.261 265.679L201.451 266.812L201.586 266.453L202.338 266.352L203.797 264.816L204.605 264.412L205.076 263.167L203.628 262.191L203.348 261.215L202.854 260.957L203.157 259.937L202.147 261.036L201.238 260.599L209.88 254.149L214.021 252.433L218.601 251.704L219.701 252.063L219.196 252.411L218.5 252.13L217.781 252.669L214.111 253.566L211.945 253.79L212.226 254.071L211.687 254.497L212.821 255.338L212.966 255.058L212.394 254.531L213.528 254.62L215.133 255.405L214.818 256.247L214.122 256.28L213.763 257.525L213.887 258.512L213.023 259.41L212.72 260.554L213.415 260.901L214.369 262.359L214.661 264.861L213.629 265.623L213.718 266.375L213.168 266.151L212.529 265.208L212.001 265.365L211.732 265.018L211.766 265.354L212.315 265.59L212.293 266.61L211.9 265.87L210.89 265.5L209.588 266.195L208.668 267.631L208.657 268.775L208.23 268.742L208.488 270.435L207.961 270.603L208.219 270.749L208.892 270.155L208.802 269.426L209.24 268.652L210.52 268.259L211.451 268.45L212.72 268.046L213.202 268.416L213.528 268.282L213.977 268.584L213.707 268.988L214.044 269.414L215.076 268.674L214.605 269.527L215.245 268.607L215.346 269.112L215.885 268.439L215.727 269.538L216.042 271.086L214.65 273.497L214.964 273.699L216.536 271.467L217.018 268.663L217.737 268.528L219.027 267.082L219.487 267.272L220.464 269.773L220.991 270.222L221.912 270.211L221.654 271.097L222.305 269.886L222.204 268.977L222.798 268.181L222.013 266.61L222.349 266.824L222.114 266.487L223.202 264.21H223.764L223.696 263.885L224.684 262.898L224.965 263.044L224.875 262.786L226.042 261.642L228.354 261.619L230.734 259.567L231.631 259.432L233.281 260.655L234.651 260.666L236.098 260.015L237.288 260.486L238.04 261.462L239.555 262.225L241.699 261.967L242.945 260.688L242.979 259.679L244.426 257.469L243.663 257.234L242.159 258.041L240.79 257.996L246.525 256.011L246.783 256.202L246.413 256.74L246.637 257.626L247.244 257.155L247.401 256.561L246.873 256.112L247.075 255.776L254.472 251.996L256.851 251.917L257.715 252.231L257.67 252.512L257.042 252.254L256.043 252.657L255.145 253.532L256.166 253.858L258.523 255.809L259.41 257.615L258.77 259.028L257.322 258.782L256.638 259.14L256.593 260.049L255.841 261.07L256.492 262.517L256.155 264.692L256.57 265.175L258.22 265.478L259.466 266.274L261.453 265.691L261.711 265.152L262.339 265.096L262.867 263.885L261.644 259.892L262.743 258.12L263.686 258.95L266.739 258.568L268.254 257.357L269.68 254.721L270.342 254.16L271.083 254.217L270.892 255.046L272.183 255.058L272.721 256.303L273.17 256.28L272.811 256.134L272.867 254.912L271.116 253.353L270.982 253.678L270.825 253.465L271.217 251.816L270.858 250.56L271.027 250.111L270.252 248.474L269.769 248.036L269.422 248.227L269.523 249.483L268.569 248.844L268.4 245.86L265.763 241.542L265.662 240.813L265.044 240.252L265.157 239.456L264.752 239.007L265.022 237.392L266.054 236.461L266.885 236.764L268.512 236.618L268.411 237.459L269.365 237.774L269.646 237.448L268.782 235.654L268.838 235.048L269.545 235.239L269.085 233.096L270.162 231.874L271.801 232.592L272.239 231.762L272.845 232.872L273.765 232.816L274.169 233.545L275.235 233.848L277.211 233.971L279.714 234.756L286.111 235.261L287.29 235.642L287.301 236.394L287.424 235.609L291.959 237.359L298.569 240.701L299.568 241.789L299.344 242.114L299.714 241.901L302.374 244.212L303.07 245.692L302.161 246.589L301.656 247.879L301.869 249.797L301.566 250.425L300.298 251.312L300.971 253.05L300.668 253.678L301.667 254.508L301.959 253.701L302.576 254.003L304.462 255.809L306 255.619L307.088 256.303L307.077 257.301L308.48 258.086L308.11 259.275L309.232 261.911L308.94 263.055L307.425 264.58L306.078 265.388L305.337 265.343L304.013 264.535L303.149 264.917L301.633 264.939L300.163 266.195L300.376 269.201L299.209 269.672L298.895 270.559L294.933 272.858L295.382 275.236L293.373 277.647L293.463 278.746L291.768 277.939L290.477 278.32L288.468 280.362L287.144 283.244L286.953 286.082L277.94 292.385L276.975 294.101L275.718 293.899L274.382 294.707L273.485 294.404L230.823 294.887L219.746 294.572L200.194 292.856L195.985 296.255L195.087 296.345L195.267 298.947L174.155 312.44L172.011 312.014L170.496 312.159L169.351 311.778L167.533 311.924L164.873 314.302L164.076 315.726L165.064 317.386L164.649 317.768L161.966 317.521L159.721 317.835L153.874 313.113L151.753 314.01L149.407 312.294L147.993 312.911L147.386 312.821L144.064 310.41L139.597 309.142L138.138 307.101L136.208 306.607L136.904 305.026L137.465 304.768L138.048 301.863L139.227 301.515L138.396 301.269L137.353 298.936L138.374 298.061L138.239 296.692L138.699 296.434L137.656 294.472L136.847 293.72L136.948 293.103L137.521 292.643L136.69 293.069L135.804 292.071L135.849 291.566L134.715 291.084L133.278 291.252L132.594 290.456L132.616 289.121L134.053 283.267L135.119 280.777L135.512 280.608L135.4 281.315L135.815 280.474L136.073 280.53L135.602 280.059L135.31 280.171L135.882 278.399L135.343 276.873L135.792 276.032L136.421 276.043L136.051 275.55L136.926 275.281L136.107 275.067L135.837 275.292L135.882 274.036L137.386 272.734L136.196 272.992L136.342 268.887L136.028 266.902L134.547 265.063L129.586 260.789L128.486 259.432L128.475 258.815L129.99 258.804L134.726 261.765L140.091 261.709L144.255 262.068L146.837 262.651L150.675 264.446L149.743 264.019L149.485 264.423L150.686 266.038L150.709 266.779L151.629 267.328L153.099 269.549L154.828 270.85L154.906 271.22L154.323 271.445L154.805 271.31L154.962 273.194L156.051 275.494L155.984 277.423L153.919 277.457L152.729 277.053L152.931 277.412L151.012 278.051L150.249 277.916L149.384 278.69L147.914 278.926L147.802 278.533L146.646 278.847L145.119 280.014L144.783 279.868L144.592 280.294L145.03 280.204L145.232 280.743L144.906 282.493L144.558 282.302L143.75 282.661L142.459 284.153L141.876 285.588L141.741 287.495L141.112 287.944L141.416 287.63L141.831 288.089L142.055 287.899L143.761 289.334L147.274 291.252L147.162 293.17L147.97 293.899L148.947 296.692L150.585 297.578L150.709 297.892L150.237 298.33L154.514 297.175L154.985 297.208L155.322 297.691L155.041 297.96ZM255.785 217.495L255.751 218.369L256.503 218.706L258.119 220.355L260.039 223.708L261.666 225.122L261.644 225.682L263.024 226.557L263.608 226.4L263.574 226.972L264.102 227.724L265.965 229.9L266.829 230.236L266.896 231.313L267.682 233.231L267.053 234.263L267.222 235.317L266.268 234.734L266.582 235.485L265.819 235.519L265.628 235.889L265.235 235.631L265.403 236.08L264.696 235.8L264.91 236.282L263.327 235.16L263.596 235.912L262.968 235.71L263.192 236.573L262.687 236.383L262.497 235.755L261.599 235.912L259.904 235.34L260.162 234.644L259.848 234.296L259.926 233.467L260.173 233.848L260.959 233.702L259.702 231.896L258.658 231.111L258.557 231.38L257.738 231.033L257.3 231.246L256.907 230.696L256.222 230.674L255.055 229.866L256.615 231.975L255.695 231.952L255.078 230.528L253.619 229.328L251.98 226.961L252.339 226.075L251.542 225.772L252.406 225.503L251.823 225.054L252.193 224.875L252.103 224.494L251.699 224.864L251.509 224.168L251.295 224.449L250.992 224.247L251.733 223.742L251.037 223.136L250.846 223.428L250.891 222.968L250.431 222.946L250.521 222.508L252.081 222.822L253.248 223.776L253.787 223.675L253.798 223.013L251.531 221.174L251.34 220.568L252.429 221.05V220.433L253.495 219.715L253.607 218.448L254.685 218.369L255.785 217.495Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-54-inside-38_10718_32869)\" />\n                <path d=\"M137.88 635.658L138.25 635.905L140.192 635.333L141.292 635.512L142.19 636.622L141.932 637.811L141.135 637.385L140.832 638.473L140.383 638.395L140.181 637.789L139.272 637.912L139.159 639.337L139.788 639.909L139.642 641.715L140.506 641.748L141.943 643.229L142.358 644.967L141.314 646.022L140.506 645.842L140.215 645.281L139.911 646.47L138.542 646.425L137.061 646.852L136.14 647.794L134.737 648.029L134.041 648.534L132.616 648.22L132.302 647.783L132.784 646.448L131.606 645.898L130.933 645.18L129.776 644.855L130.326 644.384L130.966 644.788L131.696 644.463L133.929 640.806L134.367 641.479L134.894 641.21L135.198 641.591L134.793 641.647L134.962 641.916L135.377 641.995L135.804 641.501L135.624 640.335L135.938 639.976L136.746 640.357L137.555 639.797L138.295 640.111L138.531 639.898L138.744 637.396L137.801 636.51L137.88 635.658Z\" fill=\"#3C484F\" />\n                <path d=\"M138.09 636.098L138.112 636.113L138.209 636.177L138.321 636.144L140.208 635.588L141.158 635.743L141.92 636.686L141.758 637.435L141.253 637.165L140.978 637.018L140.894 637.318L140.652 638.188L140.573 638.174L140.418 637.71L140.352 637.513L140.147 637.541L139.238 637.665L139.038 637.692L139.023 637.893L138.91 639.317L138.901 639.439L138.991 639.522L139.529 640.011L139.393 641.694L139.372 641.954L139.632 641.964L140.397 641.994L141.716 643.354L142.083 644.89L141.234 645.748L140.674 645.623L140.436 645.166L140.134 644.585L139.972 645.22L139.719 646.214L138.55 646.176L138.511 646.174L138.473 646.185L136.992 646.611L136.928 646.63L136.882 646.677L136.018 647.561L134.696 647.783L134.638 647.792L134.591 647.827L133.986 648.266L132.763 647.996L132.582 647.744L133.02 646.533L133.097 646.318L132.89 646.221L131.755 645.692L131.115 645.009L131.106 644.999L131.798 644.691L131.869 644.659L131.909 644.593L133.936 641.275L134.157 641.615L134.28 641.804L134.481 641.702L134.52 641.682L134.582 641.78L134.75 642.049L134.808 642.142L134.915 642.162L135.331 642.241L135.472 642.267L135.566 642.158L135.993 641.665L136.068 641.578L136.051 641.463L135.889 640.412L136.002 640.283L136.64 640.584L136.77 640.645L136.889 640.563L137.584 640.081L138.198 640.341L138.345 640.403L138.463 640.296L138.699 640.083L138.772 640.017L138.78 639.919L138.993 637.418L139.004 637.297L138.915 637.214L138.062 636.412L138.09 636.098ZM130.528 644.807L130.294 644.741L130.349 644.694L130.528 644.807Z\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" strokeWidth=\"0.5\" />\n                <mask id=\"path-57-inside-39_10718_32869\" fill=\"white\">\n                    <path d=\"M392.837 463.926L395.43 464.566L397.484 464.341L399.179 465.025L408.236 465.283L411.008 465.059L412.019 466.17L418.495 467.594L419.999 468.76L422.041 469.747L426.318 475.815L428.933 475.479L433.411 474.301L433.894 474.492L436.61 478.115L437.205 478.294L443.378 476.556L446.565 476.23L447.048 475.636L447.025 474.884L449.214 474.301L450.19 476.152L448.956 478.418L449.809 479.135L449.696 480.235L450.516 480.762L450.437 481.917L451.178 484.138L450.549 485.54L450.011 485.764L450.583 486.527L453.198 486.561L454.758 483.7L456.139 482.007L457.542 481.547L458.597 482.366L459.282 482.287L460.078 481.581L460.808 481.794L461.01 483.128L460.651 483.622L461.156 485.237L460.954 485.652L461.695 486.931L462.649 487.346L462.94 488.03L462.716 489.791L461.526 490.711L463.479 490.778L463.412 492.673L463.872 494.502L463.445 496.24L464.736 497.721L465.062 498.831L464.68 499.414L464.063 499.616L463.906 500.334L464.837 501.209L464.22 502.073L465.118 504.282L465.073 504.607L463.659 504.888L461.335 506.009L459.753 508.006L459.416 507.591L458.305 507.288L456.004 508.477L454.792 508.264L452.233 508.656L452.345 509.823L451.604 510.642L450.965 510.384L450.65 509.397L449.595 509.285L448.9 509.655L445.937 512.56L446.082 513.322L445.375 514.287L445.532 514.825L444.522 515.824L444.769 516.149L443.927 516.452L443.131 516.284L441.548 515.128L441.795 514.444L441.368 514.22L438.551 513.614L438.001 512.19L438.832 511.651L438.91 510.933L436.8 510.877L436.767 509.61L435.835 508.668L434.488 508.713L433.927 508.152L433.13 508.275L432.872 507.198L431.828 506.167L431.537 504.899L431.088 504.854L430.482 505.505L430.785 506.436L428.843 507.019L428.282 507.557L428.45 508.185L427.496 508.286L426.16 509.363L425.689 509.509L425.364 508.903L424.993 509.06L424.499 509.43L424.724 509.991L422.95 511.079L422.748 511.92L420.975 512.481L420.818 513.143L419.864 513.827L419.09 514.152L418.27 513.693L417.608 514.231L416.856 514.343L416.373 513.995L416.115 514.5L415.554 514.164L413.668 514.534L413.242 514.848L412.849 516.261L410.436 516.867L409.527 516.149L409.482 515.151L408.898 515.79L407.742 515.857L407.765 516.822L408.595 517.315L407.776 517.529L407.922 518.145L407.754 518.504L407.417 518.37L407.058 519.245L398.135 511.64L396.081 509.352L395.43 507.557L396.9 507.658L397.271 508.129L398.023 507.658L398.775 506.649L399.01 505.617L398.842 504.865L398.292 504.675L399.515 504.013L399.471 503.576L397.922 504.136L397.248 505.112L395.666 505.404L393.881 504.978L393.825 506.099L389.571 508.062L389.336 503.553L389.47 502.555L390.525 501.826L390.334 500.682L389.582 500.278L389.336 499.078L388.628 498.326L388.426 499.078L387.91 497.552L386.384 497.541L387.068 495.657L386.451 494.636L385.867 494.603L386.215 493.324L385.486 492.27L385.385 491.384L384.756 491.215L385.968 489.522L386.72 489.275L385.216 488.445L384.981 487.637L385.317 487.222L384.633 486.157L384.981 485.719L385.991 486.033L386.552 485.753L386.283 484.037L387.798 482.31L387.686 481.48L388.898 481.266L389.493 480.56L390.559 480.582L392.04 479.696L393.466 480.044L394.397 479.517L394.229 478.754L392.837 477.52L392.703 476.264L393.017 475.625L392.299 475.042L390.929 475.961L390.503 475.165L392.186 473.157L392.95 472.989L393.937 471.901V468.615L393.387 467.942L393.443 466.685L392.837 463.926Z\" />\n                </mask>\n                <path d=\"M392.837 463.926L395.43 464.566L397.484 464.341L399.179 465.025L408.236 465.283L411.008 465.059L412.019 466.17L418.495 467.594L419.999 468.76L422.041 469.747L426.318 475.815L428.933 475.479L433.411 474.301L433.894 474.492L436.61 478.115L437.205 478.294L443.378 476.556L446.565 476.23L447.048 475.636L447.025 474.884L449.214 474.301L450.19 476.152L448.956 478.418L449.809 479.135L449.696 480.235L450.516 480.762L450.437 481.917L451.178 484.138L450.549 485.54L450.011 485.764L450.583 486.527L453.198 486.561L454.758 483.7L456.139 482.007L457.542 481.547L458.597 482.366L459.282 482.287L460.078 481.581L460.808 481.794L461.01 483.128L460.651 483.622L461.156 485.237L460.954 485.652L461.695 486.931L462.649 487.346L462.94 488.03L462.716 489.791L461.526 490.711L463.479 490.778L463.412 492.673L463.872 494.502L463.445 496.24L464.736 497.721L465.062 498.831L464.68 499.414L464.063 499.616L463.906 500.334L464.837 501.209L464.22 502.073L465.118 504.282L465.073 504.607L463.659 504.888L461.335 506.009L459.753 508.006L459.416 507.591L458.305 507.288L456.004 508.477L454.792 508.264L452.233 508.656L452.345 509.823L451.604 510.642L450.965 510.384L450.65 509.397L449.595 509.285L448.9 509.655L445.937 512.56L446.082 513.322L445.375 514.287L445.532 514.825L444.522 515.824L444.769 516.149L443.927 516.452L443.131 516.284L441.548 515.128L441.795 514.444L441.368 514.22L438.551 513.614L438.001 512.19L438.832 511.651L438.91 510.933L436.8 510.877L436.767 509.61L435.835 508.668L434.488 508.713L433.927 508.152L433.13 508.275L432.872 507.198L431.828 506.167L431.537 504.899L431.088 504.854L430.482 505.505L430.785 506.436L428.843 507.019L428.282 507.557L428.45 508.185L427.496 508.286L426.16 509.363L425.689 509.509L425.364 508.903L424.993 509.06L424.499 509.43L424.724 509.991L422.95 511.079L422.748 511.92L420.975 512.481L420.818 513.143L419.864 513.827L419.09 514.152L418.27 513.693L417.608 514.231L416.856 514.343L416.373 513.995L416.115 514.5L415.554 514.164L413.668 514.534L413.242 514.848L412.849 516.261L410.436 516.867L409.527 516.149L409.482 515.151L408.898 515.79L407.742 515.857L407.765 516.822L408.595 517.315L407.776 517.529L407.922 518.145L407.754 518.504L407.417 518.37L407.058 519.245L398.135 511.64L396.081 509.352L395.43 507.557L396.9 507.658L397.271 508.129L398.023 507.658L398.775 506.649L399.01 505.617L398.842 504.865L398.292 504.675L399.515 504.013L399.471 503.576L397.922 504.136L397.248 505.112L395.666 505.404L393.881 504.978L393.825 506.099L389.571 508.062L389.336 503.553L389.47 502.555L390.525 501.826L390.334 500.682L389.582 500.278L389.336 499.078L388.628 498.326L388.426 499.078L387.91 497.552L386.384 497.541L387.068 495.657L386.451 494.636L385.867 494.603L386.215 493.324L385.486 492.27L385.385 491.384L384.756 491.215L385.968 489.522L386.72 489.275L385.216 488.445L384.981 487.637L385.317 487.222L384.633 486.157L384.981 485.719L385.991 486.033L386.552 485.753L386.283 484.037L387.798 482.31L387.686 481.48L388.898 481.266L389.493 480.56L390.559 480.582L392.04 479.696L393.466 480.044L394.397 479.517L394.229 478.754L392.837 477.52L392.703 476.264L393.017 475.625L392.299 475.042L390.929 475.961L390.503 475.165L392.186 473.157L392.95 472.989L393.937 471.901V468.615L393.387 467.942L393.443 466.685L392.837 463.926Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-57-inside-39_10718_32869)\" />\n                <mask id=\"path-58-inside-40_10718_32869\" fill=\"white\">\n                    <path d=\"M153.706 451.173L153.829 451.958L154.794 451.566L159.306 451.858L161.663 452.127L164.873 453.215L163.448 454.841L163.01 458.06L162.404 459.249L161.91 459.473L160.631 458.61L158.812 459.787L157.286 459.496L156.848 459.776L156.253 461.044L156.399 462.625L157.308 464.139L156.534 464.79L156.972 465.485L156.68 467.919L156.231 467.358L155.804 468.099L155.176 468.267L153.492 467.717L152.74 468.671L150.327 469.187L149.699 470.028L149.833 472.596L148.666 472.529L147.914 473.393L147.589 474.683L147.802 475.311L148.835 475.098L150.249 476.029L150.327 476.959L149.53 477.991L151.36 479.337L151.27 480.134L151.786 481.558L151.315 482.556L151.517 484.486L150.372 486.022L150.383 486.953L152.011 488.501L153.739 489.241L153.953 490.094L152.864 490.834L152.538 492.101L151.495 492.729L151.012 493.503L151.472 495.298L150.372 496.117L148.778 496.352L148.341 495.881L148.857 493.761L148.06 493.559L146.567 494.692L146.017 495.814L146.343 497.362L144.85 497.889L144.3 499.549L143.773 498.865L143.279 499.47L143.492 500.805L142.774 501.68L143.997 502.914L143.739 503.396L143.133 503.127L142.011 503.407L141.371 502.914L139.586 503.553L140.091 502.532L139.53 502.185L138.879 502.779L137.555 501.781L136.533 501.736L135.534 500.805L135.692 500.042L135.445 499.773L134.491 499.953L134.199 499.706L134.244 498.988L131.427 498.394L131.483 497.048L130.585 497.328L129.687 496.868L129.081 496.969L128.946 497.485L127.768 498.068L127.42 499.313L126.657 498.797L125.68 499.526L125.096 499.515L124.692 498.719L124.378 498.708L123.267 499.325L122.066 498.371L122.021 496.857L122.526 496.442L122.01 496.027L121.606 496.375L121.28 496.105L120.169 496.835L118.351 496.397L118.531 494.961L117.307 495.679L116.679 494.95L116.791 494.412L117.363 494.188L117.857 493.212L118.205 491.339H118.598L119.462 490.284L119.036 489.028L119.081 487.458L120.484 485.54L121.785 484.833L122.167 483.162L123.065 483.016L123.929 482.197L124.03 481.48L123.738 481.121L124.142 480.627L125.085 480.414L125.826 479.573L125.882 478.978L124.356 478.362L124.12 476.769L123.357 476.029L123.828 475.12L125.714 475.041L125.658 472.26L125.209 472.608L124.816 472.282L125.242 471.284L124.816 470.723L125.299 470.073L126.196 469.714L126.836 470.073L127.375 469.815L127.409 469.433L130.562 469.052L131.943 466.427L131.382 466.181L131.438 465.889L130.428 465.642L130.506 464.274L130.899 463.668L131.864 463.22L131.651 462.726L132.212 462.322L132.706 462.681L132.931 462.042L133.312 462.3L133.436 461.963L132.156 461.201L132.28 460.674L135.097 460.786L136.601 459.709L137.6 459.653L139.384 456.871L140.551 457.006L140.72 455.963L141.281 455.581L141.101 454.83L141.528 454.392L141.236 451.902L141.607 451.375L144.311 451.241L145.277 452.138L146.264 451.869L147.589 453.562L148.139 453.585L148.599 453.181L148.879 452.093L149.227 452.138L149.474 451.712L150.058 451.869L153.706 451.173Z\" />\n                </mask>\n                <path d=\"M153.706 451.173L153.829 451.958L154.794 451.566L159.306 451.858L161.663 452.127L164.873 453.215L163.448 454.841L163.01 458.06L162.404 459.249L161.91 459.473L160.631 458.61L158.812 459.787L157.286 459.496L156.848 459.776L156.253 461.044L156.399 462.625L157.308 464.139L156.534 464.79L156.972 465.485L156.68 467.919L156.231 467.358L155.804 468.099L155.176 468.267L153.492 467.717L152.74 468.671L150.327 469.187L149.699 470.028L149.833 472.596L148.666 472.529L147.914 473.393L147.589 474.683L147.802 475.311L148.835 475.098L150.249 476.029L150.327 476.959L149.53 477.991L151.36 479.337L151.27 480.134L151.786 481.558L151.315 482.556L151.517 484.486L150.372 486.022L150.383 486.953L152.011 488.501L153.739 489.241L153.953 490.094L152.864 490.834L152.538 492.101L151.495 492.729L151.012 493.503L151.472 495.298L150.372 496.117L148.778 496.352L148.341 495.881L148.857 493.761L148.06 493.559L146.567 494.692L146.017 495.814L146.343 497.362L144.85 497.889L144.3 499.549L143.773 498.865L143.279 499.47L143.492 500.805L142.774 501.68L143.997 502.914L143.739 503.396L143.133 503.127L142.011 503.407L141.371 502.914L139.586 503.553L140.091 502.532L139.53 502.185L138.879 502.779L137.555 501.781L136.533 501.736L135.534 500.805L135.692 500.042L135.445 499.773L134.491 499.953L134.199 499.706L134.244 498.988L131.427 498.394L131.483 497.048L130.585 497.328L129.687 496.868L129.081 496.969L128.946 497.485L127.768 498.068L127.42 499.313L126.657 498.797L125.68 499.526L125.096 499.515L124.692 498.719L124.378 498.708L123.267 499.325L122.066 498.371L122.021 496.857L122.526 496.442L122.01 496.027L121.606 496.375L121.28 496.105L120.169 496.835L118.351 496.397L118.531 494.961L117.307 495.679L116.679 494.95L116.791 494.412L117.363 494.188L117.857 493.212L118.205 491.339H118.598L119.462 490.284L119.036 489.028L119.081 487.458L120.484 485.54L121.785 484.833L122.167 483.162L123.065 483.016L123.929 482.197L124.03 481.48L123.738 481.121L124.142 480.627L125.085 480.414L125.826 479.573L125.882 478.978L124.356 478.362L124.12 476.769L123.357 476.029L123.828 475.12L125.714 475.041L125.658 472.26L125.209 472.608L124.816 472.282L125.242 471.284L124.816 470.723L125.299 470.073L126.196 469.714L126.836 470.073L127.375 469.815L127.409 469.433L130.562 469.052L131.943 466.427L131.382 466.181L131.438 465.889L130.428 465.642L130.506 464.274L130.899 463.668L131.864 463.22L131.651 462.726L132.212 462.322L132.706 462.681L132.931 462.042L133.312 462.3L133.436 461.963L132.156 461.201L132.28 460.674L135.097 460.786L136.601 459.709L137.6 459.653L139.384 456.871L140.551 457.006L140.72 455.963L141.281 455.581L141.101 454.83L141.528 454.392L141.236 451.902L141.607 451.375L144.311 451.241L145.277 452.138L146.264 451.869L147.589 453.562L148.139 453.585L148.599 453.181L148.879 452.093L149.227 452.138L149.474 451.712L150.058 451.869L153.706 451.173Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-58-inside-40_10718_32869)\" />\n                <mask id=\"path-59-inside-41_10718_32869\" fill=\"white\">\n                    <path d=\"M203.348 504.551L203.741 505.033L205.267 505L206.861 505.863L207.601 505.258L208.129 505.987L208.017 506.323L206.681 506.727L206.558 507.277L207.411 507.77L207.276 508.701L208.814 508.006L209.801 509.161L210.048 509.06L210.845 509.968L211.99 512.402L213.46 513.939L215.346 516.855L216.659 517.966L217.557 517.865L219.027 518.538L219.959 520.13L221.788 519.738L222.17 520.052L222.731 522.845L223.651 524.258L223.685 525.088L224.314 525.514L225.683 525.088L225.885 526.456L226.199 526.703L225.795 527.129L225.133 526.961L224.852 527.612L225.211 528.004L225.817 527.847L226.659 528.554L227.232 530.932L229.488 531.605L231.306 529.137L231.654 527.713L233.528 529.002L234.101 528.576L234.347 528.823L233.887 529.709L234.538 530.573L234.707 531.907L234.392 532.816L233.068 534.117L233.854 534.936L234.46 533.926L234.808 533.915L236.3 535.429L237.187 537.325L236.446 538.435L237.861 540.712L237.546 541.923L238.276 542.047L238.713 541.464L238.309 540.14L238.747 539.871L239.847 540.566L241.115 542.215L242.485 541.329L242.597 540.219L243.91 540.589L244.864 538.57L245.358 538.458L245.706 538.861L246.435 538.749L248.175 539.243L248.972 540.275L249.432 540.353L250.689 539.635L251.8 539.501L252.451 538.805L253.349 535.519L252.642 534.768L252.945 533.074L253.45 532.715L254.112 532.917L254.606 532.221L254.011 530.786L254.135 530.404L255.291 530.382L255.942 531.649L257.513 532.58L257.233 531.358L257.491 530.651L259.062 529.989L259.421 529.933L259.679 530.46L260.667 530.146L261.621 530.618L261.913 530.371L262.99 531.111L264.696 530.92L265.112 532.906L263.967 533.904L263.103 535.822L264.169 536.562L263.753 536.652L263.652 537.134L264.045 538.054L264.708 538.278L264.685 537.785L266.481 538.951L267.412 539.142L266.38 540.443L267.053 541.127L268.052 541.52L270.634 541.576L270.712 542.439L271.296 543.449L272.732 543.561L274.102 544.29L275.168 543.931L275.729 545.053L276.717 546.029L275.999 546.264L274.719 552.029L269.893 553.712L267.064 553.6L265.774 553.308L264.797 552.085L264.696 551.39L263.787 551.121L263.26 551.592L261.879 554.688L259.455 555.562L259.533 554.43L259.028 553.734L257.435 553.88L256.941 553.521L254.449 553.241L253.473 552.321L253.405 551.513L251.957 551.614L251.688 550.167L252.002 549.281L251.688 548.631L250.128 548.406L249.488 547.363L248.86 547.722L248.59 548.541L247.984 548.395L247.85 547.801L247.142 548.35L246.548 547.902L246.11 548.104L245.672 547.632L245.156 547.756L244.976 550.291L244.572 550.549L244.292 550.111L243.652 550.235L243.192 550.964L241.901 550.313L240.565 548.193L239.275 548.754L238.747 548.451L238.309 548.732L237.737 548.362L236.906 548.406L236.929 549.775L236.166 549.539L235.043 548.283L234.774 548.586L234.853 549.719L234.213 549.797L233.865 550.571L232.563 550.268L232.114 552.456L228.904 554.373L228.567 554.889L226.895 553.588L225.851 553.734L223.775 551.906L223.483 551.536L223.82 550.605L223.404 550.28L222.013 551.468L221.575 550.896L220.632 550.762L220.217 551.816L220.789 554.127L219.835 555.248H219.027L218.343 554.071L219.072 551.345L217.332 550.874L216.401 549.461L216.479 548.9L216.244 548.563L216.087 548.732L216.064 548.003L215.211 547.33L212.349 546.511L211.788 545.49L212.001 544.436L209.947 542.821L209.162 543.168L209.027 542.899L207.523 542.989L206.782 543.393L206.344 543.023L205.884 543.325L206.075 542.967L205.155 542.888L204.369 543.269L204.425 543.527L203.28 543.46L201.485 539.568L200.946 540.196L200.239 540.174L199.711 540.981L197.702 540.634L196.883 541.834L197.197 542.709L196.187 543.337L195.85 543.382L195.996 542.821L195.356 542.215L194.975 542.866L194.245 543.225L193.325 543.135L192.741 542.282L193.695 542.092L193.684 541.026L192.943 540.555L191.293 540.835L189.913 540.678L189.486 539.815L189.7 539.187L192.27 537.28L194.054 535.474L194.425 534.824L193.909 532.401L195.39 530.696V530.191L194.672 529.429L195.177 527.959L195.749 527.376L196.31 527.589L196.894 526.064L196.759 525.155L198.443 523.563L199.678 522.867L200.07 521.521L199.543 520.826L200.239 519.155L200.115 518.56L201.283 518.067L200.16 517.696L199.644 516.474L200.553 515.128L200.867 513.199L201.956 511.505L202.439 509.688L202.472 508.959L201.529 507.972L201.451 507.344L201.844 507.198L202.079 505.291L203.348 504.551Z\" />\n                </mask>\n                <path d=\"M203.348 504.551L203.741 505.033L205.267 505L206.861 505.863L207.601 505.258L208.129 505.987L208.017 506.323L206.681 506.727L206.558 507.277L207.411 507.77L207.276 508.701L208.814 508.006L209.801 509.161L210.048 509.06L210.845 509.968L211.99 512.402L213.46 513.939L215.346 516.855L216.659 517.966L217.557 517.865L219.027 518.538L219.959 520.13L221.788 519.738L222.17 520.052L222.731 522.845L223.651 524.258L223.685 525.088L224.314 525.514L225.683 525.088L225.885 526.456L226.199 526.703L225.795 527.129L225.133 526.961L224.852 527.612L225.211 528.004L225.817 527.847L226.659 528.554L227.232 530.932L229.488 531.605L231.306 529.137L231.654 527.713L233.528 529.002L234.101 528.576L234.347 528.823L233.887 529.709L234.538 530.573L234.707 531.907L234.392 532.816L233.068 534.117L233.854 534.936L234.46 533.926L234.808 533.915L236.3 535.429L237.187 537.325L236.446 538.435L237.861 540.712L237.546 541.923L238.276 542.047L238.713 541.464L238.309 540.14L238.747 539.871L239.847 540.566L241.115 542.215L242.485 541.329L242.597 540.219L243.91 540.589L244.864 538.57L245.358 538.458L245.706 538.861L246.435 538.749L248.175 539.243L248.972 540.275L249.432 540.353L250.689 539.635L251.8 539.501L252.451 538.805L253.349 535.519L252.642 534.768L252.945 533.074L253.45 532.715L254.112 532.917L254.606 532.221L254.011 530.786L254.135 530.404L255.291 530.382L255.942 531.649L257.513 532.58L257.233 531.358L257.491 530.651L259.062 529.989L259.421 529.933L259.679 530.46L260.667 530.146L261.621 530.618L261.913 530.371L262.99 531.111L264.696 530.92L265.112 532.906L263.967 533.904L263.103 535.822L264.169 536.562L263.753 536.652L263.652 537.134L264.045 538.054L264.708 538.278L264.685 537.785L266.481 538.951L267.412 539.142L266.38 540.443L267.053 541.127L268.052 541.52L270.634 541.576L270.712 542.439L271.296 543.449L272.732 543.561L274.102 544.29L275.168 543.931L275.729 545.053L276.717 546.029L275.999 546.264L274.719 552.029L269.893 553.712L267.064 553.6L265.774 553.308L264.797 552.085L264.696 551.39L263.787 551.121L263.26 551.592L261.879 554.688L259.455 555.562L259.533 554.43L259.028 553.734L257.435 553.88L256.941 553.521L254.449 553.241L253.473 552.321L253.405 551.513L251.957 551.614L251.688 550.167L252.002 549.281L251.688 548.631L250.128 548.406L249.488 547.363L248.86 547.722L248.59 548.541L247.984 548.395L247.85 547.801L247.142 548.35L246.548 547.902L246.11 548.104L245.672 547.632L245.156 547.756L244.976 550.291L244.572 550.549L244.292 550.111L243.652 550.235L243.192 550.964L241.901 550.313L240.565 548.193L239.275 548.754L238.747 548.451L238.309 548.732L237.737 548.362L236.906 548.406L236.929 549.775L236.166 549.539L235.043 548.283L234.774 548.586L234.853 549.719L234.213 549.797L233.865 550.571L232.563 550.268L232.114 552.456L228.904 554.373L228.567 554.889L226.895 553.588L225.851 553.734L223.775 551.906L223.483 551.536L223.82 550.605L223.404 550.28L222.013 551.468L221.575 550.896L220.632 550.762L220.217 551.816L220.789 554.127L219.835 555.248H219.027L218.343 554.071L219.072 551.345L217.332 550.874L216.401 549.461L216.479 548.9L216.244 548.563L216.087 548.732L216.064 548.003L215.211 547.33L212.349 546.511L211.788 545.49L212.001 544.436L209.947 542.821L209.162 543.168L209.027 542.899L207.523 542.989L206.782 543.393L206.344 543.023L205.884 543.325L206.075 542.967L205.155 542.888L204.369 543.269L204.425 543.527L203.28 543.46L201.485 539.568L200.946 540.196L200.239 540.174L199.711 540.981L197.702 540.634L196.883 541.834L197.197 542.709L196.187 543.337L195.85 543.382L195.996 542.821L195.356 542.215L194.975 542.866L194.245 543.225L193.325 543.135L192.741 542.282L193.695 542.092L193.684 541.026L192.943 540.555L191.293 540.835L189.913 540.678L189.486 539.815L189.7 539.187L192.27 537.28L194.054 535.474L194.425 534.824L193.909 532.401L195.39 530.696V530.191L194.672 529.429L195.177 527.959L195.749 527.376L196.31 527.589L196.894 526.064L196.759 525.155L198.443 523.563L199.678 522.867L200.07 521.521L199.543 520.826L200.239 519.155L200.115 518.56L201.283 518.067L200.16 517.696L199.644 516.474L200.553 515.128L200.867 513.199L201.956 511.505L202.439 509.688L202.472 508.959L201.529 507.972L201.451 507.344L201.844 507.198L202.079 505.291L203.348 504.551Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-59-inside-41_10718_32869)\" />\n                <mask id=\"path-60-inside-42_10718_32869\" fill=\"white\">\n                    <path d=\"M70.0553 514.769L70.4032 515.655L70.8522 515.52L72.3786 516.205L72.8276 517.158L74.1071 518.111L75.5998 517.853L75.4202 518.1L76.1161 519.255L77.5864 519.682L77.9456 519.345L79.7301 520.153L80.4821 519.883L80.527 519.267L82.7942 519.625L82.8054 521.442L83.4676 521.914L83.9165 521.454L85.0277 523.114L84.7696 524.101L85.2297 524.662L84.9042 525.604L85.2634 526.4L84.3655 528.071L83.737 528.094L83.7819 528.576L84.4553 528.509L85.443 529.372L84.9716 529.653L85.1063 529.978L86.0491 530.27L85.645 530.651L85.8358 531.111L86.3409 531.1L86.2847 531.537L86.9133 532.311L86.6888 533.006L86.296 533.298L85.8807 533.085L84.3318 534.296L84.343 535.855L84.0063 535.777L83.3778 536.786L82.8503 536.136L82.1208 536.035L81.7167 536.999L81.3688 537.112L79.674 535.317L77.2834 534.891L76.1273 534.016L75.308 533.96L75.0162 533.444L73.9611 533.276L72.8276 531.447L72.3674 531.313L67.1259 532.782L66.7668 532.58L66.2954 530.427L65.7342 530.236L65.5658 530.909L64.8138 530.505L64.7353 531.212L63.5343 530.797L63.1752 531.324L61.6712 531.604L61.1549 531.055L60.706 531.167L60.7397 530.404L62.2436 529.193L61.6937 528.711L61.9967 528.273L61.66 527.578L62.1651 527.746L62.4344 527.353L62.064 526.748L62.3222 526.176L61.7386 526.254L61.211 525.66L60.8631 526.064L60.1897 524.83L61.0315 524.549L60.9305 523.865L61.7161 523.989L61.8396 523.36L62.2436 524.022L63.1752 523.731L63.1527 523.002L64.017 522.99L64.1517 522.082L62.7599 521.33L63.1527 521.05L63.0517 519.536L63.7364 519.233L64.1629 519.457L64.1068 518.874L65.173 518.504L65.7566 516.967L66.2954 516.788L65.9138 517.618L66.2954 517.73L66.8566 516.339L67.4963 515.913L67.7545 516.384L68.5401 516.317L68.8095 515.711L70.0553 514.769Z\" />\n                </mask>\n                <path d=\"M70.0553 514.769L70.4032 515.655L70.8522 515.52L72.3786 516.205L72.8276 517.158L74.1071 518.111L75.5998 517.853L75.4202 518.1L76.1161 519.255L77.5864 519.682L77.9456 519.345L79.7301 520.153L80.4821 519.883L80.527 519.267L82.7942 519.625L82.8054 521.442L83.4676 521.914L83.9165 521.454L85.0277 523.114L84.7696 524.101L85.2297 524.662L84.9042 525.604L85.2634 526.4L84.3655 528.071L83.737 528.094L83.7819 528.576L84.4553 528.509L85.443 529.372L84.9716 529.653L85.1063 529.978L86.0491 530.27L85.645 530.651L85.8358 531.111L86.3409 531.1L86.2847 531.537L86.9133 532.311L86.6888 533.006L86.296 533.298L85.8807 533.085L84.3318 534.296L84.343 535.855L84.0063 535.777L83.3778 536.786L82.8503 536.136L82.1208 536.035L81.7167 536.999L81.3688 537.112L79.674 535.317L77.2834 534.891L76.1273 534.016L75.308 533.96L75.0162 533.444L73.9611 533.276L72.8276 531.447L72.3674 531.313L67.1259 532.782L66.7668 532.58L66.2954 530.427L65.7342 530.236L65.5658 530.909L64.8138 530.505L64.7353 531.212L63.5343 530.797L63.1752 531.324L61.6712 531.604L61.1549 531.055L60.706 531.167L60.7397 530.404L62.2436 529.193L61.6937 528.711L61.9967 528.273L61.66 527.578L62.1651 527.746L62.4344 527.353L62.064 526.748L62.3222 526.176L61.7386 526.254L61.211 525.66L60.8631 526.064L60.1897 524.83L61.0315 524.549L60.9305 523.865L61.7161 523.989L61.8396 523.36L62.2436 524.022L63.1752 523.731L63.1527 523.002L64.017 522.99L64.1517 522.082L62.7599 521.33L63.1527 521.05L63.0517 519.536L63.7364 519.233L64.1629 519.457L64.1068 518.874L65.173 518.504L65.7566 516.967L66.2954 516.788L65.9138 517.618L66.2954 517.73L66.8566 516.339L67.4963 515.913L67.7545 516.384L68.5401 516.317L68.8095 515.711L70.0553 514.769Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-60-inside-42_10718_32869)\" />\n                <mask id=\"path-61-inside-43_10718_32869\" fill=\"white\">\n                    <path d=\"M385.239 443.658L386.686 445.7L384.879 446.844L384.24 447.718L385.834 449.244L384.644 450.444L384.7 451.061L386.215 452.351L388.123 453.259L388.696 456.703L388.348 457.847L389.279 457.914L390.559 460.325L390.761 461.84L391.647 461.582L392.837 463.926L393.443 466.685L393.387 467.941L393.937 468.614V471.901L392.949 472.989L392.186 473.157L390.503 475.165L390.929 475.961L392.298 475.041L393.017 475.624L392.702 476.264L392.837 477.52L394.229 478.754L394.397 479.516L393.466 480.044L392.04 479.696L390.559 480.582L389.492 480.56L388.898 481.266L387.685 481.479L387.798 482.309L386.282 484.037L386.552 485.753L385.991 486.033L384.98 485.719L384.633 486.156L385.317 487.222L384.98 487.637L385.216 488.445L386.72 489.275L385.968 489.521L384.756 491.215L385.385 491.383L385.486 492.269L386.215 493.324L385.867 494.602L386.451 494.636L387.068 495.657L386.383 497.541L387.91 497.552L388.426 499.077L388.628 498.326L389.335 499.077L389.582 500.278L390.334 500.681L390.525 501.825L389.47 502.554L389.335 503.553L389.571 508.062L388.785 508.421L388.224 508.185L387.147 508.735L387.831 509.71L387.753 510.137L384.262 512.705L382.433 512.301L382.107 513.12L381.423 513.165L381.063 514.388L379.694 514.152L379.458 515.352L379.806 515.554L379.155 517.169L378.168 516.799L377.853 515.375L377.27 515.251L377.124 515.947L376.417 515.879L376.507 514.948L375.126 514.634L374.565 515.476L373.285 514.96L373.083 515.835L372.668 515.734L372.533 516.339L371.467 517.382L370.906 516.945L371.074 516.216L369.84 515.655L370.132 514.702L369.941 514.197L370.502 514.096L370.659 512.649L371.523 512.391L371.333 511.965L371.602 511.46L373.42 511.729L373.891 509.116L372.949 508.836L372.926 509.284L371.972 509.778L372.096 510.541L371.153 509.991L371.086 510.462L370.188 510.496L368.414 509.912L368.201 509.206L367.674 509.127L367.707 508.51L364.643 508.028L364.194 508.365L363.992 509.217H365.159L365.62 510.541L364.262 510.002L363.678 511.09L362.847 510.496L363.184 509.329L362.724 508.645L363.296 508.23L363.79 508.342L363.768 507.95L362.286 507.265L362.398 506.581L362.028 506.346L361.927 505.471L360.917 504.865L360.109 504.966L360.827 505.897L360.479 506.716L361.377 507.321L361.186 508.039L360.569 507.736L359.997 506.805L357.931 506.458L357.595 507.232L357.763 507.961L357.034 508.454L355.9 508.365L355.788 507.714L354.609 507.344L353.453 508.342L353.06 508.286L352.32 507.019L352.589 506.2L351.949 505.841L351.882 505.19L353.397 505.426L353.622 504.45L353.363 501.803L354.194 501.366L354.183 500.816L352.858 500.098L352.23 499.19L351.725 497.597L351.882 495.017L350.311 491.854L348.762 492.415L347.909 492.168L347.606 490.811L348.223 489.69L348.795 489.802L349.424 489.364L349.929 488.108L349.895 487.772L348.874 487.547L348.414 485.764L350.49 484.642L350.344 484.407L348.335 484.631L348.077 484.149L348.391 483.7L349.94 483.779L350.513 483.218L351.119 480.952L350.793 479.438L350.052 478.799L351.893 477.823L351.309 476.567L350.513 476.432L350.322 476.051L350.883 475.557L351.511 475.737L352.858 474.548L352.308 472.417L353.116 472.888L353.543 472.686L354.766 472.932L355.305 472.103L355.765 472.215L356.282 471.845L356.181 471.396L356.652 471.127L356.742 470.499L356.158 468.379L352.937 464.79L352.151 462.546L350.647 462.457L350.288 462.715L350.064 464.251L349.02 464.307L348.605 463.432L347.639 463.062L347.101 462.232L347.134 461.862L349.592 459.652L348.425 456.927L347.695 456.276L347.729 455.458L348.122 451.745L350.075 446.978L350.737 444.432L351.556 445.195L352.567 445.363L352.634 446.294L354.093 446.81L353.689 449.143L353.756 451.027L354.194 452.025L359.783 451.095L360.401 451.409L361.186 452.519L364.834 452.429L366.45 453.001L367.842 452.272L367.539 451.913L369.043 450.343L377.113 450.657L379.481 448.616L380.558 448.324L381.815 446.855L383.263 446.384L383.51 445.284L385.239 443.658Z\" />\n                </mask>\n                <path d=\"M385.239 443.658L386.686 445.7L384.879 446.844L384.24 447.718L385.834 449.244L384.644 450.444L384.7 451.061L386.215 452.351L388.123 453.259L388.696 456.703L388.348 457.847L389.279 457.914L390.559 460.325L390.761 461.84L391.647 461.582L392.837 463.926L393.443 466.685L393.387 467.941L393.937 468.614V471.901L392.949 472.989L392.186 473.157L390.503 475.165L390.929 475.961L392.298 475.041L393.017 475.624L392.702 476.264L392.837 477.52L394.229 478.754L394.397 479.516L393.466 480.044L392.04 479.696L390.559 480.582L389.492 480.56L388.898 481.266L387.685 481.479L387.798 482.309L386.282 484.037L386.552 485.753L385.991 486.033L384.98 485.719L384.633 486.156L385.317 487.222L384.98 487.637L385.216 488.445L386.72 489.275L385.968 489.521L384.756 491.215L385.385 491.383L385.486 492.269L386.215 493.324L385.867 494.602L386.451 494.636L387.068 495.657L386.383 497.541L387.91 497.552L388.426 499.077L388.628 498.326L389.335 499.077L389.582 500.278L390.334 500.681L390.525 501.825L389.47 502.554L389.335 503.553L389.571 508.062L388.785 508.421L388.224 508.185L387.147 508.735L387.831 509.71L387.753 510.137L384.262 512.705L382.433 512.301L382.107 513.12L381.423 513.165L381.063 514.388L379.694 514.152L379.458 515.352L379.806 515.554L379.155 517.169L378.168 516.799L377.853 515.375L377.27 515.251L377.124 515.947L376.417 515.879L376.507 514.948L375.126 514.634L374.565 515.476L373.285 514.96L373.083 515.835L372.668 515.734L372.533 516.339L371.467 517.382L370.906 516.945L371.074 516.216L369.84 515.655L370.132 514.702L369.941 514.197L370.502 514.096L370.659 512.649L371.523 512.391L371.333 511.965L371.602 511.46L373.42 511.729L373.891 509.116L372.949 508.836L372.926 509.284L371.972 509.778L372.096 510.541L371.153 509.991L371.086 510.462L370.188 510.496L368.414 509.912L368.201 509.206L367.674 509.127L367.707 508.51L364.643 508.028L364.194 508.365L363.992 509.217H365.159L365.62 510.541L364.262 510.002L363.678 511.09L362.847 510.496L363.184 509.329L362.724 508.645L363.296 508.23L363.79 508.342L363.768 507.95L362.286 507.265L362.398 506.581L362.028 506.346L361.927 505.471L360.917 504.865L360.109 504.966L360.827 505.897L360.479 506.716L361.377 507.321L361.186 508.039L360.569 507.736L359.997 506.805L357.931 506.458L357.595 507.232L357.763 507.961L357.034 508.454L355.9 508.365L355.788 507.714L354.609 507.344L353.453 508.342L353.06 508.286L352.32 507.019L352.589 506.2L351.949 505.841L351.882 505.19L353.397 505.426L353.622 504.45L353.363 501.803L354.194 501.366L354.183 500.816L352.858 500.098L352.23 499.19L351.725 497.597L351.882 495.017L350.311 491.854L348.762 492.415L347.909 492.168L347.606 490.811L348.223 489.69L348.795 489.802L349.424 489.364L349.929 488.108L349.895 487.772L348.874 487.547L348.414 485.764L350.49 484.642L350.344 484.407L348.335 484.631L348.077 484.149L348.391 483.7L349.94 483.779L350.513 483.218L351.119 480.952L350.793 479.438L350.052 478.799L351.893 477.823L351.309 476.567L350.513 476.432L350.322 476.051L350.883 475.557L351.511 475.737L352.858 474.548L352.308 472.417L353.116 472.888L353.543 472.686L354.766 472.932L355.305 472.103L355.765 472.215L356.282 471.845L356.181 471.396L356.652 471.127L356.742 470.499L356.158 468.379L352.937 464.79L352.151 462.546L350.647 462.457L350.288 462.715L350.064 464.251L349.02 464.307L348.605 463.432L347.639 463.062L347.101 462.232L347.134 461.862L349.592 459.652L348.425 456.927L347.695 456.276L347.729 455.458L348.122 451.745L350.075 446.978L350.737 444.432L351.556 445.195L352.567 445.363L352.634 446.294L354.093 446.81L353.689 449.143L353.756 451.027L354.194 452.025L359.783 451.095L360.401 451.409L361.186 452.519L364.834 452.429L366.45 453.001L367.842 452.272L367.539 451.913L369.043 450.343L377.113 450.657L379.481 448.616L380.558 448.324L381.815 446.855L383.263 446.384L383.51 445.284L385.239 443.658Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-61-inside-43_10718_32869)\" />\n                <mask id=\"path-62-inside-44_10718_32869\" fill=\"white\">\n                    <path d=\"M242.44 476.937L240.891 478.552L240.745 479.157L238.736 480.223H238.029L235.055 476.331L234.303 476.376L233.181 477.329L231.89 477.711L231.407 477.419L229.926 474.649L229.376 474.536L227.614 475.086L226.615 476.039L225.874 476.275L224.494 475.434L222.687 476.028L221.89 475.265L221.059 475.052L220.666 474.032L219.937 473.796L218.186 476.499L217.726 474.66L217.007 474.435L215.694 472.787L215.896 471.945L215.436 471.71L214.628 472.147L214.493 472.988L213.999 472.372L214.078 471.295L213.719 470.768L213.854 469.915L215.47 469.713L216.581 467.336L218.444 466.068L218.298 465.709L217.613 465.631L217.411 465.036L217.715 464.453L217.389 462.501L216.536 462.557L216.312 462.187L216.536 461.178L217.198 460.527L216.996 459.843L215.447 458.441L215.975 457.533L215.952 456.288L216.491 454.953L215.896 452.541L214.516 450.736L213.472 448.582L214.044 447.258L213.135 444.903L212.821 442.727L213.068 442.234L212.72 441.639L212.944 440.944L214.1 440.304L213.236 439.172L212.877 436.895L213.539 435.481L213.057 435.066L212.26 435.268L210.992 434.539L210.015 434.528L208.578 431.331L210.082 428.236L210.363 425.981L211.373 425.836L212.125 422.605L212.148 420.104L210.475 417.479L209.858 417.749L209.678 418.881L202.574 417.715L201.148 416.907L201.844 415.718L201.451 414.832L201.609 413.845L199.925 413.262L200.071 412.443L196.984 411.277L198.107 406.544L201.642 407.217L202.652 405.198L205.122 405.388L205.851 403.381L210.397 403.998L209.656 406.544L213.562 407.205L213.988 405.108L222.911 406.488L223.932 404.098L224.819 404.256L225.549 402.259L229.208 402.517L230.285 399.971L233.416 400.745L234.707 397.223L235.74 397.38L236.234 396.113L236.66 396.169L237.019 395.529L239.971 396.505L240.936 395.956L244.191 396.359L253.978 396.225L254.461 395.742L255.774 395.597L256.403 394.363L258.367 393.196L259.186 395.238L257.66 399.13L257.671 400.431L258.21 404.155L259.231 406.151L259.22 408.753L258.445 411.927L256.919 415.539L257.009 417.109L255.74 421.439L253.383 423.547L252.205 425.409L251.071 429.29L251.969 430.064L253.092 431.948L253.945 432.464L255.089 432.588L256.447 434.349L256.268 435.784L256.919 436.917L256.066 438.185L256.055 439.553L256.593 439.732L256.874 440.63L257.435 441.056L258.658 440.843L258.849 441.123L258.513 442.021L259.018 444.039L258.636 444.769L257.098 445.812L256.717 447.012L256.257 447.326L255.168 447.124L253.664 448.369L253.215 449.479L251.947 450.96L252.048 452.429L252.665 453.326L253.956 453.629L254.259 454.156L254.18 455.592L252.631 456.725L251.475 458.116L250.937 456.388L249.534 456.501L248.4 456.041L247.682 456.815L247.671 457.555L246.907 458.553L247.132 459.518L246.312 461.357L246.402 461.952L247.491 462.827L247.121 464.262L247.861 465.305L247.569 465.642L247.884 466.27L247.569 466.483L247.177 465.922L246.761 465.889L244.651 468.3L243.866 468.67L242.003 467.919L241.385 468.435L241.172 469.691L242.642 472.069L242.16 473.314L242.44 476.937Z\" />\n                </mask>\n                <path d=\"M242.44 476.937L240.891 478.552L240.745 479.157L238.736 480.223H238.029L235.055 476.331L234.303 476.376L233.181 477.329L231.89 477.711L231.407 477.419L229.926 474.649L229.376 474.536L227.614 475.086L226.615 476.039L225.874 476.275L224.494 475.434L222.687 476.028L221.89 475.265L221.059 475.052L220.666 474.032L219.937 473.796L218.186 476.499L217.726 474.66L217.007 474.435L215.694 472.787L215.896 471.945L215.436 471.71L214.628 472.147L214.493 472.988L213.999 472.372L214.078 471.295L213.719 470.768L213.854 469.915L215.47 469.713L216.581 467.336L218.444 466.068L218.298 465.709L217.613 465.631L217.411 465.036L217.715 464.453L217.389 462.501L216.536 462.557L216.312 462.187L216.536 461.178L217.198 460.527L216.996 459.843L215.447 458.441L215.975 457.533L215.952 456.288L216.491 454.953L215.896 452.541L214.516 450.736L213.472 448.582L214.044 447.258L213.135 444.903L212.821 442.727L213.068 442.234L212.72 441.639L212.944 440.944L214.1 440.304L213.236 439.172L212.877 436.895L213.539 435.481L213.057 435.066L212.26 435.268L210.992 434.539L210.015 434.528L208.578 431.331L210.082 428.236L210.363 425.981L211.373 425.836L212.125 422.605L212.148 420.104L210.475 417.479L209.858 417.749L209.678 418.881L202.574 417.715L201.148 416.907L201.844 415.718L201.451 414.832L201.609 413.845L199.925 413.262L200.071 412.443L196.984 411.277L198.107 406.544L201.642 407.217L202.652 405.198L205.122 405.388L205.851 403.381L210.397 403.998L209.656 406.544L213.562 407.205L213.988 405.108L222.911 406.488L223.932 404.098L224.819 404.256L225.549 402.259L229.208 402.517L230.285 399.971L233.416 400.745L234.707 397.223L235.74 397.38L236.234 396.113L236.66 396.169L237.019 395.529L239.971 396.505L240.936 395.956L244.191 396.359L253.978 396.225L254.461 395.742L255.774 395.597L256.403 394.363L258.367 393.196L259.186 395.238L257.66 399.13L257.671 400.431L258.21 404.155L259.231 406.151L259.22 408.753L258.445 411.927L256.919 415.539L257.009 417.109L255.74 421.439L253.383 423.547L252.205 425.409L251.071 429.29L251.969 430.064L253.092 431.948L253.945 432.464L255.089 432.588L256.447 434.349L256.268 435.784L256.919 436.917L256.066 438.185L256.055 439.553L256.593 439.732L256.874 440.63L257.435 441.056L258.658 440.843L258.849 441.123L258.513 442.021L259.018 444.039L258.636 444.769L257.098 445.812L256.717 447.012L256.257 447.326L255.168 447.124L253.664 448.369L253.215 449.479L251.947 450.96L252.048 452.429L252.665 453.326L253.956 453.629L254.259 454.156L254.18 455.592L252.631 456.725L251.475 458.116L250.937 456.388L249.534 456.501L248.4 456.041L247.682 456.815L247.671 457.555L246.907 458.553L247.132 459.518L246.312 461.357L246.402 461.952L247.491 462.827L247.121 464.262L247.861 465.305L247.569 465.642L247.884 466.27L247.569 466.483L247.177 465.922L246.761 465.889L244.651 468.3L243.866 468.67L242.003 467.919L241.385 468.435L241.172 469.691L242.642 472.069L242.16 473.314L242.44 476.937Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-62-inside-44_10718_32869)\" />\n                <mask id=\"path-63-inside-45_10718_32869\" fill=\"white\">\n                    <path d=\"M858.922 602.278L862.548 601.471L862.918 600.562L862.57 598.151L863.67 598.667L864.343 596.659L865.41 596.67L865.926 596.3L866.734 596.603L867.553 595.661L868.732 596.21L869.686 596.244L869.753 597.208L870.494 597.724L869.933 598.655L870.034 599.082L870.797 599.048L871.347 598.397H871.74L871.751 598.655L873.087 598.745L872.851 599.272L874.624 600.585L875.275 599.721L875.668 599.687L876.061 600.338L877.554 600.899L878.53 600.36L879.697 600.54L882.851 598.117L882.413 597.164L883.278 594.763L885.118 595.145L885.309 595.56L886.274 595.896L888.564 594.057L889.383 594.348L890.27 593.922L890.337 593.137L890.966 593.047L891.617 592.419L891.516 591.197L890.82 590.939L891.392 590.097L890.887 590.165L890.203 589.682L889.136 589.918L887.733 588.92L886.375 588.819L886.577 588.247L887.464 587.955L887.655 587.405L886.151 586.519L885.534 585.23L886.69 584.085L887.958 583.738L889.024 584.085L890.214 583.57L890.539 582.885L892.234 582.594L892.2 581.865L893.222 581.046L894.479 581.427L894.804 583.098L895.41 583.513L895.343 584.108L896.589 584.265L896.623 584.893L895.983 585.129L895.568 586.015L896.69 586.979L897.206 588L897.072 588.819L895.265 589.963L895.13 590.378L895.736 591.04L895.107 592.531L896.465 592.969L897.835 592.61L898.98 593.417L899.361 593.552L898.867 594.64L897.812 594.954L895.534 597.814L894.793 600.035L893.693 601.987L893.66 603.759L892.346 604.791L891.718 607.269L889.058 610.623L888.384 612.205L885.769 614.437L883.974 617.185L881.246 619.203L880.954 620.404L879.899 621.144L878.35 623.398L878.418 624.038L877.666 623.712L877.554 624.24L877.239 624.296L877.509 624.598L876.745 625.114L876.644 626.135L876.005 627.133L873.827 628.075L873.154 629.713L871.964 630.734L871.841 632.293L870.999 632.607L870.808 633.313L870.393 633.257L870.449 634.054L870.988 633.863L870.258 635.31L868.99 636.185L868.754 635.893L869.08 635.579L868.35 635.882L868.619 636.05L868.552 636.746L868.137 637.026L867.879 638.17L866.521 638.574L865.073 639.886L864.961 640.346L864.085 640.413L864.119 640.705L862.031 642.129L860.179 642.937L859.697 643.801L858.866 644.193L858.069 645.191L857.8 644.922L858.103 644.911L857.609 644.743L856.408 645.853L855.858 645.102L855.331 645.64L854.68 645.55L854.77 645.775L854.04 646.201H852.996L852.222 646.964L850.953 647.311L850.628 646.829L851.358 646.537L850.527 645.831L850.617 645.494L849.82 645.595L849.921 646.055L849.405 646.638L848.72 645.461L848.821 644.72L848.35 644.754L848.159 645.371L847.16 645.494L847.149 645.236H846.688L846.745 644.754L846.105 644.418L845.117 645.427L844.893 644.642L845.117 643.161L844.848 642.926L845.218 642.724L845.083 641.871L845.701 641.58L845.633 641.21L845.027 641.198L845.409 640.593L845.252 640.29L844.837 640.301L844.982 640.537L844.444 641.187L843.49 641.58L841.997 642.993L841.615 642.735L841.952 641.456L842.659 641.098L843.153 640.234L842.682 640.11L842.513 640.503L841.582 640.2L841.155 640.481L840.886 639.718L840.661 641.142L840.066 641.479L839.763 642.533L838.944 643.621L838.675 643.543L838.607 644.283L837.519 644.35L837.642 645.113L838.304 645.057L836.61 646.212L836.138 647.715L836.284 648.579L835.51 647.917L835.397 647.289L834.803 647.715L834.264 647.625L833.916 648.153L832.984 647.704L833.209 646.975L832.3 646.952L831.727 647.446L833.355 648.792L833.231 649.476L832.749 649.51L832.468 650.743L831.907 651.484L830.998 648.758L831.458 648.657L831.503 647.805L830.829 647.031L830.19 647.188L829.752 646.717L830.942 645.752L831.997 645.382L832.693 645.539L833.097 645.079L834.679 645.248L834.623 644.586L835.397 644.608L835.622 644.137L835.319 643.453L836.161 642.186L836.071 641.4L837.014 639.292L836.958 638.529L836.015 637.553L836.374 637.093L836.172 634.603L836.89 631.754L835.353 624.89L834.163 623.051L835.207 622.647L835.341 622.187L836.767 622.254L837.305 621.604L838.484 621.761L838.372 621.469L840.055 620.101L839.73 619.63L839.988 618.934L840.774 618.99L841.178 617.891L841.694 617.577L842.019 618.216L843.03 618.721L844.04 621.884L843.456 624.329L845.106 625.742L847.07 626.416L848.17 624.89L849.416 620.751L850.392 621.155L851.705 619.944L851.301 618.699L851.874 616.085L852.76 615.446L853.176 615.771L854.455 613.921L854.466 613.584L854.051 613.472L854.646 612.451L854.377 612.362L854.489 611.565L855.005 611.173L855.319 611.476L855.51 610.657L856.004 610.578L856.554 609.221L856.172 608.234L857.171 607.337L857.463 607.606L857.946 606.866L858.036 606.204L857.62 605.991L858.215 605.385L857.474 604.477L857.979 603.187L858.922 602.278Z\" />\n                </mask>\n                <path d=\"M858.922 602.278L862.548 601.471L862.918 600.562L862.57 598.151L863.67 598.667L864.343 596.659L865.41 596.67L865.926 596.3L866.734 596.603L867.553 595.661L868.732 596.21L869.686 596.244L869.753 597.208L870.494 597.724L869.933 598.655L870.034 599.082L870.797 599.048L871.347 598.397H871.74L871.751 598.655L873.087 598.745L872.851 599.272L874.624 600.585L875.275 599.721L875.668 599.687L876.061 600.338L877.554 600.899L878.53 600.36L879.697 600.54L882.851 598.117L882.413 597.164L883.278 594.763L885.118 595.145L885.309 595.56L886.274 595.896L888.564 594.057L889.383 594.348L890.27 593.922L890.337 593.137L890.966 593.047L891.617 592.419L891.516 591.197L890.82 590.939L891.392 590.097L890.887 590.165L890.203 589.682L889.136 589.918L887.733 588.92L886.375 588.819L886.577 588.247L887.464 587.955L887.655 587.405L886.151 586.519L885.534 585.23L886.69 584.085L887.958 583.738L889.024 584.085L890.214 583.57L890.539 582.885L892.234 582.594L892.2 581.865L893.222 581.046L894.479 581.427L894.804 583.098L895.41 583.513L895.343 584.108L896.589 584.265L896.623 584.893L895.983 585.129L895.568 586.015L896.69 586.979L897.206 588L897.072 588.819L895.265 589.963L895.13 590.378L895.736 591.04L895.107 592.531L896.465 592.969L897.835 592.61L898.98 593.417L899.361 593.552L898.867 594.64L897.812 594.954L895.534 597.814L894.793 600.035L893.693 601.987L893.66 603.759L892.346 604.791L891.718 607.269L889.058 610.623L888.384 612.205L885.769 614.437L883.974 617.185L881.246 619.203L880.954 620.404L879.899 621.144L878.35 623.398L878.418 624.038L877.666 623.712L877.554 624.24L877.239 624.296L877.509 624.598L876.745 625.114L876.644 626.135L876.005 627.133L873.827 628.075L873.154 629.713L871.964 630.734L871.841 632.293L870.999 632.607L870.808 633.313L870.393 633.257L870.449 634.054L870.988 633.863L870.258 635.31L868.99 636.185L868.754 635.893L869.08 635.579L868.35 635.882L868.619 636.05L868.552 636.746L868.137 637.026L867.879 638.17L866.521 638.574L865.073 639.886L864.961 640.346L864.085 640.413L864.119 640.705L862.031 642.129L860.179 642.937L859.697 643.801L858.866 644.193L858.069 645.191L857.8 644.922L858.103 644.911L857.609 644.743L856.408 645.853L855.858 645.102L855.331 645.64L854.68 645.55L854.77 645.775L854.04 646.201H852.996L852.222 646.964L850.953 647.311L850.628 646.829L851.358 646.537L850.527 645.831L850.617 645.494L849.82 645.595L849.921 646.055L849.405 646.638L848.72 645.461L848.821 644.72L848.35 644.754L848.159 645.371L847.16 645.494L847.149 645.236H846.688L846.745 644.754L846.105 644.418L845.117 645.427L844.893 644.642L845.117 643.161L844.848 642.926L845.218 642.724L845.083 641.871L845.701 641.58L845.633 641.21L845.027 641.198L845.409 640.593L845.252 640.29L844.837 640.301L844.982 640.537L844.444 641.187L843.49 641.58L841.997 642.993L841.615 642.735L841.952 641.456L842.659 641.098L843.153 640.234L842.682 640.11L842.513 640.503L841.582 640.2L841.155 640.481L840.886 639.718L840.661 641.142L840.066 641.479L839.763 642.533L838.944 643.621L838.675 643.543L838.607 644.283L837.519 644.35L837.642 645.113L838.304 645.057L836.61 646.212L836.138 647.715L836.284 648.579L835.51 647.917L835.397 647.289L834.803 647.715L834.264 647.625L833.916 648.153L832.984 647.704L833.209 646.975L832.3 646.952L831.727 647.446L833.355 648.792L833.231 649.476L832.749 649.51L832.468 650.743L831.907 651.484L830.998 648.758L831.458 648.657L831.503 647.805L830.829 647.031L830.19 647.188L829.752 646.717L830.942 645.752L831.997 645.382L832.693 645.539L833.097 645.079L834.679 645.248L834.623 644.586L835.397 644.608L835.622 644.137L835.319 643.453L836.161 642.186L836.071 641.4L837.014 639.292L836.958 638.529L836.015 637.553L836.374 637.093L836.172 634.603L836.89 631.754L835.353 624.89L834.163 623.051L835.207 622.647L835.341 622.187L836.767 622.254L837.305 621.604L838.484 621.761L838.372 621.469L840.055 620.101L839.73 619.63L839.988 618.934L840.774 618.99L841.178 617.891L841.694 617.577L842.019 618.216L843.03 618.721L844.04 621.884L843.456 624.329L845.106 625.742L847.07 626.416L848.17 624.89L849.416 620.751L850.392 621.155L851.705 619.944L851.301 618.699L851.874 616.085L852.76 615.446L853.176 615.771L854.455 613.921L854.466 613.584L854.051 613.472L854.646 612.451L854.377 612.362L854.489 611.565L855.005 611.173L855.319 611.476L855.51 610.657L856.004 610.578L856.554 609.221L856.172 608.234L857.171 607.337L857.463 607.606L857.946 606.866L858.036 606.204L857.62 605.991L858.215 605.385L857.474 604.477L857.979 603.187L858.922 602.278Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-63-inside-45_10718_32869)\" />\n                <mask id=\"path-64-inside-46_10718_32869\" fill=\"white\">\n                    <path d=\"M3.58865 437.119L3.40907 437.501L3.82434 438.118L4.94671 437.007L6.13642 437.176L7.19145 437.68L8.2577 439.497L9.00968 439.419L12.9155 440.496L13.8246 440.406L15.9122 442.47L16.0918 443.816L18.2355 444.489L18.6957 445.621L19.4028 446.048L20.3344 446.148L21.2098 445.666V448.022L19.1334 449.547L19.5712 450.265L19.3355 451.342L20.7609 451.779L21.8832 452.8L21.973 453.619H22.8148L24.2739 454.336L26.4064 454.37L26.3503 455.323L25.6993 456.209L26.4176 456.591L25.8789 457.993L26.7655 458.632L27.54 458.655L25.8789 460.528L26.1707 460.819L25.6544 462.221L28.595 464.251L27.439 467.179L27.7644 467.998L28.5726 468.536L29.5602 467.987L29.9418 468.188L29.6388 468.278L29.1001 470.263L28.3705 470.981L28.9991 471.037L28.4828 471.531L28.9878 472.237L30.4132 472.967L30.1775 475.154L31.8611 475.557L32.1529 476.298L31.7825 476.746L32.5345 477.285H33.915L34.3527 477.677L33.7354 477.778L33.6905 478.496L34.2517 478.99L33.6569 479.562L34.1844 481.009L33.9936 481.536L33.0284 482.164L33.264 483.061L33.0059 483.7L33.5222 485.428L31.704 485.899L30.9295 485.54L30.402 485.708L29.7398 486.157L29.9867 486.448L29.1674 487.211L28.7858 487.02L28.292 487.615L27.9104 487.469L27.7083 486.74L27.2706 486.908L26.8666 485.719L26.0697 485.439L25.7217 484.62L24.6443 484.429L23.9484 483.734L23.1627 483.633L22.7587 484.284L21.5465 483.442L21.3782 483.757L20.6486 483.779L20.1548 485.102L19.7956 484.766L18.8865 485.024L17.607 486.089L16.7316 485.226L16.9785 483.252L17.607 482.971L17.0795 482.646L17.1693 482.276L15.4072 482.007L15.0817 481.435L14.2736 481.356L12.5115 482.366L11.5687 482.343L11.3779 481.446L11.0075 481.188L11.1534 480.56L9.05458 480.414L8.84133 481.009L8.2128 480.952L7.80875 480.672L7.97711 480.347L7.02309 479.707L7.62917 477.688L7.00065 476.421L7.18023 475.468L6.47313 474.189L6.80984 473.572L5.99051 473.281L5.59769 471.576L4.92426 471.037L5.51912 469.983L4.93549 469.848L4.48654 469.131L3.02746 469.691L3.08358 468.57L3.5213 468.289L3.6111 467.504L3.71211 466.046L3.46519 465.878L4.30696 464.913L4.55388 462.861L2.84789 461.246L1.75919 460.718L2.16324 460.158L2.05101 459.339L0.749059 459.44L0.199097 458.711L0.90619 458.217L0.681715 457.376L0.951081 456.905L1.61328 456.568L1.88265 456.77L2.03978 456.411L1.6245 455.57L1.96121 455.492L2.07345 454.897L3.35295 454.673L3.94781 454.942L4.29574 454.516L4.06004 453.663L3.26316 453.428L3.20704 452.194L2.81422 451.981L3.10603 451.185L2.23058 450.433L1.51226 448.425L2.14079 446.541L1.31024 440.271L1.70307 439.206L3.58865 437.119Z\" />\n                </mask>\n                <path d=\"M3.58865 437.119L3.40907 437.501L3.82434 438.118L4.94671 437.007L6.13642 437.176L7.19145 437.68L8.2577 439.497L9.00968 439.419L12.9155 440.496L13.8246 440.406L15.9122 442.47L16.0918 443.816L18.2355 444.489L18.6957 445.621L19.4028 446.048L20.3344 446.148L21.2098 445.666V448.022L19.1334 449.547L19.5712 450.265L19.3355 451.342L20.7609 451.779L21.8832 452.8L21.973 453.619H22.8148L24.2739 454.336L26.4064 454.37L26.3503 455.323L25.6993 456.209L26.4176 456.591L25.8789 457.993L26.7655 458.632L27.54 458.655L25.8789 460.528L26.1707 460.819L25.6544 462.221L28.595 464.251L27.439 467.179L27.7644 467.998L28.5726 468.536L29.5602 467.987L29.9418 468.188L29.6388 468.278L29.1001 470.263L28.3705 470.981L28.9991 471.037L28.4828 471.531L28.9878 472.237L30.4132 472.967L30.1775 475.154L31.8611 475.557L32.1529 476.298L31.7825 476.746L32.5345 477.285H33.915L34.3527 477.677L33.7354 477.778L33.6905 478.496L34.2517 478.99L33.6569 479.562L34.1844 481.009L33.9936 481.536L33.0284 482.164L33.264 483.061L33.0059 483.7L33.5222 485.428L31.704 485.899L30.9295 485.54L30.402 485.708L29.7398 486.157L29.9867 486.448L29.1674 487.211L28.7858 487.02L28.292 487.615L27.9104 487.469L27.7083 486.74L27.2706 486.908L26.8666 485.719L26.0697 485.439L25.7217 484.62L24.6443 484.429L23.9484 483.734L23.1627 483.633L22.7587 484.284L21.5465 483.442L21.3782 483.757L20.6486 483.779L20.1548 485.102L19.7956 484.766L18.8865 485.024L17.607 486.089L16.7316 485.226L16.9785 483.252L17.607 482.971L17.0795 482.646L17.1693 482.276L15.4072 482.007L15.0817 481.435L14.2736 481.356L12.5115 482.366L11.5687 482.343L11.3779 481.446L11.0075 481.188L11.1534 480.56L9.05458 480.414L8.84133 481.009L8.2128 480.952L7.80875 480.672L7.97711 480.347L7.02309 479.707L7.62917 477.688L7.00065 476.421L7.18023 475.468L6.47313 474.189L6.80984 473.572L5.99051 473.281L5.59769 471.576L4.92426 471.037L5.51912 469.983L4.93549 469.848L4.48654 469.131L3.02746 469.691L3.08358 468.57L3.5213 468.289L3.6111 467.504L3.71211 466.046L3.46519 465.878L4.30696 464.913L4.55388 462.861L2.84789 461.246L1.75919 460.718L2.16324 460.158L2.05101 459.339L0.749059 459.44L0.199097 458.711L0.90619 458.217L0.681715 457.376L0.951081 456.905L1.61328 456.568L1.88265 456.77L2.03978 456.411L1.6245 455.57L1.96121 455.492L2.07345 454.897L3.35295 454.673L3.94781 454.942L4.29574 454.516L4.06004 453.663L3.26316 453.428L3.20704 452.194L2.81422 451.981L3.10603 451.185L2.23058 450.433L1.51226 448.425L2.14079 446.541L1.31024 440.271L1.70307 439.206L3.58865 437.119Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-64-inside-46_10718_32869)\" />\n                <path d=\"M121.213 512.526L122.571 513.76L122.425 512.784L122.952 512.268L123.401 513.12L124.513 512.459L126.039 512.616L126.926 512.223L127.442 512.548L128.115 512.436L128.452 511.73L127.947 510.743L128.576 509.711L130.158 510.429L131.123 509.946L131.561 510.058L131.729 510.586L132.627 510.675L134.154 511.517L134.311 512.851L135.007 513.58L137.072 514.197L138.823 513.928L139.272 514.466L140.506 514.13L140.742 513.737L139.777 512.515L139.676 511.651L141.64 510.485L143.346 510.653L144.648 510.372L144.85 511.281L145.243 511.517L147.05 510.922L148.823 510.855L149.339 510.159L149.699 510.328L150.922 509.924L151.842 510.541L152.381 511.202L152.605 512.537L154.57 514.96L154.513 516.687L154.929 517.035L156.377 516.822L156.478 517.349L157.959 518.414L158.24 519.177L157.858 520.243L158.33 521.207L157.914 524.359L158.487 525.828L158.341 526.434L157.218 527.354L157.016 528.094L156.107 527.791L155.771 526.905L154.614 527.522L153.739 527.399L153.032 528.453L152.112 528.419L151.55 529.204L150.574 529.653L150.989 530.797L150.72 531.212L147.981 529.72L146.792 531.1L144.199 530.977L143.671 531.201L143.121 532.121L141.629 530.438L140.327 530.382L139.53 529.833L139.193 529.844L138.834 531.201L136.937 532.682L135.837 531.852L134.187 531.616L132.975 530.696L130.921 531.268L130.181 531.874L128.699 530.595L128.16 530.629L127.341 531.324L127.375 530.001L128.688 528.498L128.643 527.657L126.263 524.639L123.121 521.847L123.188 520.916L121.92 519.166L121.011 519.121L120.674 518.796L120.854 517.506L119.35 516.553L119.574 513.098L119.282 512.84L121.213 512.526Z\" fill=\"#3C484F\" />\n                <path d=\"M122.818 513.723L122.691 512.873L122.888 512.681L123.18 513.237L123.303 513.47L123.529 513.335L124.569 512.716L126.013 512.864L126.079 512.871L126.14 512.844L126.905 512.506L127.309 512.76L127.389 512.811L127.483 512.795L128.156 512.683L128.285 512.661L128.341 512.544L128.678 511.837L128.731 511.726L128.675 511.616L128.233 510.753L128.674 510.03L130.055 510.656L130.163 510.705L130.27 510.652L131.152 510.212L131.365 510.266L131.491 510.662L131.541 510.818L131.705 510.834L132.551 510.919L133.92 511.673L134.063 512.881L134.072 512.963L134.13 513.024L134.826 513.753L134.872 513.801L134.935 513.82L137 514.437L137.054 514.453L137.11 514.444L138.721 514.197L139.08 514.627L139.183 514.75L139.337 514.708L140.572 514.371L140.669 514.345L140.721 514.259L140.956 513.866L141.045 513.718L140.938 513.582L140.017 512.415L139.943 511.783L141.697 510.741L143.321 510.902L143.36 510.906L143.399 510.897L144.458 510.669L144.606 511.335L144.629 511.44L144.721 511.495L145.114 511.731L145.212 511.79L145.321 511.754L147.094 511.171L148.833 511.105L148.952 511.1L149.024 511.004L149.418 510.472L149.592 510.554L149.682 510.596L149.777 510.565L150.884 510.2L151.672 510.728L152.145 511.309L152.359 512.579L152.37 512.644L152.411 512.695L154.317 515.045L154.264 516.679L154.26 516.801L154.353 516.879L154.768 517.227L154.854 517.299L154.965 517.282L156.176 517.104L156.232 517.396L156.251 517.494L156.332 517.552L157.751 518.573L157.974 519.178L157.623 520.158L157.587 520.258L157.634 520.353L158.072 521.249L157.666 524.326L157.658 524.39L157.681 524.45L158.225 525.846L158.117 526.294L157.06 527.16L156.998 527.211L156.977 527.288L156.845 527.773L156.299 527.592L156.004 526.816L155.903 526.551L155.653 526.685L154.569 527.263L153.774 527.151L153.619 527.129L153.531 527.259L152.902 528.198L152.121 528.17L151.986 528.165L151.908 528.274L151.386 529.005L150.47 529.426L150.26 529.522L150.339 529.738L150.712 530.766L150.636 530.882L148.101 529.501L147.924 529.404L147.792 529.557L146.682 530.845L144.211 530.727L144.154 530.724L144.101 530.747L143.574 530.971L143.499 531.003L143.457 531.073L143.082 531.7L141.816 530.272L141.745 530.193L141.639 530.189L140.409 530.136L139.672 529.627L139.604 529.58L139.522 529.583L139.185 529.594L138.999 529.6L138.951 529.78L138.614 531.056L136.935 532.366L135.988 531.652L135.936 531.613L135.873 531.604L134.287 531.378L133.126 530.497L133.028 530.422L132.908 530.455L130.854 531.027L130.804 531.042L130.763 531.075L130.185 531.547L128.862 530.406L128.785 530.339L128.683 530.346L128.145 530.379L128.062 530.385L127.998 530.438L127.605 530.772L127.622 530.097L128.876 528.662L128.943 528.586L128.937 528.485L128.893 527.643L128.888 527.564L128.839 527.502L126.46 524.485L126.446 524.467L126.43 524.453L123.379 521.742L123.438 520.934L123.444 520.843L123.391 520.769L122.122 519.019L122.052 518.922L121.932 518.916L121.117 518.876L120.939 518.704L121.101 517.54L121.123 517.381L120.988 517.295L119.609 516.421L119.824 513.114L119.831 513.004L121.134 512.792L122.403 513.945L122.922 514.416L122.818 513.723Z\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" strokeWidth=\"0.5\" />\n                <mask id=\"path-67-inside-47_10718_32869\" fill=\"white\">\n                    <path d=\"M113.873 559.69L114.501 560.026L114.714 561.058L115.949 561.686L115.713 562.808L117.038 563.38L117.689 563.246L120.012 565.287L120.158 566.263L119.058 569.437L119.451 570.749L119.103 571.332L119.17 572.409L121.415 572.398L122.066 573.172L121.841 573.923L123.065 573.957L123.738 574.327L124.861 576.122L123.873 578.028L124.041 578.959L123.716 579.374L120.663 580.294L119.058 581.427L119.529 583.065L118.643 583.48L119.047 584.366L118.508 585.117L118.542 585.925L122.167 586.463L124.288 588.101L124.535 589.312L126.522 592.621L127.116 592.509L127.386 591.981L128.317 592.071L128.228 593.058L128.968 593.597L132.324 592.789L133.076 594.685L133.738 595.01L134.142 595.021L134.457 593.731L135.848 593.17L136.129 591.959L136.791 592.082L136.578 592.542L137.487 593.092L137.386 596.3L136.836 597.982L136.769 599.552L135.86 600.394L135.366 600.36L133.233 603.265L134.165 603.601L133.817 604.532L134.412 605.957L134.232 606.26L133.368 606.708L133.334 605.867L132.762 605.396L131.628 608.166L129.855 608.2L126.353 605.396L124.187 605.991L122.885 605.396L122.01 604.499L119.17 603.299L118.979 603.489L119.35 604.42L120.292 605.8L119.9 606.17L118.923 605.923L118.149 606.338L118.25 607.404L117.43 608.009L116.634 607.516L115.96 607.763L115.668 608.178L116.286 609.389L116.14 609.849L114.086 609.759L113.558 610.522L111.796 610.152L111.033 608.682L110.157 608.099L109.933 606.596L108.429 607.168L107.587 606.529H104.557L103.816 605.62L104.097 605.015L103.614 603.916L101.931 603.164L102.48 601.224L101.684 600.618L97.9124 600.225L97.3064 599.766L95.7463 600.652L95.6565 601.403L94.8484 602.166L93.1648 602.031L92.6036 602.693V601.919L93.322 600.281L91.616 600.315L91.4925 599.844L92.9067 599.451L93.3893 598.756L95.0728 597.859L96.5881 598.117L96.7115 597.657L96.2962 597.376L95.9483 596.109L96.184 595.257L95.735 594.976L93.8719 595.167L93.8495 595.986L90.7517 596.67L90.7181 596.995L90.2354 596.603L90.6732 595.526L91.8404 595.156L92.469 595.301L92.4353 594.797L90.7068 595.021L89.36 595.997L88.1254 596.288L88.1591 595.66L88.8662 595.369L88.7988 594.808L87.9795 594.662L88.608 593.843L88.5407 592.049L89.1692 591.129L91.1221 590.804L91.5486 590.131L92.3343 590.265L92.5588 588.818L93.2546 587.977L95.1739 588.426L97.1941 587.966L97.5645 588.37L97.9349 588.157L98.4736 588.549L100.348 588.594L101.033 586.586L100.629 586.059L101.358 585.947L101.83 583.76L102.222 583.816L102.391 583.48L102.133 582.706L101.661 582.908L101.044 582.616L101.818 582.044L101.055 580.81L101.044 579.621L99.7419 579.374L99.495 578.971L100.617 576.223L102.177 576.817L103.03 575.808L102.727 575.438L102.234 575.886L101.571 575.46L100.965 575.471L100.864 575.752L100.213 574.484L99.5399 574.361L99.5848 573.8L101.717 573.609L102.424 572.241L103.839 571.4L103.524 569.022L103.984 568.147L103.906 567.463L104.512 566.7L106.981 567.239L107.98 566.622L110.135 566.016L111.325 563.257L113.525 561.227L113.873 559.69Z\" />\n                </mask>\n                <path d=\"M113.873 559.69L114.501 560.026L114.714 561.058L115.949 561.686L115.713 562.808L117.038 563.38L117.689 563.246L120.012 565.287L120.158 566.263L119.058 569.437L119.451 570.749L119.103 571.332L119.17 572.409L121.415 572.398L122.066 573.172L121.841 573.923L123.065 573.957L123.738 574.327L124.861 576.122L123.873 578.028L124.041 578.959L123.716 579.374L120.663 580.294L119.058 581.427L119.529 583.065L118.643 583.48L119.047 584.366L118.508 585.117L118.542 585.925L122.167 586.463L124.288 588.101L124.535 589.312L126.522 592.621L127.116 592.509L127.386 591.981L128.317 592.071L128.228 593.058L128.968 593.597L132.324 592.789L133.076 594.685L133.738 595.01L134.142 595.021L134.457 593.731L135.848 593.17L136.129 591.959L136.791 592.082L136.578 592.542L137.487 593.092L137.386 596.3L136.836 597.982L136.769 599.552L135.86 600.394L135.366 600.36L133.233 603.265L134.165 603.601L133.817 604.532L134.412 605.957L134.232 606.26L133.368 606.708L133.334 605.867L132.762 605.396L131.628 608.166L129.855 608.2L126.353 605.396L124.187 605.991L122.885 605.396L122.01 604.499L119.17 603.299L118.979 603.489L119.35 604.42L120.292 605.8L119.9 606.17L118.923 605.923L118.149 606.338L118.25 607.404L117.43 608.009L116.634 607.516L115.96 607.763L115.668 608.178L116.286 609.389L116.14 609.849L114.086 609.759L113.558 610.522L111.796 610.152L111.033 608.682L110.157 608.099L109.933 606.596L108.429 607.168L107.587 606.529H104.557L103.816 605.62L104.097 605.015L103.614 603.916L101.931 603.164L102.48 601.224L101.684 600.618L97.9124 600.225L97.3064 599.766L95.7463 600.652L95.6565 601.403L94.8484 602.166L93.1648 602.031L92.6036 602.693V601.919L93.322 600.281L91.616 600.315L91.4925 599.844L92.9067 599.451L93.3893 598.756L95.0728 597.859L96.5881 598.117L96.7115 597.657L96.2962 597.376L95.9483 596.109L96.184 595.257L95.735 594.976L93.8719 595.167L93.8495 595.986L90.7517 596.67L90.7181 596.995L90.2354 596.603L90.6732 595.526L91.8404 595.156L92.469 595.301L92.4353 594.797L90.7068 595.021L89.36 595.997L88.1254 596.288L88.1591 595.66L88.8662 595.369L88.7988 594.808L87.9795 594.662L88.608 593.843L88.5407 592.049L89.1692 591.129L91.1221 590.804L91.5486 590.131L92.3343 590.265L92.5588 588.818L93.2546 587.977L95.1739 588.426L97.1941 587.966L97.5645 588.37L97.9349 588.157L98.4736 588.549L100.348 588.594L101.033 586.586L100.629 586.059L101.358 585.947L101.83 583.76L102.222 583.816L102.391 583.48L102.133 582.706L101.661 582.908L101.044 582.616L101.818 582.044L101.055 580.81L101.044 579.621L99.7419 579.374L99.495 578.971L100.617 576.223L102.177 576.817L103.03 575.808L102.727 575.438L102.234 575.886L101.571 575.46L100.965 575.471L100.864 575.752L100.213 574.484L99.5399 574.361L99.5848 573.8L101.717 573.609L102.424 572.241L103.839 571.4L103.524 569.022L103.984 568.147L103.906 567.463L104.512 566.7L106.981 567.239L107.98 566.622L110.135 566.016L111.325 563.257L113.525 561.227L113.873 559.69Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-67-inside-47_10718_32869)\" />\n                <mask id=\"path-68-inside-48_10718_32869\" fill=\"white\">\n                    <path d=\"M104.254 491.641L105.286 491.462L105.455 491.798L104.905 491.978L105.141 492.426L105.791 492.404L106.319 491.697L106.79 491.843L106.656 492.673L107.127 493.559L108.339 493.514L108.575 493.099L109.316 493.436L109.518 492.584L110.281 492.673L110.966 494.344L111.336 494.412L111.325 493.728L111.965 493.099L112.458 493.167L113.951 494.524L115.32 494.03L115.769 494.614L116.05 494.311L116.779 494.423L116.667 494.961L117.307 495.69L118.53 494.973L118.351 496.419L120.169 496.857L121.269 496.128L121.594 496.397L122.01 496.049L122.526 496.464L122.021 496.879L122.066 498.394L122.133 498.719L121.617 498.64L121.168 499.1L121.617 499.953L122.459 500.727L122.706 500.435L122.874 500.917L123.581 500.749L123.682 501.893L124.277 502.286L123.603 502.723V503.542L123.098 503.25L122.807 504.215L123.345 504.405L123.693 505.09L122.593 505.291L122.459 505.976L120.775 507.03L119.978 506.705L120.775 507.927L121.662 507.524L121.46 507.165L122.257 506.783L122.694 507.445L123.963 507.367L124.288 508.129L123.222 508.084L122.683 508.398L123.009 508.903L122.84 509.184L122.099 508.679L121.482 509.127L121.044 508.32L120.64 508.97L122.582 510.765L121.583 511.673L121.202 512.537L119.282 512.84L117.801 512.761L116.858 513.12L116.667 512.795L115.332 513.188L115.163 512.694L114.883 513.39L113.772 513.423L113.379 516.373L112.84 516.497L113.031 517.046L112.604 517.282L112.2 517.068L111.965 518.056L111.448 517.988L111.1 517.203L109.911 516.687L109.428 517.237L109.159 517.125L108.71 516.138L108.07 516.104L107.857 516.833L107.239 516.956L107.284 517.652L106.656 516.855L106.117 517.214L106.386 518.112L105.32 518.717L104.882 518.235L104.602 519.267L103.794 519.121L103.143 518.347L102.234 518.156L101.583 517.427L101.908 517.349V516.373L100.977 515.812L100.539 516.126L100.348 515.678L98.9001 516.564L98.6757 517.809L97.4074 518.078L96.835 517.82L95.8024 518.246L94.8147 516.115L94.4331 515.801L93.8719 516.048L93.4791 515.824L93.7148 513.883L94.2311 513.266L93.2883 513.3L93.0751 512.862L93.3444 512.38L92.671 512.302L93.0638 512.01L92.9179 511.292L93.6362 510.776L92.8618 510.922L92.5475 510.664L92.6037 510.058L92.1547 509.856L92.3904 509.565L91.7394 509.296L91.7507 508.555L92.4016 508.567L92.6822 507.894L91.8405 507.557L91.6384 506.738L92.0313 506.537L92.0986 505.404L92.671 505.572L92.9179 504.944L93.5914 505.426L93.7485 504.876L94.1638 504.753L94.1076 504.248L92.6935 503.665L93.1424 502.858L92.7271 502.701L92.9516 501.792L93.7597 501.5L94.2199 501.859L94.4668 501.467L95.2749 501.489L95.6116 501.119L96.1952 501.343L96.2177 500.424L97.2952 499.852L96.9023 499.751L97.5533 498.831L97.4635 498.304L98.0696 497.732L97.9798 497.294L98.642 496.588L99.1583 496.565L99.3154 495.915L99.8429 496.218L100.55 495.948L100.831 496.162L101.268 494.692L100.887 494.356L100.202 494.602L100.752 493.604L102.335 493.402L103.625 492.572L103.883 491.697L104.254 491.641Z\" />\n                </mask>\n                <path d=\"M104.254 491.641L105.286 491.462L105.455 491.798L104.905 491.978L105.141 492.426L105.791 492.404L106.319 491.697L106.79 491.843L106.656 492.673L107.127 493.559L108.339 493.514L108.575 493.099L109.316 493.436L109.518 492.584L110.281 492.673L110.966 494.344L111.336 494.412L111.325 493.728L111.965 493.099L112.458 493.167L113.951 494.524L115.32 494.03L115.769 494.614L116.05 494.311L116.779 494.423L116.667 494.961L117.307 495.69L118.53 494.973L118.351 496.419L120.169 496.857L121.269 496.128L121.594 496.397L122.01 496.049L122.526 496.464L122.021 496.879L122.066 498.394L122.133 498.719L121.617 498.64L121.168 499.1L121.617 499.953L122.459 500.727L122.706 500.435L122.874 500.917L123.581 500.749L123.682 501.893L124.277 502.286L123.603 502.723V503.542L123.098 503.25L122.807 504.215L123.345 504.405L123.693 505.09L122.593 505.291L122.459 505.976L120.775 507.03L119.978 506.705L120.775 507.927L121.662 507.524L121.46 507.165L122.257 506.783L122.694 507.445L123.963 507.367L124.288 508.129L123.222 508.084L122.683 508.398L123.009 508.903L122.84 509.184L122.099 508.679L121.482 509.127L121.044 508.32L120.64 508.97L122.582 510.765L121.583 511.673L121.202 512.537L119.282 512.84L117.801 512.761L116.858 513.12L116.667 512.795L115.332 513.188L115.163 512.694L114.883 513.39L113.772 513.423L113.379 516.373L112.84 516.497L113.031 517.046L112.604 517.282L112.2 517.068L111.965 518.056L111.448 517.988L111.1 517.203L109.911 516.687L109.428 517.237L109.159 517.125L108.71 516.138L108.07 516.104L107.857 516.833L107.239 516.956L107.284 517.652L106.656 516.855L106.117 517.214L106.386 518.112L105.32 518.717L104.882 518.235L104.602 519.267L103.794 519.121L103.143 518.347L102.234 518.156L101.583 517.427L101.908 517.349V516.373L100.977 515.812L100.539 516.126L100.348 515.678L98.9001 516.564L98.6757 517.809L97.4074 518.078L96.835 517.82L95.8024 518.246L94.8147 516.115L94.4331 515.801L93.8719 516.048L93.4791 515.824L93.7148 513.883L94.2311 513.266L93.2883 513.3L93.0751 512.862L93.3444 512.38L92.671 512.302L93.0638 512.01L92.9179 511.292L93.6362 510.776L92.8618 510.922L92.5475 510.664L92.6037 510.058L92.1547 509.856L92.3904 509.565L91.7394 509.296L91.7507 508.555L92.4016 508.567L92.6822 507.894L91.8405 507.557L91.6384 506.738L92.0313 506.537L92.0986 505.404L92.671 505.572L92.9179 504.944L93.5914 505.426L93.7485 504.876L94.1638 504.753L94.1076 504.248L92.6935 503.665L93.1424 502.858L92.7271 502.701L92.9516 501.792L93.7597 501.5L94.2199 501.859L94.4668 501.467L95.2749 501.489L95.6116 501.119L96.1952 501.343L96.2177 500.424L97.2952 499.852L96.9023 499.751L97.5533 498.831L97.4635 498.304L98.0696 497.732L97.9798 497.294L98.642 496.588L99.1583 496.565L99.3154 495.915L99.8429 496.218L100.55 495.948L100.831 496.162L101.268 494.692L100.887 494.356L100.202 494.602L100.752 493.604L102.335 493.402L103.625 492.572L103.883 491.697L104.254 491.641Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-68-inside-48_10718_32869)\" />\n                <mask id=\"path-69-inside-49_10718_32869\" fill=\"white\">\n                    <path d=\"M183.392 502.521L184.581 502.948L185.266 503.946L185.906 503.318L186.287 503.52L186.871 504.473L186.691 505.101L187.107 505.269L188.88 503.654L190.44 505.067L190.923 503.789L190.844 502.476L192.18 501.254L192.146 500.682L193.19 501.119L193.953 500.458L193.818 501.703L194.166 501.871L195.076 500.76L195.603 501.624L197.578 502.779L198.521 502.97L198.476 503.845L199.307 504.45L199.453 505.168L201.361 503.643L202.068 504.024L202.651 503.542L202.988 503.643L203.347 504.551L202.079 505.292L201.843 507.198L201.451 507.344L201.529 507.972L202.472 508.959L202.438 509.689L201.956 511.506L200.867 513.199L200.553 515.128L199.644 516.474L200.16 517.697L201.282 518.067L200.115 518.561L200.238 519.155L199.543 520.826L200.07 521.522L199.677 522.868L198.443 523.563L196.759 525.156L196.894 526.064L196.31 527.59L195.749 527.376L195.177 527.96L194.671 529.429L195.39 530.192V530.696L193.908 532.401L194.425 534.824L194.054 535.475L192.27 537.28L189.699 539.187L188.027 536.72L185.771 535.957L185.199 536.159L184.301 535.172L184.514 534.835L183.425 534.611L182.887 534.084L181.652 534.05L180.215 533.041L180.103 531.717L179.62 531.19L179.216 531.235L179.059 531.908L178.487 531.784L177.78 531.078L177.937 530.472L177.106 530.001L174.401 530.237L172.853 529.003L172.213 528.027L171.663 528.083L171.203 527.522L170.44 527.332L169.295 528.218L169.07 527.634L169.878 526.333L169.755 525.918L170.372 525.66L171.124 524.135L170.44 523.339L169.317 523.204L169.463 522.722L169.059 522.509L168.296 522.901L168.094 522.553L168.397 521.398L167.903 520.804L168.026 519.738L167.409 519.447L166.545 518.123L167.072 517.54L167.084 516.99L168.206 516.463L169.71 516.979L170.002 516.149L169.822 515.252L169.284 514.814L169.362 514.399L169.856 514.063L171.371 514.455L171.685 514.22L171.562 513.861L170.361 513.311L170.787 512.84L173.447 513.827L174.929 511.797L176.5 511.988L176.096 511.371L176.826 511.629L178.229 511.337L179.418 512.178L181.136 511.214L182.494 511.763L182.864 511.36L182.179 510.519L184.155 508.859L184.267 507.356L184.884 506.402L184.447 505.46L184.536 504.372L183.392 502.521Z\" />\n                </mask>\n                <path d=\"M183.392 502.521L184.581 502.948L185.266 503.946L185.906 503.318L186.287 503.52L186.871 504.473L186.691 505.101L187.107 505.269L188.88 503.654L190.44 505.067L190.923 503.789L190.844 502.476L192.18 501.254L192.146 500.682L193.19 501.119L193.953 500.458L193.818 501.703L194.166 501.871L195.076 500.76L195.603 501.624L197.578 502.779L198.521 502.97L198.476 503.845L199.307 504.45L199.453 505.168L201.361 503.643L202.068 504.024L202.651 503.542L202.988 503.643L203.347 504.551L202.079 505.292L201.843 507.198L201.451 507.344L201.529 507.972L202.472 508.959L202.438 509.689L201.956 511.506L200.867 513.199L200.553 515.128L199.644 516.474L200.16 517.697L201.282 518.067L200.115 518.561L200.238 519.155L199.543 520.826L200.07 521.522L199.677 522.868L198.443 523.563L196.759 525.156L196.894 526.064L196.31 527.59L195.749 527.376L195.177 527.96L194.671 529.429L195.39 530.192V530.696L193.908 532.401L194.425 534.824L194.054 535.475L192.27 537.28L189.699 539.187L188.027 536.72L185.771 535.957L185.199 536.159L184.301 535.172L184.514 534.835L183.425 534.611L182.887 534.084L181.652 534.05L180.215 533.041L180.103 531.717L179.62 531.19L179.216 531.235L179.059 531.908L178.487 531.784L177.78 531.078L177.937 530.472L177.106 530.001L174.401 530.237L172.853 529.003L172.213 528.027L171.663 528.083L171.203 527.522L170.44 527.332L169.295 528.218L169.07 527.634L169.878 526.333L169.755 525.918L170.372 525.66L171.124 524.135L170.44 523.339L169.317 523.204L169.463 522.722L169.059 522.509L168.296 522.901L168.094 522.553L168.397 521.398L167.903 520.804L168.026 519.738L167.409 519.447L166.545 518.123L167.072 517.54L167.084 516.99L168.206 516.463L169.71 516.979L170.002 516.149L169.822 515.252L169.284 514.814L169.362 514.399L169.856 514.063L171.371 514.455L171.685 514.22L171.562 513.861L170.361 513.311L170.787 512.84L173.447 513.827L174.929 511.797L176.5 511.988L176.096 511.371L176.826 511.629L178.229 511.337L179.418 512.178L181.136 511.214L182.494 511.763L182.864 511.36L182.179 510.519L184.155 508.859L184.267 507.356L184.884 506.402L184.447 505.46L184.536 504.372L183.392 502.521Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-69-inside-49_10718_32869)\" />\n                <mask id=\"path-70-inside-50_10718_32869\" fill=\"white\">\n                    <path d=\"M870.854 118.085L870.551 117.121L871.954 117.603L875.601 121.944L876.185 123.424L877.375 124.624L877.577 126.497L876.623 127.619L875.736 126.744L875.77 125.937L874.804 124.467L873.154 123.088L872.75 121.271L871.897 120.362L871.751 119.196L871.381 119.42L871.662 120.194L870.809 119.857L870.854 118.085ZM886.41 192.325L886.398 192.617L885.86 191.91L885.534 192.011L885.399 192.774L884.344 192.359L882.964 191.181L883.143 190.351L883.738 190.194L884.614 191.305L884.221 190.71L886.028 189.802L887.801 189.914L887.936 190.351L888.228 190.015L888.632 190.34L889.07 190.037L890.439 190.071L891.236 191.26L891.191 192.056L889.923 194.109L889.081 194.434L888.104 193.604L887.914 192.774L886.6 192.606L886.41 192.325ZM907.476 140.316L910.069 140.159L912.493 137.523L913.661 134.842L914.098 132.79L914.536 132.453L914.155 132.498L914.323 131.589L914.862 131.04L915.535 129.099L916.444 128.045L917.421 128.684L918.217 128.617L919.778 127.574L923.885 126.542L925.547 128.135L927.881 128.999L933.392 134.898L934.93 137.186L936.018 139.777L935.94 140.45L935.345 141.101L935.21 142.783L935.76 145.845L936.142 146.328L933.257 147.505L929.374 146.047L927.129 146.204L925.692 145.385L920.215 144.286L918.161 143.389L914.244 140.776L912.92 140.484L910.541 140.877L906.971 142.951L906.231 142.806L905.479 141.179L905.928 140.338L907.476 140.316ZM916.029 119.622L915.614 120.609L915.962 122.078L915.692 123.592L915.086 124.523L914.087 124.792L913.043 125.443L912.269 126.475L911.831 126.441L911.966 126.845L912.74 126.699L912.594 126.924L911.292 126.823L910.372 126.026L909.037 123.289L908.666 121.629L908.891 118.152L909.351 117.233L910.395 116.56L914.199 116.122L915.659 116.975L916.119 118.175L916.029 119.622ZM870.943 80.1631L871.336 79.8491L871.931 77.4937L872.133 74.8915L871.864 72.166L872.672 68.7338L872.717 67.7916L872.279 67.2869L872.683 66.1316L874.479 72.0987L875.635 73.5343L876.791 74.2858L875.758 75.8L874.838 78.2452L874.703 78.9406L875.433 80.1407L873.929 82.283L871.493 82.5634L871.19 82.2942L870.943 80.1631ZM1056.56 308.312L1055.62 310.174L1056.89 312.653L1056.41 313.18L1055.43 312.944L1054.79 313.191L1054.21 312.114L1053.1 311.823L1051.27 312.653L1049.7 312.866L1048.77 314.391L1047.81 315.019L1047.78 316.13L1047.42 316.612L1044.97 316.478L1043.47 315.289L1044.1 314.739L1044.01 313.909L1041.99 312.597L1041.72 311.004L1041.36 310.858L1040.24 312.148L1040.06 313.27L1039.23 313.819L1038.42 313.404L1036.55 313.494L1035.48 312.63L1035.07 311.273L1033.69 312.171L1031.96 311.632L1030.16 311.913L1029.67 310.959L1028.76 311.15L1028.21 312.182L1027.13 312.473L1026.77 311.441L1025.93 311.385L1025.43 310.802L1024.7 310.589L1023.45 311.363L1023.42 312.294L1022.01 313.18L1022.24 314.066L1023.28 315.008L1023.2 316.466L1021.74 318.676L1020.71 318.721L1020.88 317.622L1020.44 317.094L1019.39 317.364L1017.92 317.218L1017.33 317.857L1016.12 318.239L1015.89 319.943L1016.46 320.157L1016.12 321.727L1016.41 322.4L1015.19 323.925L1014.97 324.991L1015.89 325.821L1015.73 326.752L1015.06 327.683H1014.12L1013.62 328.21L1013.61 328.928L1012.95 329.163L1011.61 328.726L1010.58 329.567L1009.4 329.881L1009.41 330.509L1008.74 331.384L1008.65 333.459L1007.61 334.031L1008.66 338.192L1009.9 338.843L1010.05 339.381L1009.68 340.256L1008.07 341.187L1007.29 342.679L1006.2 342.881L1005.96 343.363L1006.87 344.776L1006.5 345.685L1004.53 346.178L1003.98 345.853L1004.45 344.686L1002.92 344.013L1001.15 344.821L1000.37 344.832L999.499 346.773L998.893 346.986L998.007 345.83L997.165 346.503L996.794 346.032L995.964 346.717L994.651 346.874L992.9 346.447L992.44 347.199L992.541 349.745L991.665 349.711L990.442 348.949L989.275 349.106L988.983 348.175L987.737 347.132L987.872 346.1L987.546 345.404L988.343 344.709L988.399 344.025L987.108 343.307L987.12 342.578L985.986 342.398L985.593 343.217L982.799 345.292L981.867 344.877L982.047 345.696L980.958 345.584L980.071 344.63L978.926 344.294L978.567 345.146L977.624 344.339L976.704 344.978L975.514 344.361L975.368 343.329L974.448 342.858L972.798 344.72L971.878 345.191L972.17 346.672L973.898 348.881L972.046 351.741L971.71 352.684L971.811 353.794L971.014 354.063L969.611 353.816L969.903 353.155L968.544 352.089L969.106 350.53L968.623 350.036L967.209 350.956L966.378 350.721L966.143 351.831L965.245 351.775L962.551 349.7L960.082 350.081L958.735 349.431L958.264 349.801L957.467 352.65L956.49 353.996L952.596 355.622L952.371 356.396L952.742 358.583L952.18 360.479L950.968 362.116L951.137 363.047L950.452 364.584L950.553 365.38L949.509 366.737L949.184 367.769L949.913 368.768L949.924 369.564L949.374 370.215L950.946 371.482L951.092 373.635L950.396 374.723L950.486 375.441L951.181 375.912L950.665 377.774L951.238 378.47L950.946 378.918L950.048 379.187L949.745 378.873L948.847 379.737L949.341 380.556L948.701 381.846L948.903 383.192L948.566 384.134L947.814 384.246L947.13 385.491L946.692 385.289L946.12 386.085L945.525 386.276L945.626 387.319L944.66 388.284L944.066 390.763L942.786 391.211L941.922 392.378L940.71 392.423L940.182 392.804L939.307 392.333L939.161 391.626L939.655 390.819L939.385 390.022L939.733 388.968L939.273 388.766L938.039 389.417L937.388 390.729L936.422 388.99L936.714 388.575L936.344 387.712L935.603 387.555L934.638 388.138L934.683 387.712L933.919 387.173L933.875 386.276L932.842 386.714L932.898 388.093L932.011 389.159L931.922 390.09L931.215 390.336L930.923 389.495L928.914 388.912L927.881 390.09L927.017 390.202L925.771 389.327L925.266 387.218L924.458 387.241L923.986 387.902L922.853 388.295L922.269 387.129L921.293 386.871L921.136 386.31L920.395 385.928L919.867 385.143L919.901 383.988L918.947 383.394L918.116 382.137L917.926 381.173L917.174 381.543L916.253 381.476L916.298 380.343L915.288 380.399L914.805 379.524L913.672 379.535L912.875 381.049L911.248 381.105L910.507 381.677L909.732 386.725L910.215 387.454L909.441 388.306L909.34 388.912L907.824 388.822L907.084 389.192L907.488 390.471L906.107 394.554L905.389 394.89L904.244 396.898L902.695 397.234L901.618 398.019L900.574 397.672L900.058 398.21L900.08 399.163L899.654 399.668L898.116 399.679L897.577 400.094L897.173 399.478L896.69 400.33L897.061 401.306L896.713 401.934L894.794 403.616L894.053 403.437L893.806 403.796L894.098 404.626L892.919 407.318L895.377 410.223L893.795 413.98L894.3 415.203L893.099 417.424L893.088 418.904L892.785 419.409L893.144 420.362L892.964 421.899L893.604 422.706L892.762 424.019L892.964 425.365L893.548 425.679L893.582 426.038L892.942 426.811L892.021 426.845L892.19 425.948L891.864 425.208L891.326 425.667L888.396 425.623L887.083 426.946L887.24 427.978L886.903 428.505L884.67 430.558L882.941 430.849L881.482 432.218L880.921 432.263L879.664 431.489L877.891 431.365L875.882 430.737L875.781 430.3L874.165 429.38L873.042 429.189L872.144 429.447L869.619 432.902L869.63 433.911L868.833 434.764V435.168L868.104 435.56L866.14 434.809L865.657 434.988L864.669 433.81L864.209 433.777L863.255 434.573L862.391 434.562L861.538 433.799L860.808 434.035L858.855 433.014L856.083 433.62L855.118 433.07L852.952 433.967L851.886 433.777L851.167 434.136L850.898 435.302L850.213 435.605L849.596 435.437L849.102 436.727L849.865 437.512L849.506 438.375L847.699 438.746L846.869 441.426L847.295 442.514L846.532 443.445L846.251 444.522L844.22 444.264L844.736 447.999L844.141 448.212L843.726 449.076L844.231 451.162L843.064 451.229L842.435 450.478L841.088 449.917L840.494 448.986L839.001 449.345L839.18 450.635L839.966 450.825L839.764 451.768L840.381 452.519L841.65 453.035L841.234 453.786L843.737 456.433L843.445 456.994L842.985 457.084L842.828 457.768L842.188 457.824L841.29 458.632L841.178 459.238L839.921 460.785L839.887 461.974L839.382 462.95L838.945 463.231L837.733 462.625L837.744 462.187L837.306 462.255L837.07 463.309L836.475 463.444L836.767 464.509L837.564 464.599L838.776 465.743L841.694 470.229L841.537 470.846L840.426 471.62L840.325 473.28L840.942 474.357L840.639 474.895L839.988 475.075L839.225 473.987L838.586 474.985L838.069 475.097L837.407 474.368L836.767 474.593L836.105 475.591L835.903 478.126L834.444 480.705L833.782 482.904L833.849 483.767L834.523 484.799L834.534 486.056L832.424 485.024L829.057 485.293L828.406 485.899L827.452 485.584L826.666 485.921L826.127 485.214L825.6 485.125L825.14 485.472L823.636 485.069L823.119 485.36L822.277 485.181L821.705 485.618L820.964 485.45L820.493 485.921L819.808 485.831L818.843 486.336L819.707 487.738L818.45 488.871L817.665 488.557L816.89 488.792L815.925 488.086L814.836 488.052L814.286 487.323L812.457 486.19L811.66 485.988L811.166 486.392L810.257 486.19L809.415 486.571L808.641 485.764L807.979 485.865L807.271 487.143L805.812 487.48L805.105 486.044L803.063 485.988L802.12 486.313L801.559 487.301L799.965 486.93L799.695 486.493L798.18 487.525L796.665 487.177L795.745 487.345L795.038 487.166L794.892 485.674L794.331 485.304L792.591 484.721L791.278 485.102L789.549 483.532L787.439 483.386L786.283 483.947L784.218 483.251L784.173 482.825L782.714 482.904L782.13 482.489L781.76 480.818L780.525 480.01L778.292 476.331L777.248 475.669L773.948 475.793L772.613 475.411L771.098 474.705L769.526 473.022L769.066 474.121L768.426 474.514L767.674 474.469L763.656 470.701L762.141 470.6L761.254 470.947L759.369 470.577L759.324 469.31L758.83 469.029L758.538 467.739L758.101 467.302L753.701 466.45L752.051 466.629L751.568 466.393L749.234 466.82L746.922 468.379L744.385 468.603L743.218 467.504L742.937 465.44L743.42 464.801L741.243 461.021L741.68 458.609L740.603 458.06L740.064 458.284L740.019 459.226L739.57 459.596L739.121 458.778L739.267 457.566L739.009 456.837L738.156 456.389L738.728 452.519L739.166 451.543L738.807 448.874L739.076 448.089L738.369 446.294L738.807 445.643L738.706 444.847L736.203 443.198L736.618 439.991L736.057 438.252L736.562 437.175L736.024 436.828L735.597 433.822L736.697 432.296L735.99 430.434L732.993 429.391L732.679 428.27L731.916 427.372L730.782 427.664L730.614 427.114L730.221 428.225L729.682 428.516L729.424 429.997L728.56 430.412L728.133 430.042L727.718 428.539L726.54 429.47L725.743 429.133L724.183 429.313L723.195 428.572L722.903 427.81L723.161 426.991L723.049 423.996L722.319 423.301L722.847 422.594L723.588 422.303L724.216 420.486L722.477 420.901L722.073 420.474L722.028 419.252L721.635 418.601L721.006 417.906L719.828 417.513L719.727 416.661L718.762 416.459L717.931 415.371L716.348 415.517L716.023 414.922L715.114 414.911L715.069 414.373L714.216 413.935L712.869 413.924L712.925 413.307L711.938 412.601L711.32 412.612L709.143 413.902H708.279L707.706 413.408L706.561 415.068L706.27 416.784L705.652 417.872L705.024 418.231L703.441 418.175L702.027 420.194L702.409 421.08L702.24 421.888L701.365 422.056L699.749 423.368L699.075 424.299L699.086 425.241L698.514 425.466L697.942 425.185L697.515 425.544L697.594 426.217L696.83 426.284L696.438 426.868L696.415 427.507L695.54 427.597L694.631 428.494L694.316 429.761L693.183 430.647L693.609 432.251L693.441 433.07L691.825 434.551L690.927 434.45L688.592 435.325L687.537 437.063L686.673 436.446L686.662 435.583L686.101 436.02V438.959L685.551 439.34L684.978 439.318L684.675 437.725L685.023 436.379L684.81 434.842L685.629 433.934L686.639 433.451L686.651 432.117L685.012 432.128L683.923 432.61L684.282 430.49L683.609 429.369L681.454 432.375L679.198 432.936L678.401 433.777L677.178 432.902L675.651 433.283L675.27 433.956L674.596 433.889L674.114 433.25L673.115 433.552L670.994 433.205L670.477 433.866L669.916 435.762L669.243 436.491L668.446 436.558L667.469 437.153L664.439 437.007L663.429 437.377L663.07 435.942L662.194 436.334L661.835 435.986L661.936 434.797L660.96 433.62L660.724 432.644L659.186 431.915L659.332 431.096L659.871 430.524L659.399 430.165L659.613 429.369L661.004 427.72L661.308 426.643L660.948 425.667L662.52 423.301L662.531 422.213L663.485 420.755L662.901 419.521L663.395 417.401L664.057 416.549L664.349 415.259L665.112 414.743L665 413.576L665.864 412.836L665.977 412.129L666.729 411.793L666.773 411.311L666.145 410.84L666.246 410.38L667.75 410.122L668.233 408.989L667.817 408.215L669.703 405.602L670.051 403.179L669.164 402.528L667.795 402.73L666.841 402.046L666.313 400.734L665.786 400.341L665.056 400.666L664.529 400.487L664.158 399.736L664.495 396.012L662.654 393.118L662.239 391.245L662.845 389.428L663.552 388.542L665.112 387.757L665.011 386.814L665.685 385.469L665.225 384.01L665.573 383.438L664.776 381.319L662.385 381.363L661.442 382.003L660.23 380.242V378.784L660.836 378.245L660.87 377.572L661.465 377.146L661.756 375.811L663.137 374.51L663.216 373.961L662.037 372.615L661.689 371.717L661.117 364.573L660.095 364.887L658.446 361.589L656.796 361.825L654.708 360.77L653.428 360.815L651.509 361.455L651.184 360.681L652.486 358.303V357.092L655.741 356.867L656.448 356.161L656.414 355.51L655.965 355.196L656.335 353.57L655.797 352.796L654.461 352.571L654.124 351.853L653.754 350.238L654.18 349.162L653.597 348.679L653.53 347.412L653.103 347.289L652.16 348.242L651.027 347.76L650.14 348.264L650.039 348.949H649.04L646.526 347.255L645.695 347.132L645.101 347.636H643.978L643.72 345.965L641.599 345.774L641.139 344.776L639.713 344.888L638.95 342.701L638.265 343.094L638.4 343.823L638.03 344.226L635.92 344.485L634.764 345.012L634.258 344.372L634.606 343.755L634.483 342.892L633.405 342.589L632.373 343.654L631.262 341.961L631.61 341.512L631.262 340.009L632.407 340.054L632.687 339.594L632.373 338.686L633.226 337.16L632.945 336.409L633.215 335.5L633.641 335.411L634.135 336.184L635.01 335.882L634.214 335.22L634.202 334.39L633.585 333.863L633.506 332.921L633.832 332.36L634.808 332.27L635.089 331.418L635.987 331.115L636.829 329.735H637.715L637.064 328.614L637.749 327.043L638.613 326.415L639.534 326.281L640.207 326.583L640.488 324.867L641.868 323.847L641.565 323.42L640.33 323.443L639.051 321.514L637.457 320.594L637.513 313.416L637.087 312.249L634.966 310.903L635.078 306.002L636.11 304.117L635.65 301.549L635.976 300.068L635.325 299.261L635.168 298.229L634.337 298.453L633.989 298.083L634.606 297.051L634.629 295.986L633.058 296.266L632.889 295.234L631.98 295.043L631.116 295.514L629.623 294.034L629.814 293.383L632.867 293.406L633.551 292.991L634.101 290.288L635.807 290.041L637.255 288.605L638.714 289.11L639.5 288.302L639.87 286.542L639.994 281.034L640.959 269.47L641.172 259.219L640.723 254.149L637.805 248.003L634.707 242.54L634.999 241.026L635.762 240.589L636.402 239.243L637.558 238.312L638.972 239.209L641.857 238.929L645.549 236.371L647.794 235.597L649.264 235.732L649.736 235.384L650.432 233.623L652.228 232.109L656.369 231.84L657.031 232.008L656.964 233.175L657.357 233.758L658.939 234.027L660.41 233.511L661.364 231.01L661.577 228.812L662.183 228.139L662.239 227.522L661.15 226.939L661.375 225.043L660.802 224.381L660.937 223.024L662.475 222.407L662.901 221.061L662.587 219.94L662.946 219.334L668.367 218.459L667.986 217.427L666.527 216.306L666.583 214.87L667.155 214.421L666.852 213.535L667.279 212.683L668.266 211.864L669.535 211.628L670.511 210.428L673.485 209.475L675.853 207.703L677.503 207.501L678.3 206.02L681.678 205.044L683.081 203.07L683.598 203.093L684.237 204.147L684.686 203.912L685.102 202.7L686.269 202.566L686.662 201.511L686.359 200.715L686.594 199.369L687.751 199.1L687.762 197.866L687.055 197.361L685.798 197.193L684.383 195.275L682.7 194.456L682.431 193.615L682.655 191.159L681.903 184.418L682.15 180.93L681.802 175.882L680.264 175.344L679.737 174.29L678.85 174.032L679.187 171.441L678.311 170.319L677.099 170.364L676.448 169.411L674.821 169.489L674.147 168.334L674.551 167.279L675.36 166.416L675.382 164.834L674.551 163.836L672.958 163.455L673.16 162.098L672.599 161.705L671.869 161.817L671.375 157.566L671.723 155.345L672.677 152.721L671.319 152.452L671.903 151.352L672.958 151.128L673.047 149.973L672.352 148.773L672.868 147.763L672.542 147.079L671.072 146.664L669.344 147.337L668.502 146.002L670.163 144.208L669.995 142.66L666.661 140.989L667.155 140.114L671.072 140.058L672.801 134.999L673.609 134.943L674.518 135.549L674.967 135.19L674.226 133.104L672.823 132.79L673.115 130.3L673.755 129.346L675.865 127.754L677.907 130.356L680.668 131.937L684.372 132.7L688.076 132.262L688.951 131.646L689.659 129.929L688.143 125.017L688.368 124.265L689.49 126.497L691.073 128.045L691.701 130.389L693.037 133.35L693.385 135.796L692.173 137.153L691.342 139.957L692.072 140.865L692.375 141.92L694.036 142.918L694.182 144.881L693.744 145.778L694.406 145.924L694.777 145.599L695.933 143.355L697.257 143.636L698.054 143.198L698.525 142.447L697.942 142.211L696.943 142.895L696.572 142.671L694.406 140.293L694.002 139.519L694.092 138.532L693.733 138.129L697.336 136.951L698.626 135.852L699.737 135.526L701.948 136.054L704.9 135.515L706.415 134.214L706.977 134.293L706.46 133.822L707.774 132.958L708.492 132.621L709.401 133.182L709.064 132.722L709.322 132.509L710.333 132.408L711.006 132.868L711.085 132.644L713.767 132.947L716.09 134.001L717.976 133.552L718.93 133.777L724.878 136.278L728.672 136.536L730.075 136.065L735.732 136.839L736.439 137.355L736.428 138.465L736.966 138.544L737.741 139.62L736.933 140.293L736.158 140.405L735.384 139.273L735.238 139.542L734.486 139.228L734.362 139.789L733.263 140.888L733.251 142.077L733.801 142.323L733.824 142.671L732.959 144.208L733.285 144.769L733.24 146.036L734.194 147.382L737.651 148.84L739.222 149.95L741.781 150.758L743.588 152.295L745.103 151.734L745.743 151.846L747.326 152.496L751.299 152.867L754.756 154.257L757.618 153.259L759.414 153.08L761.243 154.011L761.299 153.517H762.152L762.332 154.011L764.386 152.844L765.07 153.932L765.452 153.528L766.597 154.482L767.719 154.583L767.416 153.338L767.854 153.742L768.628 153.708L766.709 151.981L766.799 151.622L767.338 151.543L768.853 153.338L771.243 154.19L771.49 155.076H772.108L772.725 154.605L773.185 153.259L773.735 153.147L773.421 151.061L774.251 149.143L774.139 150.332L774.543 150.242L774.678 149.255L775.419 149.883L775.587 149.502L776.103 149.468L775.351 149.098L774.7 148.055L773.937 148.044L775.329 146.922L775.901 147.359L776.193 146.642L775.306 146.597L775.172 146.159L774.891 146.799L774.745 145.812L774.206 145.655L774.644 145.419L774.79 144.623L774.375 145.083L774.308 144.623L773.556 144.432L774.263 143.961L773.443 143.479L773.219 142.604L773.387 142.267L774.476 142.009V141.662L773.814 141.92L773.499 141.74L773.645 141.381L773.208 141.65L772.399 141.191L772.725 140.91L772.882 141.325L773.241 141.247L772.815 140.237L773.174 139.631L773.455 140.024L773.275 140.506L774.139 141.449L774.397 141.348L773.892 140.585L774.072 139.351L773.802 139.732L773.252 138.97L772.938 139.037L773.365 138.196L772.927 137.029L773.634 137.343L773.937 137.074L773.533 136.928L773.264 136.009L774.061 136.951L774.397 136.626L773.668 135.504L774.072 135.347L773.758 134.046L774.117 134.326L774.397 134.057L774.139 134.954L774.487 135.381L774.756 133.979L775.003 133.866L775.071 134.663L775.138 134.001L775.52 133.9L775.138 135.167L775.25 135.381L775.531 134.573L775.912 134.786L775.699 135.437L776.182 135.829L776.328 136.536L777.024 134.876L777.439 135.762L777.787 135.538L777.484 135.078L777.821 134.842L778.337 135.571L778.786 134.73L778.73 133.698L779.571 133.35V132.756L779.392 132.913L779.751 132.229L780.2 132.049L779.796 132.476L779.998 132.834L780.413 132.262L779.729 130.95L780.155 130.838L780.447 131.668L780.716 131.332L780.896 131.623L781.401 129.829L781.872 129.885L781.592 130.917L782.198 130.715L782.153 131.612L782.4 130.961L782.49 131.668L783.432 131.332L783.646 132.173L784.375 131.444L784.005 132.61L784.353 133.014L784.319 134.169L784.689 133.014L784.465 132.801L785.419 131.87L785.778 132.173L785.307 132.599L785.262 133.216L785.913 132.767L785.711 133.586L786.048 134.136L786.676 132.633L786.631 135.56L786.799 134.786L787.349 134.337L787.035 133.62L787.574 133.193L787.922 134.102L787.641 133.866L787.484 134.64L788.236 134.472L787.596 136.951L788.505 135.078L787.944 138.028L788.281 137.904L788.528 136.884L788.674 137.59L788.82 137.175L789.381 137.534L789.493 135.829L789.74 136.435L789.403 136.917L790.066 137.534L790.144 135.941L790.077 136.457L790.47 136.928L790.29 137.456L790.986 137.31L791.087 137.837L791.48 137.299L791.323 137.871L791.603 138.05L791.884 137.523L791.648 138.431L791.85 139.172L792.265 139.362L792.288 140.394L792.546 140.125L792.423 139.351L792.681 139.317L792.625 140.439L792.827 140.192L792.984 140.787L793.04 140.002L793.332 139.946L793.635 140.551L793.792 139.699L793.13 139.497L792.939 139.755L793.006 139.194L794.117 139.474L794.308 139.116L793.657 138.824L793.983 137.59L794.499 138.207L794.095 138.566L794.521 138.88L795.206 138.286L795.24 139.149L795.576 137.994L795.812 138.028L795.621 138.633L796.575 137.074L796.676 137.579L797.092 136.951L797.507 138.33L797.81 137.938L798.102 138.039L797.664 138.869L798.057 139.015L797.541 141.168L798.023 142.626L799.112 141.852L800.481 141.897L800.436 140.731L801.199 139.744L801.222 141.067L801.671 141.92H802.153L801.761 140.652L801.94 140.45L802.546 140.753L802.288 140.394L802.715 138.465L802.524 138.106L802.894 137.669L804.634 137.657L805.397 138.016L806.104 139.059L805.801 139.845L806.071 140.271L806.374 139.116L806.901 139.665L807.922 139.273L809.853 139.418L809.887 139.789L808.843 140.787L809.056 141.146L809.931 140.663L810.167 141.101L811.514 140.888L810.683 142.447L811.851 141.179L810.605 142.806L810.975 143.142L812.075 142.536L813.007 142.581L813.635 142.222L814.567 142.996L814.118 143.299L814.601 143.445L814.589 144.174L813.422 144.892L813.725 145.184L813.153 145.419L813.759 145.307L814.185 145.868L816.755 145.542L817.698 146.305L817.384 146.316L817.754 146.619L816.812 147.662L817.485 147.191L817.822 147.472L816.621 149.109L817.249 148.773L817.216 149.221L817.743 148.627L818.215 149.345L818.248 150.22L819.236 149.143L819.977 149.334L820.426 150.018L820.673 149.838L821.155 150.343L820.964 150.534L821.391 151.409L821.178 151.902L821.537 151.61L821.93 152.44L822.446 152.003L822.311 152.384L822.726 152.261L822.749 153.046L823.355 153.484L822.839 153.966L823.321 154.157L821.447 154.246L820.302 153.932L819.988 153.069L819.685 152.934L819.606 153.214L819.786 154.168L821.582 155.48L821.817 156.288L822.244 156.489L821.458 156.804L821.211 157.432L821.582 158.34H822.603L822.311 158.722L821.301 158.643L821.29 159.451L819.921 159.63L820.673 160.348L821.279 160.146L821.267 160.438L820.706 160.393L821.065 160.763L822.233 160.819L822.794 161.481L822.67 162.524L822.109 163.286L820.459 162.591L821.099 163.219L819.696 162.636L819.528 162.871L819.876 163.174L819.561 163.376L820.078 163.825L817.575 163.78L817.687 164.475L817.171 164.453L817.62 165.339L817.148 165.395L817.193 165.978L817.653 165.922L818.428 166.663L818.192 167.246L819.831 166.764L822.233 167.706L822.008 167.762L822.423 168.132L822.277 168.491L821.683 168.827L822.704 169.209L822.266 169.635L822.94 169.837L822.704 170.207L822.985 170.42L822.648 170.465L823.029 170.622L823.052 171.138L821.873 171.306L822.266 171.71L821.683 172.237L822.367 172.024L822.558 172.989L822.289 172.484L821.997 172.865L822.177 173.146L823.411 173.605L822.502 173.83L821.716 175.03L821.829 175.613L822.996 175.086L823.265 175.557L822.794 175.501L823.142 175.86L822.85 176.297L822.491 176.062L822.603 176.398L822.075 176.959L821.11 176.23L821.817 176.97L820.504 177.722L819.584 177.554L819.258 178.013L818.562 178.126L817.844 177.139L817.608 177.172L817.754 177.711L816.104 177.677L815.992 178.316L816.273 178.484L815.925 178.44L815.611 179.169L817.463 181.12L816.497 181.389L815.925 180.986L815.431 180.324L815.218 179.056L814.825 179.169L814.589 180.234L815.173 181.962L816.071 182.735L816.542 185.293L816.879 185.73L817.956 185.977L818.417 186.639L818.495 186.19L820.066 185.382L820.785 184.216L820.066 182.287L819.472 178.866L821.166 182.231L821.559 183.375L821.481 184.362L823.456 186.897L822.491 186.347L821.324 186.224L818.001 187.39L817.406 188.377L817.822 188.501L818.046 189.129L817.878 190.026L818.63 190.172L818.989 189.712L820.471 189.566L821.279 191.45V192.864L820.897 192.684L821.245 193.077L820.908 193.234L821.582 192.965L822.423 197.171L824.657 199.178L824.96 200.883L825.645 201.691L825.375 202.139L825.847 201.949L826.834 202.296L826.812 202.689L827.295 202.263L827.732 202.869L828.013 202.801L829 205.19L828.709 205.83L829.562 207.007L830.291 207.176L831.133 206.828L831.301 208.14L831.907 208.488L832.94 208.129L833.322 207.456L833.164 205.953L833.512 205.471L833.4 206.447L834.388 209.957L834.186 210.383L835.14 211.785L836.229 211.494L837.811 209.968L840.191 206.469L840.909 204.001L840.864 201.354L841.425 200.906L842.794 197.451L843.243 194.131L844.736 188.377L847.306 182.377L848.249 181.008L848.956 180.616L849.832 180.705L851.01 180.088L851.93 180.189L853.446 182.276L853.502 183.251L852.873 181.861L851.571 180.627L850.741 180.582L849.865 181.176L850.18 181.457L849.832 181.894L849.035 181.502L849.315 183.532L848.822 184.519L849.102 185.483L850.46 186.112L851.975 189.331L853.176 191.024L855.14 192.965L856.869 194.097L860.999 195.533L862.829 195.544L864.557 194.838L865.612 193.144L867.262 191.664L868.44 191.293L870.955 189.364L870.854 189.611L872.111 188.904L873.065 189.185L874.221 188.759L879.204 190.419L879.024 190.576L879.518 191.226L880.304 191.63L880.753 191.327L881.797 191.417L883.918 194.21L885.635 194.557L886.836 195.387L886.522 196.004L887.307 195.522L887.094 196.24L887.7 195.735L887.15 197.182L887.521 197.126L887.375 197.956L887.835 197.844L887.925 198.438L888.385 198.562L888.632 197.989L889.182 197.799L889.002 198.292L890.012 198.337L890.024 198.696L891.135 199.391L891.685 199.448L892.527 198.752L892.448 197.821L891.359 197.53L891.337 195.914L890.798 196.004L890.832 195.556L890.383 195.903L890.372 195.376L890.012 195.645L889.765 195.331L890.506 195.219L891.034 194.524L892.302 190.194L893.694 189.88L894.648 190.06L894.861 191.462L895.175 191.473L895.557 190.946L896.242 191.092L896.208 190.71L896.589 190.733L895.916 189.701L896.073 189.42L897.869 188.815L899.003 189.959L900.147 190.149L900.282 193.447L900.978 194.658L902.033 194.355L902.28 194.613L902.965 192.415L904.772 192.774L905.4 193.783L905.568 193.256L905.95 193.223L905.995 193.604L906.623 192.022L907.027 192.651L907.128 192.224L907.319 192.449L907.667 192.101L907.488 191.809L907.869 191.832L907.072 191.506L906.882 190.89L906.702 191.058L905.265 187.3L905.243 184.653L905.535 184.631L905.232 184.485V183.599L905.838 183.296L905.793 183.005L905.164 182.713L904.783 181.389L902.123 180.537L903.885 180.896L904.682 180.638L905.31 179.236L905.355 178.013L906.444 176.78L906.848 175.176L907.207 174.85L908.206 175.692L909.463 174.727L909.081 173.706L907.959 173.37L905.804 173.594L904.861 173.314L904.031 173.538L902.459 175.479L900.731 174.671L900.462 171.979L901.281 169.882L904.02 166.405L906.152 166.18L908.127 166.831L908.61 167.493L909.474 166.808L911.966 166.696L913.997 165.53L915.041 165.877L914.749 165.339L915.344 164.464L917.039 163.746L917.387 163.814L917.297 164.117L917.668 163.903L917.746 163.578L916.545 163.242L916.669 162.928L916.276 162.726L916.489 162.042L915.311 160.404L915.12 160.527L913.986 158.138L913.369 157.891L913.582 157.521L913.178 157.095L913.032 155.85L914.222 155.772L916.377 156.467L917.679 156.478L918.543 156.949L918.902 157.791L920.316 158.946L922.976 160.079L928.723 160.718L935.726 160.931L937.522 161.683L941.507 162.053L945.996 163.533L952.293 164.868L956.198 166.472L961.979 169.5L962.63 169.983L962.607 170.801L963.572 171.429L968.455 170.543L971.451 170.914L972.596 170.656L975.256 170.88L982.383 174.009L984.965 176.028L987.209 178.81L988.186 181.064L988.455 182.881L988.107 183.666L984.594 185.865L984.089 183.577L983.865 184.463L983.517 184.429L983.921 183.655L983.539 182.388L983.102 182.074L982.249 182.332L982.765 182.724L982.26 183.072L982.215 183.588L981.867 183.319L981.642 183.532L980.969 185.102L980.206 185.495L979.88 186.112L979.712 186.639L980.217 187.648L980.599 186.975L981.463 187.592L982.192 187.11L983.281 188.321L984.302 188.444L986.424 188.198L987.041 187.715L988.242 188.523L988.388 189.039L989.061 189.274L988.949 190.026L989.454 190.419L989.499 191.428L990.431 191.72L992.709 191.563L992.137 191.955L993.248 192.213L993.18 194.602L993.854 195.623L996.514 194.714L996.929 195.354L1000.26 196.655L1002.35 199.717L1001.89 199.661L1002.64 201.467L1003.44 202.397L1003.38 202.846L1004.81 204.652L1004.58 205.145L1004.24 204.854L1003.14 205.168L1001.5 204.91L1001.45 205.235L1002.29 205.841L1003.57 205.964L1005.83 207.961L1008.24 208.993L1011.71 208.903L1013.72 208.398L1014.06 208.701L1014.38 208.23L1016.55 207.725L1017.03 207.826L1017.1 208.342L1017.65 207.826L1018.41 208.05L1019.49 207.086L1022.67 205.695L1027.6 204.416L1028.89 203.777H1030.65L1032.36 202.992L1033 203.205L1036.28 202.498L1040.59 202.712L1041.12 202.285L1041.5 202.543L1043.23 202.285L1046.69 202.801L1053.23 204.529L1057.68 206.413L1061.11 208.589L1064.73 211.875L1067.19 215.677L1068.44 219.323L1069.03 222.497L1067.86 225.346L1067.92 226.714L1067.23 228.139L1067.25 229.002L1065.61 231.582L1067.02 233.87L1069.67 235.911L1069.33 235.295L1070.05 235.362L1073.21 236.955L1073.55 236.551L1075.9 237.37L1076.25 239.321L1075.89 241.43L1076.34 246.174L1076.95 246.511L1077.54 244.873L1076.8 242.675L1076.83 241.542L1079.89 238.693L1080.41 238.547L1081.02 238.873L1081.33 238.413L1081.06 239.994L1081.38 240.903L1080.05 242.237L1079.11 242.709L1078.82 242.08L1079.06 243.348L1080.06 243.325L1080.1 243L1080.96 242.776L1081.67 241.43L1082.77 240.286L1084.51 239.781L1084.66 238.828L1085.98 238.02L1085.94 237.168L1086.34 237.414L1087.02 237.235L1087.12 238.177L1086.53 239.893L1085.73 240.286L1086.57 241.531L1086.27 242.686L1087.3 243.202L1087.4 244.929L1089.79 247.991L1089.84 248.653L1088.22 249.023L1087.68 252.377L1088.17 253.285L1089.55 253.824L1090.37 255.585L1089.58 256.976L1088.58 257.626L1088.68 258.882L1089.59 259.589L1089.2 260.621L1089.32 261.563L1088.33 262.169L1088.44 264.277L1087.96 265.141L1088.02 266.969L1087.37 268.068L1084.34 266.655L1079.38 265.141L1078.23 265.399L1075.7 267.709L1073.97 268.405L1067.97 267.788L1067.14 268.001L1066.53 268.663L1065.99 269.964L1064.74 269.392L1064.28 269.728L1063.47 269.695L1062.79 268.921L1059.67 271.613L1056.7 271.433L1055.22 272.51L1054.52 275.314L1053.32 276.873L1053.77 277.972L1054.79 278.511L1054.87 278.926L1054.41 279.677L1053.29 280.159L1052.28 279.98L1050.99 280.294L1050.58 283.154L1050.75 285.072L1051.69 286.788L1051.47 289.2L1051.7 289.794L1053.19 290.265L1054.74 292.363L1056.15 292.587L1058.59 293.81L1058.87 295.077L1058.54 296.973L1059.82 298.599L1059.98 299.306L1058.76 300.001L1058.23 301.078L1058.31 302.065L1056.9 304.151L1056.59 305.463L1055.64 306.136L1055.97 307.46L1056.56 308.312ZM915.153 59.0093L914.805 58.7514L915.905 59.0206L915.715 59.3795L915.153 59.0093ZM958.129 88.9006L956.782 87.3415L957.916 85.4684L957.287 81.8007L958.365 80.0285L958.791 78.3797L958.578 76.8431L959.274 75.3065L960.901 76.5739L961.474 77.9423L960.621 80.1968L961.328 81.5091L961.474 82.5522L963.606 83.9542L964.751 83.9206L965.963 82.956L965.548 82.6643L965.054 83.1242L964.459 83.0233L965.772 81.8792L966.378 81.0156L966.176 80.8361L967.04 80.4884L967.602 80.78L968.477 80.0734L971.631 81.6661L974.661 81.3072L976.098 82.3054L976.233 82.9447L975.571 84.5599L975.941 85.8049L975.784 86.5227L976.132 86.6798L976.457 87.8014L977.894 87.8687L982.428 85.7152L985.492 86.8704L985.604 87.3639L985.874 87.0387L988.758 87.5546L989.903 88.6987L990.094 89.3043L989.51 89.6072L989.6 89.8876L990.206 89.7418L991.878 91.0653L994.202 89.4726L995.448 89.9324L993.136 94.1273L993.45 95.3387L992.9 98.1651L988.276 99.7354L986.85 100.588L985.627 100.779L984.74 101.407L981.407 102.326L979.51 102.439L977.557 101.81L977.31 102.192L973.292 100.98L972.057 99.9373L968.814 95.3835L966.311 94.6657L964.246 93.6226L961.406 90.6727L959.453 89.3492L958.129 88.9006ZM884.591 82.2269L884.356 80.5669L885.209 79.8491L885.411 78.9854L884.76 77.6395L885.287 77.4488L884.782 77.2469L884.535 76.6749L885.411 75.7888L885.007 75.0485L885.141 74.4541L884.468 74.3195L883.222 75.3626L884.378 76.63L884.12 77.1011L883.233 76.1589L882.986 75.3626L884.154 74.5214L884.816 73.3998L884.243 71.1453L884.816 69.9564L885.815 69.6535L886.847 70.1583L887.936 68.7675L886.982 66.771L886.746 67.4439L886.454 65.5708L886.814 63.9669L888.217 62.2284L888.991 61.9143L889.788 62.206L890.45 61.7685L891.965 61.8022L892.695 59.8618L892.583 58.886L893.088 58.0896L893.817 57.7195L894.401 59.458L894.805 59.5029L895.243 56.7325L897.768 55.2295L898.183 55.2519L898.385 55.8352L898.789 55.3865L900.305 55.2183L899.508 55.6445L899.631 57.5624L900.248 58.0784L899.564 58.7626L900.26 58.3252L901.146 59.5702L902.605 60.2095L904.121 62.4976L907.218 63.7089L906.579 65.1783L906.466 64.7745L905.95 64.8642L905.804 66.0756L906.601 66.4906L906.736 67.1299L907.925 67.8814L908.621 68.8235L908.834 68.3973L909.609 68.2179L911.169 69.1152L911.562 70.1583L911.506 71.0892L911.023 71.6164L911.405 72.8838L911.741 73.0072L912.101 72.5697L911.708 71.5379L912.931 71.6724L913.874 72.7156L913.997 73.6689L914.514 74.1512L915.703 73.8708L914.48 71.6949L914.312 69.4741L914.907 66.5691L914.536 65.526L914.648 63.7538L915.602 59.9852L917.623 60.1422L920.956 61.9704L920.025 60.7142L918.633 56.7885L917.982 56.6876L918.15 56.0819H918.431L920.114 57.6522L921.641 58.213L923.784 61.4096L925.232 62.52L926.388 63.9669L926.837 65.3689L928.633 66.9168L932.27 68.5319L933.818 67.9038L934.11 68.1281L934.593 67.2196L935.973 66.7485L939.801 68.3749L942.023 71.1004L943.078 71.6837L944.986 72.0089L945.715 73.3661L946.49 74.0503L949.184 75.6879L950.553 77.718L950.643 78.3685L948.802 78.2003L946.288 80.4996L945.648 82.2606L946.187 84.8179L947.219 85.4348L945.749 86.4779L945.233 89.3492L942.528 92.4337L940.867 92.8262L939.677 93.7908L938.981 93.5441L938.835 92.4337L938.42 92.0635L936.276 91.8168L935.435 92.1981L935.132 93.9254L935.906 93.8245L937.017 95.305L936.894 96.0116L935.726 97.1108L934.761 97.4697L933.392 97.223L931.708 97.8399L931.54 97.3576L931.181 97.3015L930.698 98.0081L930.328 97.8174L930.361 98.1203L929.879 97.4697L929.239 97.2566L928.386 99.3204L929.071 98.7148L929.138 99.0176L927.746 100.128L926.658 100.027L922.943 96.4379L923.291 96.2472L923.571 95.1816L924.402 94.8788L925.367 95.6415L925.793 96.5724H926.231L926.153 95.8322L925.176 94.6881L925.21 93.488L924.02 94.1049L922.258 93.9254L921.506 94.8003L920.204 95.4284L919.935 96.0789L913.852 97.6043L908.958 99.8476L906.994 100.307L908.127 99.8812L907.589 97.6043L906.186 96.4491L906.309 96.0004L905.838 96.0789L905.512 95.3948L904.985 95.1704L904.682 95.4284L904.592 94.9124L903.66 96.5388L903.133 96.5052L903.526 96.8641L903.492 98.5801L903.952 99.0064L904.805 98.1315V98.5017L903.93 99.4102L902.819 103.1L901.707 104.469L900.45 105.22L899.62 105.119L896.78 102.809L892.571 101.485L891.09 99.0625L890.17 96.2696L890.54 96.3033L890.776 95.8546L890.113 96.0341L888.71 94.3741L888.89 93.8357L888.654 93.6562L889.227 93.0393L888.138 93.8581L885.949 92.1757L883.11 86.7358L884.12 87.3415L883.996 87.0835L882.751 86.2087L882.537 83.2588L883.604 82.4288L884.591 82.2269Z\" />\n                </mask>\n                <path d=\"M870.854 118.085L870.551 117.121L871.954 117.603L875.601 121.944L876.185 123.424L877.375 124.624L877.577 126.497L876.623 127.619L875.736 126.744L875.77 125.937L874.804 124.467L873.154 123.088L872.75 121.271L871.897 120.362L871.751 119.196L871.381 119.42L871.662 120.194L870.809 119.857L870.854 118.085ZM886.41 192.325L886.398 192.617L885.86 191.91L885.534 192.011L885.399 192.774L884.344 192.359L882.964 191.181L883.143 190.351L883.738 190.194L884.614 191.305L884.221 190.71L886.028 189.802L887.801 189.914L887.936 190.351L888.228 190.015L888.632 190.34L889.07 190.037L890.439 190.071L891.236 191.26L891.191 192.056L889.923 194.109L889.081 194.434L888.104 193.604L887.914 192.774L886.6 192.606L886.41 192.325ZM907.476 140.316L910.069 140.159L912.493 137.523L913.661 134.842L914.098 132.79L914.536 132.453L914.155 132.498L914.323 131.589L914.862 131.04L915.535 129.099L916.444 128.045L917.421 128.684L918.217 128.617L919.778 127.574L923.885 126.542L925.547 128.135L927.881 128.999L933.392 134.898L934.93 137.186L936.018 139.777L935.94 140.45L935.345 141.101L935.21 142.783L935.76 145.845L936.142 146.328L933.257 147.505L929.374 146.047L927.129 146.204L925.692 145.385L920.215 144.286L918.161 143.389L914.244 140.776L912.92 140.484L910.541 140.877L906.971 142.951L906.231 142.806L905.479 141.179L905.928 140.338L907.476 140.316ZM916.029 119.622L915.614 120.609L915.962 122.078L915.692 123.592L915.086 124.523L914.087 124.792L913.043 125.443L912.269 126.475L911.831 126.441L911.966 126.845L912.74 126.699L912.594 126.924L911.292 126.823L910.372 126.026L909.037 123.289L908.666 121.629L908.891 118.152L909.351 117.233L910.395 116.56L914.199 116.122L915.659 116.975L916.119 118.175L916.029 119.622ZM870.943 80.1631L871.336 79.8491L871.931 77.4937L872.133 74.8915L871.864 72.166L872.672 68.7338L872.717 67.7916L872.279 67.2869L872.683 66.1316L874.479 72.0987L875.635 73.5343L876.791 74.2858L875.758 75.8L874.838 78.2452L874.703 78.9406L875.433 80.1407L873.929 82.283L871.493 82.5634L871.19 82.2942L870.943 80.1631ZM1056.56 308.312L1055.62 310.174L1056.89 312.653L1056.41 313.18L1055.43 312.944L1054.79 313.191L1054.21 312.114L1053.1 311.823L1051.27 312.653L1049.7 312.866L1048.77 314.391L1047.81 315.019L1047.78 316.13L1047.42 316.612L1044.97 316.478L1043.47 315.289L1044.1 314.739L1044.01 313.909L1041.99 312.597L1041.72 311.004L1041.36 310.858L1040.24 312.148L1040.06 313.27L1039.23 313.819L1038.42 313.404L1036.55 313.494L1035.48 312.63L1035.07 311.273L1033.69 312.171L1031.96 311.632L1030.16 311.913L1029.67 310.959L1028.76 311.15L1028.21 312.182L1027.13 312.473L1026.77 311.441L1025.93 311.385L1025.43 310.802L1024.7 310.589L1023.45 311.363L1023.42 312.294L1022.01 313.18L1022.24 314.066L1023.28 315.008L1023.2 316.466L1021.74 318.676L1020.71 318.721L1020.88 317.622L1020.44 317.094L1019.39 317.364L1017.92 317.218L1017.33 317.857L1016.12 318.239L1015.89 319.943L1016.46 320.157L1016.12 321.727L1016.41 322.4L1015.19 323.925L1014.97 324.991L1015.89 325.821L1015.73 326.752L1015.06 327.683H1014.12L1013.62 328.21L1013.61 328.928L1012.95 329.163L1011.61 328.726L1010.58 329.567L1009.4 329.881L1009.41 330.509L1008.74 331.384L1008.65 333.459L1007.61 334.031L1008.66 338.192L1009.9 338.843L1010.05 339.381L1009.68 340.256L1008.07 341.187L1007.29 342.679L1006.2 342.881L1005.96 343.363L1006.87 344.776L1006.5 345.685L1004.53 346.178L1003.98 345.853L1004.45 344.686L1002.92 344.013L1001.15 344.821L1000.37 344.832L999.499 346.773L998.893 346.986L998.007 345.83L997.165 346.503L996.794 346.032L995.964 346.717L994.651 346.874L992.9 346.447L992.44 347.199L992.541 349.745L991.665 349.711L990.442 348.949L989.275 349.106L988.983 348.175L987.737 347.132L987.872 346.1L987.546 345.404L988.343 344.709L988.399 344.025L987.108 343.307L987.12 342.578L985.986 342.398L985.593 343.217L982.799 345.292L981.867 344.877L982.047 345.696L980.958 345.584L980.071 344.63L978.926 344.294L978.567 345.146L977.624 344.339L976.704 344.978L975.514 344.361L975.368 343.329L974.448 342.858L972.798 344.72L971.878 345.191L972.17 346.672L973.898 348.881L972.046 351.741L971.71 352.684L971.811 353.794L971.014 354.063L969.611 353.816L969.903 353.155L968.544 352.089L969.106 350.53L968.623 350.036L967.209 350.956L966.378 350.721L966.143 351.831L965.245 351.775L962.551 349.7L960.082 350.081L958.735 349.431L958.264 349.801L957.467 352.65L956.49 353.996L952.596 355.622L952.371 356.396L952.742 358.583L952.18 360.479L950.968 362.116L951.137 363.047L950.452 364.584L950.553 365.38L949.509 366.737L949.184 367.769L949.913 368.768L949.924 369.564L949.374 370.215L950.946 371.482L951.092 373.635L950.396 374.723L950.486 375.441L951.181 375.912L950.665 377.774L951.238 378.47L950.946 378.918L950.048 379.187L949.745 378.873L948.847 379.737L949.341 380.556L948.701 381.846L948.903 383.192L948.566 384.134L947.814 384.246L947.13 385.491L946.692 385.289L946.12 386.085L945.525 386.276L945.626 387.319L944.66 388.284L944.066 390.763L942.786 391.211L941.922 392.378L940.71 392.423L940.182 392.804L939.307 392.333L939.161 391.626L939.655 390.819L939.385 390.022L939.733 388.968L939.273 388.766L938.039 389.417L937.388 390.729L936.422 388.99L936.714 388.575L936.344 387.712L935.603 387.555L934.638 388.138L934.683 387.712L933.919 387.173L933.875 386.276L932.842 386.714L932.898 388.093L932.011 389.159L931.922 390.09L931.215 390.336L930.923 389.495L928.914 388.912L927.881 390.09L927.017 390.202L925.771 389.327L925.266 387.218L924.458 387.241L923.986 387.902L922.853 388.295L922.269 387.129L921.293 386.871L921.136 386.31L920.395 385.928L919.867 385.143L919.901 383.988L918.947 383.394L918.116 382.137L917.926 381.173L917.174 381.543L916.253 381.476L916.298 380.343L915.288 380.399L914.805 379.524L913.672 379.535L912.875 381.049L911.248 381.105L910.507 381.677L909.732 386.725L910.215 387.454L909.441 388.306L909.34 388.912L907.824 388.822L907.084 389.192L907.488 390.471L906.107 394.554L905.389 394.89L904.244 396.898L902.695 397.234L901.618 398.019L900.574 397.672L900.058 398.21L900.08 399.163L899.654 399.668L898.116 399.679L897.577 400.094L897.173 399.478L896.69 400.33L897.061 401.306L896.713 401.934L894.794 403.616L894.053 403.437L893.806 403.796L894.098 404.626L892.919 407.318L895.377 410.223L893.795 413.98L894.3 415.203L893.099 417.424L893.088 418.904L892.785 419.409L893.144 420.362L892.964 421.899L893.604 422.706L892.762 424.019L892.964 425.365L893.548 425.679L893.582 426.038L892.942 426.811L892.021 426.845L892.19 425.948L891.864 425.208L891.326 425.667L888.396 425.623L887.083 426.946L887.24 427.978L886.903 428.505L884.67 430.558L882.941 430.849L881.482 432.218L880.921 432.263L879.664 431.489L877.891 431.365L875.882 430.737L875.781 430.3L874.165 429.38L873.042 429.189L872.144 429.447L869.619 432.902L869.63 433.911L868.833 434.764V435.168L868.104 435.56L866.14 434.809L865.657 434.988L864.669 433.81L864.209 433.777L863.255 434.573L862.391 434.562L861.538 433.799L860.808 434.035L858.855 433.014L856.083 433.62L855.118 433.07L852.952 433.967L851.886 433.777L851.167 434.136L850.898 435.302L850.213 435.605L849.596 435.437L849.102 436.727L849.865 437.512L849.506 438.375L847.699 438.746L846.869 441.426L847.295 442.514L846.532 443.445L846.251 444.522L844.22 444.264L844.736 447.999L844.141 448.212L843.726 449.076L844.231 451.162L843.064 451.229L842.435 450.478L841.088 449.917L840.494 448.986L839.001 449.345L839.18 450.635L839.966 450.825L839.764 451.768L840.381 452.519L841.65 453.035L841.234 453.786L843.737 456.433L843.445 456.994L842.985 457.084L842.828 457.768L842.188 457.824L841.29 458.632L841.178 459.238L839.921 460.785L839.887 461.974L839.382 462.95L838.945 463.231L837.733 462.625L837.744 462.187L837.306 462.255L837.07 463.309L836.475 463.444L836.767 464.509L837.564 464.599L838.776 465.743L841.694 470.229L841.537 470.846L840.426 471.62L840.325 473.28L840.942 474.357L840.639 474.895L839.988 475.075L839.225 473.987L838.586 474.985L838.069 475.097L837.407 474.368L836.767 474.593L836.105 475.591L835.903 478.126L834.444 480.705L833.782 482.904L833.849 483.767L834.523 484.799L834.534 486.056L832.424 485.024L829.057 485.293L828.406 485.899L827.452 485.584L826.666 485.921L826.127 485.214L825.6 485.125L825.14 485.472L823.636 485.069L823.119 485.36L822.277 485.181L821.705 485.618L820.964 485.45L820.493 485.921L819.808 485.831L818.843 486.336L819.707 487.738L818.45 488.871L817.665 488.557L816.89 488.792L815.925 488.086L814.836 488.052L814.286 487.323L812.457 486.19L811.66 485.988L811.166 486.392L810.257 486.19L809.415 486.571L808.641 485.764L807.979 485.865L807.271 487.143L805.812 487.48L805.105 486.044L803.063 485.988L802.12 486.313L801.559 487.301L799.965 486.93L799.695 486.493L798.18 487.525L796.665 487.177L795.745 487.345L795.038 487.166L794.892 485.674L794.331 485.304L792.591 484.721L791.278 485.102L789.549 483.532L787.439 483.386L786.283 483.947L784.218 483.251L784.173 482.825L782.714 482.904L782.13 482.489L781.76 480.818L780.525 480.01L778.292 476.331L777.248 475.669L773.948 475.793L772.613 475.411L771.098 474.705L769.526 473.022L769.066 474.121L768.426 474.514L767.674 474.469L763.656 470.701L762.141 470.6L761.254 470.947L759.369 470.577L759.324 469.31L758.83 469.029L758.538 467.739L758.101 467.302L753.701 466.45L752.051 466.629L751.568 466.393L749.234 466.82L746.922 468.379L744.385 468.603L743.218 467.504L742.937 465.44L743.42 464.801L741.243 461.021L741.68 458.609L740.603 458.06L740.064 458.284L740.019 459.226L739.57 459.596L739.121 458.778L739.267 457.566L739.009 456.837L738.156 456.389L738.728 452.519L739.166 451.543L738.807 448.874L739.076 448.089L738.369 446.294L738.807 445.643L738.706 444.847L736.203 443.198L736.618 439.991L736.057 438.252L736.562 437.175L736.024 436.828L735.597 433.822L736.697 432.296L735.99 430.434L732.993 429.391L732.679 428.27L731.916 427.372L730.782 427.664L730.614 427.114L730.221 428.225L729.682 428.516L729.424 429.997L728.56 430.412L728.133 430.042L727.718 428.539L726.54 429.47L725.743 429.133L724.183 429.313L723.195 428.572L722.903 427.81L723.161 426.991L723.049 423.996L722.319 423.301L722.847 422.594L723.588 422.303L724.216 420.486L722.477 420.901L722.073 420.474L722.028 419.252L721.635 418.601L721.006 417.906L719.828 417.513L719.727 416.661L718.762 416.459L717.931 415.371L716.348 415.517L716.023 414.922L715.114 414.911L715.069 414.373L714.216 413.935L712.869 413.924L712.925 413.307L711.938 412.601L711.32 412.612L709.143 413.902H708.279L707.706 413.408L706.561 415.068L706.27 416.784L705.652 417.872L705.024 418.231L703.441 418.175L702.027 420.194L702.409 421.08L702.24 421.888L701.365 422.056L699.749 423.368L699.075 424.299L699.086 425.241L698.514 425.466L697.942 425.185L697.515 425.544L697.594 426.217L696.83 426.284L696.438 426.868L696.415 427.507L695.54 427.597L694.631 428.494L694.316 429.761L693.183 430.647L693.609 432.251L693.441 433.07L691.825 434.551L690.927 434.45L688.592 435.325L687.537 437.063L686.673 436.446L686.662 435.583L686.101 436.02V438.959L685.551 439.34L684.978 439.318L684.675 437.725L685.023 436.379L684.81 434.842L685.629 433.934L686.639 433.451L686.651 432.117L685.012 432.128L683.923 432.61L684.282 430.49L683.609 429.369L681.454 432.375L679.198 432.936L678.401 433.777L677.178 432.902L675.651 433.283L675.27 433.956L674.596 433.889L674.114 433.25L673.115 433.552L670.994 433.205L670.477 433.866L669.916 435.762L669.243 436.491L668.446 436.558L667.469 437.153L664.439 437.007L663.429 437.377L663.07 435.942L662.194 436.334L661.835 435.986L661.936 434.797L660.96 433.62L660.724 432.644L659.186 431.915L659.332 431.096L659.871 430.524L659.399 430.165L659.613 429.369L661.004 427.72L661.308 426.643L660.948 425.667L662.52 423.301L662.531 422.213L663.485 420.755L662.901 419.521L663.395 417.401L664.057 416.549L664.349 415.259L665.112 414.743L665 413.576L665.864 412.836L665.977 412.129L666.729 411.793L666.773 411.311L666.145 410.84L666.246 410.38L667.75 410.122L668.233 408.989L667.817 408.215L669.703 405.602L670.051 403.179L669.164 402.528L667.795 402.73L666.841 402.046L666.313 400.734L665.786 400.341L665.056 400.666L664.529 400.487L664.158 399.736L664.495 396.012L662.654 393.118L662.239 391.245L662.845 389.428L663.552 388.542L665.112 387.757L665.011 386.814L665.685 385.469L665.225 384.01L665.573 383.438L664.776 381.319L662.385 381.363L661.442 382.003L660.23 380.242V378.784L660.836 378.245L660.87 377.572L661.465 377.146L661.756 375.811L663.137 374.51L663.216 373.961L662.037 372.615L661.689 371.717L661.117 364.573L660.095 364.887L658.446 361.589L656.796 361.825L654.708 360.77L653.428 360.815L651.509 361.455L651.184 360.681L652.486 358.303V357.092L655.741 356.867L656.448 356.161L656.414 355.51L655.965 355.196L656.335 353.57L655.797 352.796L654.461 352.571L654.124 351.853L653.754 350.238L654.18 349.162L653.597 348.679L653.53 347.412L653.103 347.289L652.16 348.242L651.027 347.76L650.14 348.264L650.039 348.949H649.04L646.526 347.255L645.695 347.132L645.101 347.636H643.978L643.72 345.965L641.599 345.774L641.139 344.776L639.713 344.888L638.95 342.701L638.265 343.094L638.4 343.823L638.03 344.226L635.92 344.485L634.764 345.012L634.258 344.372L634.606 343.755L634.483 342.892L633.405 342.589L632.373 343.654L631.262 341.961L631.61 341.512L631.262 340.009L632.407 340.054L632.687 339.594L632.373 338.686L633.226 337.16L632.945 336.409L633.215 335.5L633.641 335.411L634.135 336.184L635.01 335.882L634.214 335.22L634.202 334.39L633.585 333.863L633.506 332.921L633.832 332.36L634.808 332.27L635.089 331.418L635.987 331.115L636.829 329.735H637.715L637.064 328.614L637.749 327.043L638.613 326.415L639.534 326.281L640.207 326.583L640.488 324.867L641.868 323.847L641.565 323.42L640.33 323.443L639.051 321.514L637.457 320.594L637.513 313.416L637.087 312.249L634.966 310.903L635.078 306.002L636.11 304.117L635.65 301.549L635.976 300.068L635.325 299.261L635.168 298.229L634.337 298.453L633.989 298.083L634.606 297.051L634.629 295.986L633.058 296.266L632.889 295.234L631.98 295.043L631.116 295.514L629.623 294.034L629.814 293.383L632.867 293.406L633.551 292.991L634.101 290.288L635.807 290.041L637.255 288.605L638.714 289.11L639.5 288.302L639.87 286.542L639.994 281.034L640.959 269.47L641.172 259.219L640.723 254.149L637.805 248.003L634.707 242.54L634.999 241.026L635.762 240.589L636.402 239.243L637.558 238.312L638.972 239.209L641.857 238.929L645.549 236.371L647.794 235.597L649.264 235.732L649.736 235.384L650.432 233.623L652.228 232.109L656.369 231.84L657.031 232.008L656.964 233.175L657.357 233.758L658.939 234.027L660.41 233.511L661.364 231.01L661.577 228.812L662.183 228.139L662.239 227.522L661.15 226.939L661.375 225.043L660.802 224.381L660.937 223.024L662.475 222.407L662.901 221.061L662.587 219.94L662.946 219.334L668.367 218.459L667.986 217.427L666.527 216.306L666.583 214.87L667.155 214.421L666.852 213.535L667.279 212.683L668.266 211.864L669.535 211.628L670.511 210.428L673.485 209.475L675.853 207.703L677.503 207.501L678.3 206.02L681.678 205.044L683.081 203.07L683.598 203.093L684.237 204.147L684.686 203.912L685.102 202.7L686.269 202.566L686.662 201.511L686.359 200.715L686.594 199.369L687.751 199.1L687.762 197.866L687.055 197.361L685.798 197.193L684.383 195.275L682.7 194.456L682.431 193.615L682.655 191.159L681.903 184.418L682.15 180.93L681.802 175.882L680.264 175.344L679.737 174.29L678.85 174.032L679.187 171.441L678.311 170.319L677.099 170.364L676.448 169.411L674.821 169.489L674.147 168.334L674.551 167.279L675.36 166.416L675.382 164.834L674.551 163.836L672.958 163.455L673.16 162.098L672.599 161.705L671.869 161.817L671.375 157.566L671.723 155.345L672.677 152.721L671.319 152.452L671.903 151.352L672.958 151.128L673.047 149.973L672.352 148.773L672.868 147.763L672.542 147.079L671.072 146.664L669.344 147.337L668.502 146.002L670.163 144.208L669.995 142.66L666.661 140.989L667.155 140.114L671.072 140.058L672.801 134.999L673.609 134.943L674.518 135.549L674.967 135.19L674.226 133.104L672.823 132.79L673.115 130.3L673.755 129.346L675.865 127.754L677.907 130.356L680.668 131.937L684.372 132.7L688.076 132.262L688.951 131.646L689.659 129.929L688.143 125.017L688.368 124.265L689.49 126.497L691.073 128.045L691.701 130.389L693.037 133.35L693.385 135.796L692.173 137.153L691.342 139.957L692.072 140.865L692.375 141.92L694.036 142.918L694.182 144.881L693.744 145.778L694.406 145.924L694.777 145.599L695.933 143.355L697.257 143.636L698.054 143.198L698.525 142.447L697.942 142.211L696.943 142.895L696.572 142.671L694.406 140.293L694.002 139.519L694.092 138.532L693.733 138.129L697.336 136.951L698.626 135.852L699.737 135.526L701.948 136.054L704.9 135.515L706.415 134.214L706.977 134.293L706.46 133.822L707.774 132.958L708.492 132.621L709.401 133.182L709.064 132.722L709.322 132.509L710.333 132.408L711.006 132.868L711.085 132.644L713.767 132.947L716.09 134.001L717.976 133.552L718.93 133.777L724.878 136.278L728.672 136.536L730.075 136.065L735.732 136.839L736.439 137.355L736.428 138.465L736.966 138.544L737.741 139.62L736.933 140.293L736.158 140.405L735.384 139.273L735.238 139.542L734.486 139.228L734.362 139.789L733.263 140.888L733.251 142.077L733.801 142.323L733.824 142.671L732.959 144.208L733.285 144.769L733.24 146.036L734.194 147.382L737.651 148.84L739.222 149.95L741.781 150.758L743.588 152.295L745.103 151.734L745.743 151.846L747.326 152.496L751.299 152.867L754.756 154.257L757.618 153.259L759.414 153.08L761.243 154.011L761.299 153.517H762.152L762.332 154.011L764.386 152.844L765.07 153.932L765.452 153.528L766.597 154.482L767.719 154.583L767.416 153.338L767.854 153.742L768.628 153.708L766.709 151.981L766.799 151.622L767.338 151.543L768.853 153.338L771.243 154.19L771.49 155.076H772.108L772.725 154.605L773.185 153.259L773.735 153.147L773.421 151.061L774.251 149.143L774.139 150.332L774.543 150.242L774.678 149.255L775.419 149.883L775.587 149.502L776.103 149.468L775.351 149.098L774.7 148.055L773.937 148.044L775.329 146.922L775.901 147.359L776.193 146.642L775.306 146.597L775.172 146.159L774.891 146.799L774.745 145.812L774.206 145.655L774.644 145.419L774.79 144.623L774.375 145.083L774.308 144.623L773.556 144.432L774.263 143.961L773.443 143.479L773.219 142.604L773.387 142.267L774.476 142.009V141.662L773.814 141.92L773.499 141.74L773.645 141.381L773.208 141.65L772.399 141.191L772.725 140.91L772.882 141.325L773.241 141.247L772.815 140.237L773.174 139.631L773.455 140.024L773.275 140.506L774.139 141.449L774.397 141.348L773.892 140.585L774.072 139.351L773.802 139.732L773.252 138.97L772.938 139.037L773.365 138.196L772.927 137.029L773.634 137.343L773.937 137.074L773.533 136.928L773.264 136.009L774.061 136.951L774.397 136.626L773.668 135.504L774.072 135.347L773.758 134.046L774.117 134.326L774.397 134.057L774.139 134.954L774.487 135.381L774.756 133.979L775.003 133.866L775.071 134.663L775.138 134.001L775.52 133.9L775.138 135.167L775.25 135.381L775.531 134.573L775.912 134.786L775.699 135.437L776.182 135.829L776.328 136.536L777.024 134.876L777.439 135.762L777.787 135.538L777.484 135.078L777.821 134.842L778.337 135.571L778.786 134.73L778.73 133.698L779.571 133.35V132.756L779.392 132.913L779.751 132.229L780.2 132.049L779.796 132.476L779.998 132.834L780.413 132.262L779.729 130.95L780.155 130.838L780.447 131.668L780.716 131.332L780.896 131.623L781.401 129.829L781.872 129.885L781.592 130.917L782.198 130.715L782.153 131.612L782.4 130.961L782.49 131.668L783.432 131.332L783.646 132.173L784.375 131.444L784.005 132.61L784.353 133.014L784.319 134.169L784.689 133.014L784.465 132.801L785.419 131.87L785.778 132.173L785.307 132.599L785.262 133.216L785.913 132.767L785.711 133.586L786.048 134.136L786.676 132.633L786.631 135.56L786.799 134.786L787.349 134.337L787.035 133.62L787.574 133.193L787.922 134.102L787.641 133.866L787.484 134.64L788.236 134.472L787.596 136.951L788.505 135.078L787.944 138.028L788.281 137.904L788.528 136.884L788.674 137.59L788.82 137.175L789.381 137.534L789.493 135.829L789.74 136.435L789.403 136.917L790.066 137.534L790.144 135.941L790.077 136.457L790.47 136.928L790.29 137.456L790.986 137.31L791.087 137.837L791.48 137.299L791.323 137.871L791.603 138.05L791.884 137.523L791.648 138.431L791.85 139.172L792.265 139.362L792.288 140.394L792.546 140.125L792.423 139.351L792.681 139.317L792.625 140.439L792.827 140.192L792.984 140.787L793.04 140.002L793.332 139.946L793.635 140.551L793.792 139.699L793.13 139.497L792.939 139.755L793.006 139.194L794.117 139.474L794.308 139.116L793.657 138.824L793.983 137.59L794.499 138.207L794.095 138.566L794.521 138.88L795.206 138.286L795.24 139.149L795.576 137.994L795.812 138.028L795.621 138.633L796.575 137.074L796.676 137.579L797.092 136.951L797.507 138.33L797.81 137.938L798.102 138.039L797.664 138.869L798.057 139.015L797.541 141.168L798.023 142.626L799.112 141.852L800.481 141.897L800.436 140.731L801.199 139.744L801.222 141.067L801.671 141.92H802.153L801.761 140.652L801.94 140.45L802.546 140.753L802.288 140.394L802.715 138.465L802.524 138.106L802.894 137.669L804.634 137.657L805.397 138.016L806.104 139.059L805.801 139.845L806.071 140.271L806.374 139.116L806.901 139.665L807.922 139.273L809.853 139.418L809.887 139.789L808.843 140.787L809.056 141.146L809.931 140.663L810.167 141.101L811.514 140.888L810.683 142.447L811.851 141.179L810.605 142.806L810.975 143.142L812.075 142.536L813.007 142.581L813.635 142.222L814.567 142.996L814.118 143.299L814.601 143.445L814.589 144.174L813.422 144.892L813.725 145.184L813.153 145.419L813.759 145.307L814.185 145.868L816.755 145.542L817.698 146.305L817.384 146.316L817.754 146.619L816.812 147.662L817.485 147.191L817.822 147.472L816.621 149.109L817.249 148.773L817.216 149.221L817.743 148.627L818.215 149.345L818.248 150.22L819.236 149.143L819.977 149.334L820.426 150.018L820.673 149.838L821.155 150.343L820.964 150.534L821.391 151.409L821.178 151.902L821.537 151.61L821.93 152.44L822.446 152.003L822.311 152.384L822.726 152.261L822.749 153.046L823.355 153.484L822.839 153.966L823.321 154.157L821.447 154.246L820.302 153.932L819.988 153.069L819.685 152.934L819.606 153.214L819.786 154.168L821.582 155.48L821.817 156.288L822.244 156.489L821.458 156.804L821.211 157.432L821.582 158.34H822.603L822.311 158.722L821.301 158.643L821.29 159.451L819.921 159.63L820.673 160.348L821.279 160.146L821.267 160.438L820.706 160.393L821.065 160.763L822.233 160.819L822.794 161.481L822.67 162.524L822.109 163.286L820.459 162.591L821.099 163.219L819.696 162.636L819.528 162.871L819.876 163.174L819.561 163.376L820.078 163.825L817.575 163.78L817.687 164.475L817.171 164.453L817.62 165.339L817.148 165.395L817.193 165.978L817.653 165.922L818.428 166.663L818.192 167.246L819.831 166.764L822.233 167.706L822.008 167.762L822.423 168.132L822.277 168.491L821.683 168.827L822.704 169.209L822.266 169.635L822.94 169.837L822.704 170.207L822.985 170.42L822.648 170.465L823.029 170.622L823.052 171.138L821.873 171.306L822.266 171.71L821.683 172.237L822.367 172.024L822.558 172.989L822.289 172.484L821.997 172.865L822.177 173.146L823.411 173.605L822.502 173.83L821.716 175.03L821.829 175.613L822.996 175.086L823.265 175.557L822.794 175.501L823.142 175.86L822.85 176.297L822.491 176.062L822.603 176.398L822.075 176.959L821.11 176.23L821.817 176.97L820.504 177.722L819.584 177.554L819.258 178.013L818.562 178.126L817.844 177.139L817.608 177.172L817.754 177.711L816.104 177.677L815.992 178.316L816.273 178.484L815.925 178.44L815.611 179.169L817.463 181.12L816.497 181.389L815.925 180.986L815.431 180.324L815.218 179.056L814.825 179.169L814.589 180.234L815.173 181.962L816.071 182.735L816.542 185.293L816.879 185.73L817.956 185.977L818.417 186.639L818.495 186.19L820.066 185.382L820.785 184.216L820.066 182.287L819.472 178.866L821.166 182.231L821.559 183.375L821.481 184.362L823.456 186.897L822.491 186.347L821.324 186.224L818.001 187.39L817.406 188.377L817.822 188.501L818.046 189.129L817.878 190.026L818.63 190.172L818.989 189.712L820.471 189.566L821.279 191.45V192.864L820.897 192.684L821.245 193.077L820.908 193.234L821.582 192.965L822.423 197.171L824.657 199.178L824.96 200.883L825.645 201.691L825.375 202.139L825.847 201.949L826.834 202.296L826.812 202.689L827.295 202.263L827.732 202.869L828.013 202.801L829 205.19L828.709 205.83L829.562 207.007L830.291 207.176L831.133 206.828L831.301 208.14L831.907 208.488L832.94 208.129L833.322 207.456L833.164 205.953L833.512 205.471L833.4 206.447L834.388 209.957L834.186 210.383L835.14 211.785L836.229 211.494L837.811 209.968L840.191 206.469L840.909 204.001L840.864 201.354L841.425 200.906L842.794 197.451L843.243 194.131L844.736 188.377L847.306 182.377L848.249 181.008L848.956 180.616L849.832 180.705L851.01 180.088L851.93 180.189L853.446 182.276L853.502 183.251L852.873 181.861L851.571 180.627L850.741 180.582L849.865 181.176L850.18 181.457L849.832 181.894L849.035 181.502L849.315 183.532L848.822 184.519L849.102 185.483L850.46 186.112L851.975 189.331L853.176 191.024L855.14 192.965L856.869 194.097L860.999 195.533L862.829 195.544L864.557 194.838L865.612 193.144L867.262 191.664L868.44 191.293L870.955 189.364L870.854 189.611L872.111 188.904L873.065 189.185L874.221 188.759L879.204 190.419L879.024 190.576L879.518 191.226L880.304 191.63L880.753 191.327L881.797 191.417L883.918 194.21L885.635 194.557L886.836 195.387L886.522 196.004L887.307 195.522L887.094 196.24L887.7 195.735L887.15 197.182L887.521 197.126L887.375 197.956L887.835 197.844L887.925 198.438L888.385 198.562L888.632 197.989L889.182 197.799L889.002 198.292L890.012 198.337L890.024 198.696L891.135 199.391L891.685 199.448L892.527 198.752L892.448 197.821L891.359 197.53L891.337 195.914L890.798 196.004L890.832 195.556L890.383 195.903L890.372 195.376L890.012 195.645L889.765 195.331L890.506 195.219L891.034 194.524L892.302 190.194L893.694 189.88L894.648 190.06L894.861 191.462L895.175 191.473L895.557 190.946L896.242 191.092L896.208 190.71L896.589 190.733L895.916 189.701L896.073 189.42L897.869 188.815L899.003 189.959L900.147 190.149L900.282 193.447L900.978 194.658L902.033 194.355L902.28 194.613L902.965 192.415L904.772 192.774L905.4 193.783L905.568 193.256L905.95 193.223L905.995 193.604L906.623 192.022L907.027 192.651L907.128 192.224L907.319 192.449L907.667 192.101L907.488 191.809L907.869 191.832L907.072 191.506L906.882 190.89L906.702 191.058L905.265 187.3L905.243 184.653L905.535 184.631L905.232 184.485V183.599L905.838 183.296L905.793 183.005L905.164 182.713L904.783 181.389L902.123 180.537L903.885 180.896L904.682 180.638L905.31 179.236L905.355 178.013L906.444 176.78L906.848 175.176L907.207 174.85L908.206 175.692L909.463 174.727L909.081 173.706L907.959 173.37L905.804 173.594L904.861 173.314L904.031 173.538L902.459 175.479L900.731 174.671L900.462 171.979L901.281 169.882L904.02 166.405L906.152 166.18L908.127 166.831L908.61 167.493L909.474 166.808L911.966 166.696L913.997 165.53L915.041 165.877L914.749 165.339L915.344 164.464L917.039 163.746L917.387 163.814L917.297 164.117L917.668 163.903L917.746 163.578L916.545 163.242L916.669 162.928L916.276 162.726L916.489 162.042L915.311 160.404L915.12 160.527L913.986 158.138L913.369 157.891L913.582 157.521L913.178 157.095L913.032 155.85L914.222 155.772L916.377 156.467L917.679 156.478L918.543 156.949L918.902 157.791L920.316 158.946L922.976 160.079L928.723 160.718L935.726 160.931L937.522 161.683L941.507 162.053L945.996 163.533L952.293 164.868L956.198 166.472L961.979 169.5L962.63 169.983L962.607 170.801L963.572 171.429L968.455 170.543L971.451 170.914L972.596 170.656L975.256 170.88L982.383 174.009L984.965 176.028L987.209 178.81L988.186 181.064L988.455 182.881L988.107 183.666L984.594 185.865L984.089 183.577L983.865 184.463L983.517 184.429L983.921 183.655L983.539 182.388L983.102 182.074L982.249 182.332L982.765 182.724L982.26 183.072L982.215 183.588L981.867 183.319L981.642 183.532L980.969 185.102L980.206 185.495L979.88 186.112L979.712 186.639L980.217 187.648L980.599 186.975L981.463 187.592L982.192 187.11L983.281 188.321L984.302 188.444L986.424 188.198L987.041 187.715L988.242 188.523L988.388 189.039L989.061 189.274L988.949 190.026L989.454 190.419L989.499 191.428L990.431 191.72L992.709 191.563L992.137 191.955L993.248 192.213L993.18 194.602L993.854 195.623L996.514 194.714L996.929 195.354L1000.26 196.655L1002.35 199.717L1001.89 199.661L1002.64 201.467L1003.44 202.397L1003.38 202.846L1004.81 204.652L1004.58 205.145L1004.24 204.854L1003.14 205.168L1001.5 204.91L1001.45 205.235L1002.29 205.841L1003.57 205.964L1005.83 207.961L1008.24 208.993L1011.71 208.903L1013.72 208.398L1014.06 208.701L1014.38 208.23L1016.55 207.725L1017.03 207.826L1017.1 208.342L1017.65 207.826L1018.41 208.05L1019.49 207.086L1022.67 205.695L1027.6 204.416L1028.89 203.777H1030.65L1032.36 202.992L1033 203.205L1036.28 202.498L1040.59 202.712L1041.12 202.285L1041.5 202.543L1043.23 202.285L1046.69 202.801L1053.23 204.529L1057.68 206.413L1061.11 208.589L1064.73 211.875L1067.19 215.677L1068.44 219.323L1069.03 222.497L1067.86 225.346L1067.92 226.714L1067.23 228.139L1067.25 229.002L1065.61 231.582L1067.02 233.87L1069.67 235.911L1069.33 235.295L1070.05 235.362L1073.21 236.955L1073.55 236.551L1075.9 237.37L1076.25 239.321L1075.89 241.43L1076.34 246.174L1076.95 246.511L1077.54 244.873L1076.8 242.675L1076.83 241.542L1079.89 238.693L1080.41 238.547L1081.02 238.873L1081.33 238.413L1081.06 239.994L1081.38 240.903L1080.05 242.237L1079.11 242.709L1078.82 242.08L1079.06 243.348L1080.06 243.325L1080.1 243L1080.96 242.776L1081.67 241.43L1082.77 240.286L1084.51 239.781L1084.66 238.828L1085.98 238.02L1085.94 237.168L1086.34 237.414L1087.02 237.235L1087.12 238.177L1086.53 239.893L1085.73 240.286L1086.57 241.531L1086.27 242.686L1087.3 243.202L1087.4 244.929L1089.79 247.991L1089.84 248.653L1088.22 249.023L1087.68 252.377L1088.17 253.285L1089.55 253.824L1090.37 255.585L1089.58 256.976L1088.58 257.626L1088.68 258.882L1089.59 259.589L1089.2 260.621L1089.32 261.563L1088.33 262.169L1088.44 264.277L1087.96 265.141L1088.02 266.969L1087.37 268.068L1084.34 266.655L1079.38 265.141L1078.23 265.399L1075.7 267.709L1073.97 268.405L1067.97 267.788L1067.14 268.001L1066.53 268.663L1065.99 269.964L1064.74 269.392L1064.28 269.728L1063.47 269.695L1062.79 268.921L1059.67 271.613L1056.7 271.433L1055.22 272.51L1054.52 275.314L1053.32 276.873L1053.77 277.972L1054.79 278.511L1054.87 278.926L1054.41 279.677L1053.29 280.159L1052.28 279.98L1050.99 280.294L1050.58 283.154L1050.75 285.072L1051.69 286.788L1051.47 289.2L1051.7 289.794L1053.19 290.265L1054.74 292.363L1056.15 292.587L1058.59 293.81L1058.87 295.077L1058.54 296.973L1059.82 298.599L1059.98 299.306L1058.76 300.001L1058.23 301.078L1058.31 302.065L1056.9 304.151L1056.59 305.463L1055.64 306.136L1055.97 307.46L1056.56 308.312ZM915.153 59.0093L914.805 58.7514L915.905 59.0206L915.715 59.3795L915.153 59.0093ZM958.129 88.9006L956.782 87.3415L957.916 85.4684L957.287 81.8007L958.365 80.0285L958.791 78.3797L958.578 76.8431L959.274 75.3065L960.901 76.5739L961.474 77.9423L960.621 80.1968L961.328 81.5091L961.474 82.5522L963.606 83.9542L964.751 83.9206L965.963 82.956L965.548 82.6643L965.054 83.1242L964.459 83.0233L965.772 81.8792L966.378 81.0156L966.176 80.8361L967.04 80.4884L967.602 80.78L968.477 80.0734L971.631 81.6661L974.661 81.3072L976.098 82.3054L976.233 82.9447L975.571 84.5599L975.941 85.8049L975.784 86.5227L976.132 86.6798L976.457 87.8014L977.894 87.8687L982.428 85.7152L985.492 86.8704L985.604 87.3639L985.874 87.0387L988.758 87.5546L989.903 88.6987L990.094 89.3043L989.51 89.6072L989.6 89.8876L990.206 89.7418L991.878 91.0653L994.202 89.4726L995.448 89.9324L993.136 94.1273L993.45 95.3387L992.9 98.1651L988.276 99.7354L986.85 100.588L985.627 100.779L984.74 101.407L981.407 102.326L979.51 102.439L977.557 101.81L977.31 102.192L973.292 100.98L972.057 99.9373L968.814 95.3835L966.311 94.6657L964.246 93.6226L961.406 90.6727L959.453 89.3492L958.129 88.9006ZM884.591 82.2269L884.356 80.5669L885.209 79.8491L885.411 78.9854L884.76 77.6395L885.287 77.4488L884.782 77.2469L884.535 76.6749L885.411 75.7888L885.007 75.0485L885.141 74.4541L884.468 74.3195L883.222 75.3626L884.378 76.63L884.12 77.1011L883.233 76.1589L882.986 75.3626L884.154 74.5214L884.816 73.3998L884.243 71.1453L884.816 69.9564L885.815 69.6535L886.847 70.1583L887.936 68.7675L886.982 66.771L886.746 67.4439L886.454 65.5708L886.814 63.9669L888.217 62.2284L888.991 61.9143L889.788 62.206L890.45 61.7685L891.965 61.8022L892.695 59.8618L892.583 58.886L893.088 58.0896L893.817 57.7195L894.401 59.458L894.805 59.5029L895.243 56.7325L897.768 55.2295L898.183 55.2519L898.385 55.8352L898.789 55.3865L900.305 55.2183L899.508 55.6445L899.631 57.5624L900.248 58.0784L899.564 58.7626L900.26 58.3252L901.146 59.5702L902.605 60.2095L904.121 62.4976L907.218 63.7089L906.579 65.1783L906.466 64.7745L905.95 64.8642L905.804 66.0756L906.601 66.4906L906.736 67.1299L907.925 67.8814L908.621 68.8235L908.834 68.3973L909.609 68.2179L911.169 69.1152L911.562 70.1583L911.506 71.0892L911.023 71.6164L911.405 72.8838L911.741 73.0072L912.101 72.5697L911.708 71.5379L912.931 71.6724L913.874 72.7156L913.997 73.6689L914.514 74.1512L915.703 73.8708L914.48 71.6949L914.312 69.4741L914.907 66.5691L914.536 65.526L914.648 63.7538L915.602 59.9852L917.623 60.1422L920.956 61.9704L920.025 60.7142L918.633 56.7885L917.982 56.6876L918.15 56.0819H918.431L920.114 57.6522L921.641 58.213L923.784 61.4096L925.232 62.52L926.388 63.9669L926.837 65.3689L928.633 66.9168L932.27 68.5319L933.818 67.9038L934.11 68.1281L934.593 67.2196L935.973 66.7485L939.801 68.3749L942.023 71.1004L943.078 71.6837L944.986 72.0089L945.715 73.3661L946.49 74.0503L949.184 75.6879L950.553 77.718L950.643 78.3685L948.802 78.2003L946.288 80.4996L945.648 82.2606L946.187 84.8179L947.219 85.4348L945.749 86.4779L945.233 89.3492L942.528 92.4337L940.867 92.8262L939.677 93.7908L938.981 93.5441L938.835 92.4337L938.42 92.0635L936.276 91.8168L935.435 92.1981L935.132 93.9254L935.906 93.8245L937.017 95.305L936.894 96.0116L935.726 97.1108L934.761 97.4697L933.392 97.223L931.708 97.8399L931.54 97.3576L931.181 97.3015L930.698 98.0081L930.328 97.8174L930.361 98.1203L929.879 97.4697L929.239 97.2566L928.386 99.3204L929.071 98.7148L929.138 99.0176L927.746 100.128L926.658 100.027L922.943 96.4379L923.291 96.2472L923.571 95.1816L924.402 94.8788L925.367 95.6415L925.793 96.5724H926.231L926.153 95.8322L925.176 94.6881L925.21 93.488L924.02 94.1049L922.258 93.9254L921.506 94.8003L920.204 95.4284L919.935 96.0789L913.852 97.6043L908.958 99.8476L906.994 100.307L908.127 99.8812L907.589 97.6043L906.186 96.4491L906.309 96.0004L905.838 96.0789L905.512 95.3948L904.985 95.1704L904.682 95.4284L904.592 94.9124L903.66 96.5388L903.133 96.5052L903.526 96.8641L903.492 98.5801L903.952 99.0064L904.805 98.1315V98.5017L903.93 99.4102L902.819 103.1L901.707 104.469L900.45 105.22L899.62 105.119L896.78 102.809L892.571 101.485L891.09 99.0625L890.17 96.2696L890.54 96.3033L890.776 95.8546L890.113 96.0341L888.71 94.3741L888.89 93.8357L888.654 93.6562L889.227 93.0393L888.138 93.8581L885.949 92.1757L883.11 86.7358L884.12 87.3415L883.996 87.0835L882.751 86.2087L882.537 83.2588L883.604 82.4288L884.591 82.2269Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-70-inside-50_10718_32869)\" />\n                <mask id=\"path-71-inside-51_10718_32869\" fill=\"white\">\n                    <path d=\"M956.725 626.875L958.095 627.997L959.947 627.627L959.296 628.726L958.802 628.468L957.724 629.589L956.254 629.713L955.727 630.61L954.716 631.137L954.357 632.427L953.897 632.394L953.572 633.414L952.034 634.143L951.787 635.691L950.777 635.781L950.541 634.435L953.257 632.091L953.28 631.485L955.255 629.051L955.973 627.357L956.725 626.875ZM977.803 615.098L978.645 615.603L978.095 616.354L978.511 616.938L978.23 617.588L976.434 617.633L975.435 618.508L973.965 618.934L972.248 620.134L970.676 621.873L969.711 622.03L969.206 621.379L968.645 621.503L968.319 622.086L968.645 622.355L968.196 623.118L966.097 624.666L965.065 626.314L964.066 626.393L963.078 627.873L962.292 627.716L962.382 627.088L963.011 626.527L962.966 625.619L963.347 626.225L963.673 625.742L963.471 625.249L964.178 625.507L964.907 624.811L964.975 624.161L964.301 623.925L964.256 623.421L965.267 623.622L965.514 622.905L967.455 621.536L967.68 620.617L967.444 620.089L968.656 620.538L969.285 619.226L970.385 618.867L970.205 617.252L970.632 616.534L971.148 616.646L971.866 618.485L973.28 618.407L975.132 617.33L975.323 616.668L976.704 615.278L977.803 615.098ZM991.968 607.505L989.297 609.815L989.106 610.69L988.578 611.262L987.736 612.002L986.94 612.126L984.886 614.302L983.763 614.907L982.708 614.84L984.863 611.756L985.862 611.599L987.781 609.098L989.038 608.783L988.96 608.133L989.319 607.808L990.295 607.359L991.261 607.662L992.17 607.337L991.968 607.505ZM1005.48 596.378L1005.95 596.793L1005 597.657L1004.87 598.386L1002.19 600.988L1001.7 600.977L1001.36 600.08L1002.59 600.035L1003.06 599.014L1004.1 598.386L1005.48 596.378ZM1007.27 593.877L1007.97 594.18L1007.78 594.808H1007.1L1006.94 594.214L1007.27 593.877ZM1012.07 588.841L1012.04 589.895L1011.43 590.333V589.435L1012.07 588.841ZM1013.28 584.994L1013.88 585.442L1013.91 586.037L1013 585.611L1013.28 584.994ZM1021.23 575.539L1021.58 575.785L1021.34 576.335L1019.75 577.793L1019.54 577.423L1020.4 576.817L1020.57 575.729L1021.23 575.539ZM1023.6 572.297L1024.56 572.802L1024.49 573.25L1023.76 573.43L1023.37 572.521L1023.6 572.297ZM1026.55 566.554L1027.13 566.88L1026.28 568.663L1026.54 570.39L1026.11 570.929L1025.13 571.119L1024.73 570.861L1024.65 569.942L1026.55 566.554ZM1036.14 552.343L1037.1 552.68L1036.85 553.835L1037.22 554.452L1037.21 555.652L1036.13 556.224L1036.03 557.021L1034.94 558.927L1034.39 559.107L1034.18 559.634L1032.74 559.701L1031.89 560.262L1030.94 562.012L1030.61 561.328L1029.61 561.372L1029.89 559.398L1029.5 558.299L1030.58 558.445L1031.08 557.593L1032.2 557.447L1032.47 557.122L1033.01 557.256L1033.89 556.303L1034.73 553.745L1036.14 552.343ZM1039.74 551.143L1039.97 552.399L1039.16 554.026L1038.06 554.06L1037.3 553.42L1037.43 552.355L1039.74 551.143ZM928.857 504.035L931.102 508.286L931.046 509.352L930.339 510.518V511.606L932.909 519.289L933.751 524.437L933.739 528.902L933.47 530.618L932.572 532.278L932.078 535.945L932.415 536.865L932.067 536.764L932.045 537.46L932.437 537.706L932.404 538.211L932.92 538.48L933.055 538.233L933.683 539.826L932.931 541.553L933.167 541.991L932.853 542.899L933.964 542.955L934.087 541.284L935.019 545.03L934.772 544.672L934.2 544.896L935.187 545.703L935.423 546.421L937.331 557.256L939.239 561.776L939.25 562.629L940.272 565.22L940.328 566.79L941.169 568.147L941.023 569.134L941.517 571.366L942.382 573.845L944.828 576.077L944.682 577.726L945.288 578.702L944.671 578.735L944.525 577.12L943.829 575.74L941.978 573.957L940.384 571.68L937.05 570.603L937.275 570.536L936.938 570.267L935.726 569.998L935.221 570.188L934.48 569.381L933.122 569.695L933.908 570.144L933.616 570.469L934.761 570.502L932.639 571.321L930.978 573.037L930.799 573.968L931.091 575.595L929.665 578.533L927.948 584.175L927.308 587.697L927.398 588.841L928.677 592.329L930.743 594.135L931.405 595.38V597.444L932 599.373L932.482 599.777L932.426 600.225L931.966 599.979L931.798 600.528L932.303 600.753L932.583 601.74L933.279 601.639L934.076 602.054L934.345 601.639L934.031 601.212L932.819 600.898L932.55 600.472L934.424 600.764L934.716 600.136L935.008 600.27L935.614 604.409L936.231 605.677L934.985 607.83L935.008 608.851L934.592 609.748L934.66 607.594L933.694 604.061L932.404 602.929L931.786 603.074L930.406 602.637L929.452 602.951L929.093 601.392L928.745 601.19L928.7 601.493L927.409 601.885L926.556 602.973L925.221 606.753L924.648 609.669L923.975 610.174L923.84 611.206L922.516 609.445L921.629 603.041L923.066 599.53L923.66 597.085L923.503 595.84L922.875 594.83L923.144 593.989L922.841 591.006L923.851 588.112L924.783 586.665L924.3 582.571L922.258 578.69L921.91 577.199L922.976 575.864L922.807 575.303L923.178 575.011L923.391 572.544L923.829 572.678L923.571 572.364L923.896 571.602L923.694 570.177L924.3 567.968L924.491 564.435L924.21 562.606L924.558 561.372L924.177 558.299L924.379 557.402L923.503 555.058L923.84 551.648L925.018 549.371L925.198 547.913L924.525 545.288L923.806 544.301V543.382L922.493 542.024L922.774 541.632L922.572 541.34L922.258 541.654L920.518 539.837L921.371 540.241L921.764 539.321L921.225 538.559L920.147 537.987L920.619 537.145L920.204 535.171L920.697 534.42L920.17 532.278L920.361 531.358L921.18 530.584L921.764 529.216L921.685 527.04L922.493 522.935L921.764 521.151L921.247 518.257L922.246 517.416L925.187 516.081L924.884 516.261L925.097 518.156L925.344 518.437L925.961 518.112L926.713 518.224L927.914 516.294L928.576 516.485L928.464 515.868L928.229 515.98L927.701 515.251L927.308 515.98L927.016 514.433L928.318 514.051L928.599 515.061L929.53 513.805L929.272 512.346L928.846 512.01L928.576 513.547L927.925 514.018L928.722 511.797L928.778 510.597L926.736 508.073L926.175 506.57L925.254 505.673L926.264 506.009L927.432 505.718L928.408 505.089L928.498 504.192L928.857 504.035Z\" />\n                </mask>\n                <path d=\"M956.725 626.875L958.095 627.997L959.947 627.627L959.296 628.726L958.802 628.468L957.724 629.589L956.254 629.713L955.727 630.61L954.716 631.137L954.357 632.427L953.897 632.394L953.572 633.414L952.034 634.143L951.787 635.691L950.777 635.781L950.541 634.435L953.257 632.091L953.28 631.485L955.255 629.051L955.973 627.357L956.725 626.875ZM977.803 615.098L978.645 615.603L978.095 616.354L978.511 616.938L978.23 617.588L976.434 617.633L975.435 618.508L973.965 618.934L972.248 620.134L970.676 621.873L969.711 622.03L969.206 621.379L968.645 621.503L968.319 622.086L968.645 622.355L968.196 623.118L966.097 624.666L965.065 626.314L964.066 626.393L963.078 627.873L962.292 627.716L962.382 627.088L963.011 626.527L962.966 625.619L963.347 626.225L963.673 625.742L963.471 625.249L964.178 625.507L964.907 624.811L964.975 624.161L964.301 623.925L964.256 623.421L965.267 623.622L965.514 622.905L967.455 621.536L967.68 620.617L967.444 620.089L968.656 620.538L969.285 619.226L970.385 618.867L970.205 617.252L970.632 616.534L971.148 616.646L971.866 618.485L973.28 618.407L975.132 617.33L975.323 616.668L976.704 615.278L977.803 615.098ZM991.968 607.505L989.297 609.815L989.106 610.69L988.578 611.262L987.736 612.002L986.94 612.126L984.886 614.302L983.763 614.907L982.708 614.84L984.863 611.756L985.862 611.599L987.781 609.098L989.038 608.783L988.96 608.133L989.319 607.808L990.295 607.359L991.261 607.662L992.17 607.337L991.968 607.505ZM1005.48 596.378L1005.95 596.793L1005 597.657L1004.87 598.386L1002.19 600.988L1001.7 600.977L1001.36 600.08L1002.59 600.035L1003.06 599.014L1004.1 598.386L1005.48 596.378ZM1007.27 593.877L1007.97 594.18L1007.78 594.808H1007.1L1006.94 594.214L1007.27 593.877ZM1012.07 588.841L1012.04 589.895L1011.43 590.333V589.435L1012.07 588.841ZM1013.28 584.994L1013.88 585.442L1013.91 586.037L1013 585.611L1013.28 584.994ZM1021.23 575.539L1021.58 575.785L1021.34 576.335L1019.75 577.793L1019.54 577.423L1020.4 576.817L1020.57 575.729L1021.23 575.539ZM1023.6 572.297L1024.56 572.802L1024.49 573.25L1023.76 573.43L1023.37 572.521L1023.6 572.297ZM1026.55 566.554L1027.13 566.88L1026.28 568.663L1026.54 570.39L1026.11 570.929L1025.13 571.119L1024.73 570.861L1024.65 569.942L1026.55 566.554ZM1036.14 552.343L1037.1 552.68L1036.85 553.835L1037.22 554.452L1037.21 555.652L1036.13 556.224L1036.03 557.021L1034.94 558.927L1034.39 559.107L1034.18 559.634L1032.74 559.701L1031.89 560.262L1030.94 562.012L1030.61 561.328L1029.61 561.372L1029.89 559.398L1029.5 558.299L1030.58 558.445L1031.08 557.593L1032.2 557.447L1032.47 557.122L1033.01 557.256L1033.89 556.303L1034.73 553.745L1036.14 552.343ZM1039.74 551.143L1039.97 552.399L1039.16 554.026L1038.06 554.06L1037.3 553.42L1037.43 552.355L1039.74 551.143ZM928.857 504.035L931.102 508.286L931.046 509.352L930.339 510.518V511.606L932.909 519.289L933.751 524.437L933.739 528.902L933.47 530.618L932.572 532.278L932.078 535.945L932.415 536.865L932.067 536.764L932.045 537.46L932.437 537.706L932.404 538.211L932.92 538.48L933.055 538.233L933.683 539.826L932.931 541.553L933.167 541.991L932.853 542.899L933.964 542.955L934.087 541.284L935.019 545.03L934.772 544.672L934.2 544.896L935.187 545.703L935.423 546.421L937.331 557.256L939.239 561.776L939.25 562.629L940.272 565.22L940.328 566.79L941.169 568.147L941.023 569.134L941.517 571.366L942.382 573.845L944.828 576.077L944.682 577.726L945.288 578.702L944.671 578.735L944.525 577.12L943.829 575.74L941.978 573.957L940.384 571.68L937.05 570.603L937.275 570.536L936.938 570.267L935.726 569.998L935.221 570.188L934.48 569.381L933.122 569.695L933.908 570.144L933.616 570.469L934.761 570.502L932.639 571.321L930.978 573.037L930.799 573.968L931.091 575.595L929.665 578.533L927.948 584.175L927.308 587.697L927.398 588.841L928.677 592.329L930.743 594.135L931.405 595.38V597.444L932 599.373L932.482 599.777L932.426 600.225L931.966 599.979L931.798 600.528L932.303 600.753L932.583 601.74L933.279 601.639L934.076 602.054L934.345 601.639L934.031 601.212L932.819 600.898L932.55 600.472L934.424 600.764L934.716 600.136L935.008 600.27L935.614 604.409L936.231 605.677L934.985 607.83L935.008 608.851L934.592 609.748L934.66 607.594L933.694 604.061L932.404 602.929L931.786 603.074L930.406 602.637L929.452 602.951L929.093 601.392L928.745 601.19L928.7 601.493L927.409 601.885L926.556 602.973L925.221 606.753L924.648 609.669L923.975 610.174L923.84 611.206L922.516 609.445L921.629 603.041L923.066 599.53L923.66 597.085L923.503 595.84L922.875 594.83L923.144 593.989L922.841 591.006L923.851 588.112L924.783 586.665L924.3 582.571L922.258 578.69L921.91 577.199L922.976 575.864L922.807 575.303L923.178 575.011L923.391 572.544L923.829 572.678L923.571 572.364L923.896 571.602L923.694 570.177L924.3 567.968L924.491 564.435L924.21 562.606L924.558 561.372L924.177 558.299L924.379 557.402L923.503 555.058L923.84 551.648L925.018 549.371L925.198 547.913L924.525 545.288L923.806 544.301V543.382L922.493 542.024L922.774 541.632L922.572 541.34L922.258 541.654L920.518 539.837L921.371 540.241L921.764 539.321L921.225 538.559L920.147 537.987L920.619 537.145L920.204 535.171L920.697 534.42L920.17 532.278L920.361 531.358L921.18 530.584L921.764 529.216L921.685 527.04L922.493 522.935L921.764 521.151L921.247 518.257L922.246 517.416L925.187 516.081L924.884 516.261L925.097 518.156L925.344 518.437L925.961 518.112L926.713 518.224L927.914 516.294L928.576 516.485L928.464 515.868L928.229 515.98L927.701 515.251L927.308 515.98L927.016 514.433L928.318 514.051L928.599 515.061L929.53 513.805L929.272 512.346L928.846 512.01L928.576 513.547L927.925 514.018L928.722 511.797L928.778 510.597L926.736 508.073L926.175 506.57L925.254 505.673L926.264 506.009L927.432 505.718L928.408 505.089L928.498 504.192L928.857 504.035Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-71-inside-51_10718_32869)\" />\n                <mask id=\"path-72-inside-52_10718_32869\" fill=\"white\">\n                    <path d=\"M33.5222 485.427L34.5324 485.921L35.6323 485.865L37.1475 486.953L37.226 486.089L38.6627 485.831L38.8759 486.628L39.684 486.672L38.9545 487.054L39.4596 487.424L40.2228 486.874L41.0646 487.155L41.4574 486.74L42.2094 487.043L42.3328 487.457L42.6359 486.504L43.2195 486.784L42.7593 487.659L43.1297 487.772L43.3317 487.177H44.0051L46.0366 487.76L46.4856 486.986L46.957 487.491L47.3835 486.964L47.7988 487.581L48.3375 486.459L49.1793 486.033L50.2006 486.123L50.9414 485.596L50.874 484.822L51.4577 484.9L52.0301 484.07L51.6821 483.386L51.9964 482.769L52.1648 483.173L52.4903 482.937L52.8382 483.218L52.8719 483.745L53.1637 483.678L53.5116 482.578L52.8943 482.13L53.4443 481.389L54.1289 481.3L54.533 481.726L56.2726 481.434L56.9461 482.904L57.4848 482.085L58.5623 483.038L59.954 483.543L60.5713 482.668L63.2987 482.881L64.4322 485.237L64.8251 485.338L64.769 487.155L65.2965 487.738L65.3414 488.209L64.5894 488.456L64.7802 490.497L64.3312 492L65.072 492.83L65.0944 493.772L64.3649 495.062L64.0955 495.051L63.5456 496.576L63.3548 496.722L63.0068 496.072L61.1437 497.978L61.2335 498.651L61.862 499.212L61.6488 499.526L59.4153 500.794L57.6868 500.345L58.4837 501.433L57.945 503.048L56.643 502.869L56.1155 503.205L55.7563 502.532L55.1278 502.667L54.1289 502.184L53.4667 502.229L53.1973 502.588L52.9729 502.218L52.075 503.07L51.5811 502.992L51.2332 503.755L51.6597 504.046L51.2332 505.067L51.9627 505.605L51.1995 506.716L51.4913 507.265L50.9189 507.546L50.6383 508.858L49.8302 508.981L50.3129 509.755L49.6058 510.081L49.8302 510.462L49.4486 510.843L48.8201 510.282L48.214 511.617L48.8089 512.369L48.4273 512.806L47.9783 512.492L47.81 513.737L47.3161 513.602L46.7325 514.657L45.5091 515.666L45.6775 516.182L45.2846 516.709L45.251 517.685L44.7908 517.382L44.0051 517.82L44.0388 517.091L43.2644 517.147L43.0624 516.664L42.8603 517.068L42.7032 516.53L41.5023 515.476L41.5921 514.758L41.2441 514.533L41.9849 513.995L41.6257 513.423L40.8737 513.58L40.638 513.21L40.0207 513.143L40.2564 512.952L39.684 513.064L39.6167 512.716L38.8759 512.447L37.3495 512.851L36.0027 512.615L35.9129 512.178L36.6985 511.236L36.5414 510.709L36.8781 510.496L36.5751 509.867L36.9455 509.666L36.9567 509.172L36.1149 508.981L36.1486 508.398L35.419 508.432L35.1833 507.927L33.9936 507.579L33.0396 506.312L32.5009 506.278L32.456 504.955L31.7826 503.485L30.5255 502.835L31.5244 500.827L29.8184 500.547L29.8745 499.997L27.9104 498.786L28.5389 496.744L29.3919 496.599L29.2797 495.634L30.0429 495.342L29.7174 493.413L28.4716 491.798L28.494 491.237L29.347 490.34L29.0889 489.241L29.5042 488.972L29.1562 488.467L29.5042 488.052L29.1674 487.211L29.9868 486.448L29.7399 486.156L30.4021 485.708L30.9296 485.539L31.704 485.898L33.5222 485.427Z\" />\n                </mask>\n                <path d=\"M33.5222 485.427L34.5324 485.921L35.6323 485.865L37.1475 486.953L37.226 486.089L38.6627 485.831L38.8759 486.628L39.684 486.672L38.9545 487.054L39.4596 487.424L40.2228 486.874L41.0646 487.155L41.4574 486.74L42.2094 487.043L42.3328 487.457L42.6359 486.504L43.2195 486.784L42.7593 487.659L43.1297 487.772L43.3317 487.177H44.0051L46.0366 487.76L46.4856 486.986L46.957 487.491L47.3835 486.964L47.7988 487.581L48.3375 486.459L49.1793 486.033L50.2006 486.123L50.9414 485.596L50.874 484.822L51.4577 484.9L52.0301 484.07L51.6821 483.386L51.9964 482.769L52.1648 483.173L52.4903 482.937L52.8382 483.218L52.8719 483.745L53.1637 483.678L53.5116 482.578L52.8943 482.13L53.4443 481.389L54.1289 481.3L54.533 481.726L56.2726 481.434L56.9461 482.904L57.4848 482.085L58.5623 483.038L59.954 483.543L60.5713 482.668L63.2987 482.881L64.4322 485.237L64.8251 485.338L64.769 487.155L65.2965 487.738L65.3414 488.209L64.5894 488.456L64.7802 490.497L64.3312 492L65.072 492.83L65.0944 493.772L64.3649 495.062L64.0955 495.051L63.5456 496.576L63.3548 496.722L63.0068 496.072L61.1437 497.978L61.2335 498.651L61.862 499.212L61.6488 499.526L59.4153 500.794L57.6868 500.345L58.4837 501.433L57.945 503.048L56.643 502.869L56.1155 503.205L55.7563 502.532L55.1278 502.667L54.1289 502.184L53.4667 502.229L53.1973 502.588L52.9729 502.218L52.075 503.07L51.5811 502.992L51.2332 503.755L51.6597 504.046L51.2332 505.067L51.9627 505.605L51.1995 506.716L51.4913 507.265L50.9189 507.546L50.6383 508.858L49.8302 508.981L50.3129 509.755L49.6058 510.081L49.8302 510.462L49.4486 510.843L48.8201 510.282L48.214 511.617L48.8089 512.369L48.4273 512.806L47.9783 512.492L47.81 513.737L47.3161 513.602L46.7325 514.657L45.5091 515.666L45.6775 516.182L45.2846 516.709L45.251 517.685L44.7908 517.382L44.0051 517.82L44.0388 517.091L43.2644 517.147L43.0624 516.664L42.8603 517.068L42.7032 516.53L41.5023 515.476L41.5921 514.758L41.2441 514.533L41.9849 513.995L41.6257 513.423L40.8737 513.58L40.638 513.21L40.0207 513.143L40.2564 512.952L39.684 513.064L39.6167 512.716L38.8759 512.447L37.3495 512.851L36.0027 512.615L35.9129 512.178L36.6985 511.236L36.5414 510.709L36.8781 510.496L36.5751 509.867L36.9455 509.666L36.9567 509.172L36.1149 508.981L36.1486 508.398L35.419 508.432L35.1833 507.927L33.9936 507.579L33.0396 506.312L32.5009 506.278L32.456 504.955L31.7826 503.485L30.5255 502.835L31.5244 500.827L29.8184 500.547L29.8745 499.997L27.9104 498.786L28.5389 496.744L29.3919 496.599L29.2797 495.634L30.0429 495.342L29.7174 493.413L28.4716 491.798L28.494 491.237L29.347 490.34L29.0889 489.241L29.5042 488.972L29.1562 488.467L29.5042 488.052L29.1674 487.211L29.9868 486.448L29.7399 486.156L30.4021 485.708L30.9296 485.539L31.704 485.898L33.5222 485.427Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-72-inside-52_10718_32869)\" />\n                <path d=\"M23.1623 422.987L23.5102 422.751L23.499 421.551L21.5573 421.024L21.2206 418.871L18.6953 417.996L17.0342 418.568L18.0892 417.065L18.8749 416.896L22.8256 418.669L24.8683 419.129L24.6102 420.374L26.0019 421.417L25.9458 423.581L27.8875 424.77L27.9885 425.297L27.2702 426.094L26.3498 426.083L25.9121 427.07L24.7 427.518L23.6898 427.35L22.2869 426.172L20.5696 424.299V423.94L20.0309 423.996L19.1667 423.379L19.3238 422.269H20.0085L22.0063 423.391L23.2072 423.279L23.1623 422.987Z\" fill=\"#3C484F\" />\n                <path d=\"M20.5438 423.692L20.0991 423.738L19.4355 423.264L19.5409 422.519H19.9431L21.8839 423.609L21.9519 423.647L22.0295 423.64L23.2305 423.527L23.4947 423.503L23.4543 423.24L23.4335 423.105L23.6504 422.958L23.7615 422.883L23.7602 422.749L23.749 421.549L23.7472 421.36L23.5645 421.31L21.7793 420.825L21.4676 418.832L21.4444 418.683L21.3024 418.634L18.7771 417.759L18.6955 417.731L18.6139 417.759L17.6818 418.08L18.2375 417.289L18.8472 417.158L22.7233 418.897L22.7462 418.907L22.7707 418.913L24.5736 419.318L24.3654 420.323L24.3331 420.478L24.4602 420.574L25.7486 421.539L25.6959 423.575L25.6921 423.719L25.8152 423.795L27.6627 424.926L27.7196 425.222L27.1602 425.842L26.3529 425.833L26.1881 425.831L26.1213 425.981L25.7264 426.872L24.6755 427.261L23.7983 427.115L22.4601 425.991L20.8196 424.202V423.94V423.663L20.5438 423.692Z\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" strokeWidth=\"0.5\" />\n                <mask id=\"path-75-inside-53_10718_32869\" fill=\"white\">\n                    <path d=\"M169.755 525.918L169.878 526.333L169.07 527.634L169.295 528.217L170.439 527.331L171.203 527.522L171.663 528.083L172.213 528.027L172.853 529.002L174.401 530.236L177.106 530.001L177.937 530.472L177.78 531.078L178.487 531.784L179.059 531.907L179.216 531.234L179.62 531.19L180.103 531.717L180.215 533.04L181.652 534.05L182.886 534.083L183.425 534.611L184.514 534.835L184.301 535.171L185.199 536.158L185.771 535.957L188.027 536.719L189.699 539.187L189.486 539.815L188.667 539.759L188.689 540.578L189.138 540.925L188.824 542.002L188.105 542.081L188.521 541.34L187.769 541.172L187.32 541.161L186.893 541.699L186.871 543.326H186.478L186.456 543.785L185.569 543.864L185.704 545.053L182.224 546.421L180.631 547.947L178.756 548.025L178.083 547.756L177.308 549.438L178.004 551.211L175.445 552.164L173.29 554.486L171.753 553.689L171.146 553.88L171.887 554.833L172.291 558.389L172.931 559.769L172.729 560.643L173.515 560.946L173.717 561.731L172.572 562.932L170.136 564.042L170.069 564.423L169.16 563.661L168.509 563.672L167.431 560.879L166.578 560.161L165.176 557.873L163.043 556.224L162.1 557.054L160.967 557.155L160.383 555.977L159.249 556.247L158.071 555.192L157.465 553.97L155.983 553.319L155.557 553.544L155.344 554.564L154.535 555.248L153.413 554.901L151.92 555.619L151.584 555.226L151.696 553.846L149.698 552.399L149.036 552.332L148.295 552.893L148.879 554.362L148.598 554.789L146.14 554.575L144.872 555.069L144.344 553.42L145.22 552.657L145.411 550.796L143.39 547.879L142.436 547.801L141.673 547.061L140.225 547.027L139.653 547.577L138.946 546.836L137.15 546.993L136.039 548.048L135.107 548.306L134.872 548.025L135.141 547.263L134.872 547.072L133.76 547.812L133.042 547.644L130.494 549.192L129.574 548.844L126.027 546.174L125.915 544.414L125.522 543.707L125.152 543.236L123.603 542.754L123.031 542.058L122.75 541.34L122.907 540.611L124.276 538.559L124.288 537.695L125.253 535.71L125.219 534.936L126.252 533.209L126.521 531.964L127.34 531.324L128.16 530.629L128.699 530.595L130.18 531.874L130.921 531.268L132.975 530.696L134.187 531.616L135.837 531.851L136.937 532.681L138.834 531.201L139.193 529.844L139.529 529.832L140.326 530.382L141.628 530.438L143.121 532.121L143.671 531.201L144.198 530.977L146.791 531.1L147.981 529.72L150.719 531.212L150.989 530.797L150.573 529.653L151.55 529.204L152.111 528.419L153.031 528.453L153.739 527.399L154.614 527.522L155.77 526.905L156.107 527.791L157.016 528.094L157.521 528.475L158.778 528.038L159.249 528.924L160.159 528.554L160.563 528.969L162.044 529.182L163.413 528.251L164.85 528.913L165.265 528.587L164.839 527.522L165.434 526.613L166.197 527.208L166.848 527.04L167.342 526.03L168.082 526.187L169.014 525.559L169.755 525.918Z\" />\n                </mask>\n                <path d=\"M169.755 525.918L169.878 526.333L169.07 527.634L169.295 528.217L170.439 527.331L171.203 527.522L171.663 528.083L172.213 528.027L172.853 529.002L174.401 530.236L177.106 530.001L177.937 530.472L177.78 531.078L178.487 531.784L179.059 531.907L179.216 531.234L179.62 531.19L180.103 531.717L180.215 533.04L181.652 534.05L182.886 534.083L183.425 534.611L184.514 534.835L184.301 535.171L185.199 536.158L185.771 535.957L188.027 536.719L189.699 539.187L189.486 539.815L188.667 539.759L188.689 540.578L189.138 540.925L188.824 542.002L188.105 542.081L188.521 541.34L187.769 541.172L187.32 541.161L186.893 541.699L186.871 543.326H186.478L186.456 543.785L185.569 543.864L185.704 545.053L182.224 546.421L180.631 547.947L178.756 548.025L178.083 547.756L177.308 549.438L178.004 551.211L175.445 552.164L173.29 554.486L171.753 553.689L171.146 553.88L171.887 554.833L172.291 558.389L172.931 559.769L172.729 560.643L173.515 560.946L173.717 561.731L172.572 562.932L170.136 564.042L170.069 564.423L169.16 563.661L168.509 563.672L167.431 560.879L166.578 560.161L165.176 557.873L163.043 556.224L162.1 557.054L160.967 557.155L160.383 555.977L159.249 556.247L158.071 555.192L157.465 553.97L155.983 553.319L155.557 553.544L155.344 554.564L154.535 555.248L153.413 554.901L151.92 555.619L151.584 555.226L151.696 553.846L149.698 552.399L149.036 552.332L148.295 552.893L148.879 554.362L148.598 554.789L146.14 554.575L144.872 555.069L144.344 553.42L145.22 552.657L145.411 550.796L143.39 547.879L142.436 547.801L141.673 547.061L140.225 547.027L139.653 547.577L138.946 546.836L137.15 546.993L136.039 548.048L135.107 548.306L134.872 548.025L135.141 547.263L134.872 547.072L133.76 547.812L133.042 547.644L130.494 549.192L129.574 548.844L126.027 546.174L125.915 544.414L125.522 543.707L125.152 543.236L123.603 542.754L123.031 542.058L122.75 541.34L122.907 540.611L124.276 538.559L124.288 537.695L125.253 535.71L125.219 534.936L126.252 533.209L126.521 531.964L127.34 531.324L128.16 530.629L128.699 530.595L130.18 531.874L130.921 531.268L132.975 530.696L134.187 531.616L135.837 531.851L136.937 532.681L138.834 531.201L139.193 529.844L139.529 529.832L140.326 530.382L141.628 530.438L143.121 532.121L143.671 531.201L144.198 530.977L146.791 531.1L147.981 529.72L150.719 531.212L150.989 530.797L150.573 529.653L151.55 529.204L152.111 528.419L153.031 528.453L153.739 527.399L154.614 527.522L155.77 526.905L156.107 527.791L157.016 528.094L157.521 528.475L158.778 528.038L159.249 528.924L160.159 528.554L160.563 528.969L162.044 529.182L163.413 528.251L164.85 528.913L165.265 528.587L164.839 527.522L165.434 526.613L166.197 527.208L166.848 527.04L167.342 526.03L168.082 526.187L169.014 525.559L169.755 525.918Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-75-inside-53_10718_32869)\" />\n                <mask id=\"path-76-inside-54_10718_32869\" fill=\"white\">\n                    <path d=\"M116.139 609.871L118.081 610.006L119.54 610.735L119.854 610.6L119.697 609.737L120.18 609.266L119.955 608.447L120.359 608.391L121.167 608.626L121.01 610.309L122.907 610.062L123.951 609.131L124.905 608.929L125.971 607.381L126.757 608.155L129.361 609.221L130.393 610.23L132.29 610.421L134.849 611.408L136.196 613.898L137.936 615.749L141.482 616.724L142.111 617.409L146.208 619.304L147.139 619.966L148.217 621.547L147.263 622.748L147.7 623.97L147.33 624.811L146.567 625.967L144.995 626.785L145.175 627.492L144.906 627.84L146.309 628.154L146.398 629.275L146.062 629.825L144.333 630.341L144.109 630.79L145.388 631.395L146.432 630.958L147.061 631.193L147.094 632.943L146.656 633.313L146.701 634.356L146.106 634.771L144.928 634.738L144.614 633.818L143.66 634.054L143.48 636.173L142.56 636.779L142.189 636.622L141.292 635.512L140.192 635.332L138.25 635.904L137.88 635.657L137.902 634.872L138.699 633.818L138.654 633.223L137.644 634.491L135.051 633.504L134.209 634.132L133.536 635.556L131.83 635.063L130.247 635.534L129.428 633.997L128.811 634.536L125.444 635.444L125.006 635.164L124.883 634.031L124.265 632.999L123.682 632.853L123.783 633.459L123.379 633.672L122.043 632.898L122.368 631.721L125.04 630.262L124.198 628.961L123.85 629.051L123.771 629.724L122.974 629.668L122.93 630.229L122.043 629.309L119.428 628.804L118.608 627.458L117.733 627.369L117.318 627.728L115.028 626.112L114.422 625.058L115.298 624.733L116.33 623.454L116.252 622.333L114.68 621.48L113.681 620.112L113.704 619.114L110.943 618.777L110.628 616.691L109.865 615.513L109.068 615.008L109.326 613.584L110.584 613.326L111.425 613.719L111.975 612.687H112.604L112.379 611.587L111.616 610.993L111.796 610.163L113.558 610.533L114.085 609.782L116.139 609.871Z\" />\n                </mask>\n                <path d=\"M116.139 609.871L118.081 610.006L119.54 610.735L119.854 610.6L119.697 609.737L120.18 609.266L119.955 608.447L120.359 608.391L121.167 608.626L121.01 610.309L122.907 610.062L123.951 609.131L124.905 608.929L125.971 607.381L126.757 608.155L129.361 609.221L130.393 610.23L132.29 610.421L134.849 611.408L136.196 613.898L137.936 615.749L141.482 616.724L142.111 617.409L146.208 619.304L147.139 619.966L148.217 621.547L147.263 622.748L147.7 623.97L147.33 624.811L146.567 625.967L144.995 626.785L145.175 627.492L144.906 627.84L146.309 628.154L146.398 629.275L146.062 629.825L144.333 630.341L144.109 630.79L145.388 631.395L146.432 630.958L147.061 631.193L147.094 632.943L146.656 633.313L146.701 634.356L146.106 634.771L144.928 634.738L144.614 633.818L143.66 634.054L143.48 636.173L142.56 636.779L142.189 636.622L141.292 635.512L140.192 635.332L138.25 635.904L137.88 635.657L137.902 634.872L138.699 633.818L138.654 633.223L137.644 634.491L135.051 633.504L134.209 634.132L133.536 635.556L131.83 635.063L130.247 635.534L129.428 633.997L128.811 634.536L125.444 635.444L125.006 635.164L124.883 634.031L124.265 632.999L123.682 632.853L123.783 633.459L123.379 633.672L122.043 632.898L122.368 631.721L125.04 630.262L124.198 628.961L123.85 629.051L123.771 629.724L122.974 629.668L122.93 630.229L122.043 629.309L119.428 628.804L118.608 627.458L117.733 627.369L117.318 627.728L115.028 626.112L114.422 625.058L115.298 624.733L116.33 623.454L116.252 622.333L114.68 621.48L113.681 620.112L113.704 619.114L110.943 618.777L110.628 616.691L109.865 615.513L109.068 615.008L109.326 613.584L110.584 613.326L111.425 613.719L111.975 612.687H112.604L112.379 611.587L111.616 610.993L111.796 610.163L113.558 610.533L114.085 609.782L116.139 609.871Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-76-inside-54_10718_32869)\" />\n                <mask id=\"path-77-inside-55_10718_32869\" fill=\"white\">\n                    <path d=\"M258.928 388.957L259.388 388.497L262.834 390.011L263.148 390.471L263.125 392.187L263.788 392.938L266.65 392.333L272.71 393.421L285.113 401.519L286.538 403.672L286.695 404.626L286.044 406.768L286.897 409.729L289.714 414.776L290.006 416.044L289.467 417.311L293.048 418.792L293.598 419.824L294.237 423.536L294.226 427.933L294.821 429.178L295.741 430.165L296.718 430.58L299.232 430.647L302.431 431.713L304.305 431.634L304.653 433.059L305.472 432.992L305.719 433.317L307.818 440.002L309.344 441.718L311.028 442.323L311.331 443.725L311.825 448.257L313.161 451.42L310.602 452.867L310.175 453.596L309.322 453.876L308.806 454.785L307.818 455.514L306.785 454.773L302.599 457.106L303.564 458.25L302.476 460.101L304.215 467.751L304.451 468.166L305.528 467.997L305.708 468.323L305.147 469.971L303.216 470.308L302.24 469.332L300.13 469.298L299.007 470.465L298.458 470.353L298.132 470.656L298.199 471.957L297.01 473L297.2 474.29L296.336 474.592L293.71 474.278L291.364 472.461L290.489 472.854L290.073 473.516L289.793 473.134L288.367 473.235L286.942 472.495L285.337 473.437L284.551 474.391L283.822 473.179L283.44 473.157L282.542 473.819L280.623 476.881L279.669 477.52L279.579 479.292L278.401 478.787L277.963 477.767L277.088 477.453L276.987 476.892L275.595 476.959L274.809 476.095L273.889 476.409L272.924 475.972L271.846 476.825L272.407 478.204L269.489 478.507L268.816 478.137L267.873 478.417L266.537 477.61L264.248 478.227L262.946 477.767L260.993 478.238L260.23 477.004L258.266 476.802L257.356 476.286L256.459 476.757L256.638 478.148L256.054 478.597L255.594 478.473L255.426 479.64L254.573 480.705L253.709 480.548L251.655 479.202L249.679 480.302L249.343 479.909L248.209 479.752L247.244 480.369L246.739 480.279L245.549 479.415L244.808 479.371L243.596 479.909L243.091 479.382L243.405 478.653L242.609 477.699L242.44 476.937L242.16 473.314L242.642 472.069L241.172 469.691L241.385 468.435L242.002 467.919L243.866 468.67L244.651 468.3L246.761 465.889L247.177 465.922L247.569 466.483L247.884 466.27L247.569 465.642L247.861 465.305L247.12 464.262L247.491 462.827L246.402 461.952L246.312 461.357L247.132 459.518L246.907 458.553L247.67 457.555L247.682 456.815L248.4 456.041L249.534 456.501L250.936 456.389L251.475 458.116L252.631 456.725L254.18 455.592L254.259 454.157L253.956 453.629L252.665 453.327L252.048 452.429L251.947 450.96L253.215 449.479L253.664 448.369L255.168 447.124L256.257 447.326L256.717 447.012L257.098 445.812L258.636 444.769L259.018 444.039L258.512 442.021L258.849 441.123L258.658 440.843L257.435 441.056L256.874 440.63L256.593 439.732L256.054 439.553L256.066 438.185L256.919 436.917L256.268 435.784L256.447 434.349L255.089 432.588L253.944 432.464L253.091 431.948L251.969 430.064L251.071 429.29L252.205 425.409L253.383 423.548L255.74 421.439L257.009 417.109L256.919 415.539L258.445 411.927L259.22 408.753L259.231 406.151L258.209 404.155L257.671 400.431L257.659 399.13L259.186 395.238L258.367 393.196L258.153 390.516L258.928 388.957Z\" />\n                </mask>\n                <path d=\"M258.928 388.957L259.388 388.497L262.834 390.011L263.148 390.471L263.125 392.187L263.788 392.938L266.65 392.333L272.71 393.421L285.113 401.519L286.538 403.672L286.695 404.626L286.044 406.768L286.897 409.729L289.714 414.776L290.006 416.044L289.467 417.311L293.048 418.792L293.598 419.824L294.237 423.536L294.226 427.933L294.821 429.178L295.741 430.165L296.718 430.58L299.232 430.647L302.431 431.713L304.305 431.634L304.653 433.059L305.472 432.992L305.719 433.317L307.818 440.002L309.344 441.718L311.028 442.323L311.331 443.725L311.825 448.257L313.161 451.42L310.602 452.867L310.175 453.596L309.322 453.876L308.806 454.785L307.818 455.514L306.785 454.773L302.599 457.106L303.564 458.25L302.476 460.101L304.215 467.751L304.451 468.166L305.528 467.997L305.708 468.323L305.147 469.971L303.216 470.308L302.24 469.332L300.13 469.298L299.007 470.465L298.458 470.353L298.132 470.656L298.199 471.957L297.01 473L297.2 474.29L296.336 474.592L293.71 474.278L291.364 472.461L290.489 472.854L290.073 473.516L289.793 473.134L288.367 473.235L286.942 472.495L285.337 473.437L284.551 474.391L283.822 473.179L283.44 473.157L282.542 473.819L280.623 476.881L279.669 477.52L279.579 479.292L278.401 478.787L277.963 477.767L277.088 477.453L276.987 476.892L275.595 476.959L274.809 476.095L273.889 476.409L272.924 475.972L271.846 476.825L272.407 478.204L269.489 478.507L268.816 478.137L267.873 478.417L266.537 477.61L264.248 478.227L262.946 477.767L260.993 478.238L260.23 477.004L258.266 476.802L257.356 476.286L256.459 476.757L256.638 478.148L256.054 478.597L255.594 478.473L255.426 479.64L254.573 480.705L253.709 480.548L251.655 479.202L249.679 480.302L249.343 479.909L248.209 479.752L247.244 480.369L246.739 480.279L245.549 479.415L244.808 479.371L243.596 479.909L243.091 479.382L243.405 478.653L242.609 477.699L242.44 476.937L242.16 473.314L242.642 472.069L241.172 469.691L241.385 468.435L242.002 467.919L243.866 468.67L244.651 468.3L246.761 465.889L247.177 465.922L247.569 466.483L247.884 466.27L247.569 465.642L247.861 465.305L247.12 464.262L247.491 462.827L246.402 461.952L246.312 461.357L247.132 459.518L246.907 458.553L247.67 457.555L247.682 456.815L248.4 456.041L249.534 456.501L250.936 456.389L251.475 458.116L252.631 456.725L254.18 455.592L254.259 454.157L253.956 453.629L252.665 453.327L252.048 452.429L251.947 450.96L253.215 449.479L253.664 448.369L255.168 447.124L256.257 447.326L256.717 447.012L257.098 445.812L258.636 444.769L259.018 444.039L258.512 442.021L258.849 441.123L258.658 440.843L257.435 441.056L256.874 440.63L256.593 439.732L256.054 439.553L256.066 438.185L256.919 436.917L256.268 435.784L256.447 434.349L255.089 432.588L253.944 432.464L253.091 431.948L251.969 430.064L251.071 429.29L252.205 425.409L253.383 423.548L255.74 421.439L257.009 417.109L256.919 415.539L258.445 411.927L259.22 408.753L259.231 406.151L258.209 404.155L257.671 400.431L257.659 399.13L259.186 395.238L258.367 393.196L258.153 390.516L258.928 388.957Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-77-inside-55_10718_32869)\" />\n                <path d=\"M103.85 519.11L104.647 519.256L104.928 518.224L105.365 518.717L106.432 518.112L106.162 517.214L106.701 516.856L107.329 517.641L107.285 516.956L107.902 516.822L108.115 516.093L108.755 516.138L109.204 517.114L109.473 517.226L109.945 516.676L111.134 517.192L111.482 517.977L111.987 518.044L112.223 517.069L112.638 517.282L113.054 517.046L112.874 516.497L113.402 516.373L113.794 513.435L114.905 513.401L115.175 512.694L115.343 513.188L116.679 512.795L116.858 513.121L117.801 512.762L119.283 512.84L119.575 513.098L119.35 516.553L120.854 517.506L120.674 518.796L121.011 519.121L121.92 519.166L123.189 520.916L123.121 521.847L126.264 524.64L128.643 527.657L128.688 528.498L127.375 530.001L127.341 531.324L126.522 531.964L126.253 533.209L125.22 534.936L125.254 535.71L124.288 537.695L124.277 538.559L122.908 540.612L122.751 541.341L123.031 542.058L122.268 541.677L121.617 542.081L120.989 540.813L120.214 540.757L119.967 541.643L119.373 541.24L118.418 541.228L117.644 540.342L116.881 540.6L115.725 539.871L113.637 539.512L112.953 540.32L110.91 540.522L110.382 540.129L110.596 538.794L110.304 538.256L107.15 537.359L107.902 534.779L108.699 534.386L108.744 533.657L107.105 532.255L105.601 531.818L105.231 531.347L105.489 530.708L103.21 529.474L102.335 527.141L102.739 526.277L103.446 526.356L103.738 525.997L103.188 524.808L103.985 523.81L103.469 523.496L103.671 522.924L103.289 520.781L103.85 519.11Z\" fill=\"#3C484F\" />\n                <path d=\"M104.888 519.321L105.048 518.736L105.178 518.883L105.313 519.035L105.489 518.935L106.555 518.329L106.728 518.231L106.671 518.04L106.455 517.32L106.649 517.191L107.134 517.797L107.631 518.417L107.579 517.624L107.548 517.155L107.955 517.066L108.1 517.035L108.142 516.892L108.299 516.356L108.59 516.377L108.977 517.218L109.018 517.307L109.108 517.344L109.377 517.456L109.545 517.526L109.663 517.388L110.014 516.979L110.945 517.383L111.254 518.078L111.31 518.206L111.449 518.225L111.954 518.292L112.177 518.322L112.23 518.103L112.391 517.436L112.524 517.504L112.644 517.566L112.762 517.499L113.177 517.264L113.355 517.163L113.291 516.969L113.196 516.678L113.458 516.617L113.626 516.577L113.649 516.406L114.014 513.678L114.913 513.651L115.08 513.646L115.139 513.49L115.162 513.43L115.184 513.495L115.414 513.428L116.557 513.092L116.64 513.241L116.744 513.431L116.947 513.354L117.841 513.014L119.182 513.085L119.317 513.204L119.101 516.537L119.091 516.684L119.216 516.764L120.584 517.631L120.427 518.761L120.409 518.887L120.501 518.976L120.837 519.301L120.905 519.366L120.999 519.371L121.788 519.41L122.933 520.989L122.872 521.829L122.863 521.952L122.955 522.034L126.081 524.812L128.398 527.749L128.433 528.41L127.187 529.836L127.127 529.904L127.125 529.995L127.094 531.2L126.368 531.767L126.297 531.822L126.278 531.911L126.017 533.116L125.005 534.808L124.967 534.872L124.97 534.947L125.001 535.658L124.064 537.586L124.039 537.636L124.038 537.692L124.028 538.482L122.7 540.473L122.674 540.512L122.664 540.559L122.506 541.288L122.491 541.361L122.518 541.432L122.562 541.544L122.38 541.453L122.255 541.391L122.136 541.465L121.719 541.723L121.213 540.702L121.149 540.574L121.007 540.564L120.232 540.508L120.028 540.493L119.973 540.69L119.82 541.241L119.513 541.033L119.451 540.991L119.375 540.99L118.533 540.98L117.832 540.178L117.722 540.052L117.564 540.105L116.914 540.325L115.858 539.66L115.816 539.633L115.767 539.625L113.68 539.266L113.539 539.242L113.447 539.351L112.827 540.081L110.982 540.263L110.653 540.019L110.842 538.834L110.856 538.75L110.815 538.675L110.524 538.137L110.473 538.044L110.372 538.016L107.46 537.187L108.111 534.955L108.809 534.611L108.939 534.547L108.948 534.402L108.993 533.673L109.001 533.548L108.906 533.467L107.268 532.065L107.227 532.03L107.175 532.015L105.748 531.6L105.517 531.306L105.721 530.801L105.804 530.594L105.608 530.488L103.412 529.298L102.606 527.151L102.89 526.545L103.419 526.604L103.554 526.619L103.64 526.513L103.932 526.154L104.03 526.033L103.965 525.892L103.48 524.843L104.18 523.966L104.357 523.744L104.115 523.596L103.772 523.387L103.906 523.007L103.928 522.945L103.917 522.88L103.546 520.8L104.018 519.395L104.602 519.502L104.828 519.543L104.888 519.321Z\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" strokeWidth=\"0.5\" />\n                <mask id=\"path-80-inside-56_10718_32869\" fill=\"white\">\n                    <path d=\"M385.092 442.458L385.395 441.696L389.402 437.86L389.604 436.861L388.897 434.17L390.603 432.622L391.501 430.614L392.399 430.446L393.387 428.842L397.393 428.146L398.157 421.619L397.797 419.981L398.976 417.614L398.684 415.708L398.909 413.891L400.48 412.892L400.637 412.466L400.065 410.907L400.581 409.651L400.491 408.361L400.783 407.755L401.288 407.565L402.927 408.204L406.26 408.294L408.314 409.045L408.999 408.361L412.377 408.709L413.567 407.778L413.937 408.541L415.138 409.146L416.238 408.013L416.945 408.069L418.135 408.35L418.584 410.526L419.773 410.806L421.816 410.346L425.486 410.335L426.732 409.46L428.977 409.068L430.021 408.372L430.784 408.428L432.613 409.292L432.894 411.087L436.07 411.412L436.991 411.008L439.19 411.064L441.514 412.993L442.266 412.892L443.523 411.558L443.646 409.909L444.555 408.944L449.909 404.862L452.502 404.671L455.947 407.621L458.417 407.464L458.63 408.383L459.584 409.09L463.029 415.797L462.39 417.3L461.649 417.951L461.66 420.295L461.02 421.495L461.57 423.222L468.798 423.032L471.447 422.314L475.117 422.067L480.235 423.054L481.156 423.436L481.526 424.187L481.683 426.464L484.411 426.554L486.105 430.95L487.486 433.216L491.818 432.588L492.997 432.532L493.199 432.891L493.333 434.203L494.871 435.852L495.017 436.805L492.772 437.983L491.033 440.653L487.924 444.253L488.204 448.268L489.068 449.682L489.181 450.725L493.659 451.678L494.512 452.732L496.218 453.54L497.913 453.26L498.631 453.461L499.574 454.404L499.708 455.536L499.54 458.251L497.015 459.058L497.351 460.292L495.657 461.111L494.153 464.543L492.873 465.777L492.716 466.382L494.063 466.225L494.433 467.044L493.513 469.209L492.952 470.499L491.874 470.162L488.81 472.125L487.385 473.438L485.555 474.211L485.174 472.54L483.389 473.572L483.468 472.585L481.941 472.596L481.683 473.707L480.707 474.122L479.012 474.2L478.765 473.909L479.023 473L477.373 472.978L475.925 473.909L475.432 473.83L474.354 472.697L474.029 472.955L473.748 474.514L473.12 474.582L472.457 475.355L470.908 476.174L470.504 477.262L468.798 477.812L469.045 478.575L469.494 478.743L466.509 478.99L464.085 480.033L462.861 479.943L460.078 481.581L459.281 482.287L458.596 482.366L457.541 481.547L456.138 482.007L454.758 483.7L453.198 486.561L450.582 486.527L450.01 485.764L450.549 485.54L451.177 484.138L450.437 481.917L450.515 480.762L449.696 480.235L449.808 479.135L448.955 478.418L450.19 476.152L449.213 474.301L447.025 474.884L447.047 475.636L446.564 476.23L443.377 476.556L437.204 478.294L436.609 478.115L433.893 474.492L433.41 474.301L428.932 475.479L426.317 475.815L422.041 469.747L419.998 468.76L418.494 467.594L412.018 466.169L411.008 465.059L408.235 465.283L399.178 465.025L397.483 464.341L395.429 464.565L392.837 463.926L391.647 461.582L390.76 461.84L390.558 460.326L389.279 457.914L388.347 457.847L388.695 456.703L388.123 453.26L386.215 452.351L384.699 451.061L384.643 450.444L385.833 449.244L384.239 447.719L384.879 446.844L386.686 445.7L385.238 443.658L385.609 443.109L385.092 442.458Z\" />\n                </mask>\n                <path d=\"M385.092 442.458L385.395 441.696L389.402 437.86L389.604 436.861L388.897 434.17L390.603 432.622L391.501 430.614L392.399 430.446L393.387 428.842L397.393 428.146L398.157 421.619L397.797 419.981L398.976 417.614L398.684 415.708L398.909 413.891L400.48 412.892L400.637 412.466L400.065 410.907L400.581 409.651L400.491 408.361L400.783 407.755L401.288 407.565L402.927 408.204L406.26 408.294L408.314 409.045L408.999 408.361L412.377 408.709L413.567 407.778L413.937 408.541L415.138 409.146L416.238 408.013L416.945 408.069L418.135 408.35L418.584 410.526L419.773 410.806L421.816 410.346L425.486 410.335L426.732 409.46L428.977 409.068L430.021 408.372L430.784 408.428L432.613 409.292L432.894 411.087L436.07 411.412L436.991 411.008L439.19 411.064L441.514 412.993L442.266 412.892L443.523 411.558L443.646 409.909L444.555 408.944L449.909 404.862L452.502 404.671L455.947 407.621L458.417 407.464L458.63 408.383L459.584 409.09L463.029 415.797L462.39 417.3L461.649 417.951L461.66 420.295L461.02 421.495L461.57 423.222L468.798 423.032L471.447 422.314L475.117 422.067L480.235 423.054L481.156 423.436L481.526 424.187L481.683 426.464L484.411 426.554L486.105 430.95L487.486 433.216L491.818 432.588L492.997 432.532L493.199 432.891L493.333 434.203L494.871 435.852L495.017 436.805L492.772 437.983L491.033 440.653L487.924 444.253L488.204 448.268L489.068 449.682L489.181 450.725L493.659 451.678L494.512 452.732L496.218 453.54L497.913 453.26L498.631 453.461L499.574 454.404L499.708 455.536L499.54 458.251L497.015 459.058L497.351 460.292L495.657 461.111L494.153 464.543L492.873 465.777L492.716 466.382L494.063 466.225L494.433 467.044L493.513 469.209L492.952 470.499L491.874 470.162L488.81 472.125L487.385 473.438L485.555 474.211L485.174 472.54L483.389 473.572L483.468 472.585L481.941 472.596L481.683 473.707L480.707 474.122L479.012 474.2L478.765 473.909L479.023 473L477.373 472.978L475.925 473.909L475.432 473.83L474.354 472.697L474.029 472.955L473.748 474.514L473.12 474.582L472.457 475.355L470.908 476.174L470.504 477.262L468.798 477.812L469.045 478.575L469.494 478.743L466.509 478.99L464.085 480.033L462.861 479.943L460.078 481.581L459.281 482.287L458.596 482.366L457.541 481.547L456.138 482.007L454.758 483.7L453.198 486.561L450.582 486.527L450.01 485.764L450.549 485.54L451.177 484.138L450.437 481.917L450.515 480.762L449.696 480.235L449.808 479.135L448.955 478.418L450.19 476.152L449.213 474.301L447.025 474.884L447.047 475.636L446.564 476.23L443.377 476.556L437.204 478.294L436.609 478.115L433.893 474.492L433.41 474.301L428.932 475.479L426.317 475.815L422.041 469.747L419.998 468.76L418.494 467.594L412.018 466.169L411.008 465.059L408.235 465.283L399.178 465.025L397.483 464.341L395.429 464.565L392.837 463.926L391.647 461.582L390.76 461.84L390.558 460.326L389.279 457.914L388.347 457.847L388.695 456.703L388.123 453.26L386.215 452.351L384.699 451.061L384.643 450.444L385.833 449.244L384.239 447.719L384.879 446.844L386.686 445.7L385.238 443.658L385.609 443.109L385.092 442.458Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-80-inside-56_10718_32869)\" />\n                <mask id=\"path-81-inside-57_10718_32869\" fill=\"white\">\n                    <path d=\"M80.0439 498.438L80.7847 498.797L80.8183 498.539L81.9856 498.685L82.5356 499.325L82.7151 500.199L83.1641 499.986L83.9048 500.311L84.5334 499.874L84.5446 498.663L85.8914 498.394L86.7669 499.661L86.6771 500.199L87.2832 500.356L88.3045 501.377L88.6974 500.984L89.5279 501.388L90.1003 501.209L90.3248 501.691L90.033 502.6L89.2922 502.745L89.7412 504.405L90.4033 505.112L90.0105 505.527L90.1677 506.065L91.6828 506.738L91.8849 507.557L92.7267 507.894L92.4348 508.567L91.7839 508.555L91.7726 509.296L92.4236 509.565L92.1879 509.856L92.6481 510.07L92.592 510.664L92.895 510.922L93.6694 510.776L92.9511 511.292L93.097 512.01L92.7042 512.29L93.3888 512.369L93.1195 512.851L93.3327 513.289L94.2755 513.255L93.7592 513.872L93.5235 515.812L93.4899 516.328L93.0072 516.003L92.0308 516.743L92.5807 517.046L92.2777 517.192L92.794 518.392L90.4931 519.065L91.5145 520.759L90.9196 520.927L91.9073 521.869L91.5369 522.598L91.2339 522.508L91.2676 523.08L90.6952 523.148L90.5942 522.396L90.2687 522.43L89.8758 523.451L89.4942 523.294L89.4718 523.72L88.7984 523.978L88.4168 522.621L86.2843 522.778L86.172 522.464L85.4425 522.452L85.5098 523.103L85.0272 523.114L83.9161 521.454L83.4671 521.914L82.8049 521.443L82.7937 519.626L80.5265 519.267L80.4816 519.884L79.7296 520.153L77.9451 519.345L77.5859 519.682L76.1156 519.256L75.4197 518.1L75.5993 517.854L74.1066 518.112L72.8271 517.158L72.3781 516.205L70.8517 515.521L70.4028 515.655L70.0548 514.769L70.6609 514.096L69.4936 513.132L69.8865 512.638L69.4824 512.089L70.2456 511.651L69.9538 511.202L70.5936 510.664L71.2558 510.81L71.2445 509.61L72.0414 508.769L70.4701 508.578L71.1772 508.488L71.3343 508.163L70.4252 507.647L71.7496 507.849L72.5577 506.761L73.4556 506.974L74.1627 506.133L75.3075 505.807L75.7789 506.178L77.9675 506.009L77.6757 505.583L77.9114 504.08L77.1033 503.957L76.8676 503.149L77.5747 502.667L77.2941 502.016L78.2032 501.781L79.0225 502.521L79.6174 501.411L80.0439 498.438Z\" />\n                </mask>\n                <path d=\"M80.0439 498.438L80.7847 498.797L80.8183 498.539L81.9856 498.685L82.5356 499.325L82.7151 500.199L83.1641 499.986L83.9048 500.311L84.5334 499.874L84.5446 498.663L85.8914 498.394L86.7669 499.661L86.6771 500.199L87.2832 500.356L88.3045 501.377L88.6974 500.984L89.5279 501.388L90.1003 501.209L90.3248 501.691L90.033 502.6L89.2922 502.745L89.7412 504.405L90.4033 505.112L90.0105 505.527L90.1677 506.065L91.6828 506.738L91.8849 507.557L92.7267 507.894L92.4348 508.567L91.7839 508.555L91.7726 509.296L92.4236 509.565L92.1879 509.856L92.6481 510.07L92.592 510.664L92.895 510.922L93.6694 510.776L92.9511 511.292L93.097 512.01L92.7042 512.29L93.3888 512.369L93.1195 512.851L93.3327 513.289L94.2755 513.255L93.7592 513.872L93.5235 515.812L93.4899 516.328L93.0072 516.003L92.0308 516.743L92.5807 517.046L92.2777 517.192L92.794 518.392L90.4931 519.065L91.5145 520.759L90.9196 520.927L91.9073 521.869L91.5369 522.598L91.2339 522.508L91.2676 523.08L90.6952 523.148L90.5942 522.396L90.2687 522.43L89.8758 523.451L89.4942 523.294L89.4718 523.72L88.7984 523.978L88.4168 522.621L86.2843 522.778L86.172 522.464L85.4425 522.452L85.5098 523.103L85.0272 523.114L83.9161 521.454L83.4671 521.914L82.8049 521.443L82.7937 519.626L80.5265 519.267L80.4816 519.884L79.7296 520.153L77.9451 519.345L77.5859 519.682L76.1156 519.256L75.4197 518.1L75.5993 517.854L74.1066 518.112L72.8271 517.158L72.3781 516.205L70.8517 515.521L70.4028 515.655L70.0548 514.769L70.6609 514.096L69.4936 513.132L69.8865 512.638L69.4824 512.089L70.2456 511.651L69.9538 511.202L70.5936 510.664L71.2558 510.81L71.2445 509.61L72.0414 508.769L70.4701 508.578L71.1772 508.488L71.3343 508.163L70.4252 507.647L71.7496 507.849L72.5577 506.761L73.4556 506.974L74.1627 506.133L75.3075 505.807L75.7789 506.178L77.9675 506.009L77.6757 505.583L77.9114 504.08L77.1033 503.957L76.8676 503.149L77.5747 502.667L77.2941 502.016L78.2032 501.781L79.0225 502.521L79.6174 501.411L80.0439 498.438Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-81-inside-57_10718_32869)\" />\n                <mask id=\"path-82-inside-58_10718_32869\" fill=\"white\">\n                    <path d=\"M183.336 472.181L184.054 472.473L184.525 472.013L185.143 472.349L185.805 471.654L187.41 474.009L187.275 474.649L188.027 476.129L189.351 476.522L189.127 475.568L189.711 475.254L190.216 475.804L190.496 476.724L190.193 478.036L191.057 479.326L191.899 479.92L192.494 479.729L193.403 480.447L193.964 480.425L194.234 479.763L195.951 479.27L196.355 479.494L195.12 480.47L194.324 481.704L194.256 482.107L194.997 482.657L196.198 482.119L197.724 482.556L198.645 482.264L199.195 482.354L200.115 483.364L200.53 483.285L200.957 482.657L200.732 480.784L201.787 480.245L202.741 481.389L203.852 480.672L204.47 481.591L205.053 481.12L204.515 479.741L204.762 479.472L205.693 479.92L205.895 479.348L205.255 478.585L203.46 477.912L203.437 477.643L204.795 476.398L205.94 476.129L206.524 475.097L206.243 474.514L207.422 473.617L207.781 474.144L206.894 475.781L207.13 478.395L208.757 479.729L209.498 479.887L209.924 479.337L209.363 477.89L209.633 477.475L211.473 478.17L211.417 479.763L210.328 480.503L210.306 481.468L209.139 482.264L208.982 482.735L209.992 483.655L213.314 482.152L214.504 482.713L215.087 484.025L215.682 484.395L215.503 484.653L216.513 485.181L216.558 486.325L215.02 487.727L215.099 488.646L214.593 489.174L214.167 490.531L212.382 491.507L211.193 493.043L210.317 493.021L208.387 493.795L208.061 494.524L209.027 494.827L210.239 495.836L211.024 497.047L212.057 497.002L212.394 497.507L211.709 498.752L211.978 500.143L210.654 502.353L210.328 503.631L209.891 506.177L210.328 508.14L210.048 509.06L209.801 509.161L208.813 508.006L207.276 508.701L207.41 507.77L206.557 507.277L206.681 506.727L208.016 506.323L208.129 505.987L207.601 505.258L206.86 505.863L205.267 505L203.74 505.033L203.347 504.551L202.988 503.642L202.651 503.542L202.068 504.024L201.361 503.642L199.453 505.168L199.307 504.45L198.476 503.844L198.521 502.97L197.578 502.779L195.603 501.624L195.075 500.76L194.166 501.87L193.818 501.702L193.953 500.457L193.19 501.119L192.146 500.681L192.18 501.253L190.844 502.476L190.923 503.788L190.44 505.067L188.88 503.654L187.107 505.269L186.691 505.101L186.871 504.472L186.287 503.519L185.906 503.317L185.266 503.945L184.581 502.947L183.392 502.521L181.753 502.566L180.9 501.635L179.374 501.657L179.542 501.096L178.184 498.494L176.893 497.395L176.444 497.877L176.276 497.541L175.973 497.743L175.636 498.337L174.761 498.438L175.76 498.92L174.693 498.988L173.403 500.894L172.415 501.242L170.765 501.253L170.035 500.479L168.924 500.199L168.913 499.369L168.195 499.56L167.555 499.111L167.028 499.964L166.208 499.829L165.939 501.22L165.434 500.917L165.344 499.739L164.85 499.369L164.278 499.571L164.379 500.177L163.279 501.444L163.458 502.263L163.133 502.431L162.168 501.949L161.842 502.622L161.494 501.332L161.786 500.984L160.854 499.896L162.257 499.313L161.663 498.405L162.201 497.945L162.1 497.474L163.211 498.326L164.502 498.494L164.368 497.709L165.49 497.765L165.086 496.318L167.611 495.881L167.622 495.455L166.567 495.892L166.096 495.264L166.253 494.479L167.319 493.884L166.444 491.652L165.827 491.45L165.894 492.258L165.411 492.202L164.828 492.92L164.323 492.74L164.446 491.585L164.603 491.159L165.479 490.901L166.814 488.927L168.026 487.951L167.14 487.491L167.095 486.74L168.442 486.235L169.037 485.27L170.181 485.035L170.148 484.216L170.013 483.296L171.719 481.984L172.202 480.447L173.201 480.75L173.84 479.494L174.648 479.516L175.288 478.608L175.378 478.159L174.132 478.137L173.93 477.531L174.525 476.477L175.67 475.77L177.724 476.252L178.262 475.153L179.183 475.277L179.643 474.256L180.821 473.819L181.472 474.2L181.091 474.783L181.427 475.299L182.426 474.615L182.92 475.131L183.493 474.121L184.413 473.762L184.469 473.426L184.166 472.921L183.481 472.831L183.336 472.181Z\" />\n                </mask>\n                <path d=\"M183.336 472.181L184.054 472.473L184.525 472.013L185.143 472.349L185.805 471.654L187.41 474.009L187.275 474.649L188.027 476.129L189.351 476.522L189.127 475.568L189.711 475.254L190.216 475.804L190.496 476.724L190.193 478.036L191.057 479.326L191.899 479.92L192.494 479.729L193.403 480.447L193.964 480.425L194.234 479.763L195.951 479.27L196.355 479.494L195.12 480.47L194.324 481.704L194.256 482.107L194.997 482.657L196.198 482.119L197.724 482.556L198.645 482.264L199.195 482.354L200.115 483.364L200.53 483.285L200.957 482.657L200.732 480.784L201.787 480.245L202.741 481.389L203.852 480.672L204.47 481.591L205.053 481.12L204.515 479.741L204.762 479.472L205.693 479.92L205.895 479.348L205.255 478.585L203.46 477.912L203.437 477.643L204.795 476.398L205.94 476.129L206.524 475.097L206.243 474.514L207.422 473.617L207.781 474.144L206.894 475.781L207.13 478.395L208.757 479.729L209.498 479.887L209.924 479.337L209.363 477.89L209.633 477.475L211.473 478.17L211.417 479.763L210.328 480.503L210.306 481.468L209.139 482.264L208.982 482.735L209.992 483.655L213.314 482.152L214.504 482.713L215.087 484.025L215.682 484.395L215.503 484.653L216.513 485.181L216.558 486.325L215.02 487.727L215.099 488.646L214.593 489.174L214.167 490.531L212.382 491.507L211.193 493.043L210.317 493.021L208.387 493.795L208.061 494.524L209.027 494.827L210.239 495.836L211.024 497.047L212.057 497.002L212.394 497.507L211.709 498.752L211.978 500.143L210.654 502.353L210.328 503.631L209.891 506.177L210.328 508.14L210.048 509.06L209.801 509.161L208.813 508.006L207.276 508.701L207.41 507.77L206.557 507.277L206.681 506.727L208.016 506.323L208.129 505.987L207.601 505.258L206.86 505.863L205.267 505L203.74 505.033L203.347 504.551L202.988 503.642L202.651 503.542L202.068 504.024L201.361 503.642L199.453 505.168L199.307 504.45L198.476 503.844L198.521 502.97L197.578 502.779L195.603 501.624L195.075 500.76L194.166 501.87L193.818 501.702L193.953 500.457L193.19 501.119L192.146 500.681L192.18 501.253L190.844 502.476L190.923 503.788L190.44 505.067L188.88 503.654L187.107 505.269L186.691 505.101L186.871 504.472L186.287 503.519L185.906 503.317L185.266 503.945L184.581 502.947L183.392 502.521L181.753 502.566L180.9 501.635L179.374 501.657L179.542 501.096L178.184 498.494L176.893 497.395L176.444 497.877L176.276 497.541L175.973 497.743L175.636 498.337L174.761 498.438L175.76 498.92L174.693 498.988L173.403 500.894L172.415 501.242L170.765 501.253L170.035 500.479L168.924 500.199L168.913 499.369L168.195 499.56L167.555 499.111L167.028 499.964L166.208 499.829L165.939 501.22L165.434 500.917L165.344 499.739L164.85 499.369L164.278 499.571L164.379 500.177L163.279 501.444L163.458 502.263L163.133 502.431L162.168 501.949L161.842 502.622L161.494 501.332L161.786 500.984L160.854 499.896L162.257 499.313L161.663 498.405L162.201 497.945L162.1 497.474L163.211 498.326L164.502 498.494L164.368 497.709L165.49 497.765L165.086 496.318L167.611 495.881L167.622 495.455L166.567 495.892L166.096 495.264L166.253 494.479L167.319 493.884L166.444 491.652L165.827 491.45L165.894 492.258L165.411 492.202L164.828 492.92L164.323 492.74L164.446 491.585L164.603 491.159L165.479 490.901L166.814 488.927L168.026 487.951L167.14 487.491L167.095 486.74L168.442 486.235L169.037 485.27L170.181 485.035L170.148 484.216L170.013 483.296L171.719 481.984L172.202 480.447L173.201 480.75L173.84 479.494L174.648 479.516L175.288 478.608L175.378 478.159L174.132 478.137L173.93 477.531L174.525 476.477L175.67 475.77L177.724 476.252L178.262 475.153L179.183 475.277L179.643 474.256L180.821 473.819L181.472 474.2L181.091 474.783L181.427 475.299L182.426 474.615L182.92 475.131L183.493 474.121L184.413 473.762L184.469 473.426L184.166 472.921L183.481 472.831L183.336 472.181Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-82-inside-58_10718_32869)\" />\n                <mask id=\"path-83-inside-59_10718_32869\" fill=\"white\">\n                    <path d=\"M558.251 514.298L558.363 513.3L559.508 513.21L560.384 514.421L561.012 514.578L561.394 515.139H562.685L563.414 515.857L563.683 516.676L564.862 517.338L565.131 518.224L566.613 517.999L567.23 518.414L568.431 518.527L568.442 519.469L569.004 520.198L570.597 520.456L570.721 521.936L573.302 521.723L573.987 521.162L574.761 521.645L575.457 521.23L576.007 521.353L576.703 521.858L576.108 522.564L578.779 524.179L578.678 524.965L577.881 524.774L577.152 524.101L576.254 524.684L575.996 525.739L576.209 526.03L576.815 525.929L576.557 527.522L575.738 528.329L575.614 529.44L574.267 530.819V532.883L575.637 532.693L575.491 533.545L575.76 533.814L576.871 533.702L577.017 534.913L576.624 534.543L576.142 534.7L575.917 535.99L574.66 538.862L571.585 540.185L570.934 543.494L569.441 543.808L568.611 545.277L568.678 546.444L567.668 549.36L567.982 550.055L569.206 551.098L568.689 552.186L569.441 553.824L570.227 554.609L571.652 555.147L571.114 556.875L571.102 558.826L570.44 559.466L569.913 560.879L568.038 562.617L567.399 562.169L565.704 562.662L565.861 563.492L563.549 565.04L562.46 564.771L561.023 563.089L559.418 562.696L558.431 563.212V562.528L558.06 562.247L556.388 563.29L555.311 562.124L553.548 561.776L552.74 562.27L551.618 561.507L551.023 561.866L550.844 562.46L548.913 563.01L545.669 562.561L544.626 561.249L541.842 561.597L540.967 559.903L540.136 559.342L539.665 556.191L539.081 554.8L533.009 554.721L532.594 554.463L529.653 554.901L528.677 554.104L529.081 552.422L528.89 552.153L527.352 552.085L526.802 552.523L526.78 553.106L525.725 553.162L525.714 552.489L524.558 552.254L523.761 550.751L523.357 550.953L522.986 553.016L521.92 553.465L520.944 553.431L519.597 552.77L518.811 552.96L517.992 553.734L517.913 554.788L516.263 555.159L516.174 556.28L514.782 555.944L513.839 556.28L511.179 556.202L510.607 555.899L510.046 557.806L510.663 557.985L510.809 558.927L510.169 559.353L510.001 559.982L509.035 559.802L507.632 560.217L506.869 561.799L505.365 561.552L504.108 562.202L502.773 562.023L501.762 562.281L501.493 562.685L501.313 560.834L500.562 559.791L499.293 559.533L499.248 559.062L499.854 558.131L500.865 557.536L500.528 556.258L500.977 556.37L501.381 557.346L502.335 557.637L503.031 557.335L503.592 556.258L503.401 555.719L501.123 553.891L500.977 552.927L500.056 552.13L499.563 551.132L498.968 551.177L498.238 550.47L498.137 549.652L496.914 548.676L496.981 547.61L496.106 545.748L496.566 544.391L494.916 542.473L495.96 542.35L496.802 541.699L498.227 541.34L497.991 542.496L498.496 542.709L500.18 542.036L501.628 542.754L502.458 542.226L503.715 540.488L504.827 540.252L505.163 539.86L504.333 537.931L504.546 536.932L505.253 536.237L505.062 534.891L505.343 534.667L506.084 535.048L506.735 534.801L507.026 534.285L508.306 534.386L509.9 535.743L511.056 538.099L512.571 537.448L513.199 537.605L513.682 538.256L515.803 537.931L517.61 538.671L518.744 538.379L519.541 539.433L520.36 539.647L522.818 538.929L523.884 539.176L525.949 538.379L527.409 538.446L531.427 534.633L532.156 534.117L533.604 533.837L533.93 532.154L534.794 531.504L534.816 530.135L536.051 528.935L536.107 527.948L536.758 527.578L537.948 524.897L538.868 524.404L540.619 524.191L541.449 520.433L542.078 519.962V519.491L541.416 518.863L542.224 518.156L544.648 517.876L544.727 518.123L545.939 517.147L547.465 517.999L550.204 516.496L550.473 516.911L551.326 516.597L552.92 517.024L553.403 516.328L554.155 516.149L554.357 515.442L555.816 516.137L557.993 515.352L558.251 514.298Z\" />\n                </mask>\n                <path d=\"M558.251 514.298L558.363 513.3L559.508 513.21L560.384 514.421L561.012 514.578L561.394 515.139H562.685L563.414 515.857L563.683 516.676L564.862 517.338L565.131 518.224L566.613 517.999L567.23 518.414L568.431 518.527L568.442 519.469L569.004 520.198L570.597 520.456L570.721 521.936L573.302 521.723L573.987 521.162L574.761 521.645L575.457 521.23L576.007 521.353L576.703 521.858L576.108 522.564L578.779 524.179L578.678 524.965L577.881 524.774L577.152 524.101L576.254 524.684L575.996 525.739L576.209 526.03L576.815 525.929L576.557 527.522L575.738 528.329L575.614 529.44L574.267 530.819V532.883L575.637 532.693L575.491 533.545L575.76 533.814L576.871 533.702L577.017 534.913L576.624 534.543L576.142 534.7L575.917 535.99L574.66 538.862L571.585 540.185L570.934 543.494L569.441 543.808L568.611 545.277L568.678 546.444L567.668 549.36L567.982 550.055L569.206 551.098L568.689 552.186L569.441 553.824L570.227 554.609L571.652 555.147L571.114 556.875L571.102 558.826L570.44 559.466L569.913 560.879L568.038 562.617L567.399 562.169L565.704 562.662L565.861 563.492L563.549 565.04L562.46 564.771L561.023 563.089L559.418 562.696L558.431 563.212V562.528L558.06 562.247L556.388 563.29L555.311 562.124L553.548 561.776L552.74 562.27L551.618 561.507L551.023 561.866L550.844 562.46L548.913 563.01L545.669 562.561L544.626 561.249L541.842 561.597L540.967 559.903L540.136 559.342L539.665 556.191L539.081 554.8L533.009 554.721L532.594 554.463L529.653 554.901L528.677 554.104L529.081 552.422L528.89 552.153L527.352 552.085L526.802 552.523L526.78 553.106L525.725 553.162L525.714 552.489L524.558 552.254L523.761 550.751L523.357 550.953L522.986 553.016L521.92 553.465L520.944 553.431L519.597 552.77L518.811 552.96L517.992 553.734L517.913 554.788L516.263 555.159L516.174 556.28L514.782 555.944L513.839 556.28L511.179 556.202L510.607 555.899L510.046 557.806L510.663 557.985L510.809 558.927L510.169 559.353L510.001 559.982L509.035 559.802L507.632 560.217L506.869 561.799L505.365 561.552L504.108 562.202L502.773 562.023L501.762 562.281L501.493 562.685L501.313 560.834L500.562 559.791L499.293 559.533L499.248 559.062L499.854 558.131L500.865 557.536L500.528 556.258L500.977 556.37L501.381 557.346L502.335 557.637L503.031 557.335L503.592 556.258L503.401 555.719L501.123 553.891L500.977 552.927L500.056 552.13L499.563 551.132L498.968 551.177L498.238 550.47L498.137 549.652L496.914 548.676L496.981 547.61L496.106 545.748L496.566 544.391L494.916 542.473L495.96 542.35L496.802 541.699L498.227 541.34L497.991 542.496L498.496 542.709L500.18 542.036L501.628 542.754L502.458 542.226L503.715 540.488L504.827 540.252L505.163 539.86L504.333 537.931L504.546 536.932L505.253 536.237L505.062 534.891L505.343 534.667L506.084 535.048L506.735 534.801L507.026 534.285L508.306 534.386L509.9 535.743L511.056 538.099L512.571 537.448L513.199 537.605L513.682 538.256L515.803 537.931L517.61 538.671L518.744 538.379L519.541 539.433L520.36 539.647L522.818 538.929L523.884 539.176L525.949 538.379L527.409 538.446L531.427 534.633L532.156 534.117L533.604 533.837L533.93 532.154L534.794 531.504L534.816 530.135L536.051 528.935L536.107 527.948L536.758 527.578L537.948 524.897L538.868 524.404L540.619 524.191L541.449 520.433L542.078 519.962V519.491L541.416 518.863L542.224 518.156L544.648 517.876L544.727 518.123L545.939 517.147L547.465 517.999L550.204 516.496L550.473 516.911L551.326 516.597L552.92 517.024L553.403 516.328L554.155 516.149L554.357 515.442L555.816 516.137L557.993 515.352L558.251 514.298Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-83-inside-59_10718_32869)\" />\n                <mask id=\"path-84-inside-60_10718_32869\" fill=\"white\">\n                    <path d=\"M73.8821 444.41L74.5331 444.511L75.229 442.817L75.6667 442.783L75.9136 441.583L77.44 441.213L76.8564 440.159L77.7767 439.531L78.5624 439.912L78.8654 439.463L83.1753 444.903L83.4896 445.834L83.31 446.283L82.8835 446.216L82.558 446.687L82.0979 446.541L81.5703 447.304L82.0866 447.876L81.0316 448.93L81.6489 449.087L81.9632 449.85L82.9621 449.883L83.9947 451.454L83.0743 451.577L82.7488 452.575L81.2224 453.147L81.1439 453.697L82.2213 453.596L82.7039 454.033L81.5591 454.044L81.5703 454.549L82.053 454.56L81.4244 455.413L82.9958 455.974L83.6131 456.68L84.0957 457.925L85.1283 458.733L85.3191 460.875L86.7557 462.49L87.3393 462.67L87.9903 462.479L88.226 461.986L88.8657 461.974L89.1912 463.186L88.5964 464.027L87.9903 463.915L87.9678 464.767L88.2148 465.306L88.6974 465.463L88.3158 466.012L88.8096 467.067L88.4954 467.504L87.3954 467.863L88.0801 468.211L87.676 469.276L87.9791 470.286L88.3607 470.23L88.7759 470.858L86.924 471.082L86.3516 469.568L85.5996 469.399L84.1069 468.222L82.7937 468.906L82.8498 469.983L82.255 470.79L81.806 470.577L81.0877 471.093L79.898 470.645L78.8991 471.228L79.3256 471.643L79.393 472.349L79.1011 472.798L79.1797 474.256L78.3716 474.301L76.7329 473.561L76.7778 473.852L74.6117 474.952L74.4433 475.344L73.6913 475.165L72.1088 476.365L71.3456 476.219L70.9079 477.341L70.5824 476.813L68.7529 476.365L68.2927 476.623L68.1693 475.625L67.5071 475.221L67.1143 475.725L67.0245 475.411L66.5755 475.748L66.3735 475.512L66.1153 476.107L65.5205 475.714L65.4195 476.802L66.2276 476.746L65.8235 477.879L66.1266 478.608L64.6002 479.068L64.9705 479.797L64.3532 480.649L64.8134 481.008L63.2982 482.881L60.5709 482.668L59.9536 483.543L58.5618 483.038L57.4843 482.085L56.9456 482.904L56.2722 481.435L54.5325 481.726L54.1285 481.3L53.4438 481.39L52.8939 482.13L53.5112 482.579L53.1632 483.678L52.8714 483.745L52.8377 483.218L52.4898 482.937L52.1643 483.173L51.996 482.769L51.6817 483.386L52.0296 484.07L51.4572 484.9L50.8736 484.822L50.9409 485.596L50.2002 486.123L49.1788 486.033L48.337 486.459L47.7983 487.581L47.383 486.964L46.9565 487.491L46.4851 486.987L46.0362 487.76L44.0047 487.177H43.3313L43.1293 487.772L42.7589 487.659L43.219 486.785L42.6354 486.504L42.3324 487.458L42.2089 487.043L41.4569 486.74L41.0641 487.155L40.2223 486.874L39.4591 487.424L38.954 487.054L39.6836 486.672L38.8755 486.628L38.6622 485.831L37.2256 486.089L37.147 486.953L35.6318 485.865L34.5319 485.921L33.5218 485.427L33.0055 483.7L33.2636 483.061L33.0279 482.164L33.9932 481.535L34.184 481.008L33.6565 479.561L34.2513 478.989L33.6901 478.496L33.735 477.778L34.3523 477.677L33.9146 477.284H32.5341L31.7821 476.746L32.1525 476.297L31.8607 475.557L30.1771 475.153L30.4128 472.966L28.9874 472.237L28.4824 471.531L28.9986 471.037L28.3701 470.981L29.0997 470.263L29.6384 468.278L29.9414 468.188L31.827 469.052L32.3321 468.502L35.1155 468.951L35.5645 467.908L36.1145 467.762L35.7665 467.358L36.395 466.45L36.8328 466.685L37.1134 466.203L37.697 466.08L38.0225 466.876L38.3592 466.741L38.1684 466.214L38.5724 466.147L38.5163 465.653L39.403 465.406L39.6387 464.98L40.4019 465.137L40.5029 463.948L41.513 464.061L41.5692 463.646L42.2987 463.668L42.7701 462.961L43.6455 462.995L44.7791 461.1L45.172 460.931L45.7107 461.268L46.0811 460.819L46.6872 461.38L47.6973 460.685L48.5391 461.694L48.7748 460.931L48.1462 460.494L48.1687 459.922L48.3819 459.35L49.0554 459.148L48.8084 458.509L49.1227 457.836L48.7972 457.432L49.8298 457.062L50.5144 457.342L51.0644 456.826L50.694 456.052L50.9185 455.256L51.8276 454.605L52.0296 453.282L50.7614 452.227L52.0858 450.444L53.5673 450.68L54.8692 449.255L54.9478 449.636L55.9018 449.491L56.6538 450.186H57.3384L57.6864 450.713L58.27 450.534L59.9536 451.532L60.4698 450.994L60.1219 450.399L60.1668 449.58L60.829 448.907L61.6595 449.356L62.0299 449.154L62.7931 449.76L63.1186 449.367L63.9492 449.21L65.0491 447.842L64.7012 447.124L65.0154 446.743L66.9571 445.767L69.9202 446.317L70.1222 445.341L70.8405 445.632L71.4241 444.948L71.8506 445.206L72.3557 444.668L73.3322 444.915L73.8821 444.41Z\" />\n                </mask>\n                <path d=\"M73.8821 444.41L74.5331 444.511L75.229 442.817L75.6667 442.783L75.9136 441.583L77.44 441.213L76.8564 440.159L77.7767 439.531L78.5624 439.912L78.8654 439.463L83.1753 444.903L83.4896 445.834L83.31 446.283L82.8835 446.216L82.558 446.687L82.0979 446.541L81.5703 447.304L82.0866 447.876L81.0316 448.93L81.6489 449.087L81.9632 449.85L82.9621 449.883L83.9947 451.454L83.0743 451.577L82.7488 452.575L81.2224 453.147L81.1439 453.697L82.2213 453.596L82.7039 454.033L81.5591 454.044L81.5703 454.549L82.053 454.56L81.4244 455.413L82.9958 455.974L83.6131 456.68L84.0957 457.925L85.1283 458.733L85.3191 460.875L86.7557 462.49L87.3393 462.67L87.9903 462.479L88.226 461.986L88.8657 461.974L89.1912 463.186L88.5964 464.027L87.9903 463.915L87.9678 464.767L88.2148 465.306L88.6974 465.463L88.3158 466.012L88.8096 467.067L88.4954 467.504L87.3954 467.863L88.0801 468.211L87.676 469.276L87.9791 470.286L88.3607 470.23L88.7759 470.858L86.924 471.082L86.3516 469.568L85.5996 469.399L84.1069 468.222L82.7937 468.906L82.8498 469.983L82.255 470.79L81.806 470.577L81.0877 471.093L79.898 470.645L78.8991 471.228L79.3256 471.643L79.393 472.349L79.1011 472.798L79.1797 474.256L78.3716 474.301L76.7329 473.561L76.7778 473.852L74.6117 474.952L74.4433 475.344L73.6913 475.165L72.1088 476.365L71.3456 476.219L70.9079 477.341L70.5824 476.813L68.7529 476.365L68.2927 476.623L68.1693 475.625L67.5071 475.221L67.1143 475.725L67.0245 475.411L66.5755 475.748L66.3735 475.512L66.1153 476.107L65.5205 475.714L65.4195 476.802L66.2276 476.746L65.8235 477.879L66.1266 478.608L64.6002 479.068L64.9705 479.797L64.3532 480.649L64.8134 481.008L63.2982 482.881L60.5709 482.668L59.9536 483.543L58.5618 483.038L57.4843 482.085L56.9456 482.904L56.2722 481.435L54.5325 481.726L54.1285 481.3L53.4438 481.39L52.8939 482.13L53.5112 482.579L53.1632 483.678L52.8714 483.745L52.8377 483.218L52.4898 482.937L52.1643 483.173L51.996 482.769L51.6817 483.386L52.0296 484.07L51.4572 484.9L50.8736 484.822L50.9409 485.596L50.2002 486.123L49.1788 486.033L48.337 486.459L47.7983 487.581L47.383 486.964L46.9565 487.491L46.4851 486.987L46.0362 487.76L44.0047 487.177H43.3313L43.1293 487.772L42.7589 487.659L43.219 486.785L42.6354 486.504L42.3324 487.458L42.2089 487.043L41.4569 486.74L41.0641 487.155L40.2223 486.874L39.4591 487.424L38.954 487.054L39.6836 486.672L38.8755 486.628L38.6622 485.831L37.2256 486.089L37.147 486.953L35.6318 485.865L34.5319 485.921L33.5218 485.427L33.0055 483.7L33.2636 483.061L33.0279 482.164L33.9932 481.535L34.184 481.008L33.6565 479.561L34.2513 478.989L33.6901 478.496L33.735 477.778L34.3523 477.677L33.9146 477.284H32.5341L31.7821 476.746L32.1525 476.297L31.8607 475.557L30.1771 475.153L30.4128 472.966L28.9874 472.237L28.4824 471.531L28.9986 471.037L28.3701 470.981L29.0997 470.263L29.6384 468.278L29.9414 468.188L31.827 469.052L32.3321 468.502L35.1155 468.951L35.5645 467.908L36.1145 467.762L35.7665 467.358L36.395 466.45L36.8328 466.685L37.1134 466.203L37.697 466.08L38.0225 466.876L38.3592 466.741L38.1684 466.214L38.5724 466.147L38.5163 465.653L39.403 465.406L39.6387 464.98L40.4019 465.137L40.5029 463.948L41.513 464.061L41.5692 463.646L42.2987 463.668L42.7701 462.961L43.6455 462.995L44.7791 461.1L45.172 460.931L45.7107 461.268L46.0811 460.819L46.6872 461.38L47.6973 460.685L48.5391 461.694L48.7748 460.931L48.1462 460.494L48.1687 459.922L48.3819 459.35L49.0554 459.148L48.8084 458.509L49.1227 457.836L48.7972 457.432L49.8298 457.062L50.5144 457.342L51.0644 456.826L50.694 456.052L50.9185 455.256L51.8276 454.605L52.0296 453.282L50.7614 452.227L52.0858 450.444L53.5673 450.68L54.8692 449.255L54.9478 449.636L55.9018 449.491L56.6538 450.186H57.3384L57.6864 450.713L58.27 450.534L59.9536 451.532L60.4698 450.994L60.1219 450.399L60.1668 449.58L60.829 448.907L61.6595 449.356L62.0299 449.154L62.7931 449.76L63.1186 449.367L63.9492 449.21L65.0491 447.842L64.7012 447.124L65.0154 446.743L66.9571 445.767L69.9202 446.317L70.1222 445.341L70.8405 445.632L71.4241 444.948L71.8506 445.206L72.3557 444.668L73.3322 444.915L73.8821 444.41Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-84-inside-60_10718_32869)\" />\n                <mask id=\"path-85-inside-61_10718_32869\" fill=\"white\">\n                    <path d=\"M311.331 443.726L311.847 443.232L313.991 443.636L318.189 442.312L318.133 438.813L319.827 437.411L320.557 437.624L320.905 438.331L324.676 436.289L325.742 434.573L328.324 434.181L331.029 433.149L332.072 431.175L332.544 428.472L334.643 428.483L338.908 425.006L337.639 422.908L338.672 422.056L340.153 421.91L341.276 422.437L341.321 423.525L344.834 422.269L346.259 423.391L348.448 424.322L350.85 423.671L351.613 424.524L353.296 423.727L354.767 425.354L357.674 427.372L358.807 428.629L360.457 428.831L363.342 432.33L363.488 433.979L365.07 435.471L366.473 434.641L367.55 434.977L367.73 435.594L367.045 436.536L368.65 438.028L367.573 439.273L368.628 439.766L370.603 440.338L373.353 439.463L374.352 440.361L375.474 440.069L376.933 441.639L381.019 441.572L382.904 441.987L384.016 441.74L385.093 442.458L385.609 443.109L385.239 443.658L383.511 445.285L383.264 446.384L381.816 446.855L380.559 448.324L379.481 448.616L377.113 450.657L369.043 450.343L367.539 451.914L367.842 452.272L366.451 453.001L364.834 452.43L361.187 452.519L360.401 451.409L359.784 451.095L354.194 452.026L353.757 451.027L353.689 449.143L354.093 446.81L352.634 446.294L352.567 445.363L351.557 445.195L350.737 444.432L350.075 446.978L348.122 451.745L347.729 455.458L347.696 456.277L348.425 456.927L349.593 459.653L347.135 461.862L347.101 462.232L347.64 463.062L348.605 463.433L349.02 464.307L350.064 464.251L350.288 462.715L350.648 462.457L352.152 462.546L352.937 464.79L356.158 468.379L356.742 470.499L356.652 471.127L356.181 471.396L356.282 471.845L355.766 472.215L355.305 472.103L354.767 472.933L353.543 472.686L353.117 472.888L352.309 472.417L352.859 474.548L351.512 475.737L350.883 475.557L350.322 476.051L350.513 476.432L351.31 476.567L351.893 477.823L350.053 478.799L350.794 479.438L351.119 480.952L350.513 483.218L349.941 483.779L348.392 483.7L348.077 484.149L348.336 484.631L350.345 484.407L350.49 484.642L348.414 485.764L348.874 487.547L349.896 487.772L349.929 488.108L349.424 489.364L348.796 489.802L348.223 489.69L347.606 490.811L347.909 492.169L347.415 492.157L346.899 493.245L345.462 494.165L344.924 494.154L344.127 493.402L343.24 493.178L342.6 491.955L341.04 491.215L339.592 491.249L338.661 490.89L337.258 491.327L336.36 490.262L335.26 489.959L335.024 491.002L335.518 491.047L335.709 491.911L333.778 490.991L332.903 492.393L332.847 490.778L329.3 487.301L328.885 485.674L326.606 486.246L325.765 485.293L324.418 485.742L322.734 485.338L321.601 482.265L319.749 482.231L319.266 481.423L318.391 482.007L317.605 481.883L316.977 480.807L315.372 482.13L313.587 480.246L311.522 481.177L308.963 478.339L308.57 477.307L304.631 476.825L304.384 476.365L304.687 475.714L303.441 473.572L303.62 471.721L303.216 470.308L305.147 469.972L305.708 468.323L305.528 467.998L304.451 468.166L304.215 467.751L302.476 460.101L303.564 458.251L302.599 457.107L306.785 454.774L307.818 455.514L308.806 454.785L309.322 453.876L310.175 453.596L310.602 452.867L313.161 451.42L311.825 448.257L311.331 443.726Z\" />\n                </mask>\n                <path d=\"M311.331 443.726L311.847 443.232L313.991 443.636L318.189 442.312L318.133 438.813L319.827 437.411L320.557 437.624L320.905 438.331L324.676 436.289L325.742 434.573L328.324 434.181L331.029 433.149L332.072 431.175L332.544 428.472L334.643 428.483L338.908 425.006L337.639 422.908L338.672 422.056L340.153 421.91L341.276 422.437L341.321 423.525L344.834 422.269L346.259 423.391L348.448 424.322L350.85 423.671L351.613 424.524L353.296 423.727L354.767 425.354L357.674 427.372L358.807 428.629L360.457 428.831L363.342 432.33L363.488 433.979L365.07 435.471L366.473 434.641L367.55 434.977L367.73 435.594L367.045 436.536L368.65 438.028L367.573 439.273L368.628 439.766L370.603 440.338L373.353 439.463L374.352 440.361L375.474 440.069L376.933 441.639L381.019 441.572L382.904 441.987L384.016 441.74L385.093 442.458L385.609 443.109L385.239 443.658L383.511 445.285L383.264 446.384L381.816 446.855L380.559 448.324L379.481 448.616L377.113 450.657L369.043 450.343L367.539 451.914L367.842 452.272L366.451 453.001L364.834 452.43L361.187 452.519L360.401 451.409L359.784 451.095L354.194 452.026L353.757 451.027L353.689 449.143L354.093 446.81L352.634 446.294L352.567 445.363L351.557 445.195L350.737 444.432L350.075 446.978L348.122 451.745L347.729 455.458L347.696 456.277L348.425 456.927L349.593 459.653L347.135 461.862L347.101 462.232L347.64 463.062L348.605 463.433L349.02 464.307L350.064 464.251L350.288 462.715L350.648 462.457L352.152 462.546L352.937 464.79L356.158 468.379L356.742 470.499L356.652 471.127L356.181 471.396L356.282 471.845L355.766 472.215L355.305 472.103L354.767 472.933L353.543 472.686L353.117 472.888L352.309 472.417L352.859 474.548L351.512 475.737L350.883 475.557L350.322 476.051L350.513 476.432L351.31 476.567L351.893 477.823L350.053 478.799L350.794 479.438L351.119 480.952L350.513 483.218L349.941 483.779L348.392 483.7L348.077 484.149L348.336 484.631L350.345 484.407L350.49 484.642L348.414 485.764L348.874 487.547L349.896 487.772L349.929 488.108L349.424 489.364L348.796 489.802L348.223 489.69L347.606 490.811L347.909 492.169L347.415 492.157L346.899 493.245L345.462 494.165L344.924 494.154L344.127 493.402L343.24 493.178L342.6 491.955L341.04 491.215L339.592 491.249L338.661 490.89L337.258 491.327L336.36 490.262L335.26 489.959L335.024 491.002L335.518 491.047L335.709 491.911L333.778 490.991L332.903 492.393L332.847 490.778L329.3 487.301L328.885 485.674L326.606 486.246L325.765 485.293L324.418 485.742L322.734 485.338L321.601 482.265L319.749 482.231L319.266 481.423L318.391 482.007L317.605 481.883L316.977 480.807L315.372 482.13L313.587 480.246L311.522 481.177L308.963 478.339L308.57 477.307L304.631 476.825L304.384 476.365L304.687 475.714L303.441 473.572L303.62 471.721L303.216 470.308L305.147 469.972L305.708 468.323L305.528 467.998L304.451 468.166L304.215 467.751L302.476 460.101L303.564 458.251L302.599 457.107L306.785 454.774L307.818 455.514L308.806 454.785L309.322 453.876L310.175 453.596L310.602 452.867L313.161 451.42L311.825 448.257L311.331 443.726Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-85-inside-61_10718_32869)\" />\n                <mask id=\"path-86-inside-62_10718_32869\" fill=\"white\">\n                    <path d=\"M194.234 479.763L194.818 478.944L194.01 478.339L194.795 477.419L193.46 476.499L193.258 475.681L192.034 474.492L192.326 473.819L192.079 472.843L192.36 472.069L193.729 472.125L194.111 470.768L194.964 470.039L195.076 469.321L194.077 468.278L191.709 462.961L192.54 460.954L193.191 460.483L194.403 460.337L195.009 460.628L195.727 460.37L195.693 459.753L196.782 459.103L196.906 458.419L197.792 457.521L198.241 456.209L197.938 453.428L198.443 452.407L197.534 451.947L197.478 450.971L196.187 449.737L197.209 447.102L198.297 445.812L199.655 445.172L200.374 445.15L202.338 445.991L205.626 446.249L206.019 445.845L206.199 444.679L207.815 444.084L208.758 445.913L209.992 446.002L210.082 445.419L210.419 445.296L210.699 445.643L211.339 445.273L211.878 445.486L212.282 445.015L213.135 444.903L214.044 447.259L213.472 448.582L214.515 450.736L215.896 452.541L216.491 454.953L215.952 456.288L215.975 457.533L215.447 458.441L216.996 459.843L217.198 460.527L216.536 461.178L216.311 462.187L216.536 462.558L217.389 462.501L217.714 464.453L217.411 465.036L217.613 465.631L218.298 465.709L218.444 466.068L216.581 467.336L215.47 469.714L213.853 469.915L213.719 470.768L214.078 471.295L213.999 472.372L214.493 472.989L214.628 472.147L215.436 471.71L215.896 471.946L215.694 472.787L217.007 474.436L217.725 474.66L218.186 476.499L218.062 477.453L216.558 478.249L215.761 479.943L213.741 481.345L213.315 482.152L209.992 483.655L208.982 482.736L209.139 482.264L210.307 481.468L210.329 480.503L211.418 479.763L211.474 478.171L209.633 477.475L209.364 477.89L209.925 479.337L209.499 479.887L208.758 479.73L207.13 478.395L206.895 475.781L207.781 474.144L207.422 473.617L206.244 474.514L206.524 475.097L205.941 476.129L204.796 476.398L203.438 477.643L203.46 477.913L205.256 478.585L205.896 479.348L205.694 479.92L204.762 479.472L204.515 479.741L205.054 481.12L204.47 481.592L203.853 480.672L202.742 481.39L201.788 480.246L200.733 480.784L200.957 482.657L200.531 483.285L200.116 483.364L199.195 482.354L198.645 482.264L197.725 482.556L196.198 482.119L194.998 482.657L194.257 482.107L194.324 481.704L195.121 480.47L196.356 479.494L195.952 479.27L194.234 479.763Z\" />\n                </mask>\n                <path d=\"M194.234 479.763L194.818 478.944L194.01 478.339L194.795 477.419L193.46 476.499L193.258 475.681L192.034 474.492L192.326 473.819L192.079 472.843L192.36 472.069L193.729 472.125L194.111 470.768L194.964 470.039L195.076 469.321L194.077 468.278L191.709 462.961L192.54 460.954L193.191 460.483L194.403 460.337L195.009 460.628L195.727 460.37L195.693 459.753L196.782 459.103L196.906 458.419L197.792 457.521L198.241 456.209L197.938 453.428L198.443 452.407L197.534 451.947L197.478 450.971L196.187 449.737L197.209 447.102L198.297 445.812L199.655 445.172L200.374 445.15L202.338 445.991L205.626 446.249L206.019 445.845L206.199 444.679L207.815 444.084L208.758 445.913L209.992 446.002L210.082 445.419L210.419 445.296L210.699 445.643L211.339 445.273L211.878 445.486L212.282 445.015L213.135 444.903L214.044 447.259L213.472 448.582L214.515 450.736L215.896 452.541L216.491 454.953L215.952 456.288L215.975 457.533L215.447 458.441L216.996 459.843L217.198 460.527L216.536 461.178L216.311 462.187L216.536 462.558L217.389 462.501L217.714 464.453L217.411 465.036L217.613 465.631L218.298 465.709L218.444 466.068L216.581 467.336L215.47 469.714L213.853 469.915L213.719 470.768L214.078 471.295L213.999 472.372L214.493 472.989L214.628 472.147L215.436 471.71L215.896 471.946L215.694 472.787L217.007 474.436L217.725 474.66L218.186 476.499L218.062 477.453L216.558 478.249L215.761 479.943L213.741 481.345L213.315 482.152L209.992 483.655L208.982 482.736L209.139 482.264L210.307 481.468L210.329 480.503L211.418 479.763L211.474 478.171L209.633 477.475L209.364 477.89L209.925 479.337L209.499 479.887L208.758 479.73L207.13 478.395L206.895 475.781L207.781 474.144L207.422 473.617L206.244 474.514L206.524 475.097L205.941 476.129L204.796 476.398L203.438 477.643L203.46 477.913L205.256 478.585L205.896 479.348L205.694 479.92L204.762 479.472L204.515 479.741L205.054 481.12L204.47 481.592L203.853 480.672L202.742 481.39L201.788 480.246L200.733 480.784L200.957 482.657L200.531 483.285L200.116 483.364L199.195 482.354L198.645 482.264L197.725 482.556L196.198 482.119L194.998 482.657L194.257 482.107L194.324 481.704L195.121 480.47L196.356 479.494L195.952 479.27L194.234 479.763Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-86-inside-62_10718_32869)\" />\n                <mask id=\"path-87-inside-63_10718_32869\" fill=\"white\">\n                    <path d=\"M160.855 499.897L161.787 500.985L161.495 501.332L161.843 502.622L162.168 501.949L163.134 502.432L163.459 502.263L163.28 501.445L164.38 500.177L164.279 499.571L164.851 499.37L165.345 499.74L165.435 500.917L165.94 501.22L166.209 499.829L167.028 499.964L167.556 499.112L168.196 499.56L168.914 499.37L168.925 500.2L170.036 500.48L170.766 501.254L172.416 501.243L173.403 500.895L174.694 498.988L175.76 498.921L174.761 498.439L175.637 498.338L175.974 497.743L176.277 497.541L176.445 497.878L176.894 497.396L178.185 498.495L179.543 501.097L179.374 501.658L180.901 501.635L181.754 502.566L183.392 502.521L184.537 504.372L184.448 505.46L184.885 506.402L184.268 507.356L184.156 508.859L182.18 510.518L182.865 511.36L182.495 511.763L181.137 511.214L179.419 512.178L178.23 511.337L176.827 511.629L176.097 511.371L176.501 511.988L174.93 511.797L173.448 513.827L170.788 512.84L170.362 513.311L171.563 513.861L171.686 514.22L171.372 514.455L169.857 514.063L169.363 514.399L169.284 514.814L169.823 515.252L170.003 516.149L169.711 516.979L168.207 516.463L167.084 516.99L167.073 517.54L166.546 518.123L167.41 519.447L168.027 519.738L167.904 520.804L168.398 521.398L168.095 522.553L168.297 522.901L169.06 522.509L169.464 522.722L169.318 523.204L170.44 523.339L171.125 524.135L170.373 525.66L169.756 525.918L169.015 525.559L168.083 526.188L167.343 526.031L166.849 527.04L166.198 527.208L165.435 526.614L164.84 527.522L165.266 528.588L164.851 528.913L163.414 528.251L162.045 529.182L160.564 528.969L160.159 528.554L159.25 528.924L158.779 528.038L157.522 528.476L157.017 528.094L157.219 527.354L158.341 526.434L158.487 525.829L157.915 524.359L158.33 521.208L157.859 520.243L158.24 519.177L157.96 518.415L156.478 517.349L156.377 516.822L154.929 517.035L154.514 516.687L154.57 514.96L152.606 512.537L152.381 511.203L151.843 510.541L150.922 509.924L149.699 510.328L149.34 510.16L150.619 507.984L153.537 507.12L155.401 505.673L156.13 505.482L156.153 504.383L155.3 504.361L155.109 504.08L155.76 503.06L154.536 503.116L155.187 502.432L154.851 501.961L154.222 501.927L155.019 501.265L154.424 499.325L156.119 500.514L156.994 500.469L157.578 501.142L158.543 500.166L159.284 500.087L159.957 500.659L160.855 499.897Z\" />\n                </mask>\n                <path d=\"M160.855 499.897L161.787 500.985L161.495 501.332L161.843 502.622L162.168 501.949L163.134 502.432L163.459 502.263L163.28 501.445L164.38 500.177L164.279 499.571L164.851 499.37L165.345 499.74L165.435 500.917L165.94 501.22L166.209 499.829L167.028 499.964L167.556 499.112L168.196 499.56L168.914 499.37L168.925 500.2L170.036 500.48L170.766 501.254L172.416 501.243L173.403 500.895L174.694 498.988L175.76 498.921L174.761 498.439L175.637 498.338L175.974 497.743L176.277 497.541L176.445 497.878L176.894 497.396L178.185 498.495L179.543 501.097L179.374 501.658L180.901 501.635L181.754 502.566L183.392 502.521L184.537 504.372L184.448 505.46L184.885 506.402L184.268 507.356L184.156 508.859L182.18 510.518L182.865 511.36L182.495 511.763L181.137 511.214L179.419 512.178L178.23 511.337L176.827 511.629L176.097 511.371L176.501 511.988L174.93 511.797L173.448 513.827L170.788 512.84L170.362 513.311L171.563 513.861L171.686 514.22L171.372 514.455L169.857 514.063L169.363 514.399L169.284 514.814L169.823 515.252L170.003 516.149L169.711 516.979L168.207 516.463L167.084 516.99L167.073 517.54L166.546 518.123L167.41 519.447L168.027 519.738L167.904 520.804L168.398 521.398L168.095 522.553L168.297 522.901L169.06 522.509L169.464 522.722L169.318 523.204L170.44 523.339L171.125 524.135L170.373 525.66L169.756 525.918L169.015 525.559L168.083 526.188L167.343 526.031L166.849 527.04L166.198 527.208L165.435 526.614L164.84 527.522L165.266 528.588L164.851 528.913L163.414 528.251L162.045 529.182L160.564 528.969L160.159 528.554L159.25 528.924L158.779 528.038L157.522 528.476L157.017 528.094L157.219 527.354L158.341 526.434L158.487 525.829L157.915 524.359L158.33 521.208L157.859 520.243L158.24 519.177L157.96 518.415L156.478 517.349L156.377 516.822L154.929 517.035L154.514 516.687L154.57 514.96L152.606 512.537L152.381 511.203L151.843 510.541L150.922 509.924L149.699 510.328L149.34 510.16L150.619 507.984L153.537 507.12L155.401 505.673L156.13 505.482L156.153 504.383L155.3 504.361L155.109 504.08L155.76 503.06L154.536 503.116L155.187 502.432L154.851 501.961L154.222 501.927L155.019 501.265L154.424 499.325L156.119 500.514L156.994 500.469L157.578 501.142L158.543 500.166L159.284 500.087L159.957 500.659L160.855 499.897Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-87-inside-63_10718_32869)\" />\n                <mask id=\"path-88-inside-64_10718_32869\" fill=\"white\">\n                    <path d=\"M126.028 546.174L129.574 548.844L130.495 549.191L133.042 547.644L133.761 547.812L134.872 547.072L135.141 547.262L134.872 548.025L135.107 548.305L136.039 548.047L137.15 546.993L138.946 546.836L139.653 547.576L140.225 547.027L141.673 547.06L142.437 547.801L143.391 547.879L145.411 550.795L145.22 552.657L144.345 553.42L144.872 555.069L146.14 554.575L148.598 554.788L148.879 554.362L148.295 552.893L149.036 552.332L149.698 552.399L151.696 553.846L151.584 555.226L151.921 555.618L153.413 554.901L154.536 555.248L155.344 554.564L155.557 553.543L155.984 553.319L157.465 553.97L158.071 555.192L159.25 556.247L160.383 555.977L160.967 557.155L162.1 557.054L161.887 557.761L161.034 558.131L161.236 558.983L160.709 559.533L161.337 560.711L160.754 561.922L159.912 562.943L157.948 563.66L157.746 564.019L156.859 570.289L158.778 571.815L159.036 572.353L158.385 574.013L156.825 575.123L155.445 578.567L155.232 577.871L153.627 576.761L152.616 576.223L151.09 576.155L149.496 578.118L147.24 579.61L144.648 579.879V580.305L145.579 580.53L145.647 581.023L144.008 580.72L142.695 582.818L143.132 583.536L144.165 583.861L145.175 584.904L144.603 585.184L142.986 584.466L142.257 584.478L142.055 584.881L142.358 585.476L141.842 585.756L141.213 585.801L140.809 585.353L139.631 585.891L139.35 585.566L139.575 584.366L138.082 583.951L137.476 584.68L137.274 585.611L138.867 586.418L138.598 586.99L137.7 588.033L136.937 588.067L135.736 587.461L134.917 587.865L134.928 588.807L132.481 590.265L132.167 591.297L132.302 592.8L128.946 593.608L128.205 593.069L128.306 592.082L127.374 591.993L127.105 592.52L126.51 592.621L124.512 589.312L124.265 588.101L122.144 586.463L118.519 585.925L118.485 585.128L119.035 584.377L118.631 583.491L119.518 583.064L119.046 581.438L120.651 580.294L123.704 579.374L124.03 578.959L123.861 578.028L124.849 576.133L123.727 574.338L123.053 573.957L121.83 573.923L122.054 573.172L121.392 572.398L119.147 572.409L119.08 571.321L119.428 570.749L119.046 569.437L120.135 566.251L120 565.276L117.677 563.234L117.026 563.369L115.702 562.797L115.949 561.675L114.714 561.047L114.501 560.026L113.872 559.69L114.849 557.963L114.669 555.54L115.387 555.17L113.681 553.128L112.593 552.512L112.828 552.153L114.299 551.816L114.411 551.009L115.028 550.425L115.646 550.504L116.914 549.696L117.217 548.653L118.193 547.453L121.549 547.767L122.391 547.363L123.929 547.33L124.434 546.578L126.028 546.174Z\" />\n                </mask>\n                <path d=\"M126.028 546.174L129.574 548.844L130.495 549.191L133.042 547.644L133.761 547.812L134.872 547.072L135.141 547.262L134.872 548.025L135.107 548.305L136.039 548.047L137.15 546.993L138.946 546.836L139.653 547.576L140.225 547.027L141.673 547.06L142.437 547.801L143.391 547.879L145.411 550.795L145.22 552.657L144.345 553.42L144.872 555.069L146.14 554.575L148.598 554.788L148.879 554.362L148.295 552.893L149.036 552.332L149.698 552.399L151.696 553.846L151.584 555.226L151.921 555.618L153.413 554.901L154.536 555.248L155.344 554.564L155.557 553.543L155.984 553.319L157.465 553.97L158.071 555.192L159.25 556.247L160.383 555.977L160.967 557.155L162.1 557.054L161.887 557.761L161.034 558.131L161.236 558.983L160.709 559.533L161.337 560.711L160.754 561.922L159.912 562.943L157.948 563.66L157.746 564.019L156.859 570.289L158.778 571.815L159.036 572.353L158.385 574.013L156.825 575.123L155.445 578.567L155.232 577.871L153.627 576.761L152.616 576.223L151.09 576.155L149.496 578.118L147.24 579.61L144.648 579.879V580.305L145.579 580.53L145.647 581.023L144.008 580.72L142.695 582.818L143.132 583.536L144.165 583.861L145.175 584.904L144.603 585.184L142.986 584.466L142.257 584.478L142.055 584.881L142.358 585.476L141.842 585.756L141.213 585.801L140.809 585.353L139.631 585.891L139.35 585.566L139.575 584.366L138.082 583.951L137.476 584.68L137.274 585.611L138.867 586.418L138.598 586.99L137.7 588.033L136.937 588.067L135.736 587.461L134.917 587.865L134.928 588.807L132.481 590.265L132.167 591.297L132.302 592.8L128.946 593.608L128.205 593.069L128.306 592.082L127.374 591.993L127.105 592.52L126.51 592.621L124.512 589.312L124.265 588.101L122.144 586.463L118.519 585.925L118.485 585.128L119.035 584.377L118.631 583.491L119.518 583.064L119.046 581.438L120.651 580.294L123.704 579.374L124.03 578.959L123.861 578.028L124.849 576.133L123.727 574.338L123.053 573.957L121.83 573.923L122.054 573.172L121.392 572.398L119.147 572.409L119.08 571.321L119.428 570.749L119.046 569.437L120.135 566.251L120 565.276L117.677 563.234L117.026 563.369L115.702 562.797L115.949 561.675L114.714 561.047L114.501 560.026L113.872 559.69L114.849 557.963L114.669 555.54L115.387 555.17L113.681 553.128L112.593 552.512L112.828 552.153L114.299 551.816L114.411 551.009L115.028 550.425L115.646 550.504L116.914 549.696L117.217 548.653L118.193 547.453L121.549 547.767L122.391 547.363L123.929 547.33L124.434 546.578L126.028 546.174Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-88-inside-64_10718_32869)\" />\n                <mask id=\"path-89-inside-65_10718_32869\" fill=\"white\">\n                    <path d=\"M97.7553 470.835L98.2042 470.914L99.3378 470.151L101.347 470.779L101.414 471.744L100.842 473.022L101.56 473.09L102.323 475.165L103.345 475.378L104.074 475.972L104.804 474.503L105.197 474.615L105.354 474.2L106.139 474.144L106.33 473.729L108.092 473.258L108.833 473.494L109.114 474.593L110.584 474.963L111.111 475.468L111.325 475.008L112.144 474.671L112.413 475.064L114.097 475.165L114.602 475.871L115.219 475.367L117.565 474.682L117.834 476.544L118.845 476.971L119.832 476.118L119.877 475.49L120.629 475.277L121.796 475.535L121.987 476.118L123.356 476.028L124.12 476.769L124.355 478.361L125.882 478.978L125.826 479.573L125.085 480.414L124.142 480.627L123.738 481.121L124.03 481.479L123.929 482.197L123.065 483.016L122.167 483.162L121.785 484.833L120.483 485.54L119.08 487.458L119.035 489.028L119.462 490.284L118.598 491.339H118.205L117.857 493.212L117.363 494.187L116.791 494.412L116.061 494.3L115.792 494.591L115.343 494.008L113.962 494.501L112.481 493.144L111.987 493.077L111.347 493.705L111.358 494.389L110.977 494.322L110.292 492.651L109.529 492.561L109.338 493.414L108.586 493.077L108.35 493.492L107.138 493.537L106.678 492.662L106.802 491.832L106.33 491.686L105.803 492.404L105.152 492.427L104.916 491.978L105.455 491.798L105.298 491.462L104.254 491.641L103.625 490.396L104.052 489.286L103.794 488.871L102.907 488.893L103.199 486.987L101.841 485.876L101.661 484.497L100.438 484.373L99.7643 485.046L98.7205 485.114L98.4063 485.73L98.2716 485.293L97.1492 485.327L96.8798 484.452L97.1717 484.037L96.5992 484.351L95.3983 484.205L94.8147 483.375L95.0279 482.971L94.6463 483.061L94.8596 482.837L93.1311 483.106L92.2894 482.298L91.2568 482.287L91.1109 482.04L91.4476 481.827L90.9089 481.087L90.516 479.483L90.718 479.023L90.314 479.102L89.7191 478.238L90.1007 476.41L89.7191 476.32V475.468L89.2702 475.49L88.9671 474.918L89.2477 474.649L88.7539 474.413L89.461 473.763L89.0008 472.047L89.663 471.89L90.5385 472.708L90.6507 473.785L91.1782 473.953L92.4689 473.09L93.1199 473.191L93.7821 473.931L94.9381 473.92L95.3534 473.393L96.4533 474.211L97.0258 474.01L96.9023 473.538L97.441 472.731L97.1717 472.697L97.0931 471.901L97.7553 470.835Z\" />\n                </mask>\n                <path d=\"M97.7553 470.835L98.2042 470.914L99.3378 470.151L101.347 470.779L101.414 471.744L100.842 473.022L101.56 473.09L102.323 475.165L103.345 475.378L104.074 475.972L104.804 474.503L105.197 474.615L105.354 474.2L106.139 474.144L106.33 473.729L108.092 473.258L108.833 473.494L109.114 474.593L110.584 474.963L111.111 475.468L111.325 475.008L112.144 474.671L112.413 475.064L114.097 475.165L114.602 475.871L115.219 475.367L117.565 474.682L117.834 476.544L118.845 476.971L119.832 476.118L119.877 475.49L120.629 475.277L121.796 475.535L121.987 476.118L123.356 476.028L124.12 476.769L124.355 478.361L125.882 478.978L125.826 479.573L125.085 480.414L124.142 480.627L123.738 481.121L124.03 481.479L123.929 482.197L123.065 483.016L122.167 483.162L121.785 484.833L120.483 485.54L119.08 487.458L119.035 489.028L119.462 490.284L118.598 491.339H118.205L117.857 493.212L117.363 494.187L116.791 494.412L116.061 494.3L115.792 494.591L115.343 494.008L113.962 494.501L112.481 493.144L111.987 493.077L111.347 493.705L111.358 494.389L110.977 494.322L110.292 492.651L109.529 492.561L109.338 493.414L108.586 493.077L108.35 493.492L107.138 493.537L106.678 492.662L106.802 491.832L106.33 491.686L105.803 492.404L105.152 492.427L104.916 491.978L105.455 491.798L105.298 491.462L104.254 491.641L103.625 490.396L104.052 489.286L103.794 488.871L102.907 488.893L103.199 486.987L101.841 485.876L101.661 484.497L100.438 484.373L99.7643 485.046L98.7205 485.114L98.4063 485.73L98.2716 485.293L97.1492 485.327L96.8798 484.452L97.1717 484.037L96.5992 484.351L95.3983 484.205L94.8147 483.375L95.0279 482.971L94.6463 483.061L94.8596 482.837L93.1311 483.106L92.2894 482.298L91.2568 482.287L91.1109 482.04L91.4476 481.827L90.9089 481.087L90.516 479.483L90.718 479.023L90.314 479.102L89.7191 478.238L90.1007 476.41L89.7191 476.32V475.468L89.2702 475.49L88.9671 474.918L89.2477 474.649L88.7539 474.413L89.461 473.763L89.0008 472.047L89.663 471.89L90.5385 472.708L90.6507 473.785L91.1782 473.953L92.4689 473.09L93.1199 473.191L93.7821 473.931L94.9381 473.92L95.3534 473.393L96.4533 474.211L97.0258 474.01L96.9023 473.538L97.441 472.731L97.1717 472.697L97.0931 471.901L97.7553 470.835Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-89-inside-65_10718_32869)\" />\n                <mask id=\"path-90-inside-66_10718_32869\" fill=\"white\">\n                    <path d=\"M321.971 255.697L322.633 256.191L322.802 257.032L322.24 257.009L321.197 255.877L320.77 255.977L321.163 255.652L321.971 255.697ZM411.536 169.299L411.839 169.657L411.356 170.196L411.401 170.779H410.941L410.335 169.927L410.717 169.299H411.536ZM410.84 167.067L409.785 167.549L408.865 168.973L408.068 169.142L407.439 169.994L407.17 169.938L406.497 171.71L405.453 171.463L404.959 171.475L405.026 171.744L402.007 171.609L399.628 172.136L398.876 171.531L399.583 169.77L401.682 168.076L402.793 165.35L404.993 163.253L409.426 164.42L410.391 165.631L410.84 167.067ZM322.622 212.66L322.712 211.561L322.409 211.393L322.274 209.8L321.792 208.847L320.759 208.679L319.693 209.251L319.255 209.89L317.773 210.17L317.19 210.63L317.414 209.161L316.73 207.927L317.661 207.007L318.84 204.417L318.582 203.665L319.075 203.811L318.727 203.575L318.918 203.093L319.524 203.026L317.706 201.893L319.244 197.99L322.622 195.915L323.756 195.029L324.44 193.873L327.246 191.877L329.738 188.523L330.692 186.392L331.713 183.689L332.802 176.982L333.487 176.544L332.982 176.096L333.689 171.587L334.194 171.43L333.767 171.295L334.149 167.571L334.822 165.137L335.058 162.513L335.731 162.502L335.709 162.154L335.193 162.232L335.148 161.817L336.966 158.968L338.391 154.235L340.311 153.843L341.691 154.089L341.815 154.863L341.467 154.74L339.929 155.57L339.951 156.344L340.456 156.579L342.555 156.164L342.656 155.828L344.082 156.176L345.294 155.772L347.247 155.895L347.763 155.57L349.694 156.176L352.14 155.592L354.205 155.906L356.215 155.615L358.549 157.028L359.627 157.275L359.582 157.791L359.144 158.026L359.649 158.228L359.896 157.993L360.053 158.34L360.255 157.667L359.851 157.432L360.412 157.387L366.462 160.864L365.25 160.853L365.541 161.885L366.159 162.558L365.261 163.556L365.407 164.992L366.035 166.18L365.519 166.461L364.621 166.225L365.631 166.64L366.069 166.461L365.856 167.369L366.428 172.26L365.317 174.312L365.452 176.039L364.397 177.688L363.869 181.85L362.87 182.87L362.623 182.769L362.511 186.751L361.512 187.94L361.153 189.892L360.311 190.194L359.705 191.036L359.222 191.069L358.459 192.527L358.74 194.109L359.851 195.915L360.132 197.395L361.647 199.369L363.824 200.614L363.746 200.872L364.453 200.895L364.823 201.512L365.059 202.7L364.554 204.607L366.495 207.983L366.136 212.29L365.485 214.881L365.99 216.597L365.923 219.424L364.935 219.805L363.577 221.51L363.173 222.789L364.453 225.2L363.734 228.756L364.711 230.775L365.294 233.276L365.306 234.207L363.981 237.179L365.407 241.015L364.846 242.226L363.925 241.778L364.991 245.12L363.936 246.926L363.746 249.472L364.52 253.241L365.07 254.385L366.349 256.067L368.931 258.086L371.703 260.935L372.747 263.56L372.534 264.726L372.511 263.268L371.838 263.459L371.322 265.556L368.65 268.899L368.83 270.132L368.246 271.792L369.638 275.572L369.458 277.064L368.583 277.86L368.953 279.846L368.706 280.294L368.718 279.543L366.911 280.272L367 281.416L364.7 282.459L364.374 284.153L363.263 285.162L363.566 286.643L363.072 288.146L361.95 288.359L361.557 287.944L361.007 288.572L361.669 289.839V291.802L361.456 291.881L361.389 291.342L360.659 291.365L359.211 292.161L359.75 292.105L360.188 292.554L359.941 293.114L360.322 293.653L359.683 293.843L358.369 295.481L358.156 296.345L358.47 296.816L357.64 296.569L357.775 296.995L357.337 297.152L357.46 295.907L356.506 295.728L356.08 296.423L355.025 295.1L354.441 295.683L355.631 296.58L354.98 296.457L354.374 297.051L353.397 297.152L352.275 298.397L350.737 298.218L350.075 299.171L347.808 299.979L346.237 299.328L345.788 299.822L344.654 299.855L343.296 297.377L342.948 297.477L342.903 298.341L341.231 298.397L339.704 297.623L338.324 297.455L337.404 296.883L337.291 296.367L336.764 296.502L336.663 296.221L335.754 297.152L334.845 297.163L334.362 296.479L333.868 297.107L336.461 297.41L336.225 298.274L335.092 298.812L335.114 299.16L336.842 299.182L337.101 299.485L336.73 302.289L337.303 303.13L339.244 304.869L342.32 305.598L343.307 306.877L346.865 308.245L351.837 307.639L355.148 307.931L357.595 308.795L358.325 309.939L359.683 309.726L359.941 310.242L361.86 309.67L361.961 308.974L362.466 308.918L363.297 307.729L362.803 305.463L362.41 305.004L362.971 305.284L363.05 304.97L362.41 304.746L363.308 303.96L363.824 302.805L364.195 303.086L364.363 302.614L364.464 302.85L364.576 302.547L366.675 302.256L367.27 301.829L368.213 300.136L371.939 298.094L372.938 296.928L372.994 295.941L374.891 294.718L375.654 290.613L375.385 288.493L377.147 285.229L381.771 280.519L382.186 278.937L382.343 272.847L381.131 268.876L378.437 265.444L379.638 262.685L379.459 259.028L379.829 257.918L380.839 256.763L382.04 256.022L386.642 253.936L389.122 253.577L392.725 251.771L395.879 251.457L396.485 251.805L397.17 254.071L397.26 255.136L396.777 256.505L396.956 257.032L400.021 260.004L400.413 261.44L400.795 261.417L400.784 260.924L401.255 261.07L402.591 262.842L402.445 263.268L401.738 263.246L402.086 265.332L401.042 267.182L401.412 267.956L402.153 267.923L402.591 268.282L401.558 271.153L401.581 274.709L402.265 275.954L401.659 277.546L400.829 277.344L400.425 278.051L401.266 279.251L403.017 280.53L404.308 281.035L405.554 282.47L404.925 287.719L405.195 287.82L405.363 286.104L405.846 285.409L407.428 286.99L406.979 284.635L407.978 283.827L409.841 282.863L410.795 283.659L412.232 283.446L411.805 283.166L412.165 283.053L413.938 284.231L414.802 285.936L415.644 286.744L416.777 287.192L417.877 288.718L418.483 288.953L419.235 288.74L419.191 289.48L421.806 291.6L422.681 291.353L424.185 292.06L423.13 291.32L423.691 291.118L424.297 291.376L423.848 291.017L421.94 291.309L421.099 290.882L419.415 289.514L419.393 288.706L418.035 288.628L416.856 286.945L415.363 286.25L414.117 284.007L414.376 282.784L416.43 283.491L418.192 284.859L419.134 286.822L420.234 287.147L420.38 288.706V286.957L419.28 286.631L417.574 283.827L415.756 282.246L414.679 281.853L414.914 281.326L413.837 281.292L413.466 282.089L412.703 282.313L411.884 281.853L413.006 281.719L413.119 281.124L412.771 280.754L411.85 281.068L411.435 280.384L411.222 281.405L410.75 280.844L408.854 281.304L408.023 280.395L406.878 280.664L407.81 279.924L406.586 279.599L406.216 278.645L405.891 279.374L405.251 279.7L403.747 278.847L403.668 276.503L404.106 275.426L404.779 275.247L404.488 274.832L404.274 275.067L403.982 274.17L403.915 271.041L404.813 269.515L405.846 268.708L408.057 268.685L409.336 267.867L408.416 265.702L407.843 265.365L406.979 263.616L407.608 263.347L407.585 262.808L406.418 262.281L406.261 261.9L405.868 260.419L406.126 257.862L405.453 255.966L405.329 254.149L404.97 253.667L402.804 252.938L401.839 252.007L399.65 251.087L398.853 250.437L397.45 248.294L395.632 248.216L392.95 246.208L391.749 245.737L387.764 245.703L385.542 247.767L385.306 248.855L382.321 249.27L380.009 248.126L377.966 248.328L375.912 249.663L374.958 249.248L374.15 246.892L375.003 244.29L375.216 241.879L374.599 239.714L372.781 237.067L372.276 234.061L373.207 232.85L373.982 229.81L373.768 229.305L374.307 227.152L374.083 226.49L373.465 226.075L377.573 219.054L378.213 217.091L378.437 214.41L377.764 212.257L375.171 208.208L375.34 205.875L373.824 203.889L372.624 199.795L370.401 196.576L368.415 195.32L367.786 194.535L368.471 193.021L371.176 189.959L371.849 188.456L372.298 186.717L371.748 185.259L372.13 184.452L374.161 182.78L380.177 179.483L382.725 176.701L383.926 174.682L384.566 171.643L384.498 167.683L383.701 162.3L383.017 159.821L382.096 158.049L383.297 156.198L383.858 156.041L387.63 159.417L387.775 159.81L387.181 160.258L387.046 159.653L386.541 159.832L386.316 160.763L389.1 165.328L388.281 165.238L387.82 166.371L388.348 169.287L389.459 172.305L389.167 172.955L388.292 173.482L387.753 175.03L387.618 176.993L386.967 178.72L387.394 179.561L386.99 180.806L386.249 180.941V180.391L385.968 181.12L386.171 182.242L385.722 184.99L386.103 186.392L387.663 188.332L387.237 189.981L387.944 191.428L387.158 192.539L387.091 193.694L386.429 193.425L385.609 194.165L386.238 196.195L387.136 197.317L388.651 197.788L391.176 199.594L392.826 200.042L393.589 199.829L394.566 200.3L397.226 200.244L402.041 201.119L403.444 200.85L406.328 201.747L407.316 203.654L407.495 205.538L410.75 206.716L411.031 207.232L411.3 207.108L411.626 204.517L410.335 203.306L409.909 201.938L410.369 198.562L408.27 198.001L407.574 198.786L407.305 197.956L407.821 196.229L407.192 196.072L406.845 196.24L407.271 196.733L405.801 197.216V198.091L404.869 197.664L404.364 196.924L404.016 196.801L403.87 197.07L404.398 197.44L403.073 196.969L401.648 195.702L401.221 194.243L401.042 194.501L400.829 193.974L400.155 194.311L397.585 192.976L396.743 191.709L394.678 190.419L394.386 189.678L394.476 187.974L393.387 185.921L392.658 182.601L391.973 182.309L392.478 181.692L393.32 181.435L395.834 178.552L399.156 177.688L399.706 177.879L399.56 178.44L400.054 179.135L401.513 180.156L402.961 181.592L404.14 183.397L404.914 183.868L406.744 183.992L408.999 182.713L410.077 180.571L409.875 179.124L408.45 176.802L407.866 176.432L406.003 176.567L404.297 177.677L403.376 177.419L403.253 176.387L404.184 174.436L403.724 173.662L404.364 173.583L405.161 174.301L405.587 174.222L407.08 171.149L408.629 170.375L408.753 169.871L409.606 170.286L409.886 169.972L410.358 170.061L410.582 170.577L412.658 171.643L412.827 172.26L412.894 171.486L412.12 171.329L411.48 170.42L412.423 169.355L413.949 172.181L413.814 173.673L416.239 176.185L418.584 177.946L420.414 178.227L422.838 177.812L423.635 178.799L425.206 179.303L427.765 181.165L428.271 182.489L428.046 183.083L426.295 183.667L425.633 187.043L424.555 188.658L423.029 189.398L419.819 189.488L419.976 191.955L419.718 192.808L419.056 193.099L418.865 194.042L419.437 196.655L420.156 197.294L421.099 197.373L423.871 201.186L426.666 202.543L429.404 203.385L430.021 204.551L430.257 207.692L431.121 209.542L430.425 211.999L431.828 213.569L430.493 217.259L431.716 218.661L431.851 219.132L431.48 219.772L430.56 219.682L429.236 218.639L427.485 218.605L426.52 219.087L426.463 219.884L422.479 223.843L421.267 226.21L421.132 225.548L420.504 225.301L419.943 225.167L419.583 225.716L419.505 227.331L417.922 229.911L416.205 231.605L416.497 232.928L417.44 234.723L417.159 236.686L420.347 237.381L421.862 242.439L422.479 242.574L423.355 244.111L424.309 244.638L426.778 244.425L428.877 245.3L429.932 245.176L432.558 247.195L433.546 247.285L435.442 246.118L436.52 246.41L437.339 246.219L438.024 245.502L438.282 244.436L438.114 243.034L438.686 242.069L440.976 243.752V244.986L439.764 246.679L439.921 247.509L442.547 248.485L444.152 248.642L444.713 249.719L443.827 250.829L444.926 252.938L445.499 255.955L447.441 257.918L447.811 259.028L447.946 260.262L446.15 261.473L446.632 264.401L446.464 267.811L445.128 268.764L444.87 270.603L443.737 271.983L443.625 275.045L442.278 275.494L441.178 275L439.73 275.583L438.933 275.55L438.596 275.931L439.954 278.78L441.088 279.621L441.425 281.775L443.658 284.052L443.714 284.826L443.063 286.172L443.254 288.482L441.739 290.288L448.877 296.849L449.023 298.016L450.314 298.846L451.223 301.538L450.92 302.525L450.145 303.142L449.259 304.6L449.337 305.508L451.414 308.009L453.254 311.745L452.143 312.53L452.121 313.517L451.369 314.302L451.638 315.233L452.727 316.646L452.996 318.777L453.49 319.439L454.478 319.742L456.116 319.349L458.945 321.301L459.326 322.209L457.89 323.062L459.775 323.69L460.853 324.643L461.706 328.816L459.787 330.621L459.181 331.956L460.067 334.065L459.528 335.231L459.854 335.714L462.2 335.949L465.107 335.4L465.309 336.005L464.635 336.802L465.791 337.205L466.554 338.103L467.34 338.237L469.024 337.026L470.045 337.452L470.27 337.912L471.033 337.99L471.897 342.006L471.066 343.498L471.841 345.158L471.639 345.853L472.245 347.692L472.211 351.641L470 353.267L468.519 354.882L467.34 355.544L467.003 358.64L465.455 360.243L465.69 361.085L467.262 361.971L468.148 364.012L468.911 363.877L469.394 364.169L469.024 366.177L469.203 366.984L468.777 367.579L469.439 369.261L469.237 370.147L468.788 370.506L468.575 371.964L467.318 373.041L466.723 374.533L464.826 376.428L464.164 377.999L463.827 380.298L461.156 383.439L460.583 384.942L459.068 383.394L458.922 382.25L458.215 381.453L457.329 381.543L455.836 379.087L454.859 378.683L453.412 379.782L453.299 378.862L452.065 380.13L450.213 379.58L449.236 378.817L449.023 377.55L446.778 376.843L446.733 374.903L443.58 374.993L441.391 373.759L440.684 373.894L440.235 374.51L439.808 375.98L439.169 376.159L438.406 375.711L437.283 374.028L436.453 374.376L435.117 373.512L434.735 373.007L435.016 372.065L432.839 369.788L432.21 368.241L431.918 368.173L429.494 369.115L429.124 370.82L428.282 370.921L428.315 371.258L426.093 373.344L423.949 373.894L422.95 377.83L417.518 378.077L414.6 377.483L410.335 378.178L408.562 378.997L406.856 378.201L403.242 375.385L401.345 373.355L400.458 371.157L399.841 370.551L398.034 369.934L396.721 369.99L395.34 371.123H394.79L394.027 370.08L390.469 368.454L386.339 368.981L384.375 369.721L380.256 370.024L378.449 368.005L377.36 367.444L372.197 367.433L371.344 366.939L370.267 365.122L369.66 364.797L369.155 363.272L367.842 363.16L367.393 363.283L365.901 365.425L364.464 365.706L361.647 365.347L360.592 366.278L357.292 367.108L356.383 363.283L356.304 360.445L355.317 358.707L354.711 358.281L351.299 358.18L350.928 356.15L349.009 352.504L349.694 352.067L350.311 350.968L350.21 349.936L349.839 349.24L347.819 348.119L346.472 346.459L342.78 347.031L342.398 345.965L339.48 346.089L338.459 344.956L336.685 344.743L335.327 345.18L336.09 346.739L335.372 347.872L335.294 349.487L331.792 347.592L328.829 350.295L326.113 352.078L325.551 351.035L321.881 351.551L321.455 350.216L319.412 349.667L318.638 348.859L318.323 347.872L319.266 344.956L318.772 343.666L318.2 343.195L314.799 344.26L313.003 342.825L308.009 343.419L305.506 344.384L302.756 344.743L300.994 345.617L300.141 345.416L299.389 346.044L296.269 346.021L294.35 347.569L292.902 347.894L291.488 346.649L290.893 344.406L287.941 343.06L286.482 343.812L284.114 342.253L283.867 341.288L285.651 340.043L286.381 338.215L285.315 335.691L285.921 334.244L286.37 328.356L284.899 327.716L283.014 326.202L282.834 324.565L281.745 322.31L279.826 320.392L285.561 317.375L285.674 316.31L286.527 315.233L286.033 314.1L286.65 313.741L286.875 312.855L287.481 312.339L287.862 310.858L289.142 309.613L289.95 309.995L289.277 308.11L289.849 307.46L290.511 305.463L292.251 304.981L293.856 303.826L295.584 301.672L297.694 301.684L298.345 300.73L299.928 299.945L300.242 298.678L301.51 298.072L302.498 298.038L304.395 296.423L303.879 292.957L304.934 292.397L306.011 290.456L308.155 288.886L309.49 286.889L311.87 285.902L312.599 285.005L312.723 284.085L312.016 282.728L310.085 282.01L310.804 280.765L311.342 280.485L313.127 280.945L313.632 280.429L313.127 278.78L311.69 277.524L312.397 276.548L312.521 275.617L312.049 274.552L310.534 274.641L309.412 275.325L308.065 275.426L306.505 273.968L306.123 267.272L307.347 265.556L307.358 264.569L308.873 263.044L309.165 261.9L308.043 259.264L308.413 258.075L307.01 257.29L307.021 256.292L305.932 255.607L304.395 255.798L302.509 253.992L301.892 253.689L301.6 254.497L300.601 253.667L300.904 253.039L300.231 251.3L301.499 250.414L301.802 249.786L301.589 247.868L302.094 246.578L303.003 245.681L304.529 245.849L305.742 247.218L307.291 248.014L313.127 249.831L314.799 251.446L316.045 253.521L314.81 251.749L312.846 250.044L311.331 250.078L311.095 249.506L310.523 249.438L310.31 249.775L309.85 249.315L309.647 249.539L309.737 249.035H308.817L308.054 248.519L309.973 250.403L310.736 250.212L311.533 250.627L311.264 250.672L312.285 250.863L313.43 251.94L313.935 251.738L314.047 252.489L314.642 253.039L316.786 254.183L320.905 255.585L320.119 256.146L320.265 257.032L320.68 257.133L321.432 258.636L322.723 259.107L322.33 259.32L322.992 259.354L325.181 261.664L325.417 262.404L326.259 262.988L326.371 263.189L325.394 262.808L326.023 263.661L326 264.154L326.146 263.795L326.752 263.728L328.739 264.838L329.457 265.612L329.839 266.655L329.435 267.373L329.053 267.407L329.165 268.764L329.715 268.753L330.063 269.358L329.682 270.458L329.94 270.402L329.861 269.886L331.736 268.046L332.499 267.956L331.926 267.597L332.589 266.812L332.331 266.655L332.443 265.601L335.035 260.206L335.967 256.426L336.719 255.708L336.573 254.609L335.451 254.127L336.068 253.846L336.248 252.949L335.709 252.871L334.699 253.577L333.722 253.644L332.589 253.129L331.231 251.704L330.77 250.167L328.548 246.455L327.83 243.931L328.593 243.012L328.885 239.68L327.953 239.759L327.83 240.252L328.167 240.522L327.482 240.802L326.09 240.017L324.878 238.379L323.834 237.863L323.789 237.549L322.723 237.785L319.94 235.687L319.412 236.136L319.782 237L318.784 237.504L319.3 236.562L318.582 237.437L318.683 238.357L319.255 239.523L319.58 239.501L319.457 239.77L319.03 239.972L318.222 238.469L318.189 232.143L319.221 227.971L319.457 227.757L319.839 228.24L319.233 228.61L319.322 229.406L320.512 229.844L321.937 229.361L323.082 227.959L322.521 226.053L321.982 225.615L321.601 223.529L320.602 223.518L321.387 219.704L322.487 217.91L321.253 215.947L321.668 214.074L322.622 212.66ZM381.356 149.917L383.062 151.409L381.906 150.388L381.524 150.59L380.772 154.325L381.311 156.007L380.716 156.748L380.199 156.546L380.503 155.962L379.863 156.243L378.886 155.536L378.662 154.751L378.359 154.695L378.314 155.043L378.022 154.818L376.496 152.822L377.36 150.31L378.336 149.468L379.234 149.322L381.356 149.917ZM354.172 144.242L354.711 143.972L355.182 143.03L356.787 146.384L356.91 147.876L354.654 147.932L353.532 149.076L352.432 149.547L350.917 149.289L348.425 150.747L347.101 152.003L345.148 151.891L344.845 151.555L344.912 150.87L344.34 150.31L344.418 150.848L343.779 151.061L344.553 152.317L343.184 152.183L343.083 150.433L343.958 144.387L343.7 141.482L346.989 139.542L350.041 138.734L351.029 138.779L353.992 140.619L353.835 140.966L354.711 141.976L354.879 143.131L354.172 144.242Z\" />\n                </mask>\n                <path d=\"M321.971 255.697L322.633 256.191L322.802 257.032L322.24 257.009L321.197 255.877L320.77 255.977L321.163 255.652L321.971 255.697ZM411.536 169.299L411.839 169.657L411.356 170.196L411.401 170.779H410.941L410.335 169.927L410.717 169.299H411.536ZM410.84 167.067L409.785 167.549L408.865 168.973L408.068 169.142L407.439 169.994L407.17 169.938L406.497 171.71L405.453 171.463L404.959 171.475L405.026 171.744L402.007 171.609L399.628 172.136L398.876 171.531L399.583 169.77L401.682 168.076L402.793 165.35L404.993 163.253L409.426 164.42L410.391 165.631L410.84 167.067ZM322.622 212.66L322.712 211.561L322.409 211.393L322.274 209.8L321.792 208.847L320.759 208.679L319.693 209.251L319.255 209.89L317.773 210.17L317.19 210.63L317.414 209.161L316.73 207.927L317.661 207.007L318.84 204.417L318.582 203.665L319.075 203.811L318.727 203.575L318.918 203.093L319.524 203.026L317.706 201.893L319.244 197.99L322.622 195.915L323.756 195.029L324.44 193.873L327.246 191.877L329.738 188.523L330.692 186.392L331.713 183.689L332.802 176.982L333.487 176.544L332.982 176.096L333.689 171.587L334.194 171.43L333.767 171.295L334.149 167.571L334.822 165.137L335.058 162.513L335.731 162.502L335.709 162.154L335.193 162.232L335.148 161.817L336.966 158.968L338.391 154.235L340.311 153.843L341.691 154.089L341.815 154.863L341.467 154.74L339.929 155.57L339.951 156.344L340.456 156.579L342.555 156.164L342.656 155.828L344.082 156.176L345.294 155.772L347.247 155.895L347.763 155.57L349.694 156.176L352.14 155.592L354.205 155.906L356.215 155.615L358.549 157.028L359.627 157.275L359.582 157.791L359.144 158.026L359.649 158.228L359.896 157.993L360.053 158.34L360.255 157.667L359.851 157.432L360.412 157.387L366.462 160.864L365.25 160.853L365.541 161.885L366.159 162.558L365.261 163.556L365.407 164.992L366.035 166.18L365.519 166.461L364.621 166.225L365.631 166.64L366.069 166.461L365.856 167.369L366.428 172.26L365.317 174.312L365.452 176.039L364.397 177.688L363.869 181.85L362.87 182.87L362.623 182.769L362.511 186.751L361.512 187.94L361.153 189.892L360.311 190.194L359.705 191.036L359.222 191.069L358.459 192.527L358.74 194.109L359.851 195.915L360.132 197.395L361.647 199.369L363.824 200.614L363.746 200.872L364.453 200.895L364.823 201.512L365.059 202.7L364.554 204.607L366.495 207.983L366.136 212.29L365.485 214.881L365.99 216.597L365.923 219.424L364.935 219.805L363.577 221.51L363.173 222.789L364.453 225.2L363.734 228.756L364.711 230.775L365.294 233.276L365.306 234.207L363.981 237.179L365.407 241.015L364.846 242.226L363.925 241.778L364.991 245.12L363.936 246.926L363.746 249.472L364.52 253.241L365.07 254.385L366.349 256.067L368.931 258.086L371.703 260.935L372.747 263.56L372.534 264.726L372.511 263.268L371.838 263.459L371.322 265.556L368.65 268.899L368.83 270.132L368.246 271.792L369.638 275.572L369.458 277.064L368.583 277.86L368.953 279.846L368.706 280.294L368.718 279.543L366.911 280.272L367 281.416L364.7 282.459L364.374 284.153L363.263 285.162L363.566 286.643L363.072 288.146L361.95 288.359L361.557 287.944L361.007 288.572L361.669 289.839V291.802L361.456 291.881L361.389 291.342L360.659 291.365L359.211 292.161L359.75 292.105L360.188 292.554L359.941 293.114L360.322 293.653L359.683 293.843L358.369 295.481L358.156 296.345L358.47 296.816L357.64 296.569L357.775 296.995L357.337 297.152L357.46 295.907L356.506 295.728L356.08 296.423L355.025 295.1L354.441 295.683L355.631 296.58L354.98 296.457L354.374 297.051L353.397 297.152L352.275 298.397L350.737 298.218L350.075 299.171L347.808 299.979L346.237 299.328L345.788 299.822L344.654 299.855L343.296 297.377L342.948 297.477L342.903 298.341L341.231 298.397L339.704 297.623L338.324 297.455L337.404 296.883L337.291 296.367L336.764 296.502L336.663 296.221L335.754 297.152L334.845 297.163L334.362 296.479L333.868 297.107L336.461 297.41L336.225 298.274L335.092 298.812L335.114 299.16L336.842 299.182L337.101 299.485L336.73 302.289L337.303 303.13L339.244 304.869L342.32 305.598L343.307 306.877L346.865 308.245L351.837 307.639L355.148 307.931L357.595 308.795L358.325 309.939L359.683 309.726L359.941 310.242L361.86 309.67L361.961 308.974L362.466 308.918L363.297 307.729L362.803 305.463L362.41 305.004L362.971 305.284L363.05 304.97L362.41 304.746L363.308 303.96L363.824 302.805L364.195 303.086L364.363 302.614L364.464 302.85L364.576 302.547L366.675 302.256L367.27 301.829L368.213 300.136L371.939 298.094L372.938 296.928L372.994 295.941L374.891 294.718L375.654 290.613L375.385 288.493L377.147 285.229L381.771 280.519L382.186 278.937L382.343 272.847L381.131 268.876L378.437 265.444L379.638 262.685L379.459 259.028L379.829 257.918L380.839 256.763L382.04 256.022L386.642 253.936L389.122 253.577L392.725 251.771L395.879 251.457L396.485 251.805L397.17 254.071L397.26 255.136L396.777 256.505L396.956 257.032L400.021 260.004L400.413 261.44L400.795 261.417L400.784 260.924L401.255 261.07L402.591 262.842L402.445 263.268L401.738 263.246L402.086 265.332L401.042 267.182L401.412 267.956L402.153 267.923L402.591 268.282L401.558 271.153L401.581 274.709L402.265 275.954L401.659 277.546L400.829 277.344L400.425 278.051L401.266 279.251L403.017 280.53L404.308 281.035L405.554 282.47L404.925 287.719L405.195 287.82L405.363 286.104L405.846 285.409L407.428 286.99L406.979 284.635L407.978 283.827L409.841 282.863L410.795 283.659L412.232 283.446L411.805 283.166L412.165 283.053L413.938 284.231L414.802 285.936L415.644 286.744L416.777 287.192L417.877 288.718L418.483 288.953L419.235 288.74L419.191 289.48L421.806 291.6L422.681 291.353L424.185 292.06L423.13 291.32L423.691 291.118L424.297 291.376L423.848 291.017L421.94 291.309L421.099 290.882L419.415 289.514L419.393 288.706L418.035 288.628L416.856 286.945L415.363 286.25L414.117 284.007L414.376 282.784L416.43 283.491L418.192 284.859L419.134 286.822L420.234 287.147L420.38 288.706V286.957L419.28 286.631L417.574 283.827L415.756 282.246L414.679 281.853L414.914 281.326L413.837 281.292L413.466 282.089L412.703 282.313L411.884 281.853L413.006 281.719L413.119 281.124L412.771 280.754L411.85 281.068L411.435 280.384L411.222 281.405L410.75 280.844L408.854 281.304L408.023 280.395L406.878 280.664L407.81 279.924L406.586 279.599L406.216 278.645L405.891 279.374L405.251 279.7L403.747 278.847L403.668 276.503L404.106 275.426L404.779 275.247L404.488 274.832L404.274 275.067L403.982 274.17L403.915 271.041L404.813 269.515L405.846 268.708L408.057 268.685L409.336 267.867L408.416 265.702L407.843 265.365L406.979 263.616L407.608 263.347L407.585 262.808L406.418 262.281L406.261 261.9L405.868 260.419L406.126 257.862L405.453 255.966L405.329 254.149L404.97 253.667L402.804 252.938L401.839 252.007L399.65 251.087L398.853 250.437L397.45 248.294L395.632 248.216L392.95 246.208L391.749 245.737L387.764 245.703L385.542 247.767L385.306 248.855L382.321 249.27L380.009 248.126L377.966 248.328L375.912 249.663L374.958 249.248L374.15 246.892L375.003 244.29L375.216 241.879L374.599 239.714L372.781 237.067L372.276 234.061L373.207 232.85L373.982 229.81L373.768 229.305L374.307 227.152L374.083 226.49L373.465 226.075L377.573 219.054L378.213 217.091L378.437 214.41L377.764 212.257L375.171 208.208L375.34 205.875L373.824 203.889L372.624 199.795L370.401 196.576L368.415 195.32L367.786 194.535L368.471 193.021L371.176 189.959L371.849 188.456L372.298 186.717L371.748 185.259L372.13 184.452L374.161 182.78L380.177 179.483L382.725 176.701L383.926 174.682L384.566 171.643L384.498 167.683L383.701 162.3L383.017 159.821L382.096 158.049L383.297 156.198L383.858 156.041L387.63 159.417L387.775 159.81L387.181 160.258L387.046 159.653L386.541 159.832L386.316 160.763L389.1 165.328L388.281 165.238L387.82 166.371L388.348 169.287L389.459 172.305L389.167 172.955L388.292 173.482L387.753 175.03L387.618 176.993L386.967 178.72L387.394 179.561L386.99 180.806L386.249 180.941V180.391L385.968 181.12L386.171 182.242L385.722 184.99L386.103 186.392L387.663 188.332L387.237 189.981L387.944 191.428L387.158 192.539L387.091 193.694L386.429 193.425L385.609 194.165L386.238 196.195L387.136 197.317L388.651 197.788L391.176 199.594L392.826 200.042L393.589 199.829L394.566 200.3L397.226 200.244L402.041 201.119L403.444 200.85L406.328 201.747L407.316 203.654L407.495 205.538L410.75 206.716L411.031 207.232L411.3 207.108L411.626 204.517L410.335 203.306L409.909 201.938L410.369 198.562L408.27 198.001L407.574 198.786L407.305 197.956L407.821 196.229L407.192 196.072L406.845 196.24L407.271 196.733L405.801 197.216V198.091L404.869 197.664L404.364 196.924L404.016 196.801L403.87 197.07L404.398 197.44L403.073 196.969L401.648 195.702L401.221 194.243L401.042 194.501L400.829 193.974L400.155 194.311L397.585 192.976L396.743 191.709L394.678 190.419L394.386 189.678L394.476 187.974L393.387 185.921L392.658 182.601L391.973 182.309L392.478 181.692L393.32 181.435L395.834 178.552L399.156 177.688L399.706 177.879L399.56 178.44L400.054 179.135L401.513 180.156L402.961 181.592L404.14 183.397L404.914 183.868L406.744 183.992L408.999 182.713L410.077 180.571L409.875 179.124L408.45 176.802L407.866 176.432L406.003 176.567L404.297 177.677L403.376 177.419L403.253 176.387L404.184 174.436L403.724 173.662L404.364 173.583L405.161 174.301L405.587 174.222L407.08 171.149L408.629 170.375L408.753 169.871L409.606 170.286L409.886 169.972L410.358 170.061L410.582 170.577L412.658 171.643L412.827 172.26L412.894 171.486L412.12 171.329L411.48 170.42L412.423 169.355L413.949 172.181L413.814 173.673L416.239 176.185L418.584 177.946L420.414 178.227L422.838 177.812L423.635 178.799L425.206 179.303L427.765 181.165L428.271 182.489L428.046 183.083L426.295 183.667L425.633 187.043L424.555 188.658L423.029 189.398L419.819 189.488L419.976 191.955L419.718 192.808L419.056 193.099L418.865 194.042L419.437 196.655L420.156 197.294L421.099 197.373L423.871 201.186L426.666 202.543L429.404 203.385L430.021 204.551L430.257 207.692L431.121 209.542L430.425 211.999L431.828 213.569L430.493 217.259L431.716 218.661L431.851 219.132L431.48 219.772L430.56 219.682L429.236 218.639L427.485 218.605L426.52 219.087L426.463 219.884L422.479 223.843L421.267 226.21L421.132 225.548L420.504 225.301L419.943 225.167L419.583 225.716L419.505 227.331L417.922 229.911L416.205 231.605L416.497 232.928L417.44 234.723L417.159 236.686L420.347 237.381L421.862 242.439L422.479 242.574L423.355 244.111L424.309 244.638L426.778 244.425L428.877 245.3L429.932 245.176L432.558 247.195L433.546 247.285L435.442 246.118L436.52 246.41L437.339 246.219L438.024 245.502L438.282 244.436L438.114 243.034L438.686 242.069L440.976 243.752V244.986L439.764 246.679L439.921 247.509L442.547 248.485L444.152 248.642L444.713 249.719L443.827 250.829L444.926 252.938L445.499 255.955L447.441 257.918L447.811 259.028L447.946 260.262L446.15 261.473L446.632 264.401L446.464 267.811L445.128 268.764L444.87 270.603L443.737 271.983L443.625 275.045L442.278 275.494L441.178 275L439.73 275.583L438.933 275.55L438.596 275.931L439.954 278.78L441.088 279.621L441.425 281.775L443.658 284.052L443.714 284.826L443.063 286.172L443.254 288.482L441.739 290.288L448.877 296.849L449.023 298.016L450.314 298.846L451.223 301.538L450.92 302.525L450.145 303.142L449.259 304.6L449.337 305.508L451.414 308.009L453.254 311.745L452.143 312.53L452.121 313.517L451.369 314.302L451.638 315.233L452.727 316.646L452.996 318.777L453.49 319.439L454.478 319.742L456.116 319.349L458.945 321.301L459.326 322.209L457.89 323.062L459.775 323.69L460.853 324.643L461.706 328.816L459.787 330.621L459.181 331.956L460.067 334.065L459.528 335.231L459.854 335.714L462.2 335.949L465.107 335.4L465.309 336.005L464.635 336.802L465.791 337.205L466.554 338.103L467.34 338.237L469.024 337.026L470.045 337.452L470.27 337.912L471.033 337.99L471.897 342.006L471.066 343.498L471.841 345.158L471.639 345.853L472.245 347.692L472.211 351.641L470 353.267L468.519 354.882L467.34 355.544L467.003 358.64L465.455 360.243L465.69 361.085L467.262 361.971L468.148 364.012L468.911 363.877L469.394 364.169L469.024 366.177L469.203 366.984L468.777 367.579L469.439 369.261L469.237 370.147L468.788 370.506L468.575 371.964L467.318 373.041L466.723 374.533L464.826 376.428L464.164 377.999L463.827 380.298L461.156 383.439L460.583 384.942L459.068 383.394L458.922 382.25L458.215 381.453L457.329 381.543L455.836 379.087L454.859 378.683L453.412 379.782L453.299 378.862L452.065 380.13L450.213 379.58L449.236 378.817L449.023 377.55L446.778 376.843L446.733 374.903L443.58 374.993L441.391 373.759L440.684 373.894L440.235 374.51L439.808 375.98L439.169 376.159L438.406 375.711L437.283 374.028L436.453 374.376L435.117 373.512L434.735 373.007L435.016 372.065L432.839 369.788L432.21 368.241L431.918 368.173L429.494 369.115L429.124 370.82L428.282 370.921L428.315 371.258L426.093 373.344L423.949 373.894L422.95 377.83L417.518 378.077L414.6 377.483L410.335 378.178L408.562 378.997L406.856 378.201L403.242 375.385L401.345 373.355L400.458 371.157L399.841 370.551L398.034 369.934L396.721 369.99L395.34 371.123H394.79L394.027 370.08L390.469 368.454L386.339 368.981L384.375 369.721L380.256 370.024L378.449 368.005L377.36 367.444L372.197 367.433L371.344 366.939L370.267 365.122L369.66 364.797L369.155 363.272L367.842 363.16L367.393 363.283L365.901 365.425L364.464 365.706L361.647 365.347L360.592 366.278L357.292 367.108L356.383 363.283L356.304 360.445L355.317 358.707L354.711 358.281L351.299 358.18L350.928 356.15L349.009 352.504L349.694 352.067L350.311 350.968L350.21 349.936L349.839 349.24L347.819 348.119L346.472 346.459L342.78 347.031L342.398 345.965L339.48 346.089L338.459 344.956L336.685 344.743L335.327 345.18L336.09 346.739L335.372 347.872L335.294 349.487L331.792 347.592L328.829 350.295L326.113 352.078L325.551 351.035L321.881 351.551L321.455 350.216L319.412 349.667L318.638 348.859L318.323 347.872L319.266 344.956L318.772 343.666L318.2 343.195L314.799 344.26L313.003 342.825L308.009 343.419L305.506 344.384L302.756 344.743L300.994 345.617L300.141 345.416L299.389 346.044L296.269 346.021L294.35 347.569L292.902 347.894L291.488 346.649L290.893 344.406L287.941 343.06L286.482 343.812L284.114 342.253L283.867 341.288L285.651 340.043L286.381 338.215L285.315 335.691L285.921 334.244L286.37 328.356L284.899 327.716L283.014 326.202L282.834 324.565L281.745 322.31L279.826 320.392L285.561 317.375L285.674 316.31L286.527 315.233L286.033 314.1L286.65 313.741L286.875 312.855L287.481 312.339L287.862 310.858L289.142 309.613L289.95 309.995L289.277 308.11L289.849 307.46L290.511 305.463L292.251 304.981L293.856 303.826L295.584 301.672L297.694 301.684L298.345 300.73L299.928 299.945L300.242 298.678L301.51 298.072L302.498 298.038L304.395 296.423L303.879 292.957L304.934 292.397L306.011 290.456L308.155 288.886L309.49 286.889L311.87 285.902L312.599 285.005L312.723 284.085L312.016 282.728L310.085 282.01L310.804 280.765L311.342 280.485L313.127 280.945L313.632 280.429L313.127 278.78L311.69 277.524L312.397 276.548L312.521 275.617L312.049 274.552L310.534 274.641L309.412 275.325L308.065 275.426L306.505 273.968L306.123 267.272L307.347 265.556L307.358 264.569L308.873 263.044L309.165 261.9L308.043 259.264L308.413 258.075L307.01 257.29L307.021 256.292L305.932 255.607L304.395 255.798L302.509 253.992L301.892 253.689L301.6 254.497L300.601 253.667L300.904 253.039L300.231 251.3L301.499 250.414L301.802 249.786L301.589 247.868L302.094 246.578L303.003 245.681L304.529 245.849L305.742 247.218L307.291 248.014L313.127 249.831L314.799 251.446L316.045 253.521L314.81 251.749L312.846 250.044L311.331 250.078L311.095 249.506L310.523 249.438L310.31 249.775L309.85 249.315L309.647 249.539L309.737 249.035H308.817L308.054 248.519L309.973 250.403L310.736 250.212L311.533 250.627L311.264 250.672L312.285 250.863L313.43 251.94L313.935 251.738L314.047 252.489L314.642 253.039L316.786 254.183L320.905 255.585L320.119 256.146L320.265 257.032L320.68 257.133L321.432 258.636L322.723 259.107L322.33 259.32L322.992 259.354L325.181 261.664L325.417 262.404L326.259 262.988L326.371 263.189L325.394 262.808L326.023 263.661L326 264.154L326.146 263.795L326.752 263.728L328.739 264.838L329.457 265.612L329.839 266.655L329.435 267.373L329.053 267.407L329.165 268.764L329.715 268.753L330.063 269.358L329.682 270.458L329.94 270.402L329.861 269.886L331.736 268.046L332.499 267.956L331.926 267.597L332.589 266.812L332.331 266.655L332.443 265.601L335.035 260.206L335.967 256.426L336.719 255.708L336.573 254.609L335.451 254.127L336.068 253.846L336.248 252.949L335.709 252.871L334.699 253.577L333.722 253.644L332.589 253.129L331.231 251.704L330.77 250.167L328.548 246.455L327.83 243.931L328.593 243.012L328.885 239.68L327.953 239.759L327.83 240.252L328.167 240.522L327.482 240.802L326.09 240.017L324.878 238.379L323.834 237.863L323.789 237.549L322.723 237.785L319.94 235.687L319.412 236.136L319.782 237L318.784 237.504L319.3 236.562L318.582 237.437L318.683 238.357L319.255 239.523L319.58 239.501L319.457 239.77L319.03 239.972L318.222 238.469L318.189 232.143L319.221 227.971L319.457 227.757L319.839 228.24L319.233 228.61L319.322 229.406L320.512 229.844L321.937 229.361L323.082 227.959L322.521 226.053L321.982 225.615L321.601 223.529L320.602 223.518L321.387 219.704L322.487 217.91L321.253 215.947L321.668 214.074L322.622 212.66ZM381.356 149.917L383.062 151.409L381.906 150.388L381.524 150.59L380.772 154.325L381.311 156.007L380.716 156.748L380.199 156.546L380.503 155.962L379.863 156.243L378.886 155.536L378.662 154.751L378.359 154.695L378.314 155.043L378.022 154.818L376.496 152.822L377.36 150.31L378.336 149.468L379.234 149.322L381.356 149.917ZM354.172 144.242L354.711 143.972L355.182 143.03L356.787 146.384L356.91 147.876L354.654 147.932L353.532 149.076L352.432 149.547L350.917 149.289L348.425 150.747L347.101 152.003L345.148 151.891L344.845 151.555L344.912 150.87L344.34 150.31L344.418 150.848L343.779 151.061L344.553 152.317L343.184 152.183L343.083 150.433L343.958 144.387L343.7 141.482L346.989 139.542L350.041 138.734L351.029 138.779L353.992 140.619L353.835 140.966L354.711 141.976L354.879 143.131L354.172 144.242Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-90-inside-66_10718_32869)\" />\n                <mask id=\"path-91-inside-67_10718_32869\" fill=\"white\">\n                    <path d=\"M67.4402 401.564L73.8152 397.986L75.611 395.137L77.1936 395.731L77.7435 394.767L78.72 394.341L79.6515 395.014L80.1229 394.98L80.5943 395.776L81.3014 396.135L84.4777 395.698L84.3094 397.672L86.1388 400.913L85.9593 401.631L86.4531 402.169L87.3734 402.371L87.8112 403.415L87.3622 405.299L88.5407 405.938L89.2366 404.951L89.5059 405.489L89.3488 407.127L90.7967 407.609L91.6384 409.146L92.9404 409.056L93.8046 409.696L95.5779 410.066L96.0157 409.348L98.2829 409.684L99.2369 408.619L100.303 408.652L101.1 409.651L102.189 410.021L103.569 409.314L104.804 409.516L105.343 408.316L105.803 408.237L107.206 408.899L108.137 408.451L110.247 410.133L111.807 410.234L113.109 409.471L113.805 408.495L113.435 407.363L115.13 406.151L115.433 406.903L116.488 407.441L116.948 406.084L118.553 407.363L119.148 406.69L119.619 407.609L121.538 408.697L122.346 407.98L122.818 408.002L123.357 407.037L124.109 406.835L125.208 407.598L126.466 409.236L127.498 407.755L129.126 408.462L130.214 408.159L130.36 407.307L131.37 406.129L132.257 405.882L132.403 404.94L134.547 404.065L135.658 404.121L135.916 404.547L135.714 404.85L136.331 405.602L144.154 406.398L144.794 401.53L148.991 402.102L148.441 404.278L150.619 405.512L153.088 405.344L154.244 404.289L155.467 405.445L156.534 405.332L156.96 405.59L156.523 406.6L157.106 407.116L159.183 407.194L158.621 408.854L159.16 411.591L157.712 413.117L157.005 416.762L156.601 417.109L155.86 416.919L153.212 417.356L153.919 419.297L156.422 420.542L157.353 420.295L158.947 418.713L158.633 421.764L157.69 424.479L159.474 425.208L159.721 425.791L159.598 427.451L156.994 427.35L156.534 427.922L155.86 428.057L155.703 427.574L154.008 427.709L153.638 429.212L153.986 429.683L153.717 431.22L151.977 431.421L151.663 431.971L151.023 431.859L150.046 434.125L148.745 434.012L148.172 433.53L147.959 433.979L145.142 433.541L144.771 434.113L143.043 434.068L142.493 435.145L138.553 434.528L137.005 434.898L136.96 434.439L136.017 434.214L135.837 433.53L134.569 433.945L133.66 433.474L132.874 433.552L132.852 432.644L131.37 433.373L131.482 433.833L130.854 434.158L130.562 432.263L129.283 432.801L129.328 433.62L128.991 433.754L128.721 433.328L128.497 433.519L127.723 432.835L127.027 433.351L127.06 433.721L125.904 434.057L125.568 433.766L125.534 434.584L125.107 434.73L124.311 433.317L123.918 433.306L123.345 431.915L121.449 432.33L120.955 432.879L120.337 432.094L120.102 430.659L118.968 430.356L118.149 432.588L119.26 433.339L119.125 435.302L118.676 435.437L118.418 435.145L118.037 435.818L116.925 435.639L115.623 436.054L113.816 437.254L113.379 437.938L113.053 437.041L112.66 437.276L112.672 437.703L112.032 438.319L112.571 438.701L112.593 439.553L112.256 439.362L111.763 440.338L112.627 441.359L112.009 442.537L111.415 442.649L110.618 443.456L110.82 444.129L110.517 443.961L110.124 444.342L109.035 444.544V444.028L108.62 443.86L107.183 443.871L106.813 444.163L106.454 443.838L105.994 444.432L105.152 443.939L104.871 444.331L103.232 443.378L102.986 442.839L103.468 442.716L103.378 442.245L101.324 440.619L100.988 439.665L100.079 439.89L99.5399 438.734L98.4737 439.004L95.4657 437.725L95.028 438.185L94.3658 437.635L93.9505 438.14L94.3321 439.52L93.8607 440.383L94.0066 440.843L93.5689 441.213L92.8843 440.843L91.8629 441.045L91.9078 440.731L91.5374 440.63L90.8977 440.664L90.8528 441.236L89.9212 441.527L86.5541 441.135L86.1949 441.639L85.9256 441.303L85.9593 441.886L86.4755 442.424L85.8246 442.604L86.0491 442.873L85.7685 443.49L85.3532 443.21L85.4542 442.918L84.1298 442.559L83.8043 444.881L83.4676 444.578L83.1758 444.903L78.8659 439.463L78.5629 439.912L77.7772 439.531L76.8569 440.159L77.4405 441.213L75.9141 441.583L75.6671 442.783L75.2294 442.817L74.5336 444.511L73.8826 444.41L72.8163 444.275L72.4011 443.894L72.3337 443.221L71.795 442.828L71.7164 442.066L71.1665 441.381L68.7309 440.439L68.1585 439.677L67.7208 439.912L66.2954 439.082L65.5995 439.071L64.5333 440.596L64.3761 439.441L63.6466 439.89L63.9496 437.68L61.9406 437.074L61.5927 436.772L62.064 436.401L60.4254 435.594L60.1897 435.089L60.4927 434.955L60.4591 434.304L61.6712 432.779L62.3334 433.53L62.715 432.879L63.3997 433.093L64.2078 432.263L65.1057 432.274L65.3638 431.119L66.0597 430.143L65.3975 429.38L66.5311 427.989L66.4862 426.464L67.4177 427.148L67.2718 425.746L65.7342 425.421L65.5209 424.905L65.5995 422.089L66.1495 421.417L63.4333 420.396L63.8935 419.936L63.916 419.297L63.1864 418.702L63.3435 416.863L63.9609 415.999L64.7914 411.984L64.421 409.954L63.669 408.237L64.5894 407.06L65.0832 406.892L66.0036 407.34L66.5086 406.734L66.8566 405.848L66.2505 405.366L66.2168 404.805L67.3167 403.897L67.7432 402.708L67.4402 401.564Z\" />\n                </mask>\n                <path d=\"M67.4402 401.564L73.8152 397.986L75.611 395.137L77.1936 395.731L77.7435 394.767L78.72 394.341L79.6515 395.014L80.1229 394.98L80.5943 395.776L81.3014 396.135L84.4777 395.698L84.3094 397.672L86.1388 400.913L85.9593 401.631L86.4531 402.169L87.3734 402.371L87.8112 403.415L87.3622 405.299L88.5407 405.938L89.2366 404.951L89.5059 405.489L89.3488 407.127L90.7967 407.609L91.6384 409.146L92.9404 409.056L93.8046 409.696L95.5779 410.066L96.0157 409.348L98.2829 409.684L99.2369 408.619L100.303 408.652L101.1 409.651L102.189 410.021L103.569 409.314L104.804 409.516L105.343 408.316L105.803 408.237L107.206 408.899L108.137 408.451L110.247 410.133L111.807 410.234L113.109 409.471L113.805 408.495L113.435 407.363L115.13 406.151L115.433 406.903L116.488 407.441L116.948 406.084L118.553 407.363L119.148 406.69L119.619 407.609L121.538 408.697L122.346 407.98L122.818 408.002L123.357 407.037L124.109 406.835L125.208 407.598L126.466 409.236L127.498 407.755L129.126 408.462L130.214 408.159L130.36 407.307L131.37 406.129L132.257 405.882L132.403 404.94L134.547 404.065L135.658 404.121L135.916 404.547L135.714 404.85L136.331 405.602L144.154 406.398L144.794 401.53L148.991 402.102L148.441 404.278L150.619 405.512L153.088 405.344L154.244 404.289L155.467 405.445L156.534 405.332L156.96 405.59L156.523 406.6L157.106 407.116L159.183 407.194L158.621 408.854L159.16 411.591L157.712 413.117L157.005 416.762L156.601 417.109L155.86 416.919L153.212 417.356L153.919 419.297L156.422 420.542L157.353 420.295L158.947 418.713L158.633 421.764L157.69 424.479L159.474 425.208L159.721 425.791L159.598 427.451L156.994 427.35L156.534 427.922L155.86 428.057L155.703 427.574L154.008 427.709L153.638 429.212L153.986 429.683L153.717 431.22L151.977 431.421L151.663 431.971L151.023 431.859L150.046 434.125L148.745 434.012L148.172 433.53L147.959 433.979L145.142 433.541L144.771 434.113L143.043 434.068L142.493 435.145L138.553 434.528L137.005 434.898L136.96 434.439L136.017 434.214L135.837 433.53L134.569 433.945L133.66 433.474L132.874 433.552L132.852 432.644L131.37 433.373L131.482 433.833L130.854 434.158L130.562 432.263L129.283 432.801L129.328 433.62L128.991 433.754L128.721 433.328L128.497 433.519L127.723 432.835L127.027 433.351L127.06 433.721L125.904 434.057L125.568 433.766L125.534 434.584L125.107 434.73L124.311 433.317L123.918 433.306L123.345 431.915L121.449 432.33L120.955 432.879L120.337 432.094L120.102 430.659L118.968 430.356L118.149 432.588L119.26 433.339L119.125 435.302L118.676 435.437L118.418 435.145L118.037 435.818L116.925 435.639L115.623 436.054L113.816 437.254L113.379 437.938L113.053 437.041L112.66 437.276L112.672 437.703L112.032 438.319L112.571 438.701L112.593 439.553L112.256 439.362L111.763 440.338L112.627 441.359L112.009 442.537L111.415 442.649L110.618 443.456L110.82 444.129L110.517 443.961L110.124 444.342L109.035 444.544V444.028L108.62 443.86L107.183 443.871L106.813 444.163L106.454 443.838L105.994 444.432L105.152 443.939L104.871 444.331L103.232 443.378L102.986 442.839L103.468 442.716L103.378 442.245L101.324 440.619L100.988 439.665L100.079 439.89L99.5399 438.734L98.4737 439.004L95.4657 437.725L95.028 438.185L94.3658 437.635L93.9505 438.14L94.3321 439.52L93.8607 440.383L94.0066 440.843L93.5689 441.213L92.8843 440.843L91.8629 441.045L91.9078 440.731L91.5374 440.63L90.8977 440.664L90.8528 441.236L89.9212 441.527L86.5541 441.135L86.1949 441.639L85.9256 441.303L85.9593 441.886L86.4755 442.424L85.8246 442.604L86.0491 442.873L85.7685 443.49L85.3532 443.21L85.4542 442.918L84.1298 442.559L83.8043 444.881L83.4676 444.578L83.1758 444.903L78.8659 439.463L78.5629 439.912L77.7772 439.531L76.8569 440.159L77.4405 441.213L75.9141 441.583L75.6671 442.783L75.2294 442.817L74.5336 444.511L73.8826 444.41L72.8163 444.275L72.4011 443.894L72.3337 443.221L71.795 442.828L71.7164 442.066L71.1665 441.381L68.7309 440.439L68.1585 439.677L67.7208 439.912L66.2954 439.082L65.5995 439.071L64.5333 440.596L64.3761 439.441L63.6466 439.89L63.9496 437.68L61.9406 437.074L61.5927 436.772L62.064 436.401L60.4254 435.594L60.1897 435.089L60.4927 434.955L60.4591 434.304L61.6712 432.779L62.3334 433.53L62.715 432.879L63.3997 433.093L64.2078 432.263L65.1057 432.274L65.3638 431.119L66.0597 430.143L65.3975 429.38L66.5311 427.989L66.4862 426.464L67.4177 427.148L67.2718 425.746L65.7342 425.421L65.5209 424.905L65.5995 422.089L66.1495 421.417L63.4333 420.396L63.8935 419.936L63.916 419.297L63.1864 418.702L63.3435 416.863L63.9609 415.999L64.7914 411.984L64.421 409.954L63.669 408.237L64.5894 407.06L65.0832 406.892L66.0036 407.34L66.5086 406.734L66.8566 405.848L66.2505 405.366L66.2168 404.805L67.3167 403.897L67.7432 402.708L67.4402 401.564Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-91-inside-67_10718_32869)\" />\n                <mask id=\"path-92-inside-68_10718_32869\" fill=\"white\">\n                    <path d=\"M88.9115 537.056L90.6399 535.99L91.5715 536.271L92.0541 535.205L92.75 535.542L93.1653 535.216L93.7938 535.441L94.2764 536.372L95.0621 536.854L95.5783 536.629L95.7692 535.452L98.07 535.553L98.8108 535.923L99.0016 537.157L100.595 537.751L101.83 537.74L102.324 537.123L107.15 537.359L110.304 538.256L110.596 538.794L110.382 540.129L110.91 540.522L112.953 540.32L113.637 539.512L115.725 539.871L116.881 540.6L117.644 540.342L118.419 541.228L119.373 541.239L119.967 541.643L120.214 540.757L120.989 540.813L121.617 542.081L122.268 541.677L123.031 542.058L123.604 542.754L125.153 543.236L125.523 543.707L125.916 544.414L126.028 546.175L124.434 546.578L123.929 547.33L122.392 547.363L121.55 547.767L118.194 547.453L117.218 548.653L116.915 549.696L115.646 550.504L115.029 550.425L114.412 551.009L114.299 551.816L112.829 552.153L112.593 552.512L113.682 553.129L115.388 555.17L114.67 555.54L114.849 557.963L113.873 559.69L113.559 561.204L111.359 563.234L110.169 565.994L108.014 566.599L107.015 567.227L104.546 566.689L103.94 567.452L103.334 566.745L101.92 567.014L101.572 567.474L100.618 567.362L99.4505 566.577L99.1475 565.231L97.868 564.939L97.1833 565.253L96.364 564.894L96.061 564.233L96.566 563.885L97.2395 562.102L97.1609 561.451L96.2181 560.576L95.7243 558.411L95.9824 557.794L95.3314 556.673L95.9263 555.899L95.6008 555.125L96.3528 555.159L96.4875 554.755L95.2641 554.295L94.7478 553.51L94.153 553.544L93.502 552.702L93.6254 552.119L92.7837 551.659L93.0081 550.605L93.8275 550.885L94.1081 550.538L93.5132 549.91L93.704 549.001L92.9632 548.339L91.9082 549.259L90.1349 548.665L90.0339 547.778L90.7522 547.341L90.7971 546.713L90.5726 546.231L89.1472 545.838L89.439 544.851L89.1247 543.292L87.8789 541.026L89.9328 540.51L90.5726 540.948L91.3695 540.174L90.2808 539.602L90.4491 538.682L90.1124 537.841L88.9115 537.056Z\" />\n                </mask>\n                <path d=\"M88.9115 537.056L90.6399 535.99L91.5715 536.271L92.0541 535.205L92.75 535.542L93.1653 535.216L93.7938 535.441L94.2764 536.372L95.0621 536.854L95.5783 536.629L95.7692 535.452L98.07 535.553L98.8108 535.923L99.0016 537.157L100.595 537.751L101.83 537.74L102.324 537.123L107.15 537.359L110.304 538.256L110.596 538.794L110.382 540.129L110.91 540.522L112.953 540.32L113.637 539.512L115.725 539.871L116.881 540.6L117.644 540.342L118.419 541.228L119.373 541.239L119.967 541.643L120.214 540.757L120.989 540.813L121.617 542.081L122.268 541.677L123.031 542.058L123.604 542.754L125.153 543.236L125.523 543.707L125.916 544.414L126.028 546.175L124.434 546.578L123.929 547.33L122.392 547.363L121.55 547.767L118.194 547.453L117.218 548.653L116.915 549.696L115.646 550.504L115.029 550.425L114.412 551.009L114.299 551.816L112.829 552.153L112.593 552.512L113.682 553.129L115.388 555.17L114.67 555.54L114.849 557.963L113.873 559.69L113.559 561.204L111.359 563.234L110.169 565.994L108.014 566.599L107.015 567.227L104.546 566.689L103.94 567.452L103.334 566.745L101.92 567.014L101.572 567.474L100.618 567.362L99.4505 566.577L99.1475 565.231L97.868 564.939L97.1833 565.253L96.364 564.894L96.061 564.233L96.566 563.885L97.2395 562.102L97.1609 561.451L96.2181 560.576L95.7243 558.411L95.9824 557.794L95.3314 556.673L95.9263 555.899L95.6008 555.125L96.3528 555.159L96.4875 554.755L95.2641 554.295L94.7478 553.51L94.153 553.544L93.502 552.702L93.6254 552.119L92.7837 551.659L93.0081 550.605L93.8275 550.885L94.1081 550.538L93.5132 549.91L93.704 549.001L92.9632 548.339L91.9082 549.259L90.1349 548.665L90.0339 547.778L90.7522 547.341L90.7971 546.713L90.5726 546.231L89.1472 545.838L89.439 544.851L89.1247 543.292L87.8789 541.026L89.9328 540.51L90.5726 540.948L91.3695 540.174L90.2808 539.602L90.4491 538.682L90.1124 537.841L88.9115 537.056Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-92-inside-68_10718_32869)\" />\n                <mask id=\"path-93-inside-69_10718_32869\" fill=\"white\">\n                    <path d=\"M83.1758 444.903L83.4676 444.578L83.8044 444.881L84.1298 442.559L85.4542 442.918L85.3532 443.21L85.7685 443.49L86.0491 442.873L85.8246 442.604L86.4756 442.425L85.9593 441.886L85.9256 441.303L86.195 441.639L86.5542 441.135L89.9213 441.527L90.8528 441.236L90.8977 440.664L91.5375 440.63L91.9079 440.731L91.8629 441.045L92.8843 440.843L93.569 441.213L94.0067 440.843L93.8608 440.383L94.3322 439.52L93.9506 438.14L94.3658 437.635L95.028 438.185L95.4658 437.725L98.4737 439.004L99.5399 438.734L100.079 439.89L100.988 439.665L101.325 440.619L103.378 442.245L103.468 442.716L102.986 442.84L103.233 443.378L104.871 444.331L105.152 443.939L105.994 444.432L106.454 443.838L106.813 444.163L107.183 443.871L108.62 443.86L109.035 444.028V444.544L110.124 444.343L111.022 444.78L111.235 446.025L112.066 447.091L111.482 447.853L110.674 448.122L109.922 449.367L109.349 449.681L109.686 450.511L108.384 451.454L108.474 453.091L107.273 454L107.89 455.525L107.183 456.927L107.857 458.15L107.621 458.598L107.049 458.296L106.847 458.755L106.487 458.408L106.577 459.125L105.926 459.294L106.095 459.944L105.612 460.225L105.747 462.457L106.297 463.13L105.634 463.511L103.681 463.32L104.501 463.814L103.94 464.184L103.951 464.644L103.547 464.711L102.986 464.162L102.638 464.307L102.032 464.958L101.571 464.98L100.808 466.012L100.606 465.81L99.4389 466.506L99.4838 466.954L99.0349 466.943L98.5635 467.448L99.1247 468.334L98.1707 468.727L97.9798 469.725L97.5534 469.714L97.7554 470.835L97.0932 471.901L97.1718 472.697L97.4411 472.731L96.9024 473.538L97.0258 474.009L96.4534 474.211L95.3535 473.392L94.9382 473.92L93.7822 473.931L93.12 473.191L92.469 473.09L91.1783 473.953L90.6508 473.785L90.5386 472.708L89.6631 471.89L88.7764 470.858L88.3612 470.23L87.9796 470.286L87.6765 469.276L88.0806 468.211L87.3959 467.863L88.4958 467.504L88.8101 467.067L88.3163 466.012L88.6979 465.463L88.2153 465.306L87.9683 464.767L87.9908 463.915L88.5969 464.027L89.1917 463.186L88.8662 461.974L88.2265 461.986L87.9908 462.479L87.3398 462.67L86.7562 462.49L85.3195 460.875L85.1287 458.733L84.0962 457.925L83.6136 456.68L82.9962 455.974L81.4249 455.413L82.0535 454.56L81.5708 454.549L81.5596 454.045L82.7044 454.033L82.2218 453.596L81.1443 453.697L81.2229 453.147L82.7493 452.575L83.0748 451.577L83.9952 451.454L82.9626 449.883L81.9637 449.85L81.6494 449.087L81.0321 448.93L82.0871 447.876L81.5708 447.304L82.0984 446.541L82.5585 446.687L82.884 446.216L83.3105 446.283L83.4901 445.834L83.1758 444.903Z\" />\n                </mask>\n                <path d=\"M83.1758 444.903L83.4676 444.578L83.8044 444.881L84.1298 442.559L85.4542 442.918L85.3532 443.21L85.7685 443.49L86.0491 442.873L85.8246 442.604L86.4756 442.425L85.9593 441.886L85.9256 441.303L86.195 441.639L86.5542 441.135L89.9213 441.527L90.8528 441.236L90.8977 440.664L91.5375 440.63L91.9079 440.731L91.8629 441.045L92.8843 440.843L93.569 441.213L94.0067 440.843L93.8608 440.383L94.3322 439.52L93.9506 438.14L94.3658 437.635L95.028 438.185L95.4658 437.725L98.4737 439.004L99.5399 438.734L100.079 439.89L100.988 439.665L101.325 440.619L103.378 442.245L103.468 442.716L102.986 442.84L103.233 443.378L104.871 444.331L105.152 443.939L105.994 444.432L106.454 443.838L106.813 444.163L107.183 443.871L108.62 443.86L109.035 444.028V444.544L110.124 444.343L111.022 444.78L111.235 446.025L112.066 447.091L111.482 447.853L110.674 448.122L109.922 449.367L109.349 449.681L109.686 450.511L108.384 451.454L108.474 453.091L107.273 454L107.89 455.525L107.183 456.927L107.857 458.15L107.621 458.598L107.049 458.296L106.847 458.755L106.487 458.408L106.577 459.125L105.926 459.294L106.095 459.944L105.612 460.225L105.747 462.457L106.297 463.13L105.634 463.511L103.681 463.32L104.501 463.814L103.94 464.184L103.951 464.644L103.547 464.711L102.986 464.162L102.638 464.307L102.032 464.958L101.571 464.98L100.808 466.012L100.606 465.81L99.4389 466.506L99.4838 466.954L99.0349 466.943L98.5635 467.448L99.1247 468.334L98.1707 468.727L97.9798 469.725L97.5534 469.714L97.7554 470.835L97.0932 471.901L97.1718 472.697L97.4411 472.731L96.9024 473.538L97.0258 474.009L96.4534 474.211L95.3535 473.392L94.9382 473.92L93.7822 473.931L93.12 473.191L92.469 473.09L91.1783 473.953L90.6508 473.785L90.5386 472.708L89.6631 471.89L88.7764 470.858L88.3612 470.23L87.9796 470.286L87.6765 469.276L88.0806 468.211L87.3959 467.863L88.4958 467.504L88.8101 467.067L88.3163 466.012L88.6979 465.463L88.2153 465.306L87.9683 464.767L87.9908 463.915L88.5969 464.027L89.1917 463.186L88.8662 461.974L88.2265 461.986L87.9908 462.479L87.3398 462.67L86.7562 462.49L85.3195 460.875L85.1287 458.733L84.0962 457.925L83.6136 456.68L82.9962 455.974L81.4249 455.413L82.0535 454.56L81.5708 454.549L81.5596 454.045L82.7044 454.033L82.2218 453.596L81.1443 453.697L81.2229 453.147L82.7493 452.575L83.0748 451.577L83.9952 451.454L82.9626 449.883L81.9637 449.85L81.6494 449.087L81.0321 448.93L82.0871 447.876L81.5708 447.304L82.0984 446.541L82.5585 446.687L82.884 446.216L83.3105 446.283L83.4901 445.834L83.1758 444.903Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-93-inside-69_10718_32869)\" />\n                <path d=\"M837.755 571.265L838.507 571.602L840.696 570.166L841.526 570.357L841.93 570.873L842.458 570.749L842.413 569.863L842.839 569.605L843.008 568.73L843.883 568.36L845.724 569.291L845.803 570.447L846.442 570.94L847.138 570.548L847.924 570.783L848.631 570.413L849.012 571.411L850.909 571.546L851.886 572.084L852.649 575.539L853.962 576.93L856.622 578.13L860.09 578.69L861.314 577.457L861.841 577.49L862.335 578.152L862.829 578.242L863.289 579.184L863.581 578.814L864.333 579.33L864.972 578.971L865.949 579.319L865.68 580.777L864.883 581.293L862.941 580.709L861.134 581.977L859.181 582.47L858.867 583.121L857.947 583.334L857.733 584.231L857.015 584.085L854.759 585.577L852.02 585.207L850.988 585.79L850.797 586.25L849.742 586.474L849.17 587.349L848.07 587.114L847.205 589.873L845.241 589.447L844.658 589.996H842.682L842.413 590.479L841.1 590.423L840.247 589.974L839.405 590.535L838.215 589.559L834.871 590.232L834.265 589.817L834.253 588.639L833.535 587.282L832.042 585.959L831.829 585.252L833.232 582.863L832.48 581.394L832.671 580.53L831.571 580.62L831.414 579.487L830.808 579.072L832.031 576.2L831.728 575.842L831.156 576.055L831.492 575.505L832.929 574.641L834.309 574.44L834.68 573.239L835.825 571.501L836.419 571.176L837.755 571.265Z\" fill=\"#3C484F\" />\n                <path d=\"M848.04 571.005L848.498 570.765L848.779 571.5L848.836 571.649L848.995 571.661L850.837 571.791L851.666 572.248L852.405 575.593L852.42 575.66L852.467 575.71L853.78 577.101L853.814 577.137L853.859 577.157L856.519 578.358L856.549 578.371L856.582 578.376L860.05 578.937L860.177 578.958L860.268 578.866L861.411 577.713L861.71 577.732L862.135 578.302L862.193 578.38L862.29 578.398L862.66 578.465L863.064 579.294L863.239 579.651L863.485 579.339L863.632 579.152L864.191 579.536L864.32 579.624L864.455 579.548L864.996 579.244L865.664 579.483L865.453 580.625L864.844 581.02L863.013 580.47L862.897 580.435L862.797 580.505L861.028 581.746L859.12 582.228L859.007 582.257L858.956 582.362L858.694 582.904L857.89 583.09L857.739 583.125L857.703 583.276L857.546 583.938L857.065 583.84L856.963 583.82L856.877 583.877L854.699 585.317L852.054 584.959L851.971 584.948L851.897 584.989L850.865 585.573L850.79 585.615L850.757 585.695L850.616 586.033L849.69 586.23L849.589 586.251L849.533 586.338L849.054 587.069L848.122 586.869L847.899 586.822L847.831 587.039L847.035 589.58L845.294 589.203L845.166 589.175L845.07 589.265L844.558 589.746H842.682H842.536L842.464 589.875L842.27 590.222L841.167 590.175L840.363 589.753L840.232 589.684L840.108 589.766L839.42 590.224L838.374 589.366L838.282 589.29L838.166 589.314L834.925 589.966L834.513 589.684L834.503 588.637L834.503 588.576L834.474 588.522L833.756 587.165L833.735 587.125L833.701 587.095L832.261 585.819L832.1 585.284L833.448 582.99L833.517 582.871L833.455 582.749L832.744 581.36L832.915 580.584L832.988 580.253L832.65 580.281L831.786 580.351L831.661 579.452L831.646 579.343L831.555 579.281L831.118 578.981L832.261 576.298L832.321 576.157L832.222 576.039L831.919 575.68L831.841 575.587L833.015 574.882L834.346 574.687L834.502 574.664L834.548 574.513L834.908 573.347L835.999 571.69L836.475 571.43L837.694 571.512L838.405 571.83L838.53 571.886L838.644 571.811L840.744 570.434L841.384 570.581L841.733 571.027L841.832 571.153L841.987 571.116L842.515 570.993L842.718 570.945L842.707 570.737L842.67 570L842.969 569.819L843.064 569.762L843.085 569.653L843.228 568.909L843.874 568.636L845.484 569.45L845.553 570.464L845.561 570.576L845.65 570.644L846.29 571.138L846.421 571.239L846.565 571.158L847.168 570.818L847.852 571.022L847.949 571.052L848.04 571.005Z\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" strokeWidth=\"0.5\" />\n                <mask id=\"path-96-inside-70_10718_32869\" fill=\"white\">\n                    <path d=\"M761.074 517.674L757.685 519.02L756.719 519.031L755.911 519.581L755.137 519.693L754.722 519.312L753.117 519.513L751.59 521.028L751.152 521.947L750.367 522.396L748.369 525.122L746.326 526.378L746.551 527.264L746.304 528.24L746.596 528.868L747.572 528.958L748.279 528.397L749.75 528.105L751.904 529.406L751.018 531.975L751.096 532.435L752.196 533.332L752.039 533.825L752.365 534.453L752.073 535.497L751.579 535.968L751.803 536.551L751.31 537.459L750.591 537.673L750.445 538.099L749.918 538.043L749.761 538.559L747.516 540.656L746.854 540.712L746.45 542.327L745.877 543.124L746.001 543.617L745.305 544.481L745.529 544.873L744.542 545.793L744.575 546.601L744.171 546.623L744.059 548.261L742.196 550.605L741.927 552.725L740.265 554.441L739.996 556.37L738.997 557.2L739.491 557.693L740.894 557.761L741.017 558.12L740.602 558.557L740.984 559.836L740.647 560.711L739.558 561.911L734.541 562.943L733.913 564.087L733.127 564.21L733.06 564.804L731.926 565.343L731.287 566.24L730.905 566.229L728.84 568.158L725.809 566.644L724.171 566.599L721.432 565.444L719.603 564.098L718.795 562.763L715.798 561.619L714.372 561.922L711.982 563.425L709.086 563.234L707.784 562.281L705.584 559.6L703.519 558.86L701.476 558.961L700.623 558.479L698.098 559.701L696.762 560.969L696.044 560.901L693.743 562.337L691.364 564.356L690.578 566.812L687.795 568.326L685.853 567.653L681.195 569.515L679.265 569.403L677.716 570.155L676.728 569.784L674.742 570.861L673.316 572.117L671.958 572.566L670.432 572.387L668.838 571.198L668.254 572.028L667.413 572.353L664.719 571.803L664.371 572.028L663.664 571.59L661.924 571.602L661.475 570.839L659.343 569.942L657.917 570.244L657.3 569.964L653.911 570.244L651.823 567.878L650.644 567.496L649.735 566.801L649.634 566.061L649.096 566.038L649.387 565.208L649.107 563.818L649.331 563.01L648.366 562.999L647.457 562.236L647.277 561.182L648.77 560.195L649.399 558.692L650.061 558.793L651.093 557.873L651.991 557.716L653.226 556.875L654.416 557.189L654.808 556.269L653.652 556.146L653.001 555.237L651.082 554.587L650.263 553.745L650.454 553.162L651.52 552.601L651.901 549.304L653.091 549.001L653.955 548.216L652.53 547.094L653.203 545.849L653.439 544.391L653.866 544.604L654.236 544.357L654.326 543.213L655.269 543.864L658.03 543.707L658.131 544.189L659.567 544.929L662.665 543.942L664.046 542.462L665.347 541.789L668.468 541.89L668.95 542.81L670.914 543.034L672.149 542.103L672.396 540.903L673.44 540.162L674.012 539.131L678.681 537.302L682.183 532.872L682.935 532.67L683.272 533.13L685 533.5L685.898 532.165L686.571 531.874L689.175 532.02L690.769 530.674L694.327 530.292L695.999 528.296L698.345 527.623L699.703 525.716L699.827 524.325L700.175 524.146L700.433 522.463L699.176 522.261L698.873 521.925L699.4 521.398L699.243 520.579L698.648 520.646L697.369 519.659L697.357 518.594L696.583 517.842L696.572 515.083L697.683 513.748L700.41 512.817L700.646 512.38H701.813L702.79 510.563L704.709 509.834L707.672 507.198L709.558 506.155L710.433 504.495L716.18 502.801L717.908 502.97L718.256 502.633L719.648 502.465L720.456 501.41L720.444 500.603L720.893 500.278L721.567 497.788L720.557 494.916L718.907 493.772L717.235 491.293L715.394 491.417L713.598 490.8L713.329 486.784L712.756 485.08L712.981 483.218L712.296 481.715L712.767 479.539L711.611 476.813L711.623 475.916L712.296 475.725L712.195 475.232L711.802 474.951L711.421 473.662L709.591 472.675L710.904 471.34L710.669 469.254L711.971 468.053L712.33 467.941L714.114 468.928L715.023 469.781L715.921 469.164L716.382 469.242L717.661 470.375L719.681 470.499L720.074 470.858L720.927 470.241L721.78 470.353L721.645 469.77L722.409 470.027L722.734 469.826L723.161 468.738L724.07 467.84L725.203 469.467L725.753 469.186L726.281 469.534L726.64 468.827L726.438 468.087L726.864 467.874L727.302 466.147L726.606 464.879L727.471 464.498L727.807 463.421L728.346 463.141L726.977 462.434L726.46 462.501L726.337 463.141L725.405 463.791L724.9 463.354L725.349 462.681L725.203 462.131L724.552 462.187V460.595L723.879 460.135L723.598 459.451L724.261 458.004L723.307 457.925L722.88 457.23L723.318 456.377L723.037 455.402L722.543 455.065L722.936 454.616L724.328 454.684L724.564 454.033L724.968 453.921L724.732 453.327L725.237 451.308L725.057 450.41L725.484 449.749L726.079 450.399L726.584 450.197L726.236 448.616L725.405 447.999L725.686 447.36L726.965 446.832L727.605 445.958L728.29 445.924L730.041 446.698L730.692 446.395L731.522 446.608L732.398 447.247L733.587 448.941L735.136 449.693L738.773 448.975L739.132 451.655L738.694 452.631L738.122 456.501L738.964 456.949L739.233 457.678L739.087 458.89L739.536 459.709L739.985 459.338L740.03 458.396L740.569 458.172L741.646 458.722L741.208 461.122L743.397 464.913L742.903 465.552L743.184 467.605L744.351 468.715L744.429 469.153L743.071 470.476L743.161 470.947L744.665 471.755L744.811 472.125L744.351 472.45L744.272 473.101L745.529 474.065L745.664 474.705L748.369 475.265L748.167 476.241L748.975 476.544L748.964 477.318L750.053 477.89L749.806 478.316L747.55 478.664L746.573 479.617L746.697 483.15L746.977 483.431L748.414 482.848L748.964 483.442L749.671 483.341L750.299 482.836L751.04 482.848L751.658 482.152L752.297 482.13L752.802 481.502L755.799 481.591L756.169 482.119L756.147 483.767L756.585 484.328L756.349 485.517L756.921 487.469L756.652 488.198L757.146 488.882L758.594 489.207L759.211 488.747L759.638 487.446L760.199 487.401L761.445 488.4L761.927 489.443L762.096 490.531L761.512 493.054L762.545 493.301L761.826 493.997V495.724L759.873 497.799L759.559 499.055L759.638 499.683L760.154 499.145L761.108 498.943L761.366 499.549L761.097 500.637L761.635 501.926L762.073 502.644L762.949 503.127L762.836 503.665L761.355 504.372L760.816 504.36L760.524 503.643L759.795 504.114L759.458 504.742L760.042 507.131L759.267 508.174L759.189 509.251L760.008 510.473L760.221 510.025L760.569 510.215L761.759 512.313L761.815 515.924L762.241 516.193L762.623 517.708L761.074 517.674Z\" />\n                </mask>\n                <path d=\"M761.074 517.674L757.685 519.02L756.719 519.031L755.911 519.581L755.137 519.693L754.722 519.312L753.117 519.513L751.59 521.028L751.152 521.947L750.367 522.396L748.369 525.122L746.326 526.378L746.551 527.264L746.304 528.24L746.596 528.868L747.572 528.958L748.279 528.397L749.75 528.105L751.904 529.406L751.018 531.975L751.096 532.435L752.196 533.332L752.039 533.825L752.365 534.453L752.073 535.497L751.579 535.968L751.803 536.551L751.31 537.459L750.591 537.673L750.445 538.099L749.918 538.043L749.761 538.559L747.516 540.656L746.854 540.712L746.45 542.327L745.877 543.124L746.001 543.617L745.305 544.481L745.529 544.873L744.542 545.793L744.575 546.601L744.171 546.623L744.059 548.261L742.196 550.605L741.927 552.725L740.265 554.441L739.996 556.37L738.997 557.2L739.491 557.693L740.894 557.761L741.017 558.12L740.602 558.557L740.984 559.836L740.647 560.711L739.558 561.911L734.541 562.943L733.913 564.087L733.127 564.21L733.06 564.804L731.926 565.343L731.287 566.24L730.905 566.229L728.84 568.158L725.809 566.644L724.171 566.599L721.432 565.444L719.603 564.098L718.795 562.763L715.798 561.619L714.372 561.922L711.982 563.425L709.086 563.234L707.784 562.281L705.584 559.6L703.519 558.86L701.476 558.961L700.623 558.479L698.098 559.701L696.762 560.969L696.044 560.901L693.743 562.337L691.364 564.356L690.578 566.812L687.795 568.326L685.853 567.653L681.195 569.515L679.265 569.403L677.716 570.155L676.728 569.784L674.742 570.861L673.316 572.117L671.958 572.566L670.432 572.387L668.838 571.198L668.254 572.028L667.413 572.353L664.719 571.803L664.371 572.028L663.664 571.59L661.924 571.602L661.475 570.839L659.343 569.942L657.917 570.244L657.3 569.964L653.911 570.244L651.823 567.878L650.644 567.496L649.735 566.801L649.634 566.061L649.096 566.038L649.387 565.208L649.107 563.818L649.331 563.01L648.366 562.999L647.457 562.236L647.277 561.182L648.77 560.195L649.399 558.692L650.061 558.793L651.093 557.873L651.991 557.716L653.226 556.875L654.416 557.189L654.808 556.269L653.652 556.146L653.001 555.237L651.082 554.587L650.263 553.745L650.454 553.162L651.52 552.601L651.901 549.304L653.091 549.001L653.955 548.216L652.53 547.094L653.203 545.849L653.439 544.391L653.866 544.604L654.236 544.357L654.326 543.213L655.269 543.864L658.03 543.707L658.131 544.189L659.567 544.929L662.665 543.942L664.046 542.462L665.347 541.789L668.468 541.89L668.95 542.81L670.914 543.034L672.149 542.103L672.396 540.903L673.44 540.162L674.012 539.131L678.681 537.302L682.183 532.872L682.935 532.67L683.272 533.13L685 533.5L685.898 532.165L686.571 531.874L689.175 532.02L690.769 530.674L694.327 530.292L695.999 528.296L698.345 527.623L699.703 525.716L699.827 524.325L700.175 524.146L700.433 522.463L699.176 522.261L698.873 521.925L699.4 521.398L699.243 520.579L698.648 520.646L697.369 519.659L697.357 518.594L696.583 517.842L696.572 515.083L697.683 513.748L700.41 512.817L700.646 512.38H701.813L702.79 510.563L704.709 509.834L707.672 507.198L709.558 506.155L710.433 504.495L716.18 502.801L717.908 502.97L718.256 502.633L719.648 502.465L720.456 501.41L720.444 500.603L720.893 500.278L721.567 497.788L720.557 494.916L718.907 493.772L717.235 491.293L715.394 491.417L713.598 490.8L713.329 486.784L712.756 485.08L712.981 483.218L712.296 481.715L712.767 479.539L711.611 476.813L711.623 475.916L712.296 475.725L712.195 475.232L711.802 474.951L711.421 473.662L709.591 472.675L710.904 471.34L710.669 469.254L711.971 468.053L712.33 467.941L714.114 468.928L715.023 469.781L715.921 469.164L716.382 469.242L717.661 470.375L719.681 470.499L720.074 470.858L720.927 470.241L721.78 470.353L721.645 469.77L722.409 470.027L722.734 469.826L723.161 468.738L724.07 467.84L725.203 469.467L725.753 469.186L726.281 469.534L726.64 468.827L726.438 468.087L726.864 467.874L727.302 466.147L726.606 464.879L727.471 464.498L727.807 463.421L728.346 463.141L726.977 462.434L726.46 462.501L726.337 463.141L725.405 463.791L724.9 463.354L725.349 462.681L725.203 462.131L724.552 462.187V460.595L723.879 460.135L723.598 459.451L724.261 458.004L723.307 457.925L722.88 457.23L723.318 456.377L723.037 455.402L722.543 455.065L722.936 454.616L724.328 454.684L724.564 454.033L724.968 453.921L724.732 453.327L725.237 451.308L725.057 450.41L725.484 449.749L726.079 450.399L726.584 450.197L726.236 448.616L725.405 447.999L725.686 447.36L726.965 446.832L727.605 445.958L728.29 445.924L730.041 446.698L730.692 446.395L731.522 446.608L732.398 447.247L733.587 448.941L735.136 449.693L738.773 448.975L739.132 451.655L738.694 452.631L738.122 456.501L738.964 456.949L739.233 457.678L739.087 458.89L739.536 459.709L739.985 459.338L740.03 458.396L740.569 458.172L741.646 458.722L741.208 461.122L743.397 464.913L742.903 465.552L743.184 467.605L744.351 468.715L744.429 469.153L743.071 470.476L743.161 470.947L744.665 471.755L744.811 472.125L744.351 472.45L744.272 473.101L745.529 474.065L745.664 474.705L748.369 475.265L748.167 476.241L748.975 476.544L748.964 477.318L750.053 477.89L749.806 478.316L747.55 478.664L746.573 479.617L746.697 483.15L746.977 483.431L748.414 482.848L748.964 483.442L749.671 483.341L750.299 482.836L751.04 482.848L751.658 482.152L752.297 482.13L752.802 481.502L755.799 481.591L756.169 482.119L756.147 483.767L756.585 484.328L756.349 485.517L756.921 487.469L756.652 488.198L757.146 488.882L758.594 489.207L759.211 488.747L759.638 487.446L760.199 487.401L761.445 488.4L761.927 489.443L762.096 490.531L761.512 493.054L762.545 493.301L761.826 493.997V495.724L759.873 497.799L759.559 499.055L759.638 499.683L760.154 499.145L761.108 498.943L761.366 499.549L761.097 500.637L761.635 501.926L762.073 502.644L762.949 503.127L762.836 503.665L761.355 504.372L760.816 504.36L760.524 503.643L759.795 504.114L759.458 504.742L760.042 507.131L759.267 508.174L759.189 509.251L760.008 510.473L760.221 510.025L760.569 510.215L761.759 512.313L761.815 515.924L762.241 516.193L762.623 517.708L761.074 517.674Z\" fill=\"#3C484F\" stroke=\"#FDFDFD\" strokeOpacity=\"0.6\" mask=\"url(#path-96-inside-70_10718_32869)\" />\n                <path d=\"M515.409 510.075L515.404 510.082L515.398 510.09L504.603 525.682L493.79 510.068L493.785 510.06L493.779 510.052C491.77 507.374 490.897 503.8 491.131 500.284C491.365 496.768 492.704 493.364 495.051 491.017L495.051 491.017C497.603 488.465 500.994 487.061 504.603 487.061C508.212 487.061 511.602 488.465 514.155 491.018L514.155 491.018C516.501 493.365 517.84 496.769 518.072 500.287C518.304 503.805 517.427 507.385 515.409 510.075ZM510.345 500.44C510.345 497.345 507.828 494.827 504.732 494.827C501.636 494.827 499.118 497.345 499.118 500.44C499.118 503.535 501.636 506.054 504.732 506.054C507.828 506.054 510.345 503.535 510.345 500.44Z\" fill=\"white\" stroke=\"#3C484F\" />\n                <path d=\"M448.955 517.679L448.949 517.687L448.944 517.695L438.148 533.287L427.336 517.672L427.331 517.664L427.325 517.657C425.316 514.978 424.442 511.404 424.677 507.888C424.911 504.373 426.25 500.968 428.596 498.622L428.596 498.622C431.149 496.07 434.539 494.665 438.148 494.665C441.757 494.665 445.148 496.07 447.7 498.622L447.701 498.623C450.047 500.969 451.386 504.373 451.618 507.892C451.85 511.41 450.973 514.989 448.955 517.679ZM443.891 508.045C443.891 504.949 441.374 502.431 438.278 502.431C435.182 502.431 432.664 504.949 432.664 508.045C432.664 511.14 435.182 513.658 438.278 513.658C441.374 513.658 443.891 511.14 443.891 508.045Z\" fill=\"white\" stroke=\"#3C484F\" />\n                <path d=\"M635.513 494.758L635.507 494.766L635.502 494.774L624.706 510.366L613.894 494.751L613.888 494.743L613.883 494.736C611.874 492.057 611 488.483 611.234 484.968C611.469 481.452 612.807 478.047 615.154 475.701L615.154 475.701C617.706 473.149 621.097 471.744 624.706 471.744C628.315 471.744 631.706 473.149 634.258 475.702L634.258 475.702C636.605 478.048 637.944 481.452 638.176 484.971C638.408 488.489 637.53 492.069 635.513 494.758ZM630.449 485.124C630.449 482.029 627.931 479.51 624.835 479.51C621.739 479.51 619.222 482.029 619.222 485.124C619.222 488.219 621.739 490.737 624.835 490.737C627.931 490.737 630.449 488.219 630.449 485.124Z\" fill=\"white\" stroke=\"#3C484F\" />\n                <path d=\"M135.307 361.173L135.301 361.181L135.296 361.188L124.5 376.78L113.688 361.166L113.682 361.158L113.677 361.15C111.668 358.472 110.794 354.898 111.028 351.382C111.263 347.866 112.601 344.462 114.948 342.115L114.948 342.115C117.5 339.563 120.891 338.159 124.5 338.159C128.109 338.159 131.5 339.563 134.052 342.116L134.052 342.116C136.399 344.463 137.738 347.867 137.97 351.385C138.202 354.903 137.324 358.483 135.307 361.173ZM130.243 351.538C130.243 348.443 127.725 345.925 124.629 345.925C121.534 345.925 119.016 348.443 119.016 351.538C119.016 354.633 121.534 357.152 124.629 357.152C127.725 357.152 130.243 354.633 130.243 351.538Z\" fill=\"white\" stroke=\"#3C484F\" />\n                <path d=\"M102.413 476.761L102.407 476.769L102.402 476.777L91.6065 492.369L80.7942 476.754L80.7888 476.746L80.7831 476.739C78.774 474.06 77.9005 470.486 78.1347 466.971C78.369 463.455 79.7076 460.05 82.0544 457.704L82.0545 457.704C84.6066 455.152 87.9975 453.747 91.6065 453.747C95.2155 453.747 98.6064 455.152 101.158 457.705L101.159 457.705C103.505 460.051 104.844 463.455 105.076 466.974C105.308 470.492 104.431 474.071 102.413 476.761ZM97.3493 467.127C97.3493 464.031 94.8317 461.513 91.7358 461.513C88.6399 461.513 86.1223 464.031 86.1223 467.127C86.1223 470.222 88.6399 472.74 91.7358 472.74C94.8317 472.74 97.3493 470.222 97.3493 467.127Z\" fill=\"white\" stroke=\"#3C484F\" />\n                <path d=\"M98.3662 538.283L98.3605 538.29L98.3551 538.298L87.5596 553.89L76.7473 538.276L76.7419 538.268L76.7362 538.26C74.7272 535.582 73.8536 532.008 74.0879 528.492C74.3221 524.976 75.6607 521.572 78.0076 519.225L78.0076 519.225C80.5597 516.673 83.9506 515.269 87.5596 515.269C91.1686 515.269 94.5595 516.673 97.1116 519.226L97.1117 519.226C99.4585 521.573 100.797 524.977 101.029 528.495C101.261 532.013 100.384 535.593 98.3662 538.283ZM93.3024 528.648C93.3024 525.553 90.7848 523.035 87.6889 523.035C84.593 523.035 82.0754 525.553 82.0754 528.648C82.0754 531.743 84.593 534.262 87.6889 534.262C90.7848 534.262 93.3024 531.743 93.3024 528.648Z\" fill=\"white\" stroke=\"#3C484F\" />\n                <path d=\"M177.354 587.465L177.348 587.473L177.342 587.48L166.547 603.072L155.735 587.458L155.729 587.45L155.724 587.442C153.714 584.764 152.841 581.19 153.075 577.674C153.309 574.158 154.648 570.754 156.995 568.407L156.995 568.407C159.547 565.855 162.938 564.451 166.547 564.451C170.156 564.451 173.547 565.855 176.099 568.408L176.099 568.408C178.446 570.755 179.784 574.159 180.017 577.677C180.249 581.195 179.371 584.775 177.354 587.465ZM172.29 577.83C172.29 574.735 169.772 572.217 166.676 572.217C163.58 572.217 161.063 574.735 161.063 577.83C161.063 580.925 163.58 583.444 166.676 583.444C169.772 583.444 172.29 580.925 172.29 577.83Z\" fill=\"white\" stroke=\"#3C484F\" />\n                <path d=\"M560.848 412L536.848 436L536.848 388L560.848 412Z\" fill=\"white\" />\n                <rect x=\"536.848\" y=\"334\" width=\"218\" height=\"83\" rx=\"16\" fill=\"white\" />\n                <path d=\"M554.208 355H557.108V360.3H559.548C560.108 360.3 560.508 360.127 560.748 359.78C560.988 359.433 561.154 358.813 561.248 357.92L561.528 355H564.448L563.948 359.66C563.801 360.7 563.401 361.473 562.748 361.98L565.308 369H562.228L559.928 362.7H557.108V369H554.208V355ZM566.461 359H569.361V360.74C569.681 360.06 570.101 359.533 570.621 359.16C571.154 358.787 571.761 358.6 572.441 358.6C573.841 358.6 574.901 359.093 575.621 360.08C576.341 361.053 576.701 362.327 576.701 363.9C576.701 365.473 576.314 366.787 575.541 367.84C574.767 368.88 573.694 369.4 572.321 369.4C571.654 369.4 571.067 369.207 570.561 368.82C570.067 368.42 569.667 367.88 569.361 367.2V373H566.461V359ZM571.601 367.2C572.241 367.2 572.767 366.893 573.181 366.28C573.594 365.667 573.801 364.867 573.801 363.88C573.801 362.947 573.594 362.2 573.181 361.64C572.781 361.08 572.241 360.8 571.561 360.8C570.881 360.8 570.341 361.08 569.941 361.64C569.554 362.2 569.361 362.94 569.361 363.86C569.361 364.9 569.554 365.72 569.941 366.32C570.341 366.907 570.894 367.2 571.601 367.2ZM585.037 367.44C584.397 368.747 583.351 369.4 581.897 369.4C580.537 369.4 579.464 368.873 578.677 367.82C577.891 366.767 577.497 365.433 577.497 363.82C577.497 362.287 577.857 361.033 578.577 360.06C579.311 359.087 580.357 358.6 581.717 358.6C583.277 358.6 584.384 359.28 585.037 360.64V359H587.937V369H585.037V367.44ZM582.717 367.2C583.437 367.2 584.004 366.913 584.417 366.34C584.831 365.753 585.037 364.967 585.037 363.98C585.037 362.993 584.824 362.22 584.397 361.66C583.984 361.087 583.404 360.8 582.657 360.8C581.951 360.8 581.397 361.067 580.997 361.6C580.597 362.133 580.397 362.9 580.397 363.9C580.397 364.94 580.604 365.753 581.017 366.34C581.431 366.913 581.997 367.2 582.717 367.2ZM599.046 367.66C598.033 368.82 596.506 369.4 594.466 369.4C592.853 369.4 591.606 368.913 590.726 367.94C589.846 366.967 589.406 365.62 589.406 363.9C589.406 362.287 589.846 361 590.726 360.04C591.606 359.08 592.86 358.6 594.486 358.6C596.406 358.6 597.873 359.18 598.886 360.34L597.326 361.9C597.02 361.54 596.62 361.267 596.126 361.08C595.646 360.893 595.126 360.8 594.566 360.8C593.06 360.8 592.306 361.833 592.306 363.9C592.306 364.82 592.473 365.6 592.806 366.24C593.153 366.88 593.853 367.2 594.906 367.2C596 367.2 596.86 366.833 597.486 366.1L599.046 367.66ZM600.105 359H603.005V362.7H606.665V359H609.565V369H606.665V365.1H603.005V369H600.105V359ZM615.94 369.4C614.327 369.4 613.06 368.913 612.14 367.94C611.22 366.967 610.76 365.62 610.76 363.9C610.76 362.287 611.213 361 612.12 360.04C613.04 359.08 614.313 358.6 615.94 358.6C617.687 358.6 618.987 359.08 619.84 360.04C620.693 361 621.12 362.287 621.12 363.9C621.12 365.62 620.693 366.967 619.84 367.94C618.987 368.913 617.687 369.4 615.94 369.4ZM615.94 367.2C616.74 367.2 617.307 366.927 617.64 366.38C617.987 365.833 618.16 365.02 618.16 363.94C618.16 361.847 617.42 360.8 615.94 360.8C614.46 360.8 613.72 361.833 613.72 363.9C613.72 366.1 614.46 367.2 615.94 367.2ZM623.663 365.08C622.463 364.4 621.863 363.4 621.863 362.08C621.863 361.093 622.209 360.333 622.903 359.8C623.596 359.267 624.643 359 626.043 359H630.723V369H627.823V365.76H626.203L624.563 369H621.663L623.663 365.08ZM627.823 361.2H626.663C625.396 361.2 624.763 361.587 624.763 362.36C624.763 363.16 625.396 363.56 626.663 363.56H627.823V361.2ZM632.743 359H635.643V360.74C635.963 360.06 636.383 359.533 636.903 359.16C637.437 358.787 638.043 358.6 638.723 358.6C640.123 358.6 641.183 359.093 641.903 360.08C642.623 361.053 642.983 362.327 642.983 363.9C642.983 365.473 642.597 366.787 641.823 367.84C641.05 368.88 639.977 369.4 638.603 369.4C637.937 369.4 637.35 369.207 636.843 368.82C636.35 368.42 635.95 367.88 635.643 367.2V373H632.743V359ZM637.883 367.2C638.523 367.2 639.05 366.893 639.463 366.28C639.877 365.667 640.083 364.867 640.083 363.88C640.083 362.947 639.877 362.2 639.463 361.64C639.063 361.08 638.523 360.8 637.843 360.8C637.163 360.8 636.623 361.08 636.223 361.64C635.837 362.2 635.643 362.94 635.643 363.86C635.643 364.9 635.837 365.72 636.223 366.32C636.623 366.907 637.177 367.2 637.883 367.2ZM653.8 367.66C652.787 368.82 651.26 369.4 649.22 369.4C647.607 369.4 646.36 368.913 645.48 367.94C644.6 366.967 644.16 365.62 644.16 363.9C644.16 362.287 644.6 361 645.48 360.04C646.36 359.08 647.613 358.6 649.24 358.6C651.16 358.6 652.627 359.18 653.64 360.34L652.08 361.9C651.773 361.54 651.373 361.267 650.88 361.08C650.4 360.893 649.88 360.8 649.32 360.8C647.813 360.8 647.06 361.833 647.06 363.9C647.06 364.82 647.227 365.6 647.56 366.24C647.907 366.88 648.607 367.2 649.66 367.2C650.753 367.2 651.613 366.833 652.24 366.1L653.8 367.66ZM655.039 359H657.939V362.58H659.859C660.419 362.58 660.792 362.447 660.979 362.18C661.179 361.9 661.312 361.507 661.379 361L661.579 359H664.259L663.919 362.36C663.799 363.253 663.479 363.9 662.959 364.3L665.019 369H662.019L660.179 364.78H657.939V369H655.039V359ZM666.016 359H668.816V364.78L673.196 359H675.796V369H672.996V363.22L668.616 369H666.016V359ZM677.604 359H680.404V364.78L684.784 359H687.384V369H684.584V363.22L680.204 369H677.604V359ZM680.904 354.6C681.024 355.613 681.544 356.12 682.464 356.12C683.477 356.12 684.044 355.613 684.164 354.6H685.744C685.651 355.48 685.331 356.193 684.784 356.74C684.251 357.273 683.504 357.54 682.544 357.54C681.611 357.54 680.864 357.28 680.304 356.76C679.757 356.24 679.431 355.52 679.324 354.6H680.904ZM692.971 359H695.871V362.58H697.791C698.351 362.58 698.724 362.447 698.911 362.18C699.111 361.9 699.244 361.507 699.311 361L699.511 359H702.191L701.851 362.36C701.731 363.253 701.411 363.9 700.891 364.3L702.951 369H699.951L698.111 364.78H695.871V369H692.971V359ZM704.168 359H707.068V360.74C707.388 360.06 707.808 359.533 708.328 359.16C708.862 358.787 709.468 358.6 710.148 358.6C711.548 358.6 712.608 359.093 713.328 360.08C714.048 361.053 714.408 362.327 714.408 363.9C714.408 365.473 714.022 366.787 713.248 367.84C712.475 368.88 711.402 369.4 710.028 369.4C709.362 369.4 708.775 369.207 708.268 368.82C707.775 368.42 707.375 367.88 707.068 367.2V373H704.168V359ZM709.308 367.2C709.948 367.2 710.475 366.893 710.888 366.28C711.302 365.667 711.508 364.867 711.508 363.88C711.508 362.947 711.302 362.2 710.888 361.64C710.488 361.08 709.948 360.8 709.268 360.8C708.588 360.8 708.048 361.08 707.648 361.64C707.262 362.2 707.068 362.94 707.068 363.86C707.068 364.9 707.262 365.72 707.648 366.32C708.048 366.907 708.602 367.2 709.308 367.2ZM722.745 367.44C722.105 368.747 721.058 369.4 719.605 369.4C718.245 369.4 717.172 368.873 716.385 367.82C715.598 366.767 715.205 365.433 715.205 363.82C715.205 362.287 715.565 361.033 716.285 360.06C717.018 359.087 718.065 358.6 719.425 358.6C720.985 358.6 722.092 359.28 722.745 360.64V359H725.645V369H722.745V367.44ZM720.425 367.2C721.145 367.2 721.712 366.913 722.125 366.34C722.538 365.753 722.745 364.967 722.745 363.98C722.745 362.993 722.532 362.22 722.105 361.66C721.692 361.087 721.112 360.8 720.365 360.8C719.658 360.8 719.105 361.067 718.705 361.6C718.305 362.133 718.105 362.9 718.105 363.9C718.105 364.94 718.312 365.753 718.725 366.34C719.138 366.913 719.705 367.2 720.425 367.2ZM727.514 359H730.314V364.78L734.694 359H737.294V369H734.494V363.22L730.114 369H727.514V359ZM730.814 354.6C730.934 355.613 731.454 356.12 732.374 356.12C733.387 356.12 733.954 355.613 734.074 354.6H735.654C735.561 355.48 735.241 356.193 734.694 356.74C734.161 357.273 733.414 357.54 732.454 357.54C731.521 357.54 730.774 357.28 730.214 356.76C729.667 356.24 729.341 355.52 729.234 354.6H730.814Z\" fill=\"#283034\" />\n                <path d=\"M564.844 394.112C564.439 394.112 564.055 394.037 563.692 393.888C563.329 393.728 563.015 393.515 562.748 393.248C562.481 392.981 562.268 392.667 562.108 392.304C561.959 391.941 561.884 391.557 561.884 391.152C561.884 390.736 561.959 390.347 562.108 389.984C562.268 389.621 562.481 389.312 562.748 389.056C563.025 388.789 563.345 388.581 563.708 388.432C564.071 388.272 564.465 388.192 564.892 388.192C565.297 388.192 565.676 388.272 566.028 388.432C566.38 388.581 566.684 388.789 566.94 389.056C567.207 389.323 567.415 389.637 567.564 390C567.724 390.363 567.804 390.747 567.804 391.152C567.804 391.557 567.724 391.941 567.564 392.304C567.415 392.667 567.207 392.981 566.94 393.248C566.673 393.515 566.359 393.728 565.996 393.888C565.644 394.037 565.26 394.112 564.844 394.112ZM577.856 387.248H582.336V388.32H579.04V396H577.856V387.248ZM584.151 393.984H585.335V396H584.151V393.984ZM592.626 384.176H593.81V389.6L599.202 384.176H600.77L594.93 390.032L600.77 396H599.17L593.81 390.496V396H592.626V384.176ZM601.871 387.248H603.055V388.752C603.429 388.187 603.903 387.76 604.479 387.472C605.066 387.184 605.738 387.04 606.495 387.04C607.146 387.04 607.749 387.157 608.303 387.392C608.869 387.627 609.359 387.952 609.775 388.368C610.191 388.773 610.517 389.259 610.751 389.824C610.986 390.379 611.103 390.981 611.103 391.632C611.103 392.272 610.986 392.875 610.751 393.44C610.517 393.995 610.191 394.48 609.775 394.896C609.359 395.301 608.869 395.621 608.303 395.856C607.738 396.091 607.125 396.208 606.463 396.208C605.727 396.208 605.071 396.064 604.495 395.776C603.919 395.488 603.439 395.061 603.055 394.496V399.072H601.871V387.248ZM606.447 395.12C606.938 395.12 607.391 395.035 607.807 394.864C608.234 394.683 608.602 394.437 608.911 394.128C609.221 393.819 609.461 393.456 609.631 393.04C609.813 392.613 609.903 392.155 609.903 391.664C609.903 391.152 609.813 390.677 609.631 390.24C609.461 389.803 609.221 389.429 608.911 389.12C608.602 388.811 608.234 388.571 607.807 388.4C607.381 388.219 606.911 388.128 606.399 388.128C605.919 388.128 605.471 388.219 605.055 388.4C604.639 388.581 604.277 388.832 603.967 389.152C603.658 389.461 603.413 389.829 603.231 390.256C603.061 390.683 602.975 391.141 602.975 391.632C602.975 392.123 603.061 392.581 603.231 393.008C603.413 393.435 603.658 393.803 603.967 394.112C604.287 394.421 604.655 394.667 605.071 394.848C605.498 395.029 605.957 395.12 606.447 395.12ZM612.442 391.648C612.442 390.987 612.559 390.379 612.794 389.824C613.028 389.259 613.348 388.773 613.754 388.368C614.17 387.952 614.66 387.627 615.226 387.392C615.791 387.157 616.399 387.04 617.05 387.04C617.818 387.04 618.474 387.179 619.018 387.456C619.562 387.733 620.058 388.181 620.506 388.8V387.248H621.69V396H620.506V394.464C620.271 394.773 620.031 395.04 619.786 395.264C619.551 395.488 619.3 395.669 619.034 395.808C618.767 395.947 618.479 396.048 618.17 396.112C617.86 396.176 617.519 396.208 617.146 396.208C616.474 396.208 615.85 396.096 615.274 395.872C614.698 395.637 614.196 395.317 613.77 394.912C613.354 394.507 613.028 394.027 612.794 393.472C612.559 392.907 612.442 392.299 612.442 391.648ZM613.642 391.6C613.642 392.091 613.732 392.549 613.914 392.976C614.095 393.403 614.34 393.776 614.65 394.096C614.97 394.416 615.343 394.667 615.77 394.848C616.196 395.029 616.65 395.12 617.13 395.12C617.61 395.12 618.052 395.029 618.458 394.848C618.874 394.667 619.231 394.421 619.53 394.112C619.839 393.792 620.079 393.419 620.25 392.992C620.42 392.555 620.506 392.091 620.506 391.6C620.506 391.099 620.415 390.64 620.234 390.224C620.063 389.797 619.823 389.429 619.514 389.12C619.204 388.811 618.836 388.571 618.41 388.4C617.994 388.219 617.535 388.128 617.034 388.128C616.564 388.128 616.122 388.219 615.706 388.4C615.3 388.581 614.943 388.832 614.634 389.152C614.324 389.461 614.079 389.829 613.898 390.256C613.727 390.672 613.642 391.12 613.642 391.6ZM632.419 393.424C631.907 394.373 631.305 395.077 630.611 395.536C629.918 395.984 629.091 396.208 628.131 396.208C627.459 396.208 626.83 396.091 626.243 395.856C625.667 395.621 625.166 395.296 624.739 394.88C624.313 394.464 623.977 393.979 623.731 393.424C623.486 392.859 623.363 392.251 623.363 391.6C623.363 390.96 623.481 390.363 623.715 389.808C623.961 389.253 624.297 388.773 624.723 388.368C625.15 387.952 625.646 387.627 626.211 387.392C626.787 387.157 627.401 387.04 628.051 387.04C628.553 387.04 629.027 387.109 629.475 387.248C629.923 387.376 630.334 387.563 630.707 387.808C631.081 388.053 631.411 388.357 631.699 388.72C631.998 389.072 632.233 389.467 632.403 389.904H631.075C630.734 389.328 630.302 388.891 629.779 388.592C629.267 388.283 628.686 388.128 628.035 388.128C627.545 388.128 627.086 388.219 626.659 388.4C626.243 388.581 625.881 388.832 625.571 389.152C625.262 389.461 625.017 389.829 624.835 390.256C624.654 390.683 624.563 391.141 624.563 391.632C624.563 392.123 624.654 392.581 624.835 393.008C625.017 393.424 625.267 393.792 625.587 394.112C625.907 394.421 626.281 394.667 626.707 394.848C627.134 395.029 627.593 395.12 628.083 395.12C628.713 395.12 629.251 394.992 629.699 394.736C630.158 394.469 630.617 394.032 631.075 393.424H632.419ZM634.059 387.248H635.243V391.008H640.491V387.248H641.675V396H640.491V392.08H635.243V396H634.059V387.248ZM643.348 391.632C643.348 390.971 643.46 390.357 643.684 389.792C643.918 389.227 644.244 388.741 644.66 388.336C645.076 387.931 645.566 387.616 646.132 387.392C646.697 387.157 647.316 387.04 647.988 387.04C648.628 387.04 649.22 387.157 649.764 387.392C650.318 387.627 650.793 387.952 651.188 388.368C651.593 388.773 651.908 389.259 652.132 389.824C652.366 390.379 652.484 390.987 652.484 391.648C652.484 392.299 652.372 392.907 652.148 393.472C651.924 394.027 651.614 394.507 651.22 394.912C650.825 395.317 650.35 395.637 649.796 395.872C649.252 396.096 648.66 396.208 648.02 396.208C647.348 396.208 646.724 396.096 646.148 395.872C645.582 395.637 645.092 395.317 644.676 394.912C644.26 394.496 643.934 394.011 643.7 393.456C643.465 392.891 643.348 392.283 643.348 391.632ZM647.988 395.12C648.468 395.12 648.91 395.035 649.316 394.864C649.721 394.693 650.068 394.459 650.356 394.16C650.644 393.851 650.868 393.483 651.028 393.056C651.198 392.629 651.284 392.165 651.284 391.664C651.284 391.152 651.198 390.677 651.028 390.24C650.868 389.803 650.633 389.429 650.324 389.12C650.025 388.811 649.668 388.571 649.252 388.4C648.846 388.219 648.393 388.128 647.892 388.128C647.412 388.128 646.964 388.219 646.548 388.4C646.142 388.571 645.79 388.816 645.492 389.136C645.204 389.445 644.974 389.819 644.804 390.256C644.633 390.683 644.548 391.147 644.548 391.648C644.548 392.149 644.633 392.613 644.804 393.04C644.974 393.456 645.214 393.819 645.524 394.128C645.833 394.437 646.196 394.683 646.612 394.864C647.038 395.035 647.497 395.12 647.988 395.12ZM659.048 388.32H657.016C655.608 388.32 654.904 388.832 654.904 389.856C654.904 390.88 655.608 391.392 657.016 391.392H659.048V388.32ZM655.832 392.368C655.171 392.219 654.648 391.92 654.264 391.472C653.891 391.024 653.704 390.485 653.704 389.856C653.704 389.472 653.779 389.12 653.928 388.8C654.077 388.48 654.28 388.208 654.536 387.984C654.803 387.749 655.117 387.568 655.48 387.44C655.853 387.312 656.264 387.248 656.712 387.248H660.232V396H659.048V392.464H657.112L654.648 396H653.304L655.832 392.368ZM662.246 387.248H663.43V388.752C663.804 388.187 664.278 387.76 664.854 387.472C665.441 387.184 666.113 387.04 666.87 387.04C667.521 387.04 668.124 387.157 668.678 387.392C669.244 387.627 669.734 387.952 670.15 388.368C670.566 388.773 670.892 389.259 671.126 389.824C671.361 390.379 671.478 390.981 671.478 391.632C671.478 392.272 671.361 392.875 671.126 393.44C670.892 393.995 670.566 394.48 670.15 394.896C669.734 395.301 669.244 395.621 668.678 395.856C668.113 396.091 667.5 396.208 666.838 396.208C666.102 396.208 665.446 396.064 664.87 395.776C664.294 395.488 663.814 395.061 663.43 394.496V399.072H662.246V387.248ZM666.822 395.12C667.313 395.12 667.766 395.035 668.182 394.864C668.609 394.683 668.977 394.437 669.286 394.128C669.596 393.819 669.836 393.456 670.006 393.04C670.188 392.613 670.278 392.155 670.278 391.664C670.278 391.152 670.188 390.677 670.006 390.24C669.836 389.803 669.596 389.429 669.286 389.12C668.977 388.811 668.609 388.571 668.182 388.4C667.756 388.219 667.286 388.128 666.774 388.128C666.294 388.128 665.846 388.219 665.43 388.4C665.014 388.581 664.652 388.832 664.342 389.152C664.033 389.461 663.788 389.829 663.606 390.256C663.436 390.683 663.35 391.141 663.35 391.632C663.35 392.123 663.436 392.581 663.606 393.008C663.788 393.435 664.033 393.803 664.342 394.112C664.662 394.421 665.03 394.667 665.446 394.848C665.873 395.029 666.332 395.12 666.822 395.12ZM681.873 393.424C681.361 394.373 680.758 395.077 680.065 395.536C679.371 395.984 678.545 396.208 677.585 396.208C676.913 396.208 676.283 396.091 675.697 395.856C675.121 395.621 674.619 395.296 674.193 394.88C673.766 394.464 673.43 393.979 673.185 393.424C672.939 392.859 672.817 392.251 672.817 391.6C672.817 390.96 672.934 390.363 673.169 389.808C673.414 389.253 673.75 388.773 674.177 388.368C674.603 387.952 675.099 387.627 675.665 387.392C676.241 387.157 676.854 387.04 677.505 387.04C678.006 387.04 678.481 387.109 678.929 387.248C679.377 387.376 679.787 387.563 680.161 387.808C680.534 388.053 680.865 388.357 681.153 388.72C681.451 389.072 681.686 389.467 681.857 389.904H680.529C680.187 389.328 679.755 388.891 679.233 388.592C678.721 388.283 678.139 388.128 677.489 388.128C676.998 388.128 676.539 388.219 676.113 388.4C675.697 388.581 675.334 388.832 675.025 389.152C674.715 389.461 674.47 389.829 674.289 390.256C674.107 390.683 674.017 391.141 674.017 391.632C674.017 392.123 674.107 392.581 674.289 393.008C674.47 393.424 674.721 393.792 675.041 394.112C675.361 394.421 675.734 394.667 676.161 394.848C676.587 395.029 677.046 395.12 677.537 395.12C678.166 395.12 678.705 394.992 679.153 394.736C679.611 394.469 680.07 394.032 680.529 393.424H681.873ZM683.512 387.248H684.696V391.152L688.696 387.248H690.232L685.864 391.488L690.232 396H688.68L684.696 391.872V396H683.512V387.248Z\" fill=\"#283034\" />\n            </g>\n            <defs>\n                <clipPath id=\"clip0_10718_32869\">\n                    <rect width=\"1312\" height=\"664\" fill=\"white\" />\n                </clipPath>\n            </defs>\n        </svg>\n    );\n}\n\nexport default Map;","export const russianCities = [\n    { name: \"Абакан\", slug: \"abakan\" },\n    { name: \"Ангарск\", slug: \"angarsk\" },\n    { name: \"Архангельск\", slug: \"arkhangelsk\" },\n    { name: \"Астрахань\", slug: \"astrakhan\" },\n    { name: \"Балашиха\", slug: \"balashikha\" },\n    { name: \"Барнаул\", slug: \"barnaul\" },\n    { name: \"Бахчисарай\", slug: \"bakhchisaray\" },\n    { name: \"Белгород\", slug: \"belgorod\" },\n    { name: \"Благовещенск\", slug: \"blagoveshchensk\" },\n    { name: \"Видное\", slug: \"vidnoye\" },\n    { name: \"Владимир\", slug: \"vladimir\" },\n    { name: \"Волгоград\", slug: \"volgograd\" },\n    { name: \"Волжский\", slug: \"volzhskiy\" },\n    { name: \"Воронеж\", slug: \"voronezh\" },\n    { name: \"Домодедово\", slug: \"domodedovo\" },\n    { name: \"Екатеринбург\", slug: \"yekaterinburg\" },\n    { name: \"Иваново\", slug: \"ivanovo\" },\n    { name: \"Ижевск\", slug: \"izhevsk\" },\n    { name: \"Иркутск\", slug: \"irkutsk\" },\n    { name: \"Йошкар-Ола\", slug: \"yoshkar-ola\" },\n    { name: \"Казань\", slug: \"kazan\" },\n    { name: \"Калининград\", slug: \"kaliningrad\" },\n    { name: \"Калуга\", slug: \"kaluga\" },\n    { name: \"Кемерово\", slug: \"kemerovo\" },\n    { name: \"Киров\", slug: \"kirov\" },\n    { name: \"Краснодар\", slug: \"krasnodar\" },\n    { name: \"Красноярск\", slug: \"krasnoyarsk\" },\n    { name: \"Курск\", slug: \"kursk\" },\n    { name: \"Магнитогорск\", slug: \"magnitogorsk\" },\n    { name: \"Москва\", slug: \"moscow\" },\n    { name: \"Мурино\", slug: \"murino\" },\n    { name: \"Мурманск\", slug: \"murmansk\" },\n    { name: \"Мытищи\", slug: \"mytishchi\" },\n    { name: \"Набережные Челны\", slug: \"naberezhnye-chelny\" },\n    { name: \"Нефтекамск\", slug: \"neftekamsk\" },\n    { name: \"Нижний Новгород\", slug: \"nizhny-novgorod\" },\n    { name: \"Новокузнецк\", slug: \"novokuznetsk\" },\n    { name: \"Новосибирск\", slug: \"novosibirsk\" },\n    { name: \"Омск\", slug: \"omsk\" },\n    { name: \"Оренбург\", slug: \"orenburg\" },\n    { name: \"Пенза\", slug: \"penza\" },\n    { name: \"Пермь\", slug: \"perm\" },\n    { name: \"Подольск\", slug: \"podolsk\" },\n    { name: \"Псков\", slug: \"pskov\" },\n    { name: \"Ростов-на-Дону\", slug: \"rostov-na-donu\" },\n    { name: \"Рязань\", slug: \"ryazan\" },\n    { name: \"Самара\", slug: \"samara\" },\n    { name: \"Санкт-Петербург\", slug: \"saint-petersburg\" },\n    { name: \"Саранск\", slug: \"saransk\" },\n    { name: \"Саратов\", slug: \"saratov\" },\n    { name: \"Севастополь\", slug: \"sevastopol\" },\n    { name: \"Симферополь\", slug: \"simferopol\" },\n    { name: \"Смоленск\", slug: \"smolensk\" },\n    { name: \"Тюмень\", slug: \"tyumen\" },\n    { name: \"Улан-Удэ\", slug: \"ulan-ude\" },\n    { name: \"Уфа\", slug: \"ufa\" },\n    { name: \"Челябинск\", slug: \"chelyabinsk\" },\n    { name: \"Ялта\", slug: \"yalta\" },\n    { name: \"Ярославль\", slug: \"yaroslavl\" }\n];\n\nexport default russianCities;\n","import './checks.scss';\nimport Map from '../map/map';\nimport cities from '../helpers/cities';\n\nconst Checks = (props) => {\n    return (\n        <section className=\"section map\">\n            <div className=\"container\">\n                <h2 className=\"project_title\">Проводим проверки <br /> в  85 городах РФ</h2>\n                <div className=\"img-wrap\">\n                    <Map />\n                </div>\n            </div>\n            <div className=\"container\">\n                <div className=\"map_cities\">\n                    <div className=\"map_cities_search\">\n                        <h3 className=\"map_cities_title\">Найдите свой город в списке</h3>\n                        <form action=\"\" id='cities_search'>\n                            <input type=\"text\" className='project_input' name=\"city\" id=\"city_input\" placeholder='Введите название города' />\n                            <button type=\"submit\">\n                                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M20 19.0586L15.8309 14.8895C16.9139 13.565 17.4463 11.8749 17.3181 10.1688C17.19 8.46274 16.4109 6.8712 15.1422 5.72339C13.8735 4.57558 12.2121 3.95932 10.5018 4.00209C8.79141 4.04485 7.16292 4.74336 5.95314 5.95314C4.74336 7.16292 4.04485 8.79141 4.00209 10.5018C3.95932 12.2121 4.57558 13.8735 5.72339 15.1422C6.8712 16.4109 8.46274 17.19 10.1688 17.3181C11.8749 17.4463 13.565 16.9139 14.8895 15.8309L19.0586 20L20 19.0586ZM10.6791 16.0053C9.62567 16.0053 8.5959 15.6929 7.72 15.1077C6.84411 14.5224 6.16143 13.6906 5.7583 12.7174C5.35517 11.7441 5.2497 10.6732 5.45521 9.64C5.66072 8.60681 6.168 7.65777 6.91288 6.91288C7.65777 6.168 8.60681 5.66072 9.64 5.45521C10.6732 5.2497 11.7441 5.35517 12.7174 5.7583C13.6906 6.16143 14.5224 6.84411 15.1077 7.72C15.6929 8.5959 16.0053 9.62567 16.0053 10.6791C16.0037 12.0912 15.4421 13.445 14.4436 14.4436C13.445 15.4421 12.0912 16.0037 10.6791 16.0053Z\" fill=\"#3C484F\" />\n                                </svg>\n                            </button>\n                        </form>\n                        <div className=\"map_cities_info\">\n                            <p>Какой‑то рекламный текст о том какие мы крутые, охватываем много городов и может ещё что‑то для информации. </p>\n                            <p>Или ещё как вариант, сделать блок с текстом «Нет вашего города? Оставьте заявку в наш отдел по развитию.</p>\n                        </div>\n                    </div>\n                    <div className=\"map_cities_names\">\n                        <ul className=\"list-reset\">\n                            {cities.map((city,index) => {\n                                return (\n                                    <li key={index}><a href={city.slug}>{city.name}</a></li>\n                                )\n                            })}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Checks;","import './styles/vars.scss';\nimport './styles/fonts.css';\nimport './styles/settings.scss';\nimport './styles/breakpoint.scss';\nimport Header from './components/header/Header';\nimport Intro from './components/intro/Intro';\nimport Banner from './components/banner/Banner';\nimport Services from './components/services/Services';\nimport Benefits from './components/benefits/Benefits';\nimport Works from './components/works/works';\nimport Sfera from './components/sfera/Sfera';\nimport Cases from './components/cases/Cases';\nimport Questions from './components/questions/Questions';\nimport Form from './components/form/Form';\nimport Footer from './components/footer/Footer';\nimport Checks from './components/checks/Checks';\n\nfunction App(){\n    return(\n        <div className=\"App\">\n            <Header />\n            <Intro />\n            <Banner />\n            <Services />\n            <Benefits />\n            <Checks />\n            <Works />\n            <Sfera />\n            <Cases />\n            <Questions />\n            <Form />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import ReactDOMServer from 'react-dom/server';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n  <App></App>\n  </React.StrictMode>\n);\n\n"],"names":["Scheduler","require","React","ReactDOM","formatProdErrorMessage","code","url","arguments","length","encodeURIComponent","i","isValidContainer","node","nodeType","REACT_LEGACY_ELEMENT_TYPE","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","REACT_MEMO_CACHE_SENTINEL","MAYBE_ITERATOR_SYMBOL","iterator","getIteratorFn","maybeIterable","REACT_CLIENT_REFERENCE","getComponentNameFromType","type","$$typeof","displayName","name","_context","innerType","render","_payload","_init","x","prefix","suffix","ReactSharedInternals","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","assign","Object","describeBuiltInComponentFrame","Error","match","stack","trim","indexOf","reentry","describeNativeComponentFrame","fn","construct","previousPrepareStackTrace","prepareStackTrace","RunInRootFrame","DetermineComponentFrameRoot","Fake","defineProperty","prototype","set","Reflect","control","call","x$0","x$1","catch","sample","namePropDescriptor","getOwnPropertyDescriptor","configurable","value","_RunInRootFrame$Deter","sampleStack","controlStack","sampleLines","split","controlLines","includes","frame","replace","describeFiber","fiber","tag","getStackByFiberInDevAndProd","workInProgress","info","return","message","getNearestMountedFiber","nearestMounted","alternate","flags","getSuspenseInstanceFromFiber","suspenseState","memoizedState","dehydrated","assertIsMounted","findCurrentHostFiberImpl","child","sibling","isArrayImpl","Array","isArray","ReactDOMSharedInternals","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","sharedNotPendingObject","pending","data","method","action","valueStack","index","createCursor","defaultValue","current","pop","cursor","push","contextStackCursor","contextFiberStackCursor","rootInstanceStackCursor","hostTransitionProviderCursor","pushHostContainer","nextRootInstance","documentElement","namespaceURI","getOwnHostContext","parentNode","tagName","getChildHostContextProd","popHostContainer","pushHostContext","context","JSCompiler_inline_result","popHostContext","HostTransitionContext","_currentValue","hasOwnProperty","scheduleCallback$3","unstable_scheduleCallback","cancelCallback$1","unstable_cancelCallback","shouldYield","unstable_shouldYield","requestPaint","unstable_requestPaint","now","unstable_now","getCurrentPriorityLevel","unstable_getCurrentPriorityLevel","ImmediatePriority","unstable_ImmediatePriority","UserBlockingPriority","unstable_UserBlockingPriority","NormalPriority$1","unstable_NormalPriority","LowPriority","unstable_LowPriority","IdlePriority","unstable_IdlePriority","log$1","log","unstable_setDisableYieldValue","rendererID","injectedHook","setIsStrictModeForDevtools","newIsStrictMode","setStrictMode","err","clz32","Math","LN2","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","lanes","pendingSyncLanes","getNextLanes","root","wipLanes","pendingLanes","nextLanes","suspendedLanes","pingedLanes","warmLanes","finishedLanes","nonIdlePendingLanes","checkIfRootIsPrerendering","renderLanes","computeExpirationTime","lane","currentTime","claimNextTransitionLane","claimNextRetryLane","createLaneMap","initial","laneMap","markRootUpdated$1","updateLane","markSpawnedDeferredLane","spawnedLane","entangledLanes","spawnedLaneIndex","entanglements","markRootEntangled","rootEntangledLanes","index$8","lanesToEventPriority","resolveUpdatePriority","updatePriority","p","window","event","getEventPriority","randomKey","random","toString","slice","internalInstanceKey","internalPropsKey","internalContainerInstanceKey","internalEventHandlersKey","internalEventHandlerListenersKey","internalEventHandlesSetKey","internalRootNodeResourcesKey","internalHoistableMarker","detachDeletedInstance","getClosestInstanceFromNode","targetNode","targetInst","getParentSuspenseInstance","getInstanceFromNode","getNodeFromInstance","inst","stateNode","getResourcesFromRoot","resources","hoistableStyles","Map","hoistableScripts","markNodeAsHoistable","allNativeEvents","Set","registrationNameDependencies","registerTwoPhaseEvent","registrationName","dependencies","registerDirectEvent","add","canUseDOM","document","createElement","VALID_ATTRIBUTE_NAME_REGEX","RegExp","illegalAttributeNameCache","validatedAttributeNameCache","setValueForAttribute","attributeName","test","removeAttribute","prefix$10","toLowerCase","setAttribute","setValueForKnownAttribute","setValueForNamespacedAttribute","namespace","setAttributeNS","getToStringValue","isCheckable","elem","nodeName","track","_valueTracker","valueField","descriptor","constructor","currentValue","get","this","enumerable","getValue","setValue","stopTracking","trackValueOnNode","updateValueIfChanged","tracker","lastValue","checked","getActiveElement","doc","activeElement","body","e","escapeSelectorAttributeValueInsideDoubleQuotesRegex","escapeSelectorAttributeValueInsideDoubleQuotes","ch","charCodeAt","updateInput","element","lastDefaultValue","defaultChecked","setDefaultValue","initInput","isHydrating","ownerDocument","updateOptions","multiple","propValue","setDefaultSelected","options","selected","defaultSelected","disabled","updateTextarea","initTextarea","children","textContent","setTextContent","text","firstChild","lastChild","nodeValue","unitlessNumbers","setValueForStyle","style","styleName","isCustomProperty","setProperty","cssFloat","has","setValueForStyles","styles","prevStyles","styleName$16","styleName$17","isCustomElement","aliases","isJavaScriptProtocol","sanitizeURL","currentReplayingEvent","getEventTarget","nativeEvent","target","srcElement","correspondingUseElement","restoreTarget","restoreQueue","restoreStateOfTarget","internalInstance","props","a","querySelectorAll","otherNode","form","otherProps","isInsideEventHandler","batchedUpdates$1","b","flushSyncWork$1","getListener","passiveBrowserEventsSupported","addEventListener","removeEventListener","startText","fallbackText","getData","start","end","startValue","startLength","endValue","endLength","minEnd","getEventCharCode","keyCode","charCode","functionThatReturnsTrue","functionThatReturnsFalse","createSyntheticEvent","Interface","SyntheticBaseEvent","reactName","reactEventType","nativeEventTarget","propName","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","lastMovementX","lastMovementY","lastMouseEvent","EventInterface","eventPhase","bubbles","cancelable","timeStamp","Date","isTrusted","SyntheticEvent","UIEventInterface","view","detail","SyntheticUIEvent","MouseEventInterface","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","getEventModifierState","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","SyntheticMouseEvent","SyntheticDragEvent","dataTransfer","SyntheticFocusEvent","SyntheticAnimationEvent","animationName","elapsedTime","pseudoElement","SyntheticClipboardEvent","clipboardData","SyntheticCompositionEvent","normalizeKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","translateToKey","modifierKeyToProp","Alt","Control","Meta","Shift","modifierStateGetter","keyArg","SyntheticKeyboardEvent","key","String","fromCharCode","location","repeat","locale","which","SyntheticPointerEvent","pointerId","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","SyntheticTouchEvent","touches","targetTouches","changedTouches","SyntheticTransitionEvent","propertyName","SyntheticWheelEvent","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","SyntheticToggleEvent","newState","oldState","END_KEYCODES","canUseCompositionEvent","documentMode","canUseTextInputEvent","useFallbackCompositionData","SPACEBAR_CHAR","hasSpaceKeypress","isFallbackCompositionEnd","domEventName","getDataFromCustomEvent","isComposing","supportedInputTypes","color","date","datetime","email","month","number","password","range","search","tel","time","week","isTextInputElement","createAndAccumulateChangeEvent","dispatchQueue","accumulateTwoPhaseListeners","listeners","activeElement$1","activeElementInst$1","runEventInBatch","processDispatchQueue","getInstIfValueChanged","getTargetInstForChangeEvent","isInputEventSupported","JSCompiler_inline_result$jscomp$283","isSupported$jscomp$inline_418","element$jscomp$inline_419","oninput","stopWatchingForValueChange","detachEvent","handlePropertyChange","handleEventsForInputEventPolyfill","attachEvent","getTargetInstForInputEventPolyfill","getTargetInstForClickEvent","getTargetInstForInputOrChangeEvent","objectIs","is","y","shallowEqual","objA","objB","keysA","keys","keysB","currentKey","getLeafNode","getNodeForCharacterOffset","offset","nodeEnd","nextSibling","containsNode","outerNode","innerNode","contains","compareDocumentPosition","getActiveElementDeep","containerInfo","defaultView","HTMLIFrameElement","contentWindow","href","hasSelectionCapabilities","contentEditable","restoreSelection","priorSelectionInformation","curFocusedElem","focusedElem","priorSelectionRange","selectionRange","selectionStart","selectionEnd","min","getSelection","extend","endMarker","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","skipSelectionChangeEvent","activeElementInst","lastSelection","mouseDown","constructSelectEvent","makePrefixMap","styleProp","eventName","prefixes","vendorPrefixes","animationend","animationiteration","animationstart","transitionrun","transitionstart","transitioncancel","transitionend","prefixedEventNames","getVendorPrefixedEventName","prefixMap","animation","transition","ANIMATION_END","ANIMATION_ITERATION","ANIMATION_START","TRANSITION_RUN","TRANSITION_START","TRANSITION_CANCEL","TRANSITION_END","topLevelEventsToReactNames","simpleEventPluginEvents","registerSimpleEvent","concurrentQueues","concurrentQueuesIndex","concurrentlyUpdatedLanes","finishQueueingConcurrentUpdates","endIndex","queue","update","next","markUpdateLaneFromFiberToRoot","enqueueUpdate$1","enqueueConcurrentHookUpdate","getRootForUpdatedFiber","enqueueConcurrentRenderForLane","sourceFiber","isHidden","parent","childLanes","_visibility","hiddenUpdates","nestedUpdateCount","rootWithNestedUpdates","emptyContextObject","CapturedStacks","WeakMap","createCapturedValueAtFiber","source","existing","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","pushTreeFork","totalChildren","pushTreeId","baseIdWithLeadingBit","baseLength","numberOfOverflowBits","pushMaterializedTreeId","popTreeContext","hydrationParentFiber","nextHydratableInstance","hydrationErrors","rootOrSingletonContext","HydrationMismatchException","throwOnHydrationMismatch","queueHydrationError","prepareToHydrateHostInstance","instance","memoizedProps","listenToNonDelegatedEvent","mediaEventTypes","suppressHydrationWarning","checkForUnmatchedText","popover","onScroll","onScrollEnd","onClick","onclick","noop$1","popToNextHostParent","popHydrationState","JSCompiler_temp","shouldClear","shouldSetTextContent","getNextHydratable","resetHydrationState","error","SuspenseException","SuspenseyCommitException","noopSuspenseyCommitThenable","then","isThenableResolved","thenable","status","noop$3","trackUsedThenable","thenableState","reason","workInProgressRoot","shellSuspendCounter","fulfilledValue","fulfilledThenable","rejectedThenable","suspendedThenable","getSuspendedThenable","thenableState$1","thenableIndexCounter$1","unwrapThenable","coerceRef","ref","throwOnInvalidObjectType","returnFiber","newChild","join","resolveLazy","lazyType","init","createChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deletions","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","useFiber","pendingProps","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","placeSingleChild","updateTextNode","createFiberFromText","mode","updateElement","elementType","updateFragment","createFiberFromTypeAndProps","updatePortal","portal","implementation","createFiberFromPortal","fragment","createFiberFromFragment","createChild","readContextDuringReconciliation","updateSlot","oldFiber","updateFromMap","newIdx","reconcileChildFibersImpl","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","delete","forEach","reconcileChildrenArray","step","done","reconcileChildrenIterator","firstChildFiber","createFiberImplClass","reconcileChildFibers","mountChildFibers","currentTreeHiddenStackCursor","prevEntangledRenderLanesCursor","pushHiddenContext","entangledRenderLanes","baseLanes","reuseHiddenContextOnStack","popHiddenContext","suspenseHandlerStackCursor","shellBoundary","pushPrimaryTreeSuspenseHandler","handler","suspenseStackCursor","pushOffscreenSuspenseHandler","reuseSuspenseHandlerOnStack","popSuspenseHandler","findFirstSuspended","row","state","revealOrder","AbortControllerLocal","AbortController","signal","aborted","listener","abort","scheduleCallback$2","NormalPriority","CacheContext","Consumer","Provider","_currentValue2","_threadCount","createCache","controller","refCount","releaseCache","cache","currentEntangledListeners","currentEntangledPendingCount","currentEntangledLane","currentEntangledActionThenable","pingEngtangledActionScope","prevOnStartTransitionFinish","S","entangledListeners","requestTransitionLane","resolve","entangleAsyncAction","resumedCache","peekCacheFromPool","cacheResumedFromPreviousRender","pooledCache","pushTransition","offscreenWorkInProgress","prevCachePool","pool","getSuspendedCache","cacheFromPool","currentlyRenderingFiber$1","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","shouldDoubleInvokeUserFnsInHooksDEV","localIdCounter","thenableIndexCounter","globalClientIdCounter","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","Component","secondArg","nextRenderLanes","updateQueue","H","HooksDispatcherOnMount","HooksDispatcherOnUpdate","renderWithHooksAgain","finishRenderingHooks","ContextOnlyDispatcher","didRenderTooFewHooks","didReceiveUpdate","checkIfContextChanged","numberOfReRenders","lastEffect","events","stores","memoCache","HooksDispatcherOnRerender","TransitionAwareHostComponent","dispatcher","maybeThenable","useState","useThenable","checkDidRenderIdHook","didRenderIdHook","bailoutHooks","resetHooksOnUnwind","mountWorkInProgressHook","hook","baseState","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","use","usable","readContext","useMemoCache","size","map","array","basicStateReducer","updateReducer","reducer","updateReducerImpl","lastRenderedReducer","pendingQueue","baseFirst","newBaseQueueFirst","newBaseQueueLast","didReadFromEntangledAsyncAction$54","workInProgressRootRenderLanes","revertLane","hasEagerState","eagerState","workInProgressRootSkippedLanes","lastRenderedState","dispatch","rerenderReducer","lastRenderPhaseUpdate","updateSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","isHydrating$jscomp$0","snapshotChanged","updateEffect","subscribeToStore","bind","pushEffect","updateStoreInstance","destroy","pushStoreConsistencyCheck","renderedSnapshot","nextSnapshot","checkIfSnapshotChanged","forceStoreRerender","latestGetSnapshot","nextValue","scheduleUpdateOnFiber","mountStateImpl","initialState","initialStateInitializer","updateOptimisticImpl","passthrough","dispatchActionState","actionQueue","setPendingState","setState","payload","isRenderPhaseUpdate","actionNode","isTransition","T","runActionStateAction","prevState","prevTransition","currentTransition","onStartTransitionFinish","handleActionReturnValue","onActionError","error$60","nextState","onActionSuccess","notifyActionListeners","last","actionStateReducer","mountActionState","initialStateProp","ssrFormState","formState","JSCompiler_inline_result$jscomp$0","inRootOrSingleton","dispatchSetState","dispatchOptimisticSetState","updateActionState","updateActionStateImpl","stateHook","currentStateHook","actionQueueHook","actionStateActionEffect","rerenderActionState","create","deps","updateRef","mountEffectImpl","fiberFlags","hookFlags","updateEffectImpl","mountEffect","updateInsertionEffect","updateLayoutEffect","imperativeHandleEffect","refCleanup","updateImperativeHandle","concat","mountDebugValue","updateCallback","callback","updateMemo","nextCreate","mountDeferredValueImpl","initialValue","requestDeferredLane","updateDeferredValueImpl","prevValue","startTransition","pendingState","finishedState","previousPriority","dispatchSetStateInternal","result","thenableWithOverride","chainThenableValue","requestUpdateLane","noop$2","startHostTransition","formFiber","formData","ensureFormComponentIsStateful","requestFormReset$1","existingStateHook","initialResetState","useHostTransitionStatus","updateId","updateRefresh","refreshCache","provider","root$63","enqueueUpdate","createUpdate","entangleTransitions","dispatchReducerAction","enqueueRenderPhaseUpdate","entangleTransitionUpdate","currentState","throwIfDuringRender","queueLanes","useCallback","useContext","useEffect","useImperativeHandle","useLayoutEffect","useInsertionEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useSyncExternalStore","useId","useCacheRefresh","useFormState","useActionState","useOptimistic","initialArg","identifierPrefix","booleanOrThenable","applyDerivedStateFromProps","ctor","getDerivedStateFromProps","nextProps","classComponentUpdater","isMounted","component","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldProps","newProps","nextContext","shouldComponentUpdate","isPureReactComponent","callComponentWillReceiveProps","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","resolveClassComponentProps","baseProps","defaultProps","propName$67","reportGlobalError","reportError","ErrorEvent","dispatchEvent","process","emit","console","defaultOnUncaughtError","defaultOnCaughtError","defaultOnRecoverableError","logUncaughtError","errorInfo","onUncaughtError","componentStack","e$68","setTimeout","logCaughtError","boundary","onCaughtError","errorBoundary","e$69","createRootErrorUpdate","createClassErrorUpdate","initializeClassErrorUpdate","getDerivedStateFromError","componentDidCatch","legacyErrorBoundariesThatAlreadyFailed","SelectiveHydrationException","reconcileChildren","nextChildren","updateForwardRef","propsWithoutRef","prepareToReadContext","bailoutOnAlreadyFinishedWork","updateMemoComponent","shouldConstruct","compare","updateSimpleMemoComponent","checkScheduledUpdateOrContext","prevProps","updateFunctionComponent","updateOffscreenComponent","nextIsDetached","_pendingVisibility","markRef","deferHiddenOffscreenComponent","cachePool","nextBaseLanes","propagateParentContextChanges","replayFunctionComponent","updateClassComponent","contextType","updater","refs","initializeUpdateQueue","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","processUpdateQueue","suspendIfUpdateReadFromEntangledAsyncAction","componentDidMount","unresolvedOldProps","oldContext","contextType$jscomp$0","hasForceUpdate","cloneUpdateQueue","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","mountHostRootWithoutHydrating","SUSPENDED_MARKER","treeContext","retryLane","mountSuspenseOffscreenState","getRemainingWorkInPrimaryTree","primaryTreeDidDefer","workInProgressDeferredLane","updateSuspenseComponent","showFallback","didSuspend","JSCompiler_temp$jscomp$0","nextInstance","c","id","overflow","fallback","mountWorkInProgressOffscreenFiber","mountSuspensePrimaryChildren","retrySuspenseComponentWithoutHydrating","dataset","digest","dgst","renderDidSuspendDelayIfPossible","retryDehydratedSuspenseBoundary","_reactRetry","subtreeFlags","primaryChildren","offscreenProps","createFiberFromOffscreen","scheduleSuspenseWorkOnFiber","propagationRoot","scheduleContextWorkOnParentPath","initSuspenseListRenderState","isBackwards","tail","lastContentRow","tailMode","renderState","rendering","renderingStartTime","updateSuspenseListComponent","beginWork","pushProvider","didSuspendBefore","attemptEarlyBailoutIfNoScheduledUpdate","lazyComponent","propagateContextChanges","isDehydrated","getResource","getOwnerDocumentFromRootContainer","setInitialProperties","resolveSingletonInstance","anyProps","hasAttribute","getAttribute","rel","crossOrigin","title","src","canHydrateInstance","canHydrateTextInstance","pooledCacheLanes","valueCursor","currentlyRenderingFiber","lastContextDependency","providerFiber","popProvider","contexts","forcePropagateEntireTree","list","nextFiber","firstContext","dependency","isInsidePropagationBailout","currentParent","currentDependencies","memoizedValue","readContextForConsumer","consumer","firstBaseUpdate","lastBaseUpdate","shared","hiddenCallbacks","callbacks","executionContext","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","clone","didReadFromEntangledAsyncAction","workInProgress$jscomp$0","instance$jscomp$0","lastPendingUpdate","firstPendingUpdate","isHiddenUpdate","callCallback","commitCallbacks","commitHookEffectListMount","finishedWork","firstEffect","captureCommitPhaseError","commitHookEffectListUnmount","nearestMountedAncestor$jscomp$0","nearestMountedAncestor","commitClassCallbacks","safelyCallComponentWillUnmount","componentWillUnmount","safelyAttachRef","instanceToUse","safelyDetachRef","error$112","commitHostMount","autoFocus","srcSet","srcset","commitHostUpdate","domElement","lastProps","propKey","lastProp","setProp","propKey$203","propKey$219","propKey$224","propKey$229","setPropOnCustomElement","propKey$234","updateProperties","isHostParent","getHostSibling","insertOrAppendPlacementNodeIntoContainer","before","insertBefore","appendChild","_reactRootContainer","insertOrAppendPlacementNode","offscreenSubtreeIsHidden","offscreenSubtreeWasHidden","needsFormReset","PossiblyWeakSet","WeakSet","nextEffect","shouldFireAfterActiveInstanceBlur","commitLayoutEffectOnFiber","finishedRoot","recursivelyTraverseLayoutEffects","__reactInternalSnapshotBeforeUpdate","error$111","commitSuspenseHydrationCallbacks","prevOffscreenSubtreeIsHidden","prevOffscreenSubtreeWasHidden","recursivelyTraverseReappearLayoutEffects","detachFiberAfterEffects","hostParent","hostParentIsContainer","recursivelyTraverseDeletionEffects","commitDeletionEffectsOnFiber","deletedFiber","onCommitFiberUnmount","count","removeChild","prevHostParent","prevHostParentIsContainer","attributes","removeAttributeNode","prevHostParentIsContainer$119","clearSuspenseBoundary","retryIfBlockedOn","attachSuspenseRetryListeners","wakeables","retryCache","_retryCache","getRetryCache","wakeable","retry","resolveRetryWakeable","recursivelyTraverseMutationEffects","root$jscomp$0","parentFiber","commitMutationEffectsOnFiber","currentHoistableRoot","commitReconciliationEffects","hoistableRoot","currentResource","getElementsByTagName","head","querySelector","maybeNodes","getHydratableHoistableCache","splice","content","property","httpEquiv","charSet","mountHoistable","acquireResource","nextNode","tagCaches","getHoistableRoot","recursivelyResetForms","globalMostRecentFallbackTime","_current","recursivelyTraverseDisappearLayoutEffects","display","retryQueue","parent$jscomp$0","parent$113","parent$115","reset","finishedRoot$jscomp$0","includeWorkInProgressEffects","commitOffscreenPassiveMountEffects","previousCache","commitCachePassiveMountEffect","recursivelyTraversePassiveMountEffects","committedLanes","committedTransitions","commitPassiveMountOnFiber","_finishedWork$memoize2","onPostCommit","passiveEffectDuration","recursivelyTraverseAtomicPassiveEffects","recursivelyTraverseReconnectPassiveEffects","committedLanes$jscomp$0","committedTransitions$jscomp$0","suspenseyCommitFlag","recursivelyAccumulateSuspenseyCommit","accumulateSuspenseyCommitOnFiber","resource","suspendedState","media","matchMedia","matches","loading","getStyleKey","getStylesheetSelectorFromKey","_p","onUnsuspend","stylesheetPropsFromRawProps","preloadPropsMap","adoptPreloadPropsForStylesheet","linkInstance","Promise","reject","onload","onerror","stylesheets","preload","suspendResource","previousHoistableRoot","detachAlternateSiblings","previousFiber","recursivelyTraversePassiveUnmountEffects","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","commitPassiveUnmountOnFiber","recursivelyTraverseDisconnectPassiveEffects","deletedSubtreeRoot","FiberNode","isReactComponent","resetWorkInProgress","owner","fiberTag","hostContext","itemProp","precedence","onLoad","onError","async","isHostHoistableType","elements","primaryChildInstance","_pendingMarkers","_transitions","detach","attach","pendingChildren","markUpdate","preloadResourceAndSuspendIfNeeded","preloadResource","scheduleRetryEffect","workInProgressSuspendedRetryLanes","cutOffTailIfNeeded","hasRenderedATailFallback","lastTailNode","lastTailNode$131","bubbleProperties","completedWork","didBailout","newChildLanes","child$132","completeWork","pendingContext","queueRecoverableErrors","createElementNS","innerHTML","createTextNode","cache$144","listenToAllSupportedEvents","workInProgressRootExitStatus","workInProgressRootRenderTargetTime","unwindWork","unwindInterruptedWork","interruptedWork","DefaultAsyncDispatcher","getCacheForType","resourceType","cacheForType","PossiblyWeakMap","workInProgressSuspendedReason","workInProgressThrownValue","workInProgressRootDidSkipSuspendedSiblings","workInProgressRootIsPrerendering","workInProgressRootDidAttachPingListener","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootConcurrentErrors","workInProgressRootRecoverableErrors","workInProgressRootDidIncludeRecursiveRenderUpdate","Infinity","workInProgressTransitions","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsLanes","pendingPassiveEffectsRemainingLanes","pendingPassiveTransitions","suspenseHandler","cancelPendingCommit","prepareFreshStack","markRootSuspended","ensureRootIsScheduled","performWorkOnRoot","forceSync","shouldTimeSlice","expiredLanes","exitStatus","prevExecutionContext","prevDispatcher","pushDispatcher","prevAsyncDispatcher","pushAsyncDispatcher","thrownValue","throwAndUnwindWorkLoop","replaySuspendedUnitOfWork","hostFiber","completeUnitOfWork","resetWorkInProgressStack","workLoopConcurrent","thrownValue$166","handleThrow","A","renderRootConcurrent","renderRootSync","renderWasConcurrent","isRenderConsistentWithExternalStores","errorRecoveryDisabledLanes","wasRootDehydrated","timeoutHandle","scheduleTimeout","commitRootWhenReady","errors","apply","recoverableErrors","transitions","didIncludeRenderPhaseUpdate","updatedLanes","suspendedRetryLanes","didSkipSuspendedSiblings","suspendedCommitReason","completedRenderStartTime","completedRenderEndTime","unsuspend","noop","insertSuspendedStylesheets","commit","stylesheetTimer","clearTimeout","waitForCommitToBeReady","commitRoot","check","didAttemptEntireTree","expirationTimes","index$6","flushSyncWorkAcrossRoots_impl","cancelTimeout","allEntangledLanes","index$4","shouldYieldForPrerendering","unitOfWork","workLoopSync","thrownValue$164","performUnitOfWork","suspendedReason","rootRenderLanes","attachPingListener","markerInstances","cause","wrapperError","throwException","unwindUnitOfWork","skipSiblings","previousUpdateLanePriority","renderPriorityLevel","flushPassiveEffects","callbackNode","callbackPriority","remainingLanes","previouslyPendingLanes","index$7","hiddenUpdatesForLane","markRootFinished","priorityLevel","scheduleCallback$1","eventsEnabled","_enabled","selection","e$20","indexWithinAnchor","indexWithinFocus","selectionInformation","resolvedPrevProps","clearContainerSparingly","commitBeforeMutationEffects","releaseRootPooledCache","onCommitFiberRoot","onCommitRoot","onRecoverableError","commitRootImpl","root$170","renderPriority","onPostCommitFiberRoot","captureCommitPhaseErrorOnRoot","rootFiber","pingCache","threadIDs","pingSuspendedRoot","retryTimedOutBoundary","boundaryFiber","firstScheduledRoot","lastScheduledRoot","didScheduleMicrotask","mightHavePendingSyncWork","isFlushingWork","currentEventTransitionLane","cb","processRootScheduleInMicrotask","scheduleMicrotask","syncTransitionLanes","onlyLegacy","didPerformSomeWork","root$172","performSyncWorkOnRoot","currentPopstateTransitionEvent","shouldAttemptEagerTransition","prev","scheduleTaskForRootDuringMicrotask","index$5","expirationTime","performWorkOnRootViaSchedulerTask","didTimeout","originalCallbackNode","workInProgressRootRenderLanes$jscomp$0","coerceFormActionProp","actionProp","createFormDataWithSubmitter","submitter","temp","FormData","i$jscomp$inline_1439","eventName$jscomp$inline_1440","toUpperCase","nonDelegatedEvents","eventSystemFlags","_dispatchQueue$i","previousInstance","i$jscomp$0","_dispatchListeners$i","targetElement","listenerSetKey","addTrappedEventListener","listenToNativeEvent","isCapturePhaseListener","listeningMarker","rootContainerElement","targetContainer","listenerWrapper","dispatchDiscreteEvent","dispatchContinuousEvent","capture","passive","dispatchEventForPluginEventSystem","targetInst$jscomp$0","ancestorInst","nodeTag","container","grandTag","SyntheticEventCtor","inCapturePhase","accumulateTargetOnly","reactEventName","lastHostComponent","_instance","createDispatchListener","parentWindow","getParent","accumulateEnterLeaveListenersForEvent","getTargetInstFunc","handleEventFunc","fallbackData","eventType","getNativeBeforeInputChars","char","getFallbackBeforeInputChars","maybeTargetInst","formAction","extractEvents$1","targetFiber","captureName","_instance2","unshift","common","_instance3","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","normalizeMarkupForTextOrAttribute","markup","serverText","clientText","formEncType","formMethod","formTarget","encType","__html","muted","isNaN","endsWith","hasSrc","hasSrcSet","propValue$186","parentNamespace","dangerouslySetInnerHTML","localPromise","queueMicrotask","handleErrorInNextTick","parentInstance","suspenseInstance","depth","targetInstance","previousSibling","rootContainerInstance","preconnectsSet","getRootNode","previousDispatcher","d","f","previousWasRendering","wasRendering","r","formInst","D","preconnectAs","C","L","as","globalDocument","preloadSelector","imageSrcSet","imageSizes","getScriptKey","getScriptSelectorFromKey","m","X","scripts","adoptPreloadPropsForScript","link","insertStylesheet","M","limitedEscapedHref","currentProps","preloadProps","styles$242","resource$243","integrity","hrefLang","referrerPolicy","rawProps","styleProps","instance$248","nodes","prior","stylesheetProps","scriptProps","keyAttribute","caches","nodeKey","precedencesByRoot","insertStylesheetIntoRoot","precedences","FiberRootNode","hydrate","incompleteTransitions","createFiberRoot","initialChildren","hydrationCallbacks","isStrictMode","transitionCallbacks","getContextForSubtree","parentComponent","updateContainerImpl","markRetryLaneImpl","markRetryLaneIfNotHydrated","attemptContinuousHydration","blockedOn","findInstanceBlockingEvent","return_targetInst","clearIfContinuousEvent","queuedFocus","accumulateOrCreateContinuousQueuedReplayableEvent","queuedDrag","queuedMouse","queuedPointers","queuedPointerCaptures","queueIfContinuousEvent","discreteReplayableEvents","findInstanceBlockingTarget","hasScheduledReplayAttempt","queuedExplicitHydrationTargets","existingQueuedEvent","targetContainers","attemptExplicitHydrationTarget","queuedTarget","priority","runWithPriority","attemptReplayContinuousQueuedEvent","queuedEvent","nextBlockedOn","nativeEventClone","shift","attemptReplayContinuousQueuedEventInMap","replayUnblockedEvents","scheduleCallbackIfUnblocked","unblocked","lastScheduledReplayQueue","scheduleReplayQueueIfNeeded","formReplayingQueue","submitterOrAction","unblock","$$reactFormReplay","formProps","ReactDOMRoot","internalRoot","_internalRoot","ReactDOMHydrationRoot","unmount","unstable_scheduleHydration","isomorphicReactPackageVersion$jscomp$inline_1686","version","findDOMNode","componentOrElement","parentA","parentB","didFindChild","child$2","findCurrentFiberUsingSlowPath","internals$jscomp$inline_2165","bundleType","rendererPackageName","currentDispatcherRef","findFiberByHostInstance","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","hook$jscomp$inline_2166","isDisabled","supportsFiber","inject","exports","createRoot","unstable_strictMode","unstable_transitionCallbacks","hydrateRoot","module","ReactNoopUpdateQueue","emptyObject","ComponentDummy","PureComponent","partialState","forceUpdate","pureComponentPrototype","ReactElement","self","isValidElement","object","userProvidedKeyEscapeRegex","getElementKey","escaperLookup","escape","mapIntoArray","escapedPrefix","nameSoFar","oldElement","newKey","invokeCallback","nextNamePrefix","resolveThenable","mapChildren","func","lazyInitializer","_status","_result","moduleObject","default","Children","forEachFunc","forEachContext","n","toArray","only","Fragment","Profiler","StrictMode","Suspense","act","cloneElement","config","childArray","createContext","childrenLength","createRef","forwardRef","lazy","memo","scope","unstable_useCacheRefresh","permalink","Context","checkDCE","_typeof","obj","UnmountClosed","_react","__esModule","_Collapse","_excluded","_excluded2","_extends","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_defineProperties","writable","_setPrototypeOf","o","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","sham","Proxy","Boolean","valueOf","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","TypeError","_assertThisInitialized","_possibleConstructorReturn","ReferenceError","getPrototypeOf","_React$PureComponent","subClass","superClass","_inherits","Constructor","protoProps","staticProps","_super","_this","_classCallCheck","_ref","isOpened","rest","isResting","onWork","_ref2","isInitialRender","onRest","_this$state","_this$state2","Collapse","initialStyle","getInitialStyle","undefined","_React$Component","timeout","_this$props","checkTimeout","containerHeight","floor","clientHeight","contentHeight","isFullyOpened","abs","isFullyClosed","onResize","hasOpened","hasClosed","isOpenining","isClosing","_this$props2","theme","some","_this$props3","onRefContainer","className","collapse","onRefContent","Internals","getCrossOriginStringAs","input","createPortal","createPortal$1","flushSync","previousTransition","previousUpdatePriority","preconnect","prefetchDNS","preinit","fetchPriority","nonce","preinitModule","preloadModule","requestFormReset","unstable_batchedUpdates","useFormStatus","jsxProd","maybeKey","jsx","jsxs","heap","parentIndex","peek","first","halfLength","leftIndex","rightIndex","right","diff","sortIndex","performance","localPerformance","localDate","initialTime","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","localSetTimeout","localClearTimeout","localSetImmediate","setImmediate","advanceTimers","timer","startTime","handleTimeout","requestHostCallback","firstTimer","requestHostTimeout","schedulePerformWorkUntilDeadline","isMessageLoopRunning","taskTimeoutID","frameInterval","shouldYieldToHost","performWorkUntilDeadline","hasMoreWork","previousPriorityLevel","continuationCallback","MessageChannel","channel","port","port2","port1","onmessage","postMessage","ms","unstable_Profiling","task","unstable_continueExecution","unstable_forceFrameRate","fps","unstable_getFirstCallbackNode","unstable_next","eventHandler","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","parentPriorityLevel","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","prop","_jsxs","_jsx","viewBox","fill","xmlns","logo","alt","MotionGlobalConfig","any","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","numCalls","triggerCallback","schedule","cancel","frameData","frameloop","clear","createRenderStep","read","resolveKeyframes","preRender","postRender","processBatch","max","keepAlive","immediate","cancelFrame","frameSteps","requestAnimationFrame","clearTime","newTime","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","velocityPerSecond","velocity","frameDuration","collectMotionValues","MotionValue","canTrackVelocity","updateAndNotify","v","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","stop","clearListeners","eventManagers","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","getVelocity","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","motionValue","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","useConstant","useMotionValue","setLatest","warning","invariant","progress","from","to","toFromDifference","clamp","mixNumber","hueToRgb","q","t","parse","transform","alpha","scale","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","splitColor","aName","bName","cName","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","substring","parseInt","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","values","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_a","_b","getAnimatableNone","parsed","transformer","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","isClamp","ease","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","isBrowser","useIsomorphicLayoutEffect","useCombineMotionValues","combineValues","updateValue","scheduleUpdate","useTransform","inputRangeOrTransformer","outputRange","compute","useComputed","useImmediate","argOffset","inputValue","isCustomValueType","useListTransform","latest","supportsScrollTimeline","ScrollTimeline","BaseGroupPlaybackControls","animations","runAll","finished","all","getAll","setAll","newValue","attachTimeline","timeline","speed","duration","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","onResolve","onReject","getValueTransition","maxGeneratorDuration","calcGeneratorDuration","generator","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","createGeneratorEasing","keyframes","isGenerator","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","animate","opacity","generateLinearEasing","resolution","points","numPoints","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","linear","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","isDragActive","resolveElements","elementOrSelector","selectorCache","EventTarget","setupGesture","gestureAbortController","isValidHover","capturePointer","actionName","Element","isNodeOrChild","parentElement","isPrimaryPointer","focusableElements","isPressing","filterEvents","firePointerEvent","PointerEvent","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","isOutside","rect","getBoundingClientRect","innerWidth","bottom","innerHeight","cancelEvent","canAddKeyboardAccessibility","useGlobalTarget","HTMLElement","tabIndex","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","pow","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","isEasingArray","getEasingForSegment","wrap","rangeSize","fillOffset","remaining","offsetProgress","defaultOffset","isMotionValue","isDOMKeyframes","resolveSubjects","subject","NodeList","calculateRepeatDuration","_repeatDelay","calcNextTime","labels","addKeyframes","sequence","endTime","keyframe","at","eraseKeyframes","normalizeTimes","times","compareByTime","getSubjectSequence","sequences","getValueSequence","keyframesAsList","isNumber","isNumberKeyframesArray","visualElementStore","transformPropOrder","transformProps","positionalKeys","isKeyframesTarget","getValueState","visualElement","resolveVariantFromProps","custom","variants","resolveVariant","getProps","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","camelToDash","str","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","acos","circInOut","isZeroValueString","maxDefaults","applyDefaultFilter","functionRegex","functions","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","DOMKeyframesResolver","super","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeatType","resolvedKeyframes","BaseAnimation","autoplay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","currentFinishedPromise","activeAnimations","layout","mainThread","waapi","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","keyframeValues","easingFunctions","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","finally","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","supports","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","isSVGElement","SVGElement","createBox","featureProps","exit","drag","hover","tap","pan","inView","featureDefinitions","isEnabled","prefersReducedMotion","hasReducedMotionListener","valueTypes","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","variantChildren","manuallyAnimateOnMount","initialMotionValues","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","remove","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","prevPresenceContext","existingValue","liveStyle","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getTransformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","variant","args","DOMVisualElement","vars","childSubscription","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","camelKeys","calcOrigin","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","camelCaseAttributes","updateSVGDimensions","getBBox","renderHTML","getProjectionStyles","renderSVG","_styleProp","scaleCorrectors","isForcedMotionValue","layoutId","newValues","scrapeMotionValuesFromProps$1","charAt","SVGVisualElement","updateDimensions","defaultType","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","transformPoint","topLeft","bottomRight","transformBoxPoints","HTMLVisualElement","computedStyle","ObjectVisualElement","isObjectKey","createDOMVisualElement","createObjectVisualElement","animateSingleValue","motionValue$1","animateSubject","isSingleValue","subjects","numSubjects","thisSubject","createVisualElement","animateSequence","animationDefinitions","defaultTransition","sequenceTransition","defaultDuration","elementCache","timeLabels","prevTime","segment","resolveValueSequence","valueKeyframes","valueSequence","elementIndex","valueKeyframesAsList","remainingTransition","calculatedDelay","numKeyframes","createGenerator","absoluteDelta","springTransition","springEasing","remainder","originalKeyframes","originalTimes","originalEase","repeatIndex","keyframeIndex","targetTime","subjectIndex","subjectSequence","valueSequences","sort","valueOffset","valueEasing","createAnimationsFromSequence","subjectOrSequence","optionsOrKeyframes","createDOMMotionComponentProxy","componentFactory","componentCache","_target","animateVariant","getAnimation","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","updateAnimationControlsSubscription","unmountControls","prevAnimate","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","addDomEvent","extractEventInfo","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","isRefObject","PanSession","handlers","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","getElementIndex","hasPointerCapture","handlePointerUp","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","lostPointerEvent","lostPointerInfo","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","LayoutGroupContext","SwitchLayoutGroupContext","microtask","cancelMicrotask","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","MeasureLayout","usePresence","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","motionComponentSymbol","useMotionRef","externalRef","onMount","useVisualElement","ProjectionNodeConstructor","lazyContext","visualElementRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","loadFeatures","ForwardRefMotionComponent","layoutGroupId","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","lowercaseSVGElements","isSVGComponent","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","makeUseVisualState","make","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","htmlMotionConfig","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","motion","createDomVisualElement","pathRef","isMobile","setIsMobile","getPointAtLength","handleResize","getTotalLength","_Fragment","strokeWidth","circle","cx","cy","Intro","AnimatedPath","Banner","banner","Services","containerRef","thumbRef","thumbPosition","setThumbPosition","thumb","updateThumbPosition","scrollWidth","clientWidth","thumbMaxPosition","Benefits","vector","img","description","workList","WorksItem","AnimatedPathSecond","sferaList","Sfera","SferaItem","isRecord","isObject","areOptionsEqual","optionsA","optionsB","optionsAKeys","optionsBKeys","breakpoints","valueA","valueB","sortAndMapPluginToOptions","plugins","plugin","isString","isBoolean","mathAbs","mathSign","sign","deltaAbs","arrayKeys","objectKeys","Number","arrayLast","arrayLastIndex","arrayIsLastIndex","arrayFromNumber","startAt","_","objectsMergeDeep","objectA","objectB","mergedObjects","currentObject","areObjects","isMouseEvent","evt","ownerWindow","MouseEvent","EventStore","removeListener","legacyMediaQueryList","Animations","documentVisibleHandler","fixedTimeStep","lastTimeStamp","accumulatedTime","timeElapsed","cancelAnimationFrame","hidden","Limit","reachedMin","reachedMax","reachedAny","constrain","removeOffset","ceil","Counter","loop","loopEnd","counter","withinLimit","DragHandler","rootNode","dragTracker","scrollBody","scrollTarget","percentOfView","dragFree","dragThreshold","skipSnaps","baseFriction","watchDrag","cross","crossAxis","focusNodes","nonPassiveEvent","initEvents","dragEvents","goToNextThreshold","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","isMoving","startScroll","startCross","pointerIsDown","preventScroll","preventClick","isMouse","move","up","lastScroll","readPoint","lastCross","diffScroll","diffCross","pointerMove","useFriction","useDuration","targetChanged","byDistance","rawForce","pointerUp","force","baseForce","byIndex","allowedForce","forceFactor","factorAbs","friction","click","emblaApi","downIfAllowed","isMouseEvt","isFocusNode","pointerDown","addDragEvents","down","DragTracker","lastEvent","readTime","evtAxis","coord","expired","diffDrag","diffTime","ResizeHandler","slides","watchResize","nodeRects","observeNodes","resizeObserver","containerSize","slideSizes","destroyed","readSize","measureSize","ResizeObserver","isContainer","slideIndex","lastSize","reInit","defaultCallback","disconnect","ScrollBounds","limit","pullBackThreshold","edgeOffsetTolerance","frictionLimit","shouldConstrain","edge","diffToEdge","diffToTarget","subtract","useBaseFriction","toggleActive","active","ScrollLooper","contentSize","vectors","shouldLoop","loopDistance","ScrollTarget","scrollSnaps","targetVector","minDistance","distances","shortcut","matchingTargets","snap","targetSnapDistance","ascDiffsToSnaps","d1","d2","findTargetSnap","reachedBound","SlideFocus","slideRegistry","eventStore","watchFocus","focusListenerOptions","lastTabPressTime","registerTabPress","getTime","slide","Vector1D","normalizeInput","Translate","containerStyle","previousTarget","newTarget","SlideLooper","viewSize","slideSizesWithGaps","snaps","ascItems","descItems","loopPoints","gap","findLoopPoints","slidesInGap","startPoints","endPoints","removeSlideSizes","isEndEdge","slideBounds","findSlideBounds","altered","boundEdge","loopPoint","slideLocation","canLoop","shiftLocation","SlidesHandler","watchSlides","mutationObserver","MutationObserver","mutations","mutation","childList","SlidesInView","intersectionEntryMap","intersectionObserver","inViewCache","notInViewCache","slideIndexes","createInViewList","SlidesToScroll","slidesToScroll","containerRect","slideRects","startGap","endGap","pixelTolerance","startEdge","endEdge","groupByNumber","groupSlides","groupSize","byNumber","groups","rectB","rectA","isFirst","isLast","edgeA","edgeB","gapA","chunkSize","currentSize","previousSize","bySize","Engine","align","scrollAxis","startIndex","inViewThreshold","containScroll","offsetTop","offsetLeft","offsetWidth","offsetHeight","contentDirection","isRightToLeft","isVertical","nodeRect","Axis","PercentOfView","alignment","predefined","center","Alignment","containSnaps","readEdgeGap","withEdgeGap","slideRect","measureStartGap","measureEndGap","rects","SlideSizes","snapsAligned","alignments","ScrollSnaps","snapsContained","scrollContainLimit","scrollBounds","snapsBounded","snapAligned","usePixelTolerance","scrollBound","toFixed","startSnap","endSnap","lastIndexOf","findScrollContainLimit","bound","measureContained","ScrollContain","ScrollLimit","indexPrevious","dragHandler","seek","engine","offsetLocation","previousLocation","scrollLooper","slideLooper","shouldSettle","settled","withinBounds","hasSettled","interpolatedLocation","startLocation","baseDuration","scrollVelocity","scrollDirection","scrollDuration","scrollFriction","rawLocation","rawLocationPrevious","displacement","scrollDistance","useBaseDuration","ScrollBody","indexCurrent","distanceDiff","indexDiff","targetIndex","ScrollTo","scrollProgress","ScrollProgress","slidesInView","groupedSlideIndexes","doNotContain","createSlideRegistry","SlideRegistry","slideFocus","resizeHandler","scrollSnapList","slidesHandler","defaultOptions","OptionsHandler","mergeOptions","optionsAtMedia","matchedMediaOptions","mediaOption","optionsMediaQueries","optionsList","mediaQueries","EmblaCarousel","userOptions","userPlugins","optionsHandler","pluginsHandler","activePlugins","PluginsHandler","mediaHandlers","api","getListeners","off","EventHandler","reActivate","pluginApis","optionsBase","globalOptions","pluginList","createEngine","activate","withOptions","withPlugins","userContainer","userSlides","customContainer","customSlides","storeElements","query","offsetParent","selectedScrollSnap","deActivate","canScrollNext","canScrollPrev","containerNode","internalEngine","previousScrollSnap","scrollNext","scrollPrev","slideNodes","slidesNotInView","useEmblaCarousel","storedOptions","storedPlugins","setEmblaApi","setViewport","pluginsA","pluginsB","optionA","arePluginsEqual","newEmblaApi","weightNumeric","weightText","industry","casesSlides","image1","emblaRef","selectedIndex","setSelectedIndex","setScrollSnaps","fillRule","clipRule","CasesSlides","questionsList","activeIndex","setActiveIndex","question","toggleAccordion","springConfig","Form","dmitrii","placeholder","Footer","dataQuality","getFullYear","scrollToTop","behavior","clipPath","mask","rx","slug","cities","city","Header","Checks","Works","Cases","Questions","getElementById","App"],"sourceRoot":""}